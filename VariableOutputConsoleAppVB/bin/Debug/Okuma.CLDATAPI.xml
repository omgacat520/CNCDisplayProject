<?xml version="1.0" encoding="utf-8"?>
<doc>
  <assembly>
    <name>Okuma.CLDATAPI</name>
  </assembly>
  <members>
    <member name="T:Okuma.CLDATAPI.DataAPI.MacMan.CAlarm">
      <summary> Class represents particular alarm history information from NC. It is read-only data. NC Alarm information cannot be changed by this class.  </summary>
    </member>
    <member name="P:Okuma.CLDATAPI.DataAPI.MacMan.CAlarm.Date">
      <summary> Gets the alarm date for this CAlarm instance.   Sets the alarm date for this CAlarm instance only. A System.String containing the alarm date in this format "yyyy/mm/dd". </summary>
      <returns>A System.String containing the alarm date in this format "yyyy/mm/dd"</returns>
    </member>
    <member name="P:Okuma.CLDATAPI.DataAPI.MacMan.CAlarm.Time">
      <summary> Gets the alarm time for this CAlarm instance. Sets the alarm time for this CAlarm instance only. A System.String containing the alarm time in this format "hh:mm:ss" </summary>
      <returns> A System.String containing the alarm time in this format "hh:mm:ss"</returns>
    </member>
    <member name="P:Okuma.CLDATAPI.DataAPI.MacMan.CAlarm.Number">
      <summary> Gets the alarm number for this CAlarm instance.  Sets the alarm number for this CAlarm instance only. </summary>
      <returns> A System.String containing the alarm number</returns>
    </member>
    <member name="P:Okuma.CLDATAPI.DataAPI.MacMan.CAlarm.Code">
      <summary> Gets the alarm code for this CAlarm instance. Sets the alarm code for this CAlarm instance only. </summary>
      <returns> A System.String containing the alarm code</returns>
    </member>
    <member name="P:Okuma.CLDATAPI.DataAPI.MacMan.CAlarm.Message">
      <summary> Gets the alarm message for this CAlarm instance.  Sets the alarm message for this CAlarm instance only. </summary>
      <returns>A System.String containing the alarm message</returns>
    </member>
    <member name="P:Okuma.CLDATAPI.DataAPI.MacMan.CAlarm.Object">
      <summary> Gets the alarm object for this CAlarm instance. Sets the alarm object for this CAlarm instance only </summary>
      <returns> A System.Int32 containing the alarm object</returns>
    </member>
    <member name="T:Okuma.CLDATAPI.DataAPI.MacMan.CAlarmHistory">
      <summary> Class provides alarm history information stored by NC.  </summary>
    </member>
    <member name="M:Okuma.CLDATAPI.DataAPI.MacMan.CAlarmHistory.#ctor(Okuma.CLDATAPI.Enumerations.MacManSubSystemEnum)">
      <summary> Create an instance of this class given sub system.  By default, class is created with sub system = MacManSubSystemEnum::CurrentSubSystem. </summary>
      <param name="enSubSystem">Sub system</param>
    </member>
    <member name="M:Okuma.CLDATAPI.DataAPI.MacMan.CAlarmHistory.SetSubSystem(Okuma.CLDATAPI.Enumerations.MacManSubSystemEnum)">
      <summary> Sets the current Sub System for this class instance. </summary>
      <example>This example shows how to sets subsystem. <para>	objMcAH.SetSubSystem(Me.mahAlarmSubSystemCombo.SelectedValue)	</para> </example>
      <param name="enSubSystem">Sub System. Value comes from Okuma.CLDATAPI.Enumerations.Okuma.CLDATAPI.Enumerations.MacManSubSystemEnum.</param>
      <exception cref="System.ApplicationException">Thrown when function fails to perform the operation at current NC condition.</exception>
      <exception cref="System.NotSupportedException">Thrown when operation/input parameters are not supported for the current system or it fails to write data to system.</exception>
    </member>
    <member name="M:Okuma.CLDATAPI.DataAPI.MacMan.CAlarmHistory.GetMaxCount">
      <summary> Gets maximum number of alarm history that can stored by the system. </summary>
      <example> This example shows how to call GetMaxCount <para>	Me.mahMaxAlarmCount.Text = objMah.GetMaxCount	</para> </example>
      <returns>A System.Int32 value that represents the maximum number of alarm history</returns>
      <exception cref="System.ApplicationException">Thrown when function fails to perform the operation at current NC condition.</exception>
      <exception cref="System.NotSupportedException">Thrown when operation/input parameters are not supported for the current system.</exception>
    </member>
    <member name="M:Okuma.CLDATAPI.DataAPI.MacMan.CAlarmHistory.GetCount">
      <summary> Gets the number of alarms that are currently available in history for current sub system. </summary>
      <example> This example shows how to call GetCount. <para>	Me.mahAlarmCount.Text = objMah.GetCount	</para> </example>
      <returns>A System.Int32 value</returns>
      <exception cref="System.ApplicationException">Thrown when function fails to perform the operation at current NC condition.</exception>
      <exception cref="System.NotSupportedException">Thrown when operation/input parameters are not supported for the current system or it fails to write data to system.</exception>
    </member>
    <member name="M:Okuma.CLDATAPI.DataAPI.MacMan.CAlarmHistory.GetAlarm(System.Int32)">
      <summary> Gets alarm history information at the specified index for current sub system </summary>
      <example> This example shows how to call GetAlarm. <para>	Dim alarmIndex As Int16	</para> <para>	alarmIndex = CInt(Me.mahAlarmIndex.Text)	</para> <para>	Dim mahObject As CLDATAPILib.MacMan.CAlarm	</para> <para>	mahObject = objMah.GetAlarm(alarmIndex)	</para> </example>
      <param name="intAlarmIndex">Starting index.  The 1-based index at which the information is obtained</param>
      <returns>An Okuma.CLDATAPI.DataAPI.MacMan.CAlarm object that represents the Alarm history data if there is one available.</returns>
      <exception cref="System.ApplicationException">Thrown when function fails to perform the operation at current NC condition.</exception>
      <exception cref="System.NotSupportedException">Thrown when operation/input parameters are not supported for the current system.</exception>
      <Figure> ALARM HISTORY - List of all alarms in history in the descending order of date <para> <img src="MacMan-AlarmHistory.jpg" /> </para>  </Figure>
    </member>
    <member name="M:Okuma.CLDATAPI.DataAPI.MacMan.CAlarmHistory.GetAlarms(System.Int32,System.Int32)">
      <summary> Gets alarm history information at the specified indexes for current sub system </summary>
      <example>This example shows how to returns arraylist. <para>	Dim mohObject As CLDATAPILib.MacMan.CAlarm	</para> <para>	Dim mohObjects As ArrayList	</para> <para>	Try	</para> <para>	Me.mahResults.Text = ""	</para> <para>	mohObjects = objMah.GetAlarms(CInt(Me.mahFrom.Text), CInt(Me.mahTo.Text))	</para> <para>	For Each mohObject In mohObjects	</para> <para>		Me.mahResults.Text += mohObject.Date &amp; " " &amp; mohObject.Time &amp; vbTab &amp; mohObject.Code &amp; vbTab &amp; mohObject.Message &amp; vbCrLf	</para> <para>	Next	</para> <para>	Catch ae As ApplicationException	</para> <para>		doError("Macman Alarm History", ae.Message)	</para> <para>	Catch ex As Exception	</para> <para>		doError("Macman Alarm History", ex.Message)	</para> <para>	End Try	</para> </example>
      <param name="intFromIndex">Starting index.  The 1-based index at which the information is obtained</param>
      <param name="intToIndex">Ending index.  The 1-based index at which the information is obtained</param>
      <returns>A System.Collection.ArrayList object that represents the list of CAlarm object.</returns>
      <exception cref="System.ApplicationException">Thrown when function fails to perform the operation at current NC condition.</exception>
      <exception cref="System.NotSupportedException">Thrown when operation/input parameters are not supported for the current system.</exception>
      <Figure> ALARM HISTORY - List of all alarms in history in the descending order of date <para> <img src="MacMan-AlarmHistory.jpg" /> </para>  </Figure>
    </member>
    <member name="T:Okuma.CLDATAPI.DataAPI.CATC">
      <summary> Class provides information about Auto Tool Changer.  </summary>
    </member>
    <member name="M:Okuma.CLDATAPI.DataAPI.CATC.GetToolPot(System.Int32)">
      <summary> Get tool pot location given tool number for current sub system. <para>Note: For a multi-edges tool, tool must have edge number 1 registered with the system.</para> <para> For OSP-P300S with 8 Digits Tool ID spec: It is not compatible</para> </summary>
      <example> This example shows how to call GetToolPot. <para>		Dim intToolNo As Integer	</para> <para>		dim sToolPotProperty as ToolPotProperty</para> <para>		sToolPotProperty = objATC.GetToolPot(intToolNo)</para> </example>
      <param name="intToolNo">Tool number.</param>
      <returns> <para>A ToolPotProperty value</para> <para>If tool is not attached to magazine or turrets pot number will be zero.</para> <para>Tool location shows the registgered location of tool or current location in the machine.</para> <para>Un-registered tool will have 0/None for pot and tool location, respectively</para> </returns>
      <exception cref="System.ApplicationException">Thrown when function fails to perform the operation at current NC condition.</exception>
      <exception cref="System.NotSupportedException">Thrown when operation/input parameters are not supported for the current system.</exception>
      <remarks> <para> The following specifications for MACTURN or MULTUS machine must be met in order to function: <list type="table"> <listheader> <term>Specification</term> <description>Valid/Invalid</description> </listheader> <item> <term>ATC Specification(PLC). Use MagazineEnum CATC::GetMagazineProperty() to detect if machine can support any ATC magazine type. </term> <description>Valid</description> </item> </list> </para>  <para> Compatible Chart of this function for different OSP controls: <list type="table"> <listheader> <term>OSP Control</term> <description>Compatible</description> </listheader> <item> <term>P100II</term> <description>No</description> </item> <item> <term>P200</term> <description>No</description> </item> <item> <term>P300L</term> <description> <para> Yes </para> </description> </item> <item> <term>P300S/TD Mode</term> <description> <para> Yes </para> </description> </item> <item> <term>P300S/TL Mode</term> <description> <para> Yes </para> </description> </item> </list> </para> </remarks>
      <Figure> <para> OSP-P300S(LP) - TOOL DATA SETTING - MAGAZINE INFO. - MOUNTED POT - TURRET/READY STATION/RETURN STATION/MAGAZINE <img src="Lathe.P300.TD.ToolDataSetting.ATC.jpg" /> </para> <para> OSP-P300L - TOOL DATA - MANAGE INFORMATION PROCESSING TOOLS - TOOL DATA (ALL) - REG. NO. | T NO. <img src="Lathe.P300L.ToolData.Tools.jpg" /> </para> </Figure>
      <SubSystem> Please see <see href="SubSystemNoteTable.htm">Sub System Note Table for OSP-P300S</see> for more information if applicable. <para>Valid sub systems for this function (Y = Valid, N = Not valid)</para> <para> <list type="table"> <listheader> <term>NC_RUN </term> <term>NC_RUN_1 </term> <term>NC_RUN_2 </term> <term>NC_RUN_3 </term> <term>NC_PANEL </term> <term>NC_PANEL_1 </term> <term>NC_PANEL_2 </term> <term>NC_PANEL_3 </term> <term>NC_AL </term> <term>NC_AR </term> <term>NC_BL </term> <term>NC_BR </term> <term>NC_CL </term> <term>NC_CR </term> <term>NC_2AL </term> </listheader> <item> <term>Y (*35)</term> <term>Y (*35)</term> <term>Y (*35)</term> <term>Y (*35)</term> <term>Y (*35)</term> <term>Y (*35)</term> <term>Y (*35)</term> <term>Y (*35)</term> <term>Y (*35)</term> <term>Y (*35)</term> <term>Y (*35)</term> <term>Y (*35)</term> <term>Y (*35)</term> <term>Y (*35)</term> <term>Y (*35)</term> </item> </list> </para>  </SubSystem>
    </member>
    <member name="M:Okuma.CLDATAPI.DataAPI.CATC.GetToolKind(System.Int32)">
      <summary> Get tool kind at the specified tool pot number. </summary>
      <example> This example shows how to call GetToolKind. <para>	On Error GoTo sd	</para> <para>		Dim potNumber As Int16	</para> <para>		potNumber = CInt(Me.atcPotNumber.Text)	</para> <para>		Me.atcResults.Text = ""	</para> <para>		Me.atcResults.Text += "Tool kind: " &amp; System.Enum.GetNames(GetType(ToolKindEnum)).GetValue(objATC.GetToolKind(potNumber)) &amp; vbCrLf	</para> <para>		Exit Sub	</para> <para>	sd:	</para> <para>		doError("CATC:  ", Err.Description)	</para> <para>		Resume Next	</para> </example>
      <param name="intPotNo">Pot number.</param>
      <returns>An Okuma.CLDATAPI.Enumerations.ToolKindEnum enumeration value.  If no tool assigned to this pot, NONE will be returned.</returns>
      <exception cref="System.ApplicationException">Thrown when function fails to perform the operation at current NC condition.</exception>
      <exception cref="System.NotSupportedException">Thrown when operation/input parameters are not supported for the current system.</exception>
      <remarks> <para> The following specifications for MACTURN or MULTUS machine must be met in order to function: <list type="table"> <listheader> <term>Specification</term> <description>Valid/Invalid</description> </listheader> <item> <term>ATC Specification(PLC). Use MagazineEnum CATC::GetMagazineProperty() to detect if machine can support any ATC magazine type. </term> <description>Valid</description> </item> </list> </para> </remarks>
      <Figure> ATC MAGAZINE INFORMATION - Automatic Tool Changer Table <para> <img src="atc.jpg" /> </para> </Figure>
      <SubSystem> N/A </SubSystem>
      <remarks>  <para> Compatible Chart of this function for different OSP controls: <list type="table"> <listheader> <term>OSP Control</term> <description>Compatible</description> </listheader> <item> <term>P100II</term> <description>Yes</description> </item> <item> <term>P200</term> <description>Yes</description> </item> <item> <term>P300L</term> <description>No</description> </item> <item> <term>P300S/TD Mode</term> <description>Yes</description> </item> <item> <term>P300S/TL Mode</term> <description>Yes</description> </item> </list> </para>  </remarks>
    </member>
    <member name="M:Okuma.CLDATAPI.DataAPI.CATC.GetToolSize(System.Int32)">
      <summary> Get tool size at the specified tool pot number. </summary>
      <example> This example shows how to call GetToolSize. <para>	On Error GoTo sd	</para> <para>		Dim potNumber As Int16	</para> <para>		potNumber = CInt(Me.atcPotNumber.Text)	</para> <para>		Me.atcResults.Text = ""	</para> <para>		Me.atcResults.Text += "Tool size: " &amp; System.Enum.GetNames(GetType(ToolSizeEnum)).GetValue(objATC.GetToolSize(potNumber)) &amp; vbCrLf	</para> <para>		Exit Sub	</para> <para>	sd:	</para> <para>		doError("CATC:  ", Err.Description)	</para> <para>			Resume Next	</para> </example>
      <param name="intPotNo">Pot number</param>
      <returns>An Okuma.CLDATAPI.Enumerations.ToolSizeEnum enumeration value.  If no tool assigned to this pot, NONE will be returned.</returns>
      <exception cref="System.ApplicationException">Thrown when function fails to perform the operation at current NC condition.</exception>
      <exception cref="System.NotSupportedException">Thrown when operation/input parameters are not supported for the current system.</exception>
      <remarks> <para> The following specifications for MACTURN or MULTUS machine must be met in order to function: <list type="table"> <listheader> <term>Specification</term> <description>Valid/Invalid</description> </listheader> <item> <term>ATC Specification(PLC). Use MagazineEnum CATC::GetMagazineProperty() to detect if machine can support any ATC magazine type. </term> <description>Valid</description> </item> </list> </para> </remarks>
      <Figure> ATC MAGAZINE INFORMATION - Automatic Tool Changer Table <para> <img src="atc.jpg" /> </para> </Figure>
      <SubSystem> N/A  </SubSystem>
    </member>
    <member name="M:Okuma.CLDATAPI.DataAPI.CATC.GetToolNo(System.Int32)">
      <summary> <para>Get tool number assigned to the specified pot number of ATC magazine.</para> <para>Note: For getting tool number by turret station number, please refer to CTurret.GetToolNo instead</para> <para>Note 2: Fixed ATC magazine will have letter R displayed in the pot when the tool is moved to turret.  In this case, the function will return no tool.</para> </summary>
      <example> This example shows how to call GetToolNo. <para>		Dim intToolNumber As Integer	</para> <para>		Dim intPotNumber As Integer	</para> <para>		intToolNumber = objATC.GetToolNo(intPotNumber) </para> </example>
      <param name="intPotNo">Pot number</param>
      <returns>A System.Int32 value. If no tool assigned to this pot, a zero will be returned.  Pot that has letter R will return no tool.</returns>
      <exception cref="System.ApplicationException">Thrown when function fails to perform the operation at current NC condition.</exception>
      <exception cref="System.NotSupportedException">Thrown when operation/input parameters are not supported for the current system.</exception>
      <remarks> <para> For OSP-P200/P100II: The following specifications for MACTURN or MULTUS machine must be met in order to function: <list type="table"> <listheader> <term>Specification</term> <description>Valid/Invalid</description> </listheader> <item> <term>ATC Specification(PLC). Use MagazineEnum CATC::GetMagazineProperty() to detect if machine can support any ATC magazine type. </term> <description>Valid</description> </item> </list> </para> <para> For OSP-300S: The following specifications must be met in order to function: <list type="table"> <listheader> <term>Specification</term> <description>Valid/Invalid</description> </listheader> <item> <term><see href="SubSystemNoteTable.htm">Using Subsystem Note *35</see></term> <description>Valid</description> </item> </list> </para> </remarks>
      <Figure> <para>ATC MAGAZINE INFORMATION - Automatic Tool Changer Table</para> <para> <img src="atc.jpg" /> </para> <para>OSP-P300S(LP) ATC MAGAZINE INFORMATION - Automatic Tool Changer Table</para> <para> <img src="Lathe.P300.TD.ToolDataSetting.ATC.jpg" /> </para> </Figure>
      <remarks>  <para> Compatible Chart of this function for different OSP controls: <list type="table"> <listheader> <term>OSP Control</term> <description>Compatible</description> </listheader> <item> <term>P100II</term> <description>Yes</description> </item> <item> <term>P200</term> <description>Yes</description> </item> <item> <term>P300L</term> <description>No</description> </item> <item> <term>P300S/TD Mode</term> <description>Yes</description> </item> <item> <term>P300S/TL Mode</term> <description>Yes</description> </item> </list> </para>  </remarks>
    </member>
    <member name="M:Okuma.CLDATAPI.DataAPI.CATC.GetMaxPots(Okuma.CLDATAPI.Enumerations.MagazineTypeEnum)">
      <summary> Get number of pots available for the specified magazine type. </summary>
      <example> This example shows how to GetMaxPots. <para>		Dim potNumber As Int32	</para> <para>		Dim enMagazineType As MagazineTypeEnum	</para> <para>		potNumber = objATC.GetMaxPots(enMagazineType)	</para> </example>
      <param name="enMagazineType">ATC Magazine type.  Values of parameter come from the Okuma.CLDATAPI.Enumerations.MagazineTypeEnum enumeration.</param>
      <returns>A System.Int32 value.</returns>
      <exception cref="System.ApplicationException">Thrown when function fails to perform the operation at current NC condition.</exception>
      <exception cref="System.NotSupportedException">Thrown when operation/input parameters are not supported for the current system.</exception>
      <remarks> <para> The following specifications for main magazine in MACTURN or MULTUS machine must be met in order to function: <list type="table"> <listheader> <term>Specification</term> <description>Valid/Invalid</description> </listheader> <item> <term>ATC Specification(PLC). Use MagazineEnum CATC::GetMagazineProperty() to detect if machine can support any ATC magazine type. </term> <description>Valid</description> </item> </list> </para> <para>  The following specifications for sub magazine in MACTURN or MULTUS machine must be met in order to function: <list type="table"> <listheader> <term>Specification</term> <description>Valid/Invalid</description> </listheader> <item> <term>ATC Specification(PLC). Use MagazineEnum CATC::GetMagazineProperty() to detect if machine can support any ATC magazine type. </term> <description>Valid</description> </item> <item> <term>Sub magazine specification (PLC) or multi-magazine specification (PLC) or multi-magazine B-specification (PLC) or Dual-chained magazine (PLC2 [44,5])</term> <description>Valid</description> </item> </list> </para>  </remarks>
    </member>
    <member name="M:Okuma.CLDATAPI.DataAPI.CATC.GetNextTool">
      <summary> Get Next Tool information </summary>
      <example> This example shows how to GetNextTool. <para>		Dim sToolProperty As ToolProperty	</para> <para>		sToolProperty = objATC.GetNextTool()	</para> </example>
      <returns>An Okuma.CLDATAPI.Structures.ToolProperty value.</returns>
      <exception cref="System.ApplicationException">Thrown when function fails to perform the operation at current NC condition.</exception>
      <exception cref="System.NotSupportedException">Thrown when operation/input parameters are not supported for the current system.</exception>
      <remarks> The following specifications in MACTURN or MULTUS machine must be met in order to function: <list type="table"> <listheader> <term>Specification</term> <description>Valid/Invalid</description> </listheader> <item> <term>ATC Specification(PLC). Use MagazineEnum CATC::GetMagazineProperty() to detect if machine can support any ATC magazine type. </term> <description>Valid</description> </item> </list> </remarks>
      <Figure> ATC TOOL INFORMATION <para> NEXT TOOL <img src="Lathe.ATC.SET1.JPG" /> </para> </Figure>
      <SubSystem> N/A  </SubSystem>
    </member>
    <member name="M:Okuma.CLDATAPI.DataAPI.CATC.GetToolInStation(Okuma.CLDATAPI.Enumerations.TurretStationEnum)">
      <summary> Get tool information given turret station number </summary>
      <example> This example shows how to GetToolInStation. <para>		Dim sToolProperty As ToolProperty	</para> <para>		Dim enTurretStation As TurretStationEnum	</para> <para>		sToolProperty = objATC.GetToolInStation(enTurretStation)	</para> </example>
      <param name="enTurretStation">Turret station number where tool infomration is obtained from</param>
      <returns>An Okuma.CLDATAPI.Structures.ToolProperty value.</returns>
      <exception cref="System.ApplicationException">Thrown when function fails to perform the operation at current NC condition.</exception>
      <exception cref="System.NotSupportedException">Thrown when operation/input parameters are not supported for the current system.</exception>
      <remarks> The following specifications in MACTURN or MULTUS machine must be met in order to function: <list type="table"> <listheader> <term>Specification</term> <description>Valid/Invalid</description> </listheader> <item> <term>ATC Specification(PLC). Use MagazineEnum CATC::GetMagazineProperty() to detect if machine can support any ATC magazine type. </term> <description>Valid</description> </item> </list> </remarks>
      <Figure> ATC TOOL INFORMATION <para> STATION NO. <img src="Lathe.ATC.SET1.JPG" /> </para> </Figure>
      <SubSystem> N/A  </SubSystem>
    </member>
    <member name="M:Okuma.CLDATAPI.DataAPI.CATC.GetToolInReadyStation">
      <summary> Get tool number assigned in the ready station. </summary>
      <example> This example shows how to GetToolInStation. <para>		Dim intToolNo as Integer	</para> <para>		intToolNo = objATC.GetToolInReadyStation()	</para> </example>
      <returns>A System.Int32 value. If no tool assigned to this pot, a zero will be returned.</returns>
      <exception cref="System.ApplicationException">Thrown when function fails to perform the operation at current NC condition.</exception>
      <exception cref="System.NotSupportedException">Thrown when operation/input parameters are not supported for the current system.</exception>
      <remarks> <para> The following specifications for MACTURN or MULTUS machine must be met in order to function: <list type="table"> <listheader> <term>Specification</term> <description>Valid/Invalid</description> </listheader> <item> <term>ATC Specification(PLC). Use MagazineEnum CATC::GetMagazineProperty() to detect if machine can support any ATC magazine type. </term> <description>Valid</description> </item> <item> <term>Sub magazine specification (PLC) or multi-magazine pecification (PLC)</term> <description>Valid</description> </item> </list> </para> </remarks>
      <Figure> ATC TOOL INFORMATION <para> <img src="Lathe.ATC.SET1.JPG" /> </para> </Figure>
      <SubSystem> N/A  </SubSystem>
    </member>
    <member name="M:Okuma.CLDATAPI.DataAPI.CATC.GetMagazineProperty">
      <summary> Get magazine configuration for this system </summary>
      <example> This example shows how to GetMagazineProperty. <para>		Dim enMagazineType as MagazineEnum	</para> <para>		enMagazineType = objATC.GetMagazineProperty()	</para> </example>
      <returns>An Okuma.CLDATAPI.Enumerations.MagazineEnum value.</returns>
      <exception cref="System.ApplicationException">Thrown when function fails to perform the operation at current NC condition.</exception>
      <exception cref="System.NotSupportedException">Thrown when operation/input parameters are not supported for the current system.</exception>
      <SubSystem> N/A  </SubSystem>
    </member>
    <member name="M:Okuma.CLDATAPI.DataAPI.CATC.GetPotNo(System.Int32)">
      <summary> Get pot number given registered tool number in ATC magazine.  The system will search the entire ATC table for the pot containing the specified registered tool number and return the associated pot number. </summary>
      <example> This example shows how to GetPotNo. <para>		Dim intPotNo as Integer	</para> <para>		intPotNo = objATC.GetPotNo(intToolNo)	</para> </example>
      <param name="intToolNo">A registered tool number.  </param>
      <returns>A System.Int32 value. It returns -1 if the system cannot find.</returns>
      <exception cref="System.ApplicationException">Thrown when function fails to perform the operation at current NC condition.</exception>
      <exception cref="System.NotSupportedException">Thrown when operation/input parameters are not supported for the current system.</exception>
      <SubSystem> N/A </SubSystem>
      <remarks>  <para> Compatible Chart of this function for different OSP controls: <list type="table"> <listheader> <term>OSP Control</term> <description>Compatible</description> </listheader> <item> <term>P100II</term> <description>Yes</description> </item> <item> <term>P200</term> <description>Yes</description> </item> <item> <term>P300L</term> <description>No</description> </item> <item> <term>P300S/TD Mode</term> <description>Yes</description> </item> <item> <term>P300S/TL Mode</term> <description>Yes</description> </item> </list> </para>  </remarks>
    </member>
    <member name="M:Okuma.CLDATAPI.DataAPI.CATC.GetATCType">
      <summary> Get ATC type configured for this machine </summary>
      <example> This example shows how to GetATCType. <para>		Dim enATCType as ATCTypeEnum	</para> <para>		enATCType = objATC.GetATCType()	</para> </example>
      <returns>An Okuma.CLDATAPI.Enumeration.ATCTypeEnum</returns>
      <exception cref="System.ApplicationException">Thrown when function fails to perform the operation at current NC condition.</exception>
      <exception cref="System.NotSupportedException">Thrown when operation/input parameters are not supported for the current system.</exception>
    </member>
    <member name="M:Okuma.CLDATAPI.DataAPI.CATC.GetMagazinePosition(System.Int32)">
      <summary> Get magazine ATC position given magazine number </summary>
      <example> This example shows how to GetMagazinePosition. <para>		Dim intMagazineNo as Integer	</para> <para>		Dim intMagazinePosition as Integer	</para> <para>		intMagazinePosition = objATC.GetMagazinePosition(Int32 intMagazineNo) 	</para> </example>
      <param name="intMagazineNo">Magazine number.</param>
      <returns>A System.Int32 value</returns>
      <exception cref="System.ApplicationException">Thrown when function fails to perform the operation at current NC condition.</exception>
      <exception cref="System.NotSupportedException">Thrown when operation/input parameters are not supported for the current system.</exception>
      <remarks> The magazine position depends on the magazine type configured on the machine as listed below: <list type="table"> <listheader> <term>Magazine Type</term> <description>Magazine Position</description> </listheader> <item> <term>Matrix Magazine</term> <description> There is no magazine position for this type of magazine.  The return value is -1. </description> </item> <item> <term>Multi-Chained Main Magazine</term> <description> Magazine position of each magazine refers to ATC loading position. The magazine position of second magazine is calculated automatically based on first magazine position. </description> </item> <item> <term>Main Magazine</term> <description> Magazine position of main magazine is at ATC loading position. </description> </item> <item> <term>Main Magazine with Sub-Magazine</term> <description> Magazine position of main magazine is at ATC loading position. </description> </item> <item> <term>Dual-Chained Magazine</term> <description> Magazine position of each magazine refers to ATC loading position.   The magazine can rotate independently from each other. </description> </item> </list> </remarks>
      <Figure> <para> ATC Function - MG ATC POS. POT NO. <img src="Lathe.ATC.Function.JPG" /> </para>  </Figure>
    </member>
    <member name="M:Okuma.CLDATAPI.DataAPI.CATC.IsReservedPot(System.Int32)">
      <summary> Check for reserved pot given pot number. </summary>
      <example> This example shows how to use IsReservedPot function . <para>	On Error GoTo sd	</para> <para>		Dim intPotNumber As Int16	</para> <para>		Dim blnValue As Boolean	</para> <para>		blnValue = IsReservedPot(intPotNumber) </para> <para>		Exit Sub	</para> <para>	sd:	</para> <para>		doError("CATC:  ", Err.Description)	</para> <para>		Resume Next	</para> </example>
      <param name="intPotNo">Pot number.</param>
      <returns>An Boolean value. It returns true if the specified pot is a reserved pot and displays a letter R. Otherwise, it returns false</returns>
      <exception cref="System.ApplicationException">Thrown when function fails to perform the operation at current NC condition.</exception>
      <exception cref="System.NotSupportedException">Thrown when operation/input parameters are not supported for the current system.</exception>
      <remarks> <para> The following specifications for MACTURN or MULTUS machine must be met in order to function: <list type="table"> <listheader> <term>Specification</term> <description>Valid/Invalid</description> </listheader> <item> <term>ATC Specification(PLC). Use MagazineEnum CATC::GetMagazineProperty() to detect if machine can support any ATC magazine type. </term> <description>Valid</description> </item> </list> </para> </remarks>
      <Figure> ATC MAGAZINE INFORMATION - Automatic Tool Changer Table <para> <img src="Lathe.ATC.ReservedPot.jpg" /> </para>  </Figure>
    </member>
    <member name="T:Okuma.CLDATAPI.DataAPI.CAxis">
      <summary> Class provides axis information.  </summary>
    </member>
    <member name="M:Okuma.CLDATAPI.DataAPI.CAxis.#ctor(Okuma.CLDATAPI.Enumerations.SubSystemEnum)">
      <summary> Create an instance of this class given sub System.  By default, class is created with sub System = NC_AL. </summary>
      <param name="enSubSystemEnum">Sub System</param>
    </member>
    <member name="M:Okuma.CLDATAPI.DataAPI.CAxis.SetSubSystem(Okuma.CLDATAPI.Enumerations.SubSystemEnum)">
      <summary> Set current SubSystemEnum for this class instance </summary>
      <example>This example shows how to set SubSystem. <para>	objAxis.SetSubSystem(cmb_CurrentsubSystem.SelectedItem)	</para> </example>
      <param name="enSubSystemEnum">Sub System. Value for this Parameter come from Okuma.CLDATAPI.Enumerations.SubSystemEnum</param>
      <exception cref="System.ApplicationException">Thrown when function fails to perform the operation at current NC condition.</exception>
      <exception cref="System.NotSupportedException">Thrown when operation/input parameters are not supported for the current System or it fails to write data to System.</exception>
    </member>
    <member name="M:Okuma.CLDATAPI.DataAPI.CAxis.SetDataUnit(Okuma.CLDATAPI.Enumerations.DataUnitEnum)">
      <summary> Sets current data unit for this class instance. </summary>
      <example>This example shows how to set DataUnit. <para>	objAxis.SetDataUnit(cmb_Currentdataunit.SelectedItem) 	</para> </example>
      <param name="enDataUnit">Data Unit to be set. Value of this parameter comes from Okuma.CLDATAPI.Enumerations.SubSystemEnum.</param>
      <exception cref="System.NotSupportedException">Thrown when operation/input parameters are not supported for the current System.</exception>
      <remarks> If applicable, this setting is applied to data in this class instance only, not for NC Data Unit. For linear axis position, data unit can be either mm or inch. For circular (rotary) axis position, data unit is in degree only. For example: If NC Data unit is set to mm and the data unit for this class instance is in inch, then axis position will be converted to inch from NC position and vice versa. </remarks>
      <Figure> OPTIONAL PARAMETER - UNIT - LENGTH UNIT System mm / inch.  This is for NC Data only. <para> <img src="ParametersScreen.DataUnit.jpg" /> </para> </Figure>
      <SubSystem> N/A  </SubSystem>
    </member>
    <member name="M:Okuma.CLDATAPI.DataAPI.CAxis.GetActualPositionProgramCoord(Okuma.CLDATAPI.Enumerations.AxisIndex1Enum)">
      <summary> Gets actual position in program coordinate at the specified axis index for current sub System. <para>Refer to Get Axis Name function in CAxis class for availability of axes.</para> <para>Note: Axis position on NC HMI might show an over flow values but function returns numeric value only.</para> </summary>
      <example> This example shows how to GetActualPositionProgramCoord. <para>	curAxisEnum1 = Me.axis1Combo.SelectedValue	</para> <para>	Me.AxisAPathProgramFileNameCoord.Text = objAxis.GetActualPositionProgramCoord(curAxisEnum1)	</para> </example>
      <param name="enAxisIndex">Axis index. Values of parameter come from the Okuma.CLDATAPI.Enumerations.AxisIndex1Enum enumeration.</param>
      <exception cref="System.ApplicationException">Thrown when function fails to perform the operation at current NC condition.</exception>
      <exception cref="System.NotSupportedException">Thrown when operation/input parameters are not supported for the current System.</exception>
      <returns>A System.Double that represents the actual position in program coordinate.</returns>
      <DataUnit> Default unit is in mm.  Other unit can be set by calling SetDataUnit method.  Unit of circular axis is in degree. </DataUnit>
      <remarks> <para> <Figure>ACTUAL POSITION - Actual position in program coordinate when machine is in Y-Axis mode/Coordinate Conversion mode. <para> <img src="Axis.ActualPosition.ProgramCoordinate.YAxisMode.jpg" /> </para> </Figure> </para> <para> <Figure>ACTUAL POSITION - Actual position in program coordinate when machine is in Slant Machining mode. <para> <img src="Axis.ActualPosition.ProgramCoordinate.SlantMachiningMode.jpg" /> </para> </Figure> </para> <para> One of the following specifications must be met in order to be valid for XI and ZI axes and it is applicable to upper turret or A Turret only: <list type="table"> <listheader> <term>Specification</term> <description>ON/OFF</description> </listheader> <item> <term>Y-Axis mode.  (G138 Y-axis mode ON.  G136 Y-axis mode OFF)</term> <description>ON</description> </item> <item> <term>Converted Coordinate System. (G137 - Coordinate conversion ON command)</term> <description>ON</description> </item> </list> </para> <para> One of the following specifications must be met in order to be valid for YI axis and it is applicable to upper turret or A Turret only: <list type="table"> <listheader> <term>Specification</term> <description>ON/OFF</description> </listheader> <item> <term>Y-Axis mode.  (G138 Y-axis mode ON.  G136 Y-axis mode OFF)</term> <description>ON</description> </item> <item> <term>Converted Coordinate System. (G137 - Coordinate conversion ON command)</term> <description>ON</description> </item> <item> <term>Y-Axis Off Center Turning Function</term> <description>ON</description> </item> </list> </para> <para> The following specifications must be met in order to be valid for XIR, ZIR, and YIR axes and it is applicable to upper turret or A Turret only : <list type="table"> <listheader> <term>Specification</term> <description>ON/OFF</description> </listheader> <item> <term>Slant Machining Mode.  (G127 - Slant Machining Mode ON. G126 - Slant Machining Mode OFF)</term> <description>ON</description> </item> <item> <term>Y-Axis mode.  (G138 Y-axis mode ON.  G136 Y-axis mode OFF)</term> <description>ON</description> </item> </list> </para> </remarks>
      <Figure>ACTUAL POSITION - Actual position in program coordinate <para> <img src="Axis.ActualPosition.ProgramCoordinate.jpg" /> </para> </Figure>
      <SubSystem> Please see <see href="SubSystemEnumNoteTable.htm">Sub System Note Table</see> for more information if applicable. <para>Valid sub Systems for this function (Y = Valid, N = Not valid)</para> <para> <list type="table"> <listheader> <term>NC_RUN </term> <term>NC_RUN_1 </term> <term>NC_RUN_2 </term> <term>NC_RUN_3 </term> <term>NC_PANEL </term> <term>NC_PANEL_1 </term> <term>NC_PANEL_2 </term> <term>NC_PANEL_3 </term> <term>NC_AL </term> <term>NC_AR </term> <term>NC_BL </term> <term>NC_BR </term> <term>NC_CL </term> <term>NC_CR </term> <term>NC_2AL </term> </listheader> <item> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> </item> </list> </para>  </SubSystem>
    </member>
    <member name="M:Okuma.CLDATAPI.DataAPI.CAxis.GetActualPositionMachineCoord(Okuma.CLDATAPI.Enumerations.AxisIndex6Enum)">
      <summary> Gets actual position in machine coordinate at the specified axis index for current sub System. <para>Refer to Get Axis Name function in CAxis class for availability of axes.</para> <para>Note: Axis position on NC HMI might show an over flow values but function returns numeric value only.</para> </summary>
      <example> This example shows how to GetActualPositionMachineCoord. <para>	On Error GoTo sd </para> <para>	Dim curAxisEnum1 As AxisIndex6Enum	</para> <para>	Me.AxisAPMachineCoord.Text = objAxis.GetActualPositionMachineCoord(curAxisEnum1)	</para> </example>
      <param name="enAxisIndex">Axis index.  Values of parameter come from the Okuma.CLDATAPI.Enumerations.AxisIndex6Enum enumeration.</param>
      <returns>A System.Double that represents the actual position in machine coordinate.</returns>
      <DataUnit> Default unit is in mm.  Other unit can be set by calling SetDataUnit method.  Unit of circular axis is in degree. </DataUnit>
      <exception cref="System.ApplicationException">Thrown when function fails to perform the operation at current NC condition.</exception>
      <exception cref="System.NotSupportedException">Thrown when operation/input parameters are not supported for the current System.</exception>
      <remarks> <para> <Figure>ACTUAL POSITION - Actual position in machine coordinate when machine is in Y-Axis mode/Coordinate Conversion mode. <para> <img src="Axis.ActualPosition.ProgramCoordinate.YAxisMode.jpg" /> </para> </Figure> </para> <para> <Figure>ACTUAL POSITION - Actual position in machine coordinate when machine is in Slant Machining mode. <para> <img src="Axis.ActualPosition.ProgramCoordinate.SlantMachiningMode.jpg" /> </para> </Figure> </para> <para> Note for BA Axis:</para> <para> BA axis is enabled when NC spec code [2,6] H1 Turret = ON, and </para> <para> NC spec code [8,7] = B Axis Control = ON.  BA axis can be active by executing G code G149 or not active by executing G Code G148.</para> <para> When BA axis is enabled but it is not active, axis data will not be available </para> <para> One of the following specifications must be met in order to be valid for XI and ZI axes and it is applicable to upper turret or A Turret only: <list type="table"> <listheader> <term>Specification</term> <description>ON/OFF</description> </listheader> <item> <term>Y-Axis mode.  (G138 Y-axis mode ON and G136 Y-axis mode OFF) </term> <description>ON</description> </item> <item> <term>Converted Coordinate System. (G137 - Coordinate conversion ON command)</term> <description>ON</description> </item> </list> </para> <para> One of the following specifications must be met in order to be valid for YI axis and it is applicable to upper turret or A Turret only: <list type="table"> <listheader> <term>Specification</term> <description>ON/OFF</description> </listheader> <item> <term>Y-Axis mode.  (G138 Y-axis mode ON and G136 Y-axis mode OFF) </term> <description>ON</description> </item> <item> <term>Converted Coordinate System. (G137 - Coordinate conversion ON command)</term> <description>ON</description> </item> <item> <term>Y-Axis Off Center Turning Function</term> <description>ON</description> </item> </list> </para> </remarks>
      <Figure>ACTUAL POSITION - MACHINE - Actual position in machine coordinate <para> <img src="Axis.ActualPosition.MachineCoordinate.jpg" /> </para> </Figure>
      <SubSystem> Please see <see href="SubSystemEnumNoteTable.htm">Sub System Note Table</see> for more information if applicable. <para>Valid sub Systems for this function (Y = Valid, N = Not valid)</para> <para> <list type="table"> <listheader> <term>NC_RUN </term> <term>NC_RUN_1 </term> <term>NC_RUN_2 </term> <term>NC_RUN_3 </term> <term>NC_PANEL </term> <term>NC_PANEL_1 </term> <term>NC_PANEL_2 </term> <term>NC_PANEL_3 </term> <term>NC_AL </term> <term>NC_AR </term> <term>NC_BL </term> <term>NC_BR </term> <term>NC_CL </term> <term>NC_CR </term> <term>NC_2AL </term> </listheader> <item> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> </item> </list> </para>  </SubSystem>
    </member>
    <member name="M:Okuma.CLDATAPI.DataAPI.CAxis.GetActualPositionEncoderCoord(Okuma.CLDATAPI.Enumerations.AxisIndex2Enum)">
      <summary> Gets actual position in encoder coordinate at the specified axis index for current sub System. <para>Refer to Get Axis Name function in CAxis class for availability of axes.</para> <para>Note: Axis position on NC HMI might show an over flow values but function returns numeric value only.</para> </summary>
      <example> This example shows how to GetActualPositionEncoderCoord. <para>	Me.AxisAPEncoderCoord.Text = objAxis.GetActualPositionEncoderCoord(curAxisEnum2)	</para> </example>
      <param name="enAxisIndex">Axis index. Values of parameter come from the Okuma.CLDATAPI.Enumerations.AxisIndex2Enum enumeration.</param>
      <returns>A System.Double that represents the actual position in encoder coordinate.</returns>
      <DataUnit> Default unit is in mm.  Other unit can be set by calling SetDataUnit method.  Circular axis unit is in degree. </DataUnit>
      <exception cref="System.ApplicationException">Thrown when function fails to perform the operation at current NC condition.</exception>
      <exception cref="System.NotSupportedException">Thrown when operation/input parameters are not supported for the current System.</exception>
      <Figure>ACTUAL POSITION - RAPA - Actual position in encoder coordinate <para> <img src="Axis.ActualPosition.EncoderCoordinate.jpg" /> </para> </Figure>
      <SubSystem> Please see <see href="SubSystemEnumNoteTable.htm">Sub System Note Table</see> for more information if applicable. <para>Valid sub Systems for this function (Y = Valid, N = Not valid)</para> <para> <list type="table"> <listheader> <term>NC_RUN </term> <term>NC_RUN_1 </term> <term>NC_RUN_2 </term> <term>NC_RUN_3 </term> <term>NC_PANEL </term> <term>NC_PANEL_1 </term> <term>NC_PANEL_2 </term> <term>NC_PANEL_3 </term> <term>NC_AL </term> <term>NC_AR </term> <term>NC_BL </term> <term>NC_BR </term> <term>NC_CL </term> <term>NC_CR </term> <term>NC_2AL </term> </listheader> <item> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> </item> </list> </para>  </SubSystem>
    </member>
    <member name="M:Okuma.CLDATAPI.DataAPI.CAxis.GetDistanceToTargetPosition(Okuma.CLDATAPI.Enumerations.AxisIndex1Enum)">
      <summary> Gets distance to target position at the specified axis index for current sub System. <para>Refer to Get Axis Name function in CAxis class for availability of axes.</para> <para>Note: Axis position on NC HMI might show an over flow values but function returns numeric value only.</para> </summary>
      <example>This example shows how to GetDistanceToTargetPosition. <para>	Dim curAxisEnum1 As AxisIndex1Enum </para> <para>	Me.AxisdistanceTarget.Text = objAxis.GetDistanceToTargetPosition(curAxisEnum1)	</para> </example>
      <param name="enAxisIndex">Axis index. Values of parameter come from the Okuma.CLDATAPI.Enumerations.AxisIndex1Enum enumeration.</param>
      <returns>A System.Double that represents the actual position in program coordinate.</returns>
      <DataUnit> Default unit is in mm.  Other unit can be set by calling SetDataUnit method.  Circular axis unit is in degree. </DataUnit>
      <exception cref="System.ApplicationException">Thrown when function fails to perform the operation at current NC condition.</exception>
      <exception cref="System.NotSupportedException">Thrown when operation/input parameters are not supported for the current System.</exception>
      <Figure>ACTUAL POSITION - DISTANCE REMAINING - Distance to target position <para> <img src="Axis.ActualPosition.DistanceRemaining.jpg" /> </para> </Figure>
      <SubSystem> Please see <see href="SubSystemEnumNoteTable.htm">Sub System Note Table</see> for more information if applicable. <para>Valid sub Systems for this function (Y = Valid, N = Not valid)</para> <para> <list type="table"> <listheader> <term>NC_RUN </term> <term>NC_RUN_1 </term> <term>NC_RUN_2 </term> <term>NC_RUN_3 </term> <term>NC_PANEL </term> <term>NC_PANEL_1 </term> <term>NC_PANEL_2 </term> <term>NC_PANEL_3 </term> <term>NC_AL </term> <term>NC_AR </term> <term>NC_BL </term> <term>NC_BR </term> <term>NC_CL </term> <term>NC_CR </term> <term>NC_2AL </term> </listheader> <item> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> </item> </list> </para>  </SubSystem>
    </member>
    <member name="M:Okuma.CLDATAPI.DataAPI.CAxis.GetTargetPosition(Okuma.CLDATAPI.Enumerations.AxisIndex1Enum)">
      <summary> Gets target position at the specified axis index for current sub System. <para>Refer to Get Axis Name function in CAxis class for availability of axes.</para> <para>Note: Axis position on NC HMI might show an over flow values but function returns numeric value only.</para> </summary>
      <example>This example shows how to GetTargetPosition. <para>	curAxisEnum1 = Me.axis1Combo.SelectedValue	</para> <para>	Me.AxistargetPosition.Text = objAxis.GetTargetPosition(curAxisEnum1)	</para> </example>
      <param name="enAxisIndex">Axis index. Values of parameter come from the Okuma.CLDATAPI.Enumerations.AxisIndex1Enum enumeration.</param>
      <returns>A System.Double that represents the actual position in program coordinate.</returns>
      <DataUnit> Default unit is in mm.  Other unit can be set by calling SetDataUnit method.  Circular axis unit is in degree. </DataUnit>
      <exception cref="System.ApplicationException">Thrown when function fails to perform the operation at current NC condition.</exception>
      <exception cref="System.NotSupportedException">Thrown when operation/input parameters are not supported for the current System.</exception>
      <Figure>ACTUAL POSITION - TARGET - Target position <para> <img src="Axis.ActualPosition.TargetPosition.jpg" /> </para> </Figure>
      <SubSystem> Please see <see href="SubSystemEnumNoteTable.htm">Sub System Note Table</see> for more information if applicable. <para>Valid sub Systems for this function (Y = Valid, N = Not valid)</para> <para> <list type="table"> <listheader> <term>NC_RUN </term> <term>NC_RUN_1 </term> <term>NC_RUN_2 </term> <term>NC_RUN_3 </term> <term>NC_PANEL </term> <term>NC_PANEL_1 </term> <term>NC_PANEL_2 </term> <term>NC_PANEL_3 </term> <term>NC_AL </term> <term>NC_AR </term> <term>NC_BL </term> <term>NC_BR </term> <term>NC_CL </term> <term>NC_CR </term> <term>NC_2AL </term> </listheader> <item> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> </item> </list> </para>  </SubSystem>
    </member>
    <member name="M:Okuma.CLDATAPI.DataAPI.CAxis.GetAxisName(Okuma.CLDATAPI.Enumerations.AllAxisIndexEnum)">
      <summary> Gets axis name at the specified axis index for current sub System. <para> Note: If an axis name cannot be obtained it means the axis is not available for the specified sub System. </para> <para> For example 1: C axis is a valid axis for sub System NC_AL but it is not valid axis for sub System NC_BL/NC_BR/NC_RUN_2/NC_PANEL_2. Therefore, the function will throw a NotSupportedException for C axis. It means that the axis position for C axis for sub System NC_BL/NC_BR/NC_RUN_2/NC_PANEL_2 cannot be obtained. </para> <para> For example 2: C axis is a valid axis for sub System NC_AL but it is not valid axis for sub System NC_RUN/NC_PANEL when B turret is currently selected on the NC panel. Therefore, the function will throw a NotSupportedException for C axis. It means that the axis position for C axis for sub System NC_RUN/NC_PANEL cannot be obtained under this machine condition. </para> <para> However, there are cases that axes name are valid but axes positions, such as XI, XIR ..., are not valid based on current operation of machine such as Y-Axis/Slant machining mode ... etc. Then, the justification must be made per function's specification at different sub System and machine condition. </para> </summary>
      <example> This example shows how to obtain name of all available axes. <para>	Dim curAxisEnumAll As AllAxisIndexEnum	</para> <para>	Me.axisName.Text = objAxis.GetAxisName(curAxisEnumAll)	</para> </example>
      <param name="enAxisIndex">Axis index. Values of parameter come from the Okuma.CLDATAPI.Enumerations.AxisIndex1Enum enumeration.</param>
      <returns>A System.String that represents the name of the specified axis index</returns>
      <exception cref="System.ApplicationException">Thrown when function fails to perform the operation at current NC condition.</exception>
      <exception cref="System.NotSupportedException">Thrown when operation/input parameters are not supported for the current System.</exception>
      <Figure>ACTUAL POSITION - X,Z,C, and W are axes name. <para> <img src="Axis.ActualPosition.MachineCoordinate.jpg" /> </para> </Figure>
      <SubSystem> Please see <see href="SubSystemEnumNoteTable.htm">Sub System Note Table</see> for more information if applicable. <para>Valid sub Systems for this function (Y = Valid, N = Not valid)</para> <para> <list type="table"> <listheader> <term>NC_RUN </term> <term>NC_RUN_1 </term> <term>NC_RUN_2 </term> <term>NC_RUN_3 </term> <term>NC_PANEL </term> <term>NC_PANEL_1 </term> <term>NC_PANEL_2 </term> <term>NC_PANEL_3 </term> <term>NC_AL </term> <term>NC_AR </term> <term>NC_BL </term> <term>NC_BR </term> <term>NC_CL </term> <term>NC_CR </term> <term>NC_2AL </term> </listheader> <item> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> </item> </list> </para>  </SubSystem>
    </member>
    <member name="M:Okuma.CLDATAPI.DataAPI.CAxis.GetAxisLoad(Okuma.CLDATAPI.Enumerations.AxisIndex2Enum)">
      <summary> Gets axis load at the specified axis index for current sub System. </summary>
      <example>This example shows how to return axis load. <para>	Dim curAxisEnum2 As AxisIndex2Enum	</para> <para>	Me.axisLoad.Text = objAxis.GetAxisLoad(curAxisEnum2)	</para> </example>
      <param name="enAxisIndex">Axis index. Values of parameter come from the Okuma.CLDATAPI.Enumerations.AxisIndex2Enum enumeration.</param>
      <returns>A System.Int32 value that represents axis load (not in absolute value)</returns>
      <DataUnit> Percentage </DataUnit>
      <exception cref="System.ApplicationException">Thrown when function fails to perform the operation at current NC condition.</exception>
      <exception cref="System.NotSupportedException">Thrown when operation/input parameters are not supported for the current System.</exception>
      <remarks> <para> The following specifications for axes listed below must be met in order to function: <list type="table"> <listheader> <term>Axis</term> <description>Specification</description> </listheader> <item> <term>W-Axis</term> <description>The specification of sub spindle (NC spec [4,1])or LT (NC spec [4,0]) must be ON</description> </item> </list> </para> </remarks>
      <Figure>LOAD MONITOR - X,Z are axes load in absolute value. <para> <img src="Axis.Load.jpg" /> </para> </Figure>
      <SubSystem> Please see <see href="SubSystemEnumNoteTable.htm">Sub System Note Table</see> for more information if applicable. <para>Valid sub Systems for this function (Y = Valid, N = Not valid)</para> <para> <list type="table"> <listheader> <term>NC_RUN </term> <term>NC_RUN_1 </term> <term>NC_RUN_2 </term> <term>NC_RUN_3 </term> <term>NC_PANEL </term> <term>NC_PANEL_1 </term> <term>NC_PANEL_2 </term> <term>NC_PANEL_3 </term> <term>NC_AL </term> <term>NC_AR </term> <term>NC_BL </term> <term>NC_BR </term> <term>NC_CL </term> <term>NC_CR </term> <term>NC_2AL </term> </listheader> <item> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> </item> </list> </para>  </SubSystem>
    </member>
    <member name="M:Okuma.CLDATAPI.DataAPI.CAxis.GetCommandFeedrate">
      <summary> Gets command feedrate for current sub System. </summary>
      <example> This example shows how to GetCommandFeedrate. <para>	Me.AxiscommandFeedRate.Text = objAxis.GetCommandFeedrate	</para> </example>
      <returns>A System.Double value.</returns>
      <DataUnit> Default unit is in mm.  Other unit can be set by calling SetDataUnit method </DataUnit>
      <exception cref="System.ApplicationException">Thrown when function fails to perform the operation at current NC condition.</exception>
      <exception cref="System.NotSupportedException">Thrown when operation/input parameters are not supported for the current System.</exception>
      <Figure>BLOCK DATA - F - Command feedrate <para> <img src="Axis.Feedrate.jpg" /> </para> </Figure>
      <SubSystem> Please see <see href="SubSystemEnumNoteTable.htm">Sub System Note Table</see> for more information if applicable. <para>Valid sub Systems for this function (Y = Valid, N = Not valid)</para> <para> <list type="table"> <listheader> <term>NC_RUN </term> <term>NC_RUN_1 </term> <term>NC_RUN_2 </term> <term>NC_RUN_3 </term> <term>NC_PANEL </term> <term>NC_PANEL_1 </term> <term>NC_PANEL_2 </term> <term>NC_PANEL_3 </term> <term>NC_AL </term> <term>NC_AR </term> <term>NC_BL </term> <term>NC_BR </term> <term>NC_CL </term> <term>NC_CR </term> <term>NC_2AL </term> </listheader> <item> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> </item> </list> </para>  </SubSystem>
    </member>
    <member name="M:Okuma.CLDATAPI.DataAPI.CAxis.GetActualFeedrate">
      <summary> Gets actual feedrate for current sub System. </summary>
      <example>This example shows how to call GetActualFeedrate. <para>	Me.AxisActualFeedrate.Text = objAxis.GetActualFeedrate	</para> </example>
      <returns>A System.Double</returns>
      <DataUnit> Default unit is in mm.  Other unit can be set by calling SetDataUnit method. It can be in rev or min. </DataUnit>
      <exception cref="System.ApplicationException">Thrown when function fails to perform the operation at current NC condition.</exception>
      <exception cref="System.NotSupportedException">Thrown when operation/input parameters are not supported for the current System.</exception>
      <Figure>BLOCK DATA - Fm - Actual feedrate per minute/ Fr - Actual feedrate per revolution <para> <img src="Axis.Feedrate.jpg" /> </para> </Figure>
      <SubSystem> Please see <see href="SubSystemEnumNoteTable.htm">Sub System Note Table</see> for more information if applicable. <para>Valid sub Systems for this function (Y = Valid, N = Not valid)</para> <para> <list type="table"> <listheader> <term>NC_RUN </term> <term>NC_RUN_1 </term> <term>NC_RUN_2 </term> <term>NC_RUN_3 </term> <term>NC_PANEL </term> <term>NC_PANEL_1 </term> <term>NC_PANEL_2 </term> <term>NC_PANEL_3 </term> <term>NC_AL </term> <term>NC_AR </term> <term>NC_BL </term> <term>NC_BR </term> <term>NC_CL </term> <term>NC_CR </term> <term>NC_2AL </term> </listheader> <item> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> </item> </list> </para>  </SubSystem>
    </member>
    <member name="M:Okuma.CLDATAPI.DataAPI.CAxis.GetActualFeedratePerMin">
      <summary> Gets actual feedrate per minute (Fm) for current sub System. </summary>
      <example>This example shows how to call GetActualFeedrate. <para>	Me.AxisActualFeedrate.Text = objAxis.GetActualFeedratePerMin	</para> </example>
      <returns>A System.Double</returns>
      <DataUnit> Default unit is in mm.  Other unit can be set by calling SetDataUnit method. </DataUnit>
      <exception cref="System.ApplicationException">Thrown when function fails to perform the operation at current NC condition.</exception>
      <exception cref="System.NotSupportedException">Thrown when operation/input parameters are not supported for the current System.</exception>
      <Figure>BLOCK DATA - Fm - Actual feedrate per minute <para> <img src="Axis.Feedrate.jpg" /> </para> </Figure>
      <SubSystem> Please see <see href="SubSystemEnumNoteTable.htm">Sub System Note Table</see> for more information if applicable. <para>Valid sub Systems for this function (Y = Valid, N = Not valid)</para> <para> <list type="table"> <listheader> <term>NC_RUN </term> <term>NC_RUN_1 </term> <term>NC_RUN_2 </term> <term>NC_RUN_3 </term> <term>NC_PANEL </term> <term>NC_PANEL_1 </term> <term>NC_PANEL_2 </term> <term>NC_PANEL_3 </term> <term>NC_AL </term> <term>NC_AR </term> <term>NC_BL </term> <term>NC_BR </term> <term>NC_CL </term> <term>NC_CR </term> <term>NC_2AL </term> </listheader> <item> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> </item> </list> </para> </SubSystem>
      <remarks>  <para> Compatible Chart of this function for different OSP controls: <list type="table"> <listheader> <term>OSP Control</term> <description>Compatible</description> </listheader> <item> <term>P100II</term> <description>No</description> </item> <item> <term>P200</term> <description>No</description> </item> <item> <term>P300L</term> <description> <para> Yes </para> </description> </item> <item> <term>P300S/TD Mode</term> <description> <para> Yes </para> </description> </item> <item> <term>P300S/TL Mode</term> <description> <para> Yes </para> </description> </item> </list> </para>  </remarks>
    </member>
    <member name="M:Okuma.CLDATAPI.DataAPI.CAxis.GetActualFeedratePerRev">
      <summary> Gets actual feedrate per revolution (Fr) for current sub System. </summary>
      <example>This example shows how to call GetActualFeedratePerRev. <para>	Me.AxisActualFeedrate.Text = objAxis.GetActualFeedratePerRev	</para> </example>
      <returns>A System.Double</returns>
      <DataUnit> Default unit is in mm.  Other unit can be set by calling SetDataUnit method. </DataUnit>
      <exception cref="System.ApplicationException">Thrown when function fails to perform the operation at current NC condition.</exception>
      <exception cref="System.NotSupportedException">Thrown when operation/input parameters are not supported for the current System.</exception>
      <Figure>BLOCK DATA - Fr - Actual feedrate per revolution <para> <img src="Axis.Feedrate.jpg" /> </para> </Figure>
      <SubSystem> Please see <see href="SubSystemEnumNoteTable.htm">Sub System Note Table</see> for more information if applicable. <para>Valid sub Systems for this function (Y = Valid, N = Not valid)</para> <para> <list type="table"> <listheader> <term>NC_RUN </term> <term>NC_RUN_1 </term> <term>NC_RUN_2 </term> <term>NC_RUN_3 </term> <term>NC_PANEL </term> <term>NC_PANEL_1 </term> <term>NC_PANEL_2 </term> <term>NC_PANEL_3 </term> <term>NC_AL </term> <term>NC_AR </term> <term>NC_BL </term> <term>NC_BR </term> <term>NC_CL </term> <term>NC_CR </term> <term>NC_2AL </term> </listheader> <item> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> </item> </list> </para> </SubSystem>
      <remarks>  <para> Compatible Chart of this function for different OSP controls: <list type="table"> <listheader> <term>OSP Control</term> <description>Compatible</description> </listheader> <item> <term>P100II</term> <description>No</description> </item> <item> <term>P200</term> <description>No</description> </item> <item> <term>P300L</term> <description> <para> Yes </para> </description> </item> <item> <term>P300S/TD Mode</term> <description> <para> Yes </para> </description> </item> <item> <term>P300S/TL Mode</term> <description> <para> Yes </para> </description> </item> </list> </para>  </remarks>
    </member>
    <member name="M:Okuma.CLDATAPI.DataAPI.CAxis.GetFeedrateOverride">
      <summary> Gets feedrate override for current sub System. </summary>
      <example>This example shows how to GetFeedrateOverride. <para>	Me.AxisfeedrateOverride.Text = objAxis.GetFeedrateOverride	</para> </example>
      <returns>A System.Double</returns>
      <DataUnit> Percentage. </DataUnit>
      <exception cref="System.ApplicationException">Thrown when function fails to perform the operation at current NC condition.</exception>
      <exception cref="System.NotSupportedException">Thrown when operation/input parameters are not supported for the current System.</exception>
      <Figure>STANDARD NAVIGATION PANEL - G01 - Feedrate override <para> <img src="Standard.Navigation.Panel.jpg" /> </para> </Figure>
      <SubSystem> Please see <see href="SubSystemEnumNoteTable.htm">Sub System Note Table</see> for more information if applicable. <para>Valid sub Systems for this function (Y = Valid, N = Not valid)</para> <para> <list type="table"> <listheader> <term>NC_RUN </term> <term>NC_RUN_1 </term> <term>NC_RUN_2 </term> <term>NC_RUN_3 </term> <term>NC_PANEL </term> <term>NC_PANEL_1 </term> <term>NC_PANEL_2 </term> <term>NC_PANEL_3 </term> <term>NC_AL </term> <term>NC_AR </term> <term>NC_BL </term> <term>NC_BR </term> <term>NC_CL </term> <term>NC_CR </term> <term>NC_2AL </term> </listheader> <item> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> </item> </list> </para>  </SubSystem>
    </member>
    <member name="M:Okuma.CLDATAPI.DataAPI.CAxis.GetFeedrateType">
      <summary> Gets feedrate type. </summary>
      <example> This example shows how to GetFeedrateType. <para>	lbl_FeedRate.Text = objAxis.GetFeedrateType()	</para> </example>
      <returns>An Okuma.CDATAPI.Enumerations.FeedrateTypeEnum value.</returns>
      <exception cref="System.ApplicationException">Thrown when function fails to perform the operation at current NC condition.</exception>
      <exception cref="System.NotSupportedException">Thrown when operation/input parameters are not supported for the current System.</exception>
      <Figure> </Figure>
      <SubSystem> Please see <see href="SubSystemEnumNoteTable.htm">Sub System Note Table</see> for more information if applicable. <para>Valid sub Systems for this function (Y = Valid, N = Not valid)</para> <para> <list type="table"> <listheader> <term>NC_RUN </term> <term>NC_RUN_1 </term> <term>NC_RUN_2 </term> <term>NC_RUN_3 </term> <term>NC_PANEL </term> <term>NC_PANEL_1 </term> <term>NC_PANEL_2 </term> <term>NC_PANEL_3 </term> <term>NC_AL </term> <term>NC_AR </term> <term>NC_BL </term> <term>NC_BR </term> <term>NC_CL </term> <term>NC_CR </term> <term>NC_2AL </term> </listheader> <item> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> </item> </list> </para>  </SubSystem>
    </member>
    <member name="M:Okuma.CLDATAPI.DataAPI.CAxis.GetFeedHold">
      <summary> Gets feed hold status </summary>
      <example> This example shows how to get feed hold. <para>	Me.AxisfeedHold.Text = objAxis.GetFeedHold	</para> </example>
      <returns>A System.Boolean value.  True if it is in hold state, otherwise false</returns>
      <exception cref="System.ApplicationException">Thrown when function fails to perform the operation at current NC condition.</exception>
      <exception cref="System.NotSupportedException">Thrown when operation/input parameters are not supported for the current System.</exception>
      <figure> </figure>
      <SubSystem> N/A  </SubSystem>
    </member>
    <member name="M:Okuma.CLDATAPI.DataAPI.CAxis.GetMaxFeedrateOverride">
      <summary> Gets max feedrate override. </summary>
      <example> This example shows how to GetMaxFeedrateOverride. <para>	Me.AxismaxFeedrateOverride.Text = objAxis.GetMaxFeedrateOverride	</para> </example>
      <returns>A System.Double value.</returns>
      <DataUnit> Percentage. </DataUnit>
      <exception cref="System.ApplicationException">Thrown when function fails to perform the operation at current NC condition.</exception>
      <exception cref="System.NotSupportedException">Thrown when operation/input parameters are not supported for the current System.</exception>
      <Figure>STANDARD NAVIGATION PANEL - G01 - Feedrate override <para> <img src="Standard.Navigation.Panel.jpg" /> </para> </Figure>
      <SubSystem> N/A  </SubSystem>
    </member>
    <member name="M:Okuma.CLDATAPI.DataAPI.CAxis.GetAxisType(Okuma.CLDATAPI.Enumerations.AllAxisIndexEnum)">
      <summary> Gets type of specified axis index. <para>Note: This function will return a type of an axis even the axis is not available.</para> </summary>
      <example> This example shows how to GetAxisType <para>	Dim curAxisEnumAll As AllAxisIndexEnum	</para> <para>	Me.axisType.Text = objAxis.GetAxisType(curAxisEnumAll)	</para> </example>
      <param name="enAxisIndex">Axis index. Values of parameter come from the Okuma.CLDATAPI.Enumerations.AllAxisIndexEnum enumeration.</param>
      <returns>An Okuma.CLDATAPI.Enumerations.AxisTypeEnum enum value.</returns>
      <exception cref="System.NotSupportedException">Thrown when operation/input parameters are not supported for the current System.</exception>
    </member>
    <member name="M:Okuma.CLDATAPI.DataAPI.CAxis.GetBAxisLoad">
      <summary> Gets B-Axis load. </summary>
      <example>This example shows how to GetBAxisLoad. <para>	Me.AxisBAxisLoad.Text = objAxis.GetBAxisLoad	</para> </example>
      <returns>A System.Int32 value</returns>
      <exception cref="System.ApplicationException">Thrown when function fails to perform the operation at current NC condition.</exception>
      <exception cref="System.NotSupportedException">Thrown when operation/input parameters are not supported for the current System.</exception>
      <DataUnit> Percentage </DataUnit>
      <SubSystem> Please see <see href="SubSystemEnumNoteTable.htm">Sub System Note Table</see> for more information if applicable. <para>Valid sub Systems for this function (Y = Valid, N = Not valid)</para> <para> <list type="table"> <listheader> <term>NC_RUN </term> <term>NC_RUN_1 </term> <term>NC_RUN_2 </term> <term>NC_RUN_3 </term> <term>NC_PANEL </term> <term>NC_PANEL_1 </term> <term>NC_PANEL_2 </term> <term>NC_PANEL_3 </term> <term>NC_AL </term> <term>NC_AR </term> <term>NC_BL </term> <term>NC_BR </term> <term>NC_CL </term> <term>NC_CR </term> <term>NC_2AL </term> </listheader> <item> <term>Y (*5)</term> <term>Y</term> <term>N</term> <term>N</term> <term>Y (*5)</term> <term>Y</term> <term>N</term> <term>N</term> <term>Y</term> <term>Y</term> <term>N</term> <term>N</term> <term>N</term> <term>N</term> <term>N</term> </item> </list> </para>  </SubSystem>
    </member>
    <member name="M:Okuma.CLDATAPI.DataAPI.CAxis.GetUserParameterVariableLimit(Okuma.CLDATAPI.Enumerations.UserParameterVariableLimitEnum,Okuma.CLDATAPI.Enumerations.AxisIndex5Enum)">
      <summary> Gets user parameter variable limit at the specified axis index for current sub System. <para>Refer to Get Axis Name function in CAxis class for availability of axes.</para> </summary>
      <example> This example shows how to get user parameter variable limit at the specified axis index for current sub System. <para> <para> Dim dblValue as Double	</para> <para> Dim enAxisIndex as AxisIndex5Enum </para> <para> Dim enUserParameterVariableLimit as UserParameterVariableLimitEnum </para> <para> dblValue = objVariables.GetUserParameterVariableLimit(enUserParameterVariableLimit, enAxisIndex)	</para> </para> </example>
      <param name="enVariableLimit">Variable Limit. Values of parameter come from Okuma.CLDATAPI.Enumerations.UserVariableLimitEnum enumeration.</param>
      <param name="enAxisIndex">Axis index. Values of parameter come from Okuma.CLDATAPI.Enumerations.AxisIndex5Enum enumeration.</param>
      <exception cref="System.ApplicationException">Thrown when function fails to perform the operation at current NC condition.</exception>
      <exception cref="System.NotSupportedException">Thrown when operation/input parameters are not supported for the current System.</exception>
      <returns>A System.Double value</returns>
      <DataUnit> Default unit is in mm.  Other unit can be set by calling SetDataUnit method.  Circular axis unit is in degree. </DataUnit>
      <remarks> <para> The following specifications for axes listed below must be met in order to function: <list type="table"> <listheader> <term>Axis</term> <description>Specification</description> </listheader> <item> <term>W-Axis</term> <description> <para> One of the following specifications must be met in order to be valid axis:</para> <para>Sub spindle specification (NC spec [4,1])</para> <para>LT specification (NC spec [4,0])</para> <para>Auto tow-along tailstock specification (NC spec [27,3])</para> <para>NC Tailstock specification NC spec [27,5]</para> <para>Programmable Tailstock specification NC spec [27,0]</para> </description> </item> <item> <term>YI-Axis</term> <description> <para>The following specifications must be met in order to be valid axis:</para> <para>Slant Y-Axis specification NC spec [8,0]</para> <term>Multitasking machine specification NC spec [3,0]</term> </description> </item> </list> </para> </remarks>
      <Figure> PARAMETER - USER PARAMETER - +/- VARIABLE LIMIT(P), +/- VARIABLE LIMIT(M) <para> <img src="Lathe.Parameter.UserParameter.jpg" /> </para> </Figure>
      <SubSystem> Please see <see href="SubSystemEnumNoteTable.htm">Sub System Note Table</see> for more information if applicable. <para>Valid sub Systems for this function (Y = Valid, N = Not valid)</para> <para> <list type="table"> <listheader> <term>NC_RUN </term> <term>NC_RUN_1 </term> <term>NC_RUN_2 </term> <term>NC_RUN_3 </term> <term>NC_PANEL </term> <term>NC_PANEL_1 </term> <term>NC_PANEL_2 </term> <term>NC_PANEL_3 </term> <term>NC_AL </term> <term>NC_AR </term> <term>NC_BL </term> <term>NC_BR </term> <term>NC_CL </term> <term>NC_CR </term> <term>NC_2AL </term> </listheader> <item> <term>Y (*23)</term> <term>Y (*11)</term> <term>Y (*24)</term> <term>Y (*24)</term> <term>Y (*23)</term> <term>Y (*11)</term> <term>Y (*24)</term> <term>Y (*24)</term> <term>Y		 </term> <term>Y (*13)</term> <term>Y (*25)</term> <term>Y (*9, *18)</term> <term>Y (*9, *18)</term> </item> </list> </para>  </SubSystem>
    </member>
    <member name="M:Okuma.CLDATAPI.DataAPI.CAxis.SetUserParameterVariableLimit(Okuma.CLDATAPI.Enumerations.UserParameterVariableLimitEnum,Okuma.CLDATAPI.Enumerations.AxisIndex5Enum,System.Double)">
      <summary>Set user parameter variable limit at the specified axis index for current sub System. <para>Refer to Get Axis Name function in CAxis class for availability of axes.</para> </summary>
      <example> This example shows how to set user parameter variable limit at the specified axis index for current sub System. <para> <para> Dim dblValue as Double	</para> <para> Dim enAxisIndex as AxisIndex5Enum </para> <para> Dim enUserParameterVariableLimit as UserParameterVariableLimitEnum </para> <para> objVariables.SetUserParameterVariableLimit(enUserParameterVariableLimit, enAxisIndex, dblValue)	</para> </para> </example>
      <param name="enVariableLimit">Variable Limit. Values of parameter come from Okuma.CLDATAPI.Enumerations.UserVariableLimitEnum enumeration.</param>
      <param name="enAxisIndex">Axis index. Values of parameter come from Okuma.CLDATAPI.Enumerations.AxisIndex5Enum enumeration.</param>
      <param name="dblValue">Variable limit value to be set</param>
      <exception cref="System.ApplicationException">Thrown when function fails to perform the operation at current NC condition.</exception>
      <exception cref="System.NotSupportedException">Thrown when operation/input parameters are not supported for the current System.</exception>
      <DataUnit> Default unit is in mm.  Other unit can be set by calling SetDataUnit method.  Circular axis unit is in degree. </DataUnit>
      <remarks> <para> The following specifications for axes listed below must be met in order to function: <list type="table"> <listheader> <term>Axis</term> <description>Specification</description> </listheader> <item> <term>W-Axis</term> <description> <para> One of the following specifications must be met in order to be valid axis:</para> <para>Sub spindle specification (NC spec [4,1])</para> <para>LT specification (NC spec [4,0])</para> <para>Auto tow-along tailstock specification (NC spec [27,3])</para> <para>NC Tailstock specification NC spec [27,5]</para> <para>Programmable Tailstock specification NC spec [27,0]</para> </description> </item> <item> <term>YI-Axis</term> <description> <para>The following specifications must be met in order to be valid axis:</para> <para>Slant Y-Axis specification NC spec [8,0]</para> <term>Multitasking machine specification NC spec [3,0]</term> </description> </item> </list> </para> </remarks>
      <Figure> PARAMETER - USER PARAMETER - +/- VARIABLE LIMIT(P), +/- VARIABLE LIMIT(M) <para> <img src="Lathe.Parameter.UserParameter.jpg" /> </para> </Figure>
      <SubSystem> Please see <see href="SubSystemEnumNoteTable.htm">Sub System Note Table</see> for more information if applicable. <para>Valid sub Systems for this function (Y = Valid, N = Not valid)</para> <para> <list type="table"> <listheader> <term>NC_RUN </term> <term>NC_RUN_1 </term> <term>NC_RUN_2 </term> <term>NC_RUN_3 </term> <term>NC_PANEL </term> <term>NC_PANEL_1 </term> <term>NC_PANEL_2 </term> <term>NC_PANEL_3 </term> <term>NC_AL </term> <term>NC_AR </term> <term>NC_BL </term> <term>NC_BR </term> <term>NC_CL </term> <term>NC_CR </term> <term>NC_2AL </term> </listheader> <item> <term>Y (*23)</term> <term>Y (*11)</term> <term>Y (*24)</term> <term>Y (*24)</term> <term>Y (*23)</term> <term>Y (*11)</term> <term>Y (*24)</term> <term>Y (*24)</term> <term>Y		 </term> <term>Y (*13)</term> <term>Y (*25)</term> <term>Y (*9, *18)</term> <term>Y (*25)</term> <term>Y (*9, *18)</term> </item> </list> </para>  </SubSystem>
    </member>
    <member name="M:Okuma.CLDATAPI.DataAPI.CAxis.AddUserParameterVariableLimit(Okuma.CLDATAPI.Enumerations.UserParameterVariableLimitEnum,Okuma.CLDATAPI.Enumerations.AxisIndex5Enum,System.Double)">
      <summary>Set user parameter variable limit by adding the input value to the existing data at the specified axis index for current sub System. <para>Refer to Get Axis Name function in CAxis class for availability of axes.</para> </summary>
      <example> This example shows how to add user parameter variable limit at the specified axis index for current sub System. <para> <para> Dim dblValue as Double	</para> <para> Dim enAxisIndex as AxisIndex4Enum </para> <para> Dim enUserParameterVariableLimit as UserParameterVariableLimitEnum </para> <para> objVariables.AddUserParameterVariableLimit(enUserParameterVariableLimit, enAxisIndex, dblValue)	</para> </para> </example>
      <param name="enVariableLimit">Variable Limit. Values of parameter come from Okuma.CLDATAPI.Enumerations.UserVariableLimitEnum enumeration.</param>
      <param name="enAxisIndex">Axis index. Values of parameter come from Okuma.CLDATAPI.Enumerations.AxisIndex5Enum enumeration.</param>
      <param name="dblValue">Variable limit value to be added</param>
      <exception cref="System.ApplicationException">Thrown when function fails to perform the operation at current NC condition.</exception>
      <exception cref="System.NotSupportedException">Thrown when operation/input parameters are not supported for the current System.</exception>
      <DataUnit> Default unit is in mm.  Other unit can be set by calling SetDataUnit method.  Circular axis unit is in degree. </DataUnit>
      <remarks> <para> The following specifications for axes listed below must be met in order to function: <list type="table"> <listheader> <term>Axis</term> <description>Specification</description> </listheader> <item> <term>W-Axis</term> <description> <para> One of the following specifications must be met in order to be valid axis:</para> <para>Sub spindle specification (NC spec [4,1])</para> <para>LT specification (NC spec [4,0])</para> <para>Auto tow-along tailstock specification (NC spec [27,3])</para> <para>NC Tailstock specification NC spec [27,5]</para> <para>Programmable Tailstock specification NC spec [27,0]</para> </description> </item> <item> <term>YI-Axis</term> <description> <para>The following specifications must be met in order to be valid axis:</para> <para>Slant Y-Axis specification NC spec [8,0]</para> <term>Multitasking machine specification NC spec [3,0]</term> </description> </item> </list> </para> </remarks>
      <Figure> PARAMETER - USER PARAMETER - +/- VARIABLE LIMIT(P), +/- VARIABLE LIMIT(M) <para> <img src="Lathe.Parameter.UserParameter.jpg" /> </para> </Figure>
      <SubSystem> Please see <see href="SubSystemEnumNoteTable.htm">Sub System Note Table</see> for more information if applicable. <para>Valid sub Systems for this function (Y = Valid, N = Not valid)</para> <para> <list type="table"> <listheader> <term>NC_RUN </term> <term>NC_RUN_1 </term> <term>NC_RUN_2 </term> <term>NC_RUN_3 </term> <term>NC_PANEL </term> <term>NC_PANEL_1 </term> <term>NC_PANEL_2 </term> <term>NC_PANEL_3 </term> <term>NC_AL </term> <term>NC_AR </term> <term>NC_BL </term> <term>NC_BR </term> <term>NC_CL </term> <term>NC_CR </term> <term>NC_2AL </term> </listheader> <item> <term>Y (*23)</term> <term>Y (*11)</term> <term>Y (*24)</term> <term>Y (*24)</term> <term>Y (*23)</term> <term>Y (*11)</term> <term>Y (*24)</term> <term>Y (*24)</term> <term>Y		 </term> <term>Y (*13)</term> <term>Y (*25)</term> <term>Y (*9, *18)</term> <term>Y (*25)</term> <term>Y (*9, *18)</term> </item> </list> </para>  </SubSystem>
    </member>
    <member name="M:Okuma.CLDATAPI.DataAPI.CAxis.CalUserParameterVariableLimit(Okuma.CLDATAPI.Enumerations.UserParameterVariableLimitEnum,Okuma.CLDATAPI.Enumerations.AxisIndex5Enum,System.Double)">
      <summary>Determine the variable limit based on the calculation made on the input value and actual position at the specified axis index for current sub System. </summary>
      <example> This example shows how to calculate user parameter variable limit at the specified axis index for current sub System. <para> <para> Dim dblValue as Double	</para> <para> Dim enAxisIndex as AxisIndex5Enum </para> <para> Dim enUserParameterVariableLimit as UserParameterVariableLimitEnum </para> <para> objVariables.CalUserParameterVariableLimit(enUserParameterVariableLimit, enAxisIndex, dblValue)	</para> </para> </example>
      <param name="enVariableLimit">Variable Limit. Values of parameter come from Okuma.CLDATAPI.Enumerations.UserVariableLimitEnum enumeration.</param>
      <param name="enAxisIndex">Axis index. Values of parameter come from Okuma.CLDATAPI.Enumerations.AxisIndex5Enum enumeration.</param>
      <param name="dblValue">Input value to be calculated from</param>
      <exception cref="System.ApplicationException">Thrown when function fails to perform the operation at current NC condition.</exception>
      <exception cref="System.NotSupportedException">Thrown when operation/input parameters are not supported for the current System.</exception>
      <DataUnit> Default unit is in mm.  Other unit can be set by calling SetDataUnit method.  Circular axis unit is in degree. </DataUnit>
      <remarks> <para> The following specifications for axes listed below must be met in order to function: <list type="table"> <listheader> <term>Axis</term> <description>Specification</description> </listheader> <item> <term>W-Axis</term> <description> <para> One of the following specifications must be met in order to be valid axis:</para> <para>Sub spindle specification (NC spec [4,1])</para> <para>LT specification (NC spec [4,0])</para> <para>Auto tow-along tailstock specification (NC spec [27,3])</para> <para>NC Tailstock specification NC spec [27,5]</para> <para>Programmable Tailstock specification NC spec [27,0]</para> </description> </item> <item> <term>YI-Axis</term> <description> <para>The following specifications must be met in order to be valid axis:</para> <para>Slant Y-Axis specification NC spec [8,0]</para> <term>Multitasking machine specification NC spec [3,0]</term> </description> </item> </list> </para> </remarks>
      <Figure> PARAMETER - USER PARAMETER - +/- VARIABLE LIMIT(P), +/- VARIABLE LIMIT(M) <para> <img src="Lathe.Parameter.UserParameter.jpg" /> </para> </Figure>
      <SubSystem> Please see <see href="SubSystemEnumNoteTable.htm">Sub System Note Table</see> for more information if applicable. <para>Valid sub Systems for this function (Y = Valid, N = Not valid)</para> <para> <list type="table"> <listheader> <term>NC_RUN </term> <term>NC_RUN_1 </term> <term>NC_RUN_2 </term> <term>NC_RUN_3 </term> <term>NC_PANEL </term> <term>NC_PANEL_1 </term> <term>NC_PANEL_2 </term> <term>NC_PANEL_3 </term> <term>NC_AL </term> <term>NC_AR </term> <term>NC_BL </term> <term>NC_BR </term> <term>NC_CL </term> <term>NC_CR </term> <term>NC_2AL </term> </listheader> <item> <term>Y (*23)</term> <term>Y (*11)</term> <term>Y (*24)</term> <term>Y (*24)</term> <term>Y (*23)</term> <term>Y (*11)</term> <term>Y (*24)</term> <term>Y (*24)</term> <term>Y		 </term> <term>Y (*13)</term> <term>Y (*25)</term> <term>Y (*9, *18)</term> <term>Y (*25)</term> <term>Y (*9, *18)</term> </item> </list> </para>  </SubSystem>
    </member>
    <member name="M:Okuma.CLDATAPI.DataAPI.CAxis.GetUserParameterDroopData(Okuma.CLDATAPI.Enumerations.AxisIndex4Enum)">
      <summary>Gets user parameter droop data at the specified axis index for current sub System. <para>Refer to Get Axis Name function in CAxis class for availability of axes.</para> </summary>
      <example> This example shows how to get user parameter droop data at the specified axis index for current sub System. <para> <para> Dim dblValue as Double	</para> <para> Dim enAxisIndex as AxisIndex4Enum </para> <para> dblValue = objVariables.GetUserParameterDroopData(enAxisIndex)	</para> </para> </example>
      <param name="enAxisIndex">Axis index. Values of parameter come from Okuma.CLDATAPI.Enumerations.AxisIndex4Enum enumeration.</param>
      <exception cref="System.ApplicationException">Thrown when function fails to perform the operation at current NC condition.</exception>
      <exception cref="System.NotSupportedException">Thrown when operation/input parameters are not supported for the current System.</exception>
      <returns>A System.Double value</returns>
      <DataUnit> Default unit is in mm.  Other unit can be set by calling SetDataUnit method.  Circular axis unit is in degree. </DataUnit>
      <Figure> PARAMETER - USER PARAMETER - DROOP DATA <para> <img src="Lathe.Parameter.UserParameter.jpg" /> </para> </Figure>
      <remarks> The following specifications for axes listed below must be met in order to function: <list type="table"> <listheader> <term>Axis</term> <description>Specification</description> </listheader> <item> <term>W-Axis</term> <description> <para> One of the following specifications must be met in order to be valid axis:</para> <para>Sub spindle specification (NC spec [4,1])</para> <para>LT specification (NC spec [4,0])</para> <para>Auto tow-along tailstock specification (NC spec [27,3])</para> <para>NC Tailstock specification NC spec [27,5]</para> <para>Programmable Tailstock specification NC spec [27,0]</para> </description> </item> <item> <term>YI-Axis</term> <description> <para>The following specifications must be met in order to be valid axis:</para> <para>Slant Y-Axis specification NC spec [8,0]</para> <term>Multitasking machine specification NC spec [3,0]</term> </description> </item> <item> <term>BA-Axis</term> <description> <para> The following specifications must be met in order to be valid axis:</para> <para>In case of A Turret, NC spec [13,3] is active</para> </description> </item> </list> </remarks>
      <SubSystem> Please see <see href="SubSystemEnumNoteTable.htm">Sub System Note Table</see> for more information if applicable. <para>Valid sub Systems for this function (Y = Valid, N = Not valid)</para> <para> <list type="table"> <listheader> <term>NC_RUN </term> <term>NC_RUN_1 </term> <term>NC_RUN_2 </term> <term>NC_RUN_3 </term> <term>NC_PANEL </term> <term>NC_PANEL_1 </term> <term>NC_PANEL_2 </term> <term>NC_PANEL_3 </term> <term>NC_AL </term> <term>NC_AR </term> <term>NC_BL </term> <term>NC_BR </term> <term>NC_CL </term> <term>NC_CR </term> <term>NC_2AL </term> </listheader> <item> <term>Y (*26)</term> <term>Y (*11)</term> <term>Y (*27)</term> <term>Y (*27)</term> <term>Y (*26)</term> <term>Y (*11)</term> <term>Y (*27)</term> <term>Y (*27)</term> <term>Y		 </term> <term>Y (*13)</term> <term>Y (*28)</term> <term>Y (*9, *18)</term> <term>Y (*28)</term> <term>Y (*9, *18)</term> <term>Y		 </term> </item> </list> </para>  </SubSystem>
    </member>
    <member name="M:Okuma.CLDATAPI.DataAPI.CAxis.SetUserParameterDroopData(Okuma.CLDATAPI.Enumerations.AxisIndex4Enum,System.Double)">
      <summary>Set user parameter droop data at the specified axis index for current sub System. <para>Refer to Get Axis Name function in CAxis class for availability of axes.</para> </summary>
      <example> This example shows how to set user parameter droop data at the specified axis index for current sub System. <para> <para> Dim dblValue as Double	</para> <para> Dim enAxisIndex as AxisIndex4Enum </para> <para> objVariables.SetUserParameterDroopData(enAxisIndex, dblValue)	</para> </para> </example>
      <param name="enAxisIndex">Axis index. Values of parameter come from Okuma.CLDATAPI.Enumerations.AxisIndex4Enum enumeration.</param>
      <param name="dblValue">Droop data value to be set</param>
      <exception cref="System.ApplicationException">Thrown when function fails to perform the operation at current NC condition.</exception>
      <exception cref="System.NotSupportedException">Thrown when operation/input parameters are not supported for the current System.</exception>
      <DataUnit> Default unit is in mm.  Other unit can be set by calling SetDataUnit method.  Circular axis unit is in degree. </DataUnit>
      <Figure> PARAMETER - USER PARAMETER - DROOP DATA <para> <img src="Lathe.Parameter.UserParameter.jpg" /> </para> </Figure>
      <remarks> The following specifications for axes listed below must be met in order to function: <list type="table"> <listheader> <term>Axis</term> <description>Specification</description> </listheader> <item> <term>W-Axis</term> <description> <para> One of the following specifications must be met in order to be valid axis:</para> <para>Sub spindle specification (NC spec [4,1])</para> <para>LT specification (NC spec [4,0])</para> <para>Auto tow-along tailstock specification (NC spec [27,3])</para> <para>NC Tailstock specification NC spec [27,5]</para> <para>Programmable Tailstock specification NC spec [27,0]</para> </description> </item> <item> <term>YI-Axis</term> <description> <para>The following specifications must be met in order to be valid axis:</para> <para>Slant Y-Axis specification NC spec [8,0]</para> <term>Multitasking machine specification NC spec [3,0]</term> </description> </item> <item> <term>BA-Axis</term> <description> <para> The following specifications must be met in order to be valid axis:</para> <para>In case of A Turret, NC spec [13,3] is active</para> </description> </item> </list> </remarks>
      <SubSystem> Please see <see href="SubSystemEnumNoteTable.htm">Sub System Note Table</see> for more information if applicable. <para>Valid sub Systems for this function (Y = Valid, N = Not valid)</para> <para> <list type="table"> <listheader> <term>NC_RUN </term> <term>NC_RUN_1 </term> <term>NC_RUN_2 </term> <term>NC_RUN_3 </term> <term>NC_PANEL </term> <term>NC_PANEL_1 </term> <term>NC_PANEL_2 </term> <term>NC_PANEL_3 </term> <term>NC_AL </term> <term>NC_AR </term> <term>NC_BL </term> <term>NC_BR </term> <term>NC_CL </term> <term>NC_CR </term> <term>NC_2AL </term> </listheader> <item> <term>Y (*26)</term> <term>Y (*11)</term> <term>Y (*27)</term> <term>Y (*27)</term> <term>Y (*26)</term> <term>Y (*11)</term> <term>Y (*27)</term> <term>Y (*27)</term> <term>Y		 </term> <term>Y (*13)</term> <term>Y (*28)</term> <term>Y (*9, *18)</term> <term>Y (*28)</term> <term>Y (*9, *18)</term> <term>Y		 </term> </item> </list> </para>  </SubSystem>
    </member>
    <member name="M:Okuma.CLDATAPI.DataAPI.CAxis.AddUserParameterDroopData(Okuma.CLDATAPI.Enumerations.AxisIndex4Enum,System.Double)">
      <summary> Set user parameter droop data by adding the input value to the existing data at the specified axis index for current sub System. <para>Refer to Get Axis Name function in CAxis class for availability of axes.</para> </summary>
      <example> This example shows how to add user parameter droop data at the specified axis index for current sub System. <para> <para> Dim dblValue as Double	</para> <para> Dim enAxisIndex as AxisIndex4Enum </para> <para> objVariables.AddUserParameterDroopData(enAxisIndex, dblValue)	</para> </para> </example>
      <param name="enAxisIndex">Axis index. Values of parameter come from Okuma.CLDATAPI.Enumerations.AxisIndex4Enum enumeration.</param>
      <param name="dblValue">Droop data value to be added</param>
      <exception cref="System.ApplicationException">Thrown when function fails to perform the operation at current NC condition.</exception>
      <exception cref="System.NotSupportedException">Thrown when operation/input parameters are not supported for the current System.</exception>
      <DataUnit> Default unit is in mm.  Other unit can be set by calling SetDataUnit method.  Circular axis unit is in degree. </DataUnit>
      <Figure> PARAMETER - USER PARAMETER - DROOP DATA <para> <img src="Lathe.Parameter.UserParameter.jpg" /> </para> </Figure>
      <remarks> The following specifications for axes listed below must be met in order to function: <list type="table"> <listheader> <term>Axis</term> <description>Specification</description> </listheader> <item> <term>W-Axis</term> <description> <para> One of the following specifications must be met in order to be valid axis:</para> <para>Sub spindle specification NC spec [4,1]</para> <para>LT specification (NC spec [4,0])</para> <para>Auto Tow-Along Tailstock specification NC spec [27,3]</para> <para>NC Tailstock</para> </description> </item> <item> <term>YI-Axis</term> <description> <para>The following specifications must be met in order to be valid axis:</para> <para>Slant Y-Axis specification NC spec [8,0]</para> <term>Multitasking machine specification NC spec [3,0]</term> </description> </item> <item> <term>BA-Axis</term> <description> <para> The following specifications must be met in order to be valid axis:</para> <para>In case of A Turret, NC spec [13,3] is active</para> </description> </item> </list> </remarks>
      <SubSystem> Please see <see href="SubSystemEnumNoteTable.htm">Sub System Note Table</see> for more information if applicable. <para>Valid sub Systems for this function (Y = Valid, N = Not valid)</para> <para> <list type="table"> <listheader> <term>NC_RUN </term> <term>NC_RUN_1 </term> <term>NC_RUN_2 </term> <term>NC_RUN_3 </term> <term>NC_PANEL </term> <term>NC_PANEL_1 </term> <term>NC_PANEL_2 </term> <term>NC_PANEL_3 </term> <term>NC_AL </term> <term>NC_AR </term> <term>NC_BL </term> <term>NC_BR </term> <term>NC_CL </term> <term>NC_CR </term> <term>NC_2AL </term> </listheader> <item> <term>Y (*26)</term> <term>Y (*11)</term> <term>Y (*27)</term> <term>Y (*27)</term> <term>Y (*26)</term> <term>Y (*11)</term> <term>Y (*27)</term> <term>Y (*27)</term> <term>Y		 </term> <term>Y (*13)</term> <term>Y (*28)</term> <term>Y (*9, *18)</term> <term>Y (*28)</term> <term>Y (*9, *18)</term> <term>Y		 </term> </item> </list> </para>  </SubSystem>
    </member>
    <member name="M:Okuma.CLDATAPI.DataAPI.CAxis.GetActualPositionCommandCoord(Okuma.CLDATAPI.Enumerations.AxisIndex2Enum)">
      <summary> Gets actual position in command (RCON) coordinate at the specified axis index for current sub System. <para>Refer to Get Axis Name function in CAxis class for availability of axes.</para> <para>Note: Axis position on NC HMI might show an over flow values but function returns numeric value only.</para> </summary>
      <example> This example shows how to GetActualPositionCommandCoord. <para>	Dim dblValue As Double</para> <para>	dblValue = objAxis.GetActualPositionCommandCoord(curAxisEnum2)	</para> </example>
      <param name="enAxisIndex">Axis index. Values of parameter come from the Okuma.CLDATAPI.Enumerations.AxisIndex2Enum enumeration.</param>
      <returns>A System.Double that represents the actual position in command coordinate.</returns>
      <DataUnit> Default unit is in mm.  Other unit can be set by calling SetDataUnit method.  Circular axis unit is in degree. </DataUnit>
      <exception cref="System.ApplicationException">Thrown when function fails to perform the operation at current NC condition.</exception>
      <exception cref="System.NotSupportedException">Thrown when operation/input parameters are not supported for the current System.</exception>
      <remarks> <para> The following specifications for axes listed below must be met in order to function: <list type="table"> <listheader> <term>Axis</term> <description>Specification</description> </listheader> <item> <term>W-Axis</term> <description> <para> One of the following specifications must be met in order to be valid axis:</para> <para>Sub spindle specification NC spec [4,1]</para> <para>LT specification (NC spec [4,0])</para> <para>Auto Tow-Along Tailstock specification NC spec [27,3]</para> <para>NC Tailstock</para> </description> </item> </list> </para> </remarks>
      <Figure>ACTUAL POSITION - RCON - Actual position in command coordinate <para> <img src="Axis.ActualPosition.EncoderCoordinate.jpg" /> </para> </Figure>
      <SubSystem> Please see <see href="SubSystemEnumNoteTable.htm">Sub System Note Table</see> for more information if applicable. <para>Valid sub Systems for this function (Y = Valid, N = Not valid)</para> <para> <list type="table"> <listheader> <term>NC_RUN </term> <term>NC_RUN_1 </term> <term>NC_RUN_2 </term> <term>NC_RUN_3 </term> <term>NC_PANEL </term> <term>NC_PANEL_1 </term> <term>NC_PANEL_2 </term> <term>NC_PANEL_3 </term> <term>NC_AL </term> <term>NC_AR </term> <term>NC_BL </term> <term>NC_BR </term> <term>NC_CL </term> <term>NC_CR </term> <term>NC_2AL </term> </listheader> <item> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> </item> </list> </para>  </SubSystem>
    </member>
    <member name="T:Okuma.CLDATAPI.DataAPI.CBallScrew">
      <summary> Class provides functions to compensate for pitch error in ball screws to improve positioning accuracy.  </summary>
    </member>
    <member name="M:Okuma.CLDATAPI.DataAPI.CBallScrew.#ctor(Okuma.CLDATAPI.Enumerations.SubSystemEnum)">
      <summary> Create an instance of this class given sub system.  By default, class is created with sub system = NC_AL. </summary>
      <param name="enSubSystem">Sub system</param>
    </member>
    <member name="M:Okuma.CLDATAPI.DataAPI.CBallScrew.SetSubSystem(Okuma.CLDATAPI.Enumerations.SubSystemEnum)">
      <summary> Set Current SubSystem for this class interface </summary>
      <example>This example shows how to set SubSystem. <para>	objBallScrew.SetSubSystem(cmb_BallScrew_SubSystem.SelectedItem)  </para> </example>
      <param name="enSubSystem">Sub System. Value for this Parameter come from Okuma.CLDATAPI.Enumerations.SubSystemEnum</param>
      <exception cref="System.ApplicationException">Thrown when function fails to perform the operation at current NC condition.</exception>
      <exception cref="System.NotSupportedException">Thrown when operation/input parameters are not supported for the current system or it fails to write data to system.</exception>
    </member>
    <member name="M:Okuma.CLDATAPI.DataAPI.CBallScrew.SetDataUnit(Okuma.CLDATAPI.Enumerations.DataUnitEnum)">
      <summary> Sets current data unit for this class instance. </summary>
      <example>This example shows how to set DataUnit. <para>	objBallScrew.SetDataUnit(cmb_BallScrew_DataUnit.SelectedItem)	</para> </example>
      <param name="enDataUnit">Data Unit to be set</param>
      <exception cref="System.NotSupportedException">Thrown when operation/input parameters are not supported for the current system.</exception>
      <remarks> If applicable, this setting is applied to data in this class instance only, not for NC Data Unit. For example: If NC Data unit is set to mm, and the data unit for this class instance is in inch, then NC data will be converted to inch and vice versa. </remarks>
      <Figure> OPTIONAL PARAMETER - UNIT - LENGTH UNIT SYSTEM mm / inch.  This is for NC Data only. <para> <img src="ParametersScreen.DataUnit.jpg" /> </para>  </Figure>
    </member>
    <member name="M:Okuma.CLDATAPI.DataAPI.CBallScrew.GetInterval(Okuma.CLDATAPI.Enumerations.AxisIndex3Enum)">
      <summary> Gets the compensation interval of pitch error compensation at the specified axis index for current sub system. <para>Refer to Get Axis Name function in CAxis class for availability of axes.</para> </summary>
      <example>  This example shows how to GetInterval. <para>	Dim objBallScrew As DataAPI.CBallScrew	</para> <para>	Me.bsInterval.Text = objBallScrew.GetInterval(Me.bsIntervalCombo.SelectedValue)	</para> </example>
      <param name="enAxisIndex">Axis index. Values of parameter come from the Okuma.CLDATAPI.Enumerations.AxisIndex3Enum enumeration.</param>
      <returns>A System.Double value</returns>
      <DataUnit> </DataUnit>
      <exception cref="System.ApplicationException">Thrown when function fails to perform the operation at current NC condition.</exception>
      <exception cref="System.NotSupportedException">Thrown when operation/input parameters are not supported for the current system.</exception>
      <remarks> <para> The following specifications must be met in order to function: <list type="table"> <listheader> <term>Specification</term> <description>Valid/Invalid</description> </listheader> <item> <term>Pitch Error Compensation specification NC spec [22,0] or Inductosyn pitch compensation NC spec [22,1]</term> <description>Valid</description> </item> <item> <term>Without pitch error compensation</term> <description>Invalid</description> </item> </list> </para> <para> The following specifications for axes listed below must be met in order to function: <list type="table"> <listheader> <term>Axis</term> <description>Specification</description> </listheader> <item> <term>W-Axis</term> <description> <para>The following specifications must be met in order to be valid axis:</para> <para>4 Axis 2 Saddle specification NC spec [2,0] is effective</para> <para>LT Mechanism specification NC spec [4,0] is effective</para> <para>Sub spindle specification NC spec [4,1] is effective</para> <para>B-axis control 1/1000 Degree pitch compensation specification NC spec [8,5] is not effective</para> </description> </item> </list> </para> </remarks>
      <Figure>PITCH ERROR COMPENSATION - PITCH - Compensation interval for different axes. <para> <img src="PEC.Setting.jpg" /> </para> </Figure>
      <SubSystem> Please see <see href="SubSystemNoteTable.htm">Sub System Note Table</see> for more information if applicable. <para>Valid sub systems for this function (Y = Valid, N = Not valid)</para> <para> <list type="table"> <listheader> <term>NC_RUN </term> <term>NC_RUN_1 </term> <term>NC_RUN_2 </term> <term>NC_RUN_3 </term> <term>NC_PANEL </term> <term>NC_PANEL_1 </term> <term>NC_PANEL_2 </term> <term>NC_PANEL_3 </term> <term>NC_AL </term> <term>NC_AR </term> <term>NC_BL </term> <term>NC_BR </term> <term>NC_CL </term> <term>NC_CR </term> <term>NC_2AL </term> </listheader> <item> <term>Y (*8)</term> <term>Y</term> <term>Y (*9)</term> <term>Y (*9)</term> <term>Y (*8)</term> <term>Y</term> <term>Y (*9)</term> <term>Y (*9)</term> <term>Y</term> <term>Y</term> <term>Y (*9)</term> <term>Y (*9)</term> <term>Y (*9)</term> <term>Y (*9)</term> <term>Y</term> </item> </list> </para>  </SubSystem>
    </member>
    <member name="M:Okuma.CLDATAPI.DataAPI.CBallScrew.SetInterval(Okuma.CLDATAPI.Enumerations.AxisIndex3Enum,System.Double)">
      <summary> Sets the compensation interval of pitch error compensation at the specified axis index for current sub system. <para>Refer to Get Axis Name function in CAxis class for availability of axes.</para> </summary>
      <example>  This example shows how to set compensation interval of pitch error compensation <para>	Dim objBallScrew As DataAPI.CBallScrew	</para> <para>	objBallScrew.SetInterval(Me.bsIntervalCombo.SelectedValue, CDbl(Me.bsIntervalUpdate.Text))	</para> </example>
      <param name="enAxisIndex">Axis index. Values of parameter come from the Okuma.CLDATAPI.Enumerations.AxisIndex3Enum enumeration.</param>
      <param name="dblValue">Compensation interval to be set</param>
      <returns>None</returns>
      <DataUnit> Default unit is in mm.  Other unit can be set by calling SetDataUnit method.  Circular axis unit is in degree. </DataUnit>
      <exception cref="System.ApplicationException">Thrown when function fails to perform the operation at current NC condition.</exception>
      <exception cref="System.NotSupportedException">Thrown when operation/input parameters are not supported for the current system.</exception>
      <remarks> <para> The following specifications must be met in order to function: <list type="table"> <listheader> <term>Specification</term> <description>Valid/Invalid</description> </listheader> <item> <term>Pitch Error Compensation specification NC spec [22,0] or Inductosyn pitch compensation NC spec [22,1]</term> <description>Valid</description> </item> <item> <term>Without pitch error compensation  </term> <description>Invalid</description> </item> </list> </para> <para> The following specifications for axes listed below must be met in order to function: <list type="table"> <listheader> <term>Axis</term> <description>Specification</description> </listheader> <item> <term>W-Axis</term> <description> <para>The following specifications must be met in order to be valid axis:</para> <para>4 Axis 2 Saddle specification NC spec [2,0] is effective</para> <para>LT Mechanism specification NC spec [4,0] is effective</para> <para>Sub spindle specification NC spec [4,1] is effective</para> <para>B-axis control 1/1000 Degree pitch compensation specification NC spec [8,5] is not effective</para> </description> </item> </list> </para> </remarks>
      <Figure>PITCH ERROR COMPENSATION - PITCH - Compensation interval for different axes. <para> <img src="PEC.Setting.jpg" /> </para> </Figure>
      <SubSystem> Please see <see href="SubSystemNoteTable.htm">Sub System Note Table</see> for more information if applicable. <para>Valid sub systems for this function (Y = Valid, N = Not valid)</para> <para> <list type="table"> <listheader> <term>NC_RUN </term> <term>NC_RUN_1 </term> <term>NC_RUN_2 </term> <term>NC_RUN_3 </term> <term>NC_PANEL </term> <term>NC_PANEL_1 </term> <term>NC_PANEL_2 </term> <term>NC_PANEL_3 </term> <term>NC_AL </term> <term>NC_AR </term> <term>NC_BL </term> <term>NC_BR </term> <term>NC_CL </term> <term>NC_CR </term> <term>NC_2AL </term> </listheader> <item> <term>Y (*8)</term> <term>Y</term> <term>Y (*9)</term> <term>Y (*9)</term> <term>Y (*8)</term> <term>Y</term> <term>Y (*9)</term> <term>Y (*9)</term> <term>Y</term> <term>Y</term> <term>Y (*9)</term> <term>Y (*9)</term> <term>Y (*9)</term> <term>Y (*9)</term> <term>Y</term> </item> </list> </para>  </SubSystem>
    </member>
    <member name="M:Okuma.CLDATAPI.DataAPI.CBallScrew.AddInterval(Okuma.CLDATAPI.Enumerations.AxisIndex3Enum,System.Double)">
      <summary> Set the pitch error compensation interval data by adding the input value to the existing data at the specified axis index and current sub system. <para>Refer to Get Axis Name function in CAxis class for availability of axes.</para> </summary>
      <example>This example shows how to add Interval. <para>	objBallScrew.AddInterval(Me.bsIntervalCombo.SelectedValue, CInt(Me.bsIntervalUpdate.Text))	</para> </example>
      <param name="enAxisIndex">Axis index.  Values of parameter come from the Okuma.CLDATAPI.Enumerations.AxisIndex3Enum enumeration.</param>
      <param name="dblValue">Compensation interval to be added to</param>
      <returns>None</returns>
      <DataUnit> Default unit is in mm.  Other unit can be set by calling SetDataUnit method.  Circular axis unit is in degree. </DataUnit>
      <exception cref="System.ApplicationException">Thrown when function fails to perform the operation at current NC condition.</exception>
      <exception cref="System.NotSupportedException">Thrown when operation/input parameters are not supported for the current system.</exception>
      <remarks> <para> The following specifications must be met in order to function: <list type="table"> <listheader> <term>Specification</term> <description>Valid/Invalid</description> </listheader> <item> <term>Pitch Error Compensation specification NC spec [22,0] or Inductosyn pitch compensation NC spec [22,1]</term> <description>Valid</description> </item> <item> <term>Without pitch error compensation  </term> <description>Invalid</description> </item> </list> </para> <para> The following specifications for axes listed below must be met in order to function: <list type="table"> <listheader> <term>Axis</term> <description>Specification</description> </listheader> <item> <term>W-Axis</term> <description> <para>The following specifications must be met in order to be valid axis:</para> <para>4 Axis 2 Saddle specification NC spec [2,0] is effective</para> <para>LT Mechanism specification NC spec [4,0] is effective</para> <para>Sub spindle specification NC spec [4,1] is effective</para> <para>B-axis control 1/1000 Degree pitch compensation specification NC spec [8,5] is not effective</para> </description> </item> </list> </para> </remarks>
      <Figure>PITCH ERROR COMPENSATION - PITCH - Compensation interval for different axes. <para> <img src="PEC.Setting.jpg" /> </para> </Figure>
      <SubSystem> Please see <see href="SubSystemNoteTable.htm">Sub System Note Table</see> for more information if applicable. <para>Valid sub systems for this function (Y = Valid, N = Not valid)</para> <para> <list type="table"> <listheader> <term>NC_RUN </term> <term>NC_RUN_1 </term> <term>NC_RUN_2 </term> <term>NC_RUN_3 </term> <term>NC_PANEL </term> <term>NC_PANEL_1 </term> <term>NC_PANEL_2 </term> <term>NC_PANEL_3 </term> <term>NC_AL </term> <term>NC_AR </term> <term>NC_BL </term> <term>NC_BR </term> <term>NC_CL </term> <term>NC_CR </term> <term>NC_2AL </term> </listheader> <item> <term>Y (*8)</term> <term>Y</term> <term>Y (*9)</term> <term>Y (*9)</term> <term>Y (*8)</term> <term>Y</term> <term>Y (*9)</term> <term>Y (*9)</term> <term>Y</term> <term>Y</term> <term>Y (*9)</term> <term>Y (*9)</term> <term>Y (*9)</term> <term>Y (*9)</term> <term>Y</term> </item> </list> </para>  </SubSystem>
    </member>
    <member name="M:Okuma.CLDATAPI.DataAPI.CBallScrew.GetDataPoint(System.Int32,Okuma.CLDATAPI.Enumerations.AxisIndex2Enum)">
      <summary> Gets the pitch error compensation data at the specified point, and the axis index for current sub system. <para>Refer to Get Axis Name function in CAxis class for availability of axes.</para> </summary>
      <example>This example shows how to GetDataPoint. <para>	Me.bsDataPoint.Text = objBallScrew.GetDataPoint(CInt(Me.bsPecPoint.Text), curAxisEnum)	</para> </example>
      <param name="intPECPoint">Pitch Error Compensation data point</param>
      <param name="enAxisIndex">Axis index. Values of parameter come from Okuma.CLDATAPI.Enumerations.AxisIndex2Enum enumeration.</param>
      <returns>A System.Double that represents PEC data.</returns>
      <exception cref="System.ApplicationException">Thrown when function fails to perform the operation at current NC condition.</exception>
      <exception cref="System.NotSupportedException">Thrown when operation/input parameters are not supported for the current system.</exception>
      <DataUnit> Default unit is in mm.  Other unit can be set by calling SetDataUnit method.  Circular axis unit is in degree. </DataUnit>
      <remarks> <para> The following specifications must be met in order to function: <list type="table"> <listheader> <term>Specification</term> <description>Valid/Invalid</description> </listheader> <item> <term>Pitch Error Compensation specification or Inductosyn pitch compensation</term> <description>Valid</description> </item> <item> <term>Without pitch error compensation  </term> <description>Invalid</description> </item> </list> </para> <para> The following specifications for axes listed below must be met in order to function: <list type="table"> <listheader> <term>Axis</term> <description>Specification</description> </listheader> <item> <term>C-Axis</term> <description> <para> The following specifications must be met in order to be valid axis:</para> <para>Compound Processing specification is effective</para> <para>C-Axis Pitch Error Compensation specification is effective</para> </description> </item> <item> <term>W-Axis</term> <description> <para>The following specifications must be met in order to be valid axis:</para> <para>4 Axis 2 Saddle specification is effective</para> <para>LT Mechanism specification is effective</para> <para>Sub spindle specification is effective</para> <para>B-axis control 1/1000 Degree pitch compensation specification is not effective</para> </description> </item> </list> </para> </remarks>
      <Figure> PICTH ERROR COMPENSATION - PEC Data points for X, Y, and YS axis. <para> <img src="PEC.Data.jpg" /> </para> </Figure>
      <SubSystem> Please see <see href="SubSystemNoteTable.htm">Sub System Note Table</see> for more information if applicable. <para>Valid sub systems for this function (Y = Valid, N = Not valid)</para> <para> <list type="table"> <listheader> <term>NC_RUN </term> <term>NC_RUN_1 </term> <term>NC_RUN_2 </term> <term>NC_RUN_3 </term> <term>NC_PANEL </term> <term>NC_PANEL_1 </term> <term>NC_PANEL_2 </term> <term>NC_PANEL_3 </term> <term>NC_AL </term> <term>NC_AR </term> <term>NC_BL </term> <term>NC_BR </term> <term>NC_CL </term> <term>NC_CR </term> <term>NC_2AL </term> </listheader> <item> <term>Y (*6)</term> <term>Y</term> <term>Y (*7)</term> <term>Y (*7)</term> <term>Y (*6)</term> <term>Y</term> <term>Y (*7)</term> <term>Y (*7)</term> <term>Y</term> <term>Y</term> <term>Y (*7)</term> <term>Y (*7)</term> <term>Y (*7)</term> <term>Y (*7)</term> <term>Y</term> </item> </list> </para>  </SubSystem>
    </member>
    <member name="M:Okuma.CLDATAPI.DataAPI.CBallScrew.SetDataPoint(System.Int32,Okuma.CLDATAPI.Enumerations.AxisIndex2Enum,System.Double)">
      <summary> Sets the pitch error compensation data at the specified point, and the axis index for current sub system. <para>Refer to Get Axis Name function in CAxis class for availability of axes.</para> </summary>
      <example> This example shows how to set DataPoint. <para>	objBallScrew.SetDataPoint(CInt(Me.bsPecPoint.Text), curAxisEnum, CInt(Me.bsDataPointUpdate.Text))	</para> </example>
      <param name="intPECPoint">Pitch Error Compensation data point</param>
      <param name="enAxisIndex">Axis index. Values of parameter come from Okuma.CLDATAPI.Enumerations.AxisIndex2Enum enumeration.</param>
      <param name="dblValue">Pitch Error Compensation data point to be set</param>
      <exception cref="System.ApplicationException">Thrown when function fails to perform the operation at current NC condition.</exception>
      <exception cref="System.NotSupportedException">Thrown when operation/input parameters are not supported for the current system.</exception>
      <returns>None</returns>
      <DataUnit> Default unit is in mm.  Other unit can be set by calling SetDataUnit method.  Circular axis unit is in degree. </DataUnit>
      <remarks> <para> The following specifications must be met in order to function: <list type="table"> <listheader> <term>Specification</term> <description>Valid/Invalid</description> </listheader> <item> <term>Pitch Error Compensation specification or Inductosyn pitch compensation</term> <description>Valid</description> </item> <item> <term>Without pitch error compensation  </term> <description>Invalid</description> </item> </list> </para> <para> The following specifications for axes listed below must be met in order to function: <list type="table"> <listheader> <term>Axis</term> <description>Specification</description> </listheader> <item> <term>C-Axis</term> <description> <para> The following specifications must be met in order to be valid axis:</para> <para>Compound Processing specification is effective</para> <para>C-Axis Pitch Error Compensation specification is effective</para> </description> </item> <item> <term>W-Axis</term> <description> <para>The following specifications must be met in order to be valid axis:</para> <para>4 Axis 2 Saddle specification is effective</para> <para>LT Mechanism specification is effective</para> <para>Sub spindle specification is effective</para> <para>B-axis control 1/1000 Degree pitch compensation specification is not effective</para> </description> </item> </list> </para> </remarks>
      <Figure> PICTH ERROR COMPENSATION - PEC Data points for X, Y, and YS axis. <para> <img src="PEC.Data.jpg" /> </para> </Figure>
      <SubSystem> Please see <see href="SubSystemNoteTable.htm">Sub System Note Table</see> for more information if applicable. <para>Valid sub systems for this function (Y = Valid, N = Not valid)</para> <para> <list type="table"> <listheader> <term>NC_RUN </term> <term>NC_RUN_1 </term> <term>NC_RUN_2 </term> <term>NC_RUN_3 </term> <term>NC_PANEL </term> <term>NC_PANEL_1 </term> <term>NC_PANEL_2 </term> <term>NC_PANEL_3 </term> <term>NC_AL </term> <term>NC_AR </term> <term>NC_BL </term> <term>NC_BR </term> <term>NC_CL </term> <term>NC_CR </term> <term>NC_2AL </term> </listheader> <item> <term>Y (*6)</term> <term>Y</term> <term>Y (*7)</term> <term>Y (*7)</term> <term>Y (*6)</term> <term>Y</term> <term>Y (*7)</term> <term>Y (*7)</term> <term>Y</term> <term>Y</term> <term>Y (*7)</term> <term>Y (*7)</term> <term>Y (*7)</term> <term>Y (*7)</term> <term>Y</term> </item> </list> </para>  </SubSystem>
    </member>
    <member name="M:Okuma.CLDATAPI.DataAPI.CBallScrew.AddDataPoint(System.Int32,Okuma.CLDATAPI.Enumerations.AxisIndex2Enum,System.Double)">
      <summary> Sets the pitch error compensation data by adding the input value to the existing data at the specified point, and the axis index for current sub system. <para>Refer to Get Axis Name function in CAxis class for availability of axes.</para> </summary>
      <example>This example shows how to AddDataPoint. <para>	objBallScrew.AddDataPoint(CInt(Me.bsPecPoint.Text), Me.bsDataPointCombo.SelectedValue, CInt(Me.bsDataPointUpdate.Text))	</para> </example>
      <param name="intPECPoint">Pitch Error Compensation data point</param>
      <param name="enAxisIndex">Axis index. Values of parameter come from Okuma.CLDATAPI.Enumerations.AxisIndex2Enum enumeration.</param>
      <param name="dblValue">Pitch Error Compensation data point to be added to</param>
      <exception cref="System.ApplicationException">Thrown when function fails to perform the operation at current NC condition.</exception>
      <exception cref="System.NotSupportedException">Thrown when operation/input parameters are not supported for the current system.</exception>
      <returns>None</returns>
      <DataUnit> Default unit is in mm.  Other unit can be set by calling SetDataUnit method.  Circular axis unit is in degree. </DataUnit>
      <remarks> <para> The following specifications must be met in order to function: <list type="table"> <listheader> <term>Specification</term> <description>Valid/Invalid</description> </listheader> <item> <term>Pitch Error Compensation specification or Inductosyn pitch compensation</term> <description>Valid</description> </item> <item> <term>Without pitch error compensation  </term> <description>Invalid</description> </item> </list> </para> <para> The following specifications for axes listed below must be met in order to function: <list type="table"> <listheader> <term>Axis</term> <description>Specification</description> </listheader> <item> <term>C-Axis</term> <description> <para> The following specifications must be met in order to be valid axis:</para> <para>Compound Processing specification is effective</para> <para>C-Axis Pitch Error Compensation specification is effective</para> </description> </item> <item> <term>W-Axis</term> <description> <para>The following specifications must be met in order to be valid axis:</para> <para>4 Axis 2 Saddle specification is effective</para> <para>LT Mechanism specification is effective</para> <para>Sub spindle specification is effective</para> <para>B-axis control 1/1000 Degree pitch compensation specification is not effective</para> </description> </item> </list> </para> </remarks>
      <Figure> PICTH ERROR COMPENSATION - PEC Data points for X, Y, and YS axis. <para> <img src="PEC.Data.jpg" /> </para> </Figure>
      <SubSystem> Please see <see href="SubSystemNoteTable.htm">Sub System Note Table</see> for more information if applicable. <para>Valid sub systems for this function (Y = Valid, N = Not valid)</para> <para> <list type="table"> <listheader> <term>NC_RUN </term> <term>NC_RUN_1 </term> <term>NC_RUN_2 </term> <term>NC_RUN_3 </term> <term>NC_PANEL </term> <term>NC_PANEL_1 </term> <term>NC_PANEL_2 </term> <term>NC_PANEL_3 </term> <term>NC_AL </term> <term>NC_AR </term> <term>NC_BL </term> <term>NC_BR </term> <term>NC_CL </term> <term>NC_CR </term> <term>NC_2AL </term> </listheader> <item> <term>Y (*6)</term> <term>Y</term> <term>Y (*7)</term> <term>Y (*7)</term> <term>Y (*6)</term> <term>Y</term> <term>Y (*7)</term> <term>Y (*7)</term> <term>Y</term> <term>Y</term> <term>Y (*7)</term> <term>Y (*7)</term> <term>Y (*7)</term> <term>Y (*7)</term> <term>Y</term> </item> </list> </para>  </SubSystem>
    </member>
    <member name="M:Okuma.CLDATAPI.DataAPI.CBallScrew.GetBAxisInterval">
      <summary> Gets the pitch error compensation interval at the specified point of B-Axis for current sub system. </summary>
      <example> This example shows how to get B-Axis interval. <para>		Me.bsBAxisInterval.Text = objBallScrew.GetBAxisInterval()	</para> </example>
      <returns>A System.Double that represents PEC data.</returns>
      <exception cref="System.ApplicationException">Thrown when function fails to perform the operation at current NC condition.</exception>
      <exception cref="System.NotSupportedException">Thrown when operation/input parameters are not supported for the current system.</exception>
      <DataUnit> Degree </DataUnit>
      <remarks> <para> The following specifications must be met in order to function: <list type="table"> <listheader> <term>Specification</term> <description>Valid/Invalid</description> </listheader> <item> <term>Pitch Error Compensation specification NC spec [22,0] or Inductosyn pitch compensation NC spec [22,1]</term> <description>Valid</description> </item> <item> <term>B Axial control 1/1000 Degree pitch specification NC spec [8,5]</term> <description>Valid</description> </item> <item> <term>Without pitch error compensation  </term> <description>Invalid</description> </item> </list> </para> </remarks>
      <Figure> PITCH ERROR COMPENSATION - PITCH - Compensation interval for different axes. <para> <img src="PEC.Setting.jpg" /> </para> </Figure>
      <SubSystem> Please see <see href="SubSystemNoteTable.htm">Sub System Note Table</see> for more information if applicable. <para>Valid sub systems for this function (Y = Valid, N = Not valid)</para> <para> <list type="table"> <listheader> <term>NC_RUN </term> <term>NC_RUN_1 </term> <term>NC_RUN_2 </term> <term>NC_RUN_3 </term> <term>NC_PANEL </term> <term>NC_PANEL_1 </term> <term>NC_PANEL_2 </term> <term>NC_PANEL_3 </term> <term>NC_AL </term> <term>NC_AR </term> <term>NC_BL </term> <term>NC_BR </term> <term>NC_CL </term> <term>NC_CR </term> <term>NC_2AL </term> </listheader> <item> <term>Y (*5)</term> <term>Y</term> <term>N</term> <term>N</term> <term>Y (*5)</term> <term>Y</term> <term>N</term> <term>N</term> <term>Y</term> <term>Y</term> <term>N</term> <term>N</term> <term>N</term> <term>N</term> <term>N</term> </item> </list> </para>  </SubSystem>
    </member>
    <member name="M:Okuma.CLDATAPI.DataAPI.CBallScrew.SetBAxisInterval(System.Double)">
      <summary> Sets the compensation interval of pitch error compensation at the specified B-axis index for current sub system. </summary>
      <example>This example shows how to set BAxisInterval. <para>	objBallScrew.SetBAxisInterval(CDbl(Me.bsBAxisIntervalUpdate.Text))	</para> </example>
      <param name="dblValue">B-Axis interval value to be set</param>
      <exception cref="System.ApplicationException">Thrown when function fails to perform the operation at current NC condition.</exception>
      <exception cref="System.NotSupportedException">Thrown when operation/input parameters are not supported for the current system.</exception>
      <returns>None</returns>
      <DataUnit> Degree </DataUnit>
      <remarks> <para> The following specifications must be met in order to function: <list type="table"> <listheader> <term>Specification</term> <description>Valid/Invalid</description> </listheader> <item> <term>Pitch Error Compensation specification NC spec [22,0] or Inductosyn pitch compensation NC spec [22,1]</term> <description>Valid</description> </item> <item> <term>B Axial control 1/1000 Degree pitch specification NC spec [8,5]</term> <description>Valid</description> </item> <item> <term>Without pitch error compensation  </term> <description>Invalid</description> </item> </list> </para> </remarks>
      <Figure>PITCH ERROR COMPENSATION - PITCH - Compensation interval for different axes. <para> <img src="PEC.Setting.jpg" /> </para> </Figure>
      <SubSystem> Please see <see href="SubSystemNoteTable.htm">Sub System Note Table</see> for more information if applicable. <para>Valid sub systems for this function (Y = Valid, N = Not valid)</para> <para> <list type="table"> <listheader> <term>NC_RUN </term> <term>NC_RUN_1 </term> <term>NC_RUN_2 </term> <term>NC_RUN_3 </term> <term>NC_PANEL </term> <term>NC_PANEL_1 </term> <term>NC_PANEL_2 </term> <term>NC_PANEL_3 </term> <term>NC_AL </term> <term>NC_AR </term> <term>NC_BL </term> <term>NC_BR </term> <term>NC_CL </term> <term>NC_CR </term> <term>NC_2AL </term> </listheader> <item> <term>Y (*5)</term> <term>Y</term> <term>N</term> <term>N</term> <term>Y (*5)</term> <term>Y</term> <term>N</term> <term>N</term> <term>Y</term> <term>Y</term> <term>N</term> <term>N</term> <term>N</term> <term>N</term> <term>N</term> </item> </list> </para>  </SubSystem>
    </member>
    <member name="M:Okuma.CLDATAPI.DataAPI.CBallScrew.AddBAxisInterval(System.Double)">
      <summary> Set the pitch error compensation interval data by adding the input value to the existing data at the specified B-Axis index and current sub system. </summary>
      <example>This example shows how to add BAxisInterval. <para>	objBallScrew.AddBAxisInterval(CDbl(Me.bsBAxisIntervalUpdate.Text))	</para> </example>
      <param name="dblValue">BAxis Interval Value.</param>
      <exception cref="System.ApplicationException">Thrown when function fails to perform the operation at current NC condition.</exception>
      <exception cref="System.NotSupportedException">Thrown when operation/input parameters are not supported for the current system.</exception>
      <returns>None</returns>
      <DataUnit> Degree </DataUnit>
      <remarks> <para> The following specifications must be met in order to function: <list type="table"> <listheader> <term>Specification</term> <description>Valid/Invalid</description> </listheader> <item> <term>Pitch Error Compensation specification NC spec [22,0] or Inductosyn pitch compensation NC spec [22,1]</term> <description>Valid</description> </item> <item> <term>Pitch Error Compensation specification or Inductosyn pitch compensation</term> <description>Valid</description> </item> <item> <term>Without pitch error compensation  </term> <description>Invalid</description> </item> </list> </para> </remarks>
      <Figure>PITCH ERROR COMPENSATION - PITCH - Compensation interval for different axes. <para> <img src="PEC.Setting.jpg" /> </para> </Figure>
      <SubSystem> Please see <see href="SubSystemNoteTable.htm">Sub System Note Table</see> for more information if applicable. <para>Valid sub systems for this function (Y = Valid, N = Not valid)</para> <para> <list type="table"> <listheader> <term>NC_RUN </term> <term>NC_RUN_1 </term> <term>NC_RUN_2 </term> <term>NC_RUN_3 </term> <term>NC_PANEL </term> <term>NC_PANEL_1 </term> <term>NC_PANEL_2 </term> <term>NC_PANEL_3 </term> <term>NC_AL </term> <term>NC_AR </term> <term>NC_BL </term> <term>NC_BR </term> <term>NC_CL </term> <term>NC_CR </term> <term>NC_2AL </term> </listheader> <item> <term>Y (*5)</term> <term>Y</term> <term>N</term> <term>N</term> <term>Y (*5)</term> <term>Y</term> <term>N</term> <term>N</term> <term>Y</term> <term>Y</term> <term>N</term> <term>N</term> <term>N</term> <term>N</term> <term>N</term> </item> </list> </para>  </SubSystem>
    </member>
    <member name="M:Okuma.CLDATAPI.DataAPI.CBallScrew.GetBAxisDataPoint(System.Int32)">
      <summary> Gets the start position of pitch error compensation of B-Axis for current sub system. </summary>
      <example> This example shows how to GetBAxisStartPosition. <para>	Me.bsBAxisStartPosition.Text = objBallScrew.GetBAxisStartPosition()	</para> </example>
      <returns>A System.Double value</returns>
      <exception cref="System.ApplicationException">Thrown when function fails to perform the operation at current NC condition.</exception>
      <exception cref="System.NotSupportedException">Thrown when operation/input parameters are not supported for the current system.</exception>
      <DataUnit> Degree </DataUnit>
      <remarks> <para> The following specifications must be met in order to function: <list type="table"> <listheader> <term>Specification</term> <description>Valid/Invalid</description> </listheader> <item> <term>Pitch Error Compensation specification or Inductosyn pitch compensation</term> <description>Valid</description> </item> <item> <term>B Axial control 1/1000 Degree pitch specification NC spec [8,5]</term> <description>Valid</description> </item> <item> <term>Without pitch error compensation  </term> <description>Invalid</description> </item> </list> </para> </remarks>
      <Figure> PICTH ERROR COMPENSATION - PITCH - START POINT. <para> <img src="PEC.Setting.jpg" /> </para> </Figure>
      <SubSystem> Please see <see href="SubSystemNoteTable.htm">Sub System Note Table</see> for more information if applicable. <para>Valid sub systems for this function (Y = Valid, N = Not valid)</para> <para> <list type="table"> <listheader> <term>NC_RUN </term> <term>NC_RUN_1 </term> <term>NC_RUN_2 </term> <term>NC_PANEL </term> <term>NC_PANEL_1 </term> <term>NC_PANEL_2 </term> <term>NC_AL </term> <term>NC_AR </term> <term>NC_BL </term> <term>NC_BR </term> <term>NC_2AL </term> </listheader> <item> <term>Y (*5)</term> <term>Y</term> <term>N</term> <term>Y (*5)</term> <term>Y</term> <term>N</term> <term>Y</term> <term>Y</term> <term>N</term> <term>N</term> <term>N</term> </item> </list> </para>  </SubSystem>
    </member>
    <member name="M:Okuma.CLDATAPI.DataAPI.CBallScrew.SetBAxisDataPoint(System.Int32,System.Double)">
      <summary> Sets the pitch error compensation data at the specified point of B-Axis for current sub system. </summary>
      <example>This example shows how to add BAxisDataPoint. <para>	objBallScrew.SetBAxisDataPoint(CInt(Me.bsPecPoint.Text), CDbl(Me.bsBAxisStartPositionUpdate.Text))	</para> </example>
      <param name="intPECPoint">Pitch Error Compensation data point</param>
      <param name="dblValue">Pitch Error Compensation data point to be set</param>
      <exception cref="System.ApplicationException">Thrown when function fails to perform the operation at current NC condition.</exception>
      <exception cref="System.NotSupportedException">Thrown when operation/input parameters are not supported for the current system.</exception>
      <returns>None</returns>
      <DataUnit> Degree </DataUnit>
      <remarks> <para> The following specifications must be met in order to function: <list type="table"> <listheader> <term>Specification</term> <description>Valid/Invalid</description> </listheader> <item> <term>Pitch Error Compensation specification NC spec [22,0] or Inductosyn pitch compensation NC spec [22,1]</term> <description>Valid</description> </item> <item> <term>B Axial control 1/1000 Degree pitch specification NC spec [8,5]</term> <description>Valid</description> </item> <item> <term>Without pitch error compensation  </term> <description>Invalid</description> </item> </list> </para> </remarks>
      <Figure> PICTH ERROR COMPENSATION - PEC Data points for B-Axis. <para> <img src="PEC.Data.jpg" /> </para> </Figure>
      <SubSystem> Please see <see href="SubSystemNoteTable.htm">Sub System Note Table</see> for more information if applicable. <para>Valid sub systems for this function (Y = Valid, N = Not valid)</para> <para> <list type="table"> <listheader> <term>NC_RUN </term> <term>NC_RUN_1 </term> <term>NC_RUN_2 </term> <term>NC_RUN_3 </term> <term>NC_PANEL </term> <term>NC_PANEL_1 </term> <term>NC_PANEL_2 </term> <term>NC_PANEL_3 </term> <term>NC_AL </term> <term>NC_AR </term> <term>NC_BL </term> <term>NC_BR </term> <term>NC_CL </term> <term>NC_CR </term> <term>NC_2AL </term> </listheader> <item> <term>Y (*5)</term> <term>Y</term> <term>N</term> <term>N</term> <term>Y (*5)</term> <term>Y</term> <term>N</term> <term>N</term> <term>Y</term> <term>Y</term> <term>N</term> <term>N</term> <term>N</term> <term>N</term> <term>N</term> </item> </list> </para>  </SubSystem>
    </member>
    <member name="M:Okuma.CLDATAPI.DataAPI.CBallScrew.AddBAxisDataPoint(System.Int32,System.Double)">
      <summary> Sets the pitch error compensation data by adding the input value to the existing data at the specified point of B-Axis for current sub system. </summary>
      <example>This example shows how to add BAxisDataPoint. <para>	objBallScrew.AddBAxisDataPoint(CInt(Me.bsPecPoint.Text), CDbl(Me.bsBAxisDataPointUpdate.Text))	</para> </example>
      <param name="intPECPoint">Pitch error compensation data point</param>
      <param name="dblValue">Pitch error compensation data to be set</param>
      <exception cref="System.ApplicationException">Thrown when function fails to perform the operation at current NC condition.</exception>
      <exception cref="System.NotSupportedException">Thrown when operation/input parameters are not supported for the current system.</exception>
      <returns>None</returns>
      <DataUnit> Degree </DataUnit>
      <remarks> <para> The following specifications must be met in order to function: <list type="table"> <listheader> <term>Specification</term> <description>Valid/Invalid</description> </listheader> <item> <term>Pitch Error Compensation specification or Inductosyn pitch compensation</term> <description>Valid</description> </item> <item> <term>B Axial control 1/1000 Degree pitch specification NC spec [8,5]</term> <description>Valid</description> </item> <item> <term>Without pitch error compensation  </term> <description>Invalid</description> </item> </list> </para> </remarks>
      <Figure> PICTH ERROR COMPENSATION - PEC Data points for B-Axis. <para> <img src="PEC.Data.jpg" /> </para> </Figure>
      <SubSystem> Please see <see href="SubSystemNoteTable.htm">Sub System Note Table</see> for more information if applicable. <para>Valid sub systems for this function (Y = Valid, N = Not valid)</para> <para> <list type="table"> <listheader> <term>NC_RUN </term> <term>NC_RUN_1 </term> <term>NC_RUN_2 </term> <term>NC_RUN_3 </term> <term>NC_PANEL </term> <term>NC_PANEL_1 </term> <term>NC_PANEL_2 </term> <term>NC_PANEL_3 </term> <term>NC_AL </term> <term>NC_AR </term> <term>NC_BL </term> <term>NC_BR </term> <term>NC_CL </term> <term>NC_CR </term> <term>NC_2AL </term> </listheader> <item> <term>Y (*5)</term> <term>Y</term> <term>N</term> <term>N</term> <term>Y (*5)</term> <term>Y</term> <term>N</term> <term>N</term> <term>Y</term> <term>Y</term> <term>N</term> <term>N</term> <term>N</term> <term>N</term> <term>N</term> </item> </list> </para>  </SubSystem>
    </member>
    <member name="M:Okuma.CLDATAPI.DataAPI.CBallScrew.GetBAxisStartPosition">
      <summary> Gets the start position of pitch error compensation of B-Axis for current sub system. </summary>
      <example> This example shows how to GetBAxisStartPosition. <para>	Me.bsBAxisStartPosition.Text = objBallScrew.GetBAxisStartPosition()	</para> </example>
      <returns>A System.Double value</returns>
      <exception cref="System.ApplicationException">Thrown when function fails to perform the operation at current NC condition.</exception>
      <exception cref="System.NotSupportedException">Thrown when operation/input parameters are not supported for the current system.</exception>
      <DataUnit> Degree </DataUnit>
      <remarks> <para> The following specifications must be met in order to function: <list type="table"> <listheader> <term>Specification</term> <description>Valid/Invalid</description> </listheader> <item> <term>Pitch Error Compensation specification NC spec [22,0] or Inductosyn pitch compensation NC spec [22,1]</term> <description>Valid</description> </item> <item> <term>Pitch Error Compensation specification or Inductosyn pitch compensation</term> <description>Valid</description> </item> <item> <term>Without pitch error compensation  </term> <description>Invalid</description> </item> </list> </para> </remarks>
      <Figure> PICTH ERROR COMPENSATION - PITCH - START POINT. <para> <img src="PEC.Setting.jpg" /> </para> </Figure>
      <SubSystem> Please see <see href="SubSystemNoteTable.htm">Sub System Note Table</see> for more information if applicable. <para>Valid sub systems for this function (Y = Valid, N = Not valid)</para> <para> <list type="table"> <listheader> <term>NC_RUN </term> <term>NC_RUN_1 </term> <term>NC_RUN_2 </term> <term>NC_PANEL </term> <term>NC_PANEL_1 </term> <term>NC_PANEL_2 </term> <term>NC_AL </term> <term>NC_AR </term> <term>NC_BL </term> <term>NC_BR </term> <term>NC_2AL </term> </listheader> <item> <term>Y (*5)</term> <term>Y</term> <term>N</term> <term>Y (*5)</term> <term>Y</term> <term>N</term> <term>Y</term> <term>Y</term> <term>N</term> <term>N</term> <term>N</term> </item> </list> </para>  </SubSystem>
    </member>
    <member name="M:Okuma.CLDATAPI.DataAPI.CBallScrew.SetBAxisStartPosition(System.Double)">
      <summary> Sets start position of pitch error compensation of B-Axis for current sub system. </summary>
      <example>This example shows how to set BAxisStartPosition. <para>	objBallScrew.SetBAxisStartPosition(CDbl(Me.bsBAxisStartPositionUpdate.Text))	</para> </example>
      <param name="dblValue">Starting position of pitch error compensation to be set</param>
      <exception cref="System.ApplicationException">Thrown when function fails to perform the operation at current NC condition.</exception>
      <exception cref="System.NotSupportedException">Thrown when operation/input parameters are not supported for the current system.</exception>
      <returns>None</returns>
      <DataUnit> Degree </DataUnit>
      <remarks> <para> The following specifications must be met in order to function: <list type="table"> <listheader> <term>Specification</term> <description>Valid/Invalid</description> </listheader> <item> <term>Pitch Error Compensation specification or Inductosyn pitch compensation</term> <description>Valid</description> </item> <item> <term>B Axial control 1/1000 Degree pitch specification NC spec [8,5]</term> <description>Valid</description> </item> <item> <term>Without pitch error compensation  </term> <description>Invalid</description> </item> </list> </para> </remarks>
      <Figure> PICTH ERROR COMPENSATION - START POINT - Starting position for B-Axis. <para> <img src="PEC.Setting.jpg" /> </para> </Figure>
      <SubSystem> Please see <see href="SubSystemNoteTable.htm">Sub System Note Table</see> for more information if applicable. <para>Valid sub systems for this function (Y = Valid, N = Not valid)</para> <para> <list type="table"> <listheader> <term>NC_RUN </term> <term>NC_RUN_1 </term> <term>NC_RUN_2 </term> <term>NC_PANEL </term> <term>NC_PANEL_1 </term> <term>NC_PANEL_2 </term> <term>NC_AL </term> <term>NC_AR </term> <term>NC_BL </term> <term>NC_BR </term> <term>NC_2AL </term> </listheader> <item> <term>Y (*5)</term> <term>Y</term> <term>N</term> <term>Y (*5)</term> <term>Y</term> <term>N</term> <term>Y</term> <term>Y</term> <term>N</term> <term>N</term> <term>N</term> </item> </list> </para>  </SubSystem>
    </member>
    <member name="M:Okuma.CLDATAPI.DataAPI.CBallScrew.AddBAxisStartPosition(System.Double)">
      <summary> Sets start position of pitch error compensation of B-Axis by adding the input value to the existing data for current sub system. </summary>
      <example>This example shows how to add BAxisStartPosition. <para>	objBallScrew.AddBAxisStartPosition(CDbl(Me.bsBAxisStartPositionUpdate.Text))	</para> </example>
      <param name="dblValue">Starting position of pitch error compensation to be added to</param>
      <returns>None</returns>
      <DataUnit> Degree </DataUnit>
      <exception cref="System.ApplicationException">Thrown when function fails to perform the operation at current NC condition.</exception>
      <exception cref="System.NotSupportedException">Thrown when operation/input parameters are not supported for the current system.</exception>
      <remarks> <para> The following specifications must be met in order to function: <list type="table"> <listheader> <term>Specification</term> <description>Valid/Invalid</description> </listheader> <item> <term>Pitch Error Compensation specification or Inductosyn pitch compensation</term> <description>Valid</description> </item> <item> <term>B Axial control 1/1000 Degree pitch specification NC spec [8,5]</term> <description>Valid</description> </item> <item> <term>Without pitch error compensation  </term> <description>Invalid</description> </item> </list> </para> </remarks>
      <Figure> PICTH ERROR COMPENSATION - START POINT - Starting position for B-Axis. <para> <img src="PEC.Setting.jpg" /> </para> </Figure>
      <SubSystem> Please see <see href="SubSystemNoteTable.htm">Sub System Note Table</see> for more information if applicable. <para>Valid sub systems for this function (Y = Valid, N = Not valid)</para> <para> <list type="table"> <listheader> <term>NC_RUN </term> <term>NC_RUN_1 </term> <term>NC_RUN_2 </term> <term>NC_PANEL </term> <term>NC_PANEL_1 </term> <term>NC_PANEL_2 </term> <term>NC_AL </term> <term>NC_AR </term> <term>NC_BL </term> <term>NC_BR </term> <term>NC_2AL </term> </listheader> <item> <term>Y (*5)</term> <term>Y</term> <term>N</term> <term>Y (*5)</term> <term>Y</term> <term>N</term> <term>Y</term> <term>Y</term> <term>N</term> <term>N</term> <term>N</term> </item> </list> </para>  </SubSystem>
    </member>
    <member name="T:Okuma.CLDATAPI.DataAPI.CAPISpecException">
      <summary> This exception class will be thrown during a call to CMachine.Init method if the API Specification is not enabled on machine  </summary>
    </member>
    <member name="T:Okuma.CLDATAPI.DataAPI.CBase">
      <summary> It is a base class for all classes of Data API.  All classes in DATA-API will be derived from this class to handle error handling, logging service, and other services for internal data structure of this library ONLY.  </summary>
    </member>
    <member name="M:Okuma.CLDATAPI.DataAPI.CBase.IsP300">
      <summary> Greater than P200 </summary>
      <returns />
    </member>
    <member name="M:Okuma.CLDATAPI.DataAPI.CBase.GetLoggingLevel">
      <summary>N/A</summary>
      <example> This example shows how to sets GetLoggingLevel. <code escaped="true" lang="Visual Basic"> Not available in Object Browser </code> </example>
      <returns>A ApiLog::loggingRequestType value.</returns>
      <exception cref="System.ApplicationException">Thrown when function fails to perform the operation at current NC condition.</exception>
      <exception cref="System.NotSupportedException">Thrown when operation/input parameters are not supported for the current system.</exception>
      <Figure>  </Figure>
    </member>
    <member name="M:Okuma.CLDATAPI.DataAPI.CBase.CheckP300ControlType(System.Int32,System.String)">
      <summary> Throw exception if old or less than P300 control type </summary>
      <param name="intFunctionId" />
      <param name="strMessage" />
    </member>
    <member name="M:Okuma.CLDATAPI.DataAPI.CBase.CheckSpecialControlType(System.Int32,System.String)">
      <summary> throw exception if it is NOT Special Lathe and control &gt; p200 </summary>
      <param name="intFunctionId" />
      <param name="strMessage" />
    </member>
    <member name="M:Okuma.CLDATAPI.DataAPI.CBase.CheckStandardControlType(System.Int32,System.String)">
      <summary> throw exception if it is  Special Lathe and control &gt; p200 </summary>
      <param name="intFunctionId" />
      <param name="strMessage" />
    </member>
    <member name="M:Okuma.CLDATAPI.DataAPI.CBase.NotSupportedControlType(Okuma.CLDATAPI.Enumerations.ControlTypeEnum,System.Int32,System.String)">
      <summary> Throw exception if current control type is the same passing control type </summary>
      <param name="enControlType" />
      <param name="intFunctionId" />
      <param name="strMessage" />
    </member>
    <member name="M:Okuma.CLDATAPI.DataAPI.CBase.IsSpecialControlType">
      <summary> Check for new and special control type </summary>
      <returns>True if control type equals or greater than P300 and special otherwise it returns false for other P300 control types or greater</returns>
    </member>
    <member name="T:Okuma.CLDATAPI.DataAPI.CChuck">
      <summary> Class provides Chuck information in the system.  </summary>
    </member>
    <member name="M:Okuma.CLDATAPI.DataAPI.CChuck.CChuck">
      <summary> Initializes a new instance of the CChuck class. </summary>
    </member>
    <member name="M:Okuma.CLDATAPI.DataAPI.CChuck.#ctor(Okuma.CLDATAPI.Enumerations.SubSystemEnum)">
      <summary> Create an instance of this class given sub system.  By default, class is created with sub system = NC_AL. </summary>
      <param name="enSubSystem">Sub system</param>
    </member>
    <member name="M:Okuma.CLDATAPI.DataAPI.CChuck.SetSubSystem(Okuma.CLDATAPI.Enumerations.SubSystemEnum)">
      <summary> Set current SubSystem for this class instance </summary>
      <example>This example shows how to set SubSystem. <para>	objChuck.SetSubSystem(cmb_Chuck_SubSys.SelectedItem)	</para> </example>
      <param name="enSubSystem">Sub System. Value for this Parameter come from Okuma.CLDATAPI.Enumerations.SubSystemEnum</param>
      <exception cref="System.ApplicationException">Thrown when function fails to perform the operation at current NC condition.</exception>
      <exception cref="System.NotSupportedException">Thrown when operation/input parameters are not supported for the current system or it fails to write data to system.</exception>
    </member>
    <member name="M:Okuma.CLDATAPI.DataAPI.CChuck.SetDataUnit(Okuma.CLDATAPI.Enumerations.DataUnitEnum)">
      <summary> Sets current data unit for this class instance. </summary>
      <example> This example shows how to call SetDataUnit method. <para>	objChuck.SetDataUnit(cmb_Chuck_Dataunit.SelectedItem)	</para> </example>
      <param name="enDataUnit">Data Unit to be set. Value of this parameter comes from Okuma.CLDATAPI.Enumerations.DataUnitEnum.</param>
      <exception cref="System.NotSupportedException">Thrown when operation/input parameters are not supported for the current system.</exception>
      <remarks> If applicable, this setting is applied to data in this class instance only, not for NC Data Unit. For example: If NC Data unit is set to mm, and the data unit for this class instance is in inch, then NC data will be converted to inch and vice versa. </remarks>
      <Figure> OPTIONAL PARAMETER - UNIT - LENGTH UNIT SYSTEM mm / inch.  This is for NC Data only. <para> <img src="ParametersScreen.DataUnit.jpg" /> </para>  </Figure>
    </member>
    <member name="M:Okuma.CLDATAPI.DataAPI.CChuck.GetChuckHold(Okuma.CLDATAPI.Enumerations.ChuckIndexEnum)">
      <summary> Gets chuck hold at the specified chuck index for current sub system. </summary>
      <example> This example shows how to call GetChuckHold method. <para>	Me.chuckHold.Text = System.Enum.GetNames(GetType(ChuckIndexEnum)).GetValue(objChuck.GetChuckHold(Me.chuckHoldCombo.SelectedValue))	</para> </example>
      <param name="enValue">Chuck index.  Values of parameter come from the Okuma.CLDATAPI.Enumerations.ChuckIndexEnum enumeration.</param>
      <returns>An Okuma.CLDATAPI.Enumerations.ChuckGrippingEnum enum value.</returns>
      <exception cref="System.ApplicationException">Thrown when function fails to perform the operation at current NC condition.</exception>
      <exception cref="System.NotSupportedException">Thrown when operation/input parameters are not supported for the current system.</exception>
      <remarks> <para> The following specifications for second chuck must be met in order to function: <list type="table"> <listheader> <term>Specification</term> <description>Valid/Invalid</description> </listheader> <item> <term>LT Mechanism specification NC spec [4,0]</term> <description>Valid</description> </item> <item> <term>Sub Spindle</term> <description>Valid</description> </item> </list> </para> </remarks>
      <Figure>CHUCK - CHUCK HOLD CHANGE - Outside/Inside Diameter Grip <para> Chuck 1 <img src="Chuck1.jpg" /> </para> <para> <para>Chuck 2</para> <img src="Lathe.Parameter.Chuck2.jpg" /> </para> </Figure>
      <SubSystem> Please see <see href="SubSystemNoteTable.htm">Sub System Note Table</see> for more information if applicable. <para>Valid sub systems for this function (Y = Valid, N = Not valid)</para> <para> Sub system for Chuck 1 and 2 <list type="table"> <listheader> <term>NC_RUN </term> <term>NC_RUN_1 </term> <term>NC_RUN_2 </term> <term>NC_RUN_3 </term> <term>NC_PANEL </term> <term>NC_PANEL_1 </term> <term>NC_PANEL_2 </term> <term>NC_PANEL_3 </term> <term>NC_AL </term> <term>NC_AR </term> <term>NC_BL </term> <term>NC_BR </term> <term>NC_CL </term> <term>NC_CR </term> <term>NC_2AL </term> </listheader> <item> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> </item> </list> </para>  </SubSystem>
    </member>
    <member name="M:Okuma.CLDATAPI.DataAPI.CChuck.SetChuckHold(Okuma.CLDATAPI.Enumerations.ChuckIndexEnum,Okuma.CLDATAPI.Enumerations.ChuckGrippingEnum)">
      <summary> Sets chuck hold at the specified chuck index for current sub system. </summary>
      <example> This example shows how to call SetChuckHold method. <para>	objChuck.SetChuckHold(Me.chuckIndexEnum.SelectedValue, Me.chuckHoldCombo.SelectedValue)	</para> </example>
      <param name="enValue">Chuck index.  Values of parameter come from the Okuma.CLDATAPI.Enumerations.ChuckIndexEnum enumeration.</param>
      <param name="enGripping">Chuck Gripping type to be set</param>
      <exception cref="System.ApplicationException">Thrown when function fails to perform the operation at current NC condition.</exception>
      <exception cref="System.NotSupportedException">Thrown when operation/input parameters are not supported for the current system.</exception>
      <remarks> <para> The following specifications for second chuck must be met in order to function: <list type="table"> <listheader> <term>Specification</term> <description>Valid/Invalid</description> </listheader> <item> <term>LT Mechanism specification NC spec [4,0]</term> <description>Valid</description> </item> <item> <term>Sub Spindle</term> <description>Valid</description> </item> </list> </para> </remarks>
      <Figure>CHUCK - CHUCK HOLD CHANGE - Outside/Inside Diameter Grip <para> Chuck 1 <img src="Chuck1.jpg" /> </para> <para> <para>Chuck 2</para> <img src="Lathe.Parameter.Chuck2.jpg" /> </para> </Figure>
      <SubSystem> Please see <see href="SubSystemNoteTable.htm">Sub System Note Table</see> for more information if applicable. <para>Valid sub systems for this function (Y = Valid, N = Not valid)</para> <para> Sub system for Chuck 1 and 2 <list type="table"> <listheader> <term>NC_RUN </term> <term>NC_RUN_1 </term> <term>NC_RUN_2 </term> <term>NC_RUN_3 </term> <term>NC_PANEL </term> <term>NC_PANEL_1 </term> <term>NC_PANEL_2 </term> <term>NC_PANEL_3 </term> <term>NC_AL </term> <term>NC_AR </term> <term>NC_BL </term> <term>NC_BR </term> <term>NC_CL </term> <term>NC_CR </term> <term>NC_2AL </term> </listheader> <item> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> </item> </list> </para>  </SubSystem>
    </member>
    <member name="M:Okuma.CLDATAPI.DataAPI.CChuck.GetWorkType">
      <summary> Gets the chuck's work type for current sub system. </summary>
      <example> This example shows how to call GetWorkType method. <para>	Me.chuckWorkType.Text = System.Enum.GetNames(GetType(WorkTypeEnum)).GetValue(objChuck.GetWorkType)	</para> </example>
      <returns>An Okuma.CLDATAPI.Enumerations.WorkTypeEnum enum value.</returns>
      <exception cref="System.ApplicationException">Thrown when function fails to perform the operation at current NC condition.</exception>
      <exception cref="System.NotSupportedException">Thrown when operation/input parameters are not supported for the current system.</exception>
      <remarks> <para> The following specifications must be met in order to function: <list type="table"> <listheader> <term>Specification</term> <description>Valid/Invalid</description> </listheader> <item> <term>LT Mechanism specification NC spec [4,0]</term> <description>Invalid</description> </item> <item> <term>Sub Spindle</term> <description>Invalid</description> </item> </list> </para> </remarks>
      <Figure>CHUCK - CHUCK/CENTER WORK CHANGE - Chuck Work/Center Work Type <para> <img src="Chuck1.jpg" /> </para> </Figure>
      <SubSystem> Please see <see href="SubSystemNoteTable.htm">Sub System Note Table</see> for more information if applicable. <para>Valid sub systems for this function (Y = Valid, N = Not valid)</para> <para> <list type="table"> <listheader> <term>NC_RUN </term> <term>NC_RUN_1 </term> <term>NC_RUN_2 </term> <term>NC_RUN_3 </term> <term>NC_PANEL </term> <term>NC_PANEL_1 </term> <term>NC_PANEL_2 </term> <term>NC_PANEL_3 </term> <term>NC_AL </term> <term>NC_AR </term> <term>NC_BL </term> <term>NC_BR </term> <term>NC_CL </term> <term>NC_CR </term> <term>NC_2AL </term> </listheader> <item> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>N</term> <term>Y</term> <term>N</term> <term>Y</term> <term>N</term> <term>Y</term> </item> </list> </para>  </SubSystem>
    </member>
    <member name="M:Okuma.CLDATAPI.DataAPI.CChuck.SetWorkType(Okuma.CLDATAPI.Enumerations.WorkTypeEnum)">
      <summary> Sets the chuck's work type for current sub system. </summary>
      <example> This example shows how to call SetWorkType method. <para>	objChuck.SetWorkType(Me.chuckWorkTypeCombo.SelectedValue)	</para> </example>
      <param name="enValue">Chuck work type to be set</param>
      <exception cref="System.ApplicationException">Thrown when function fails to perform the operation at current NC condition.</exception>
      <exception cref="System.NotSupportedException">Thrown when operation/input parameters are not supported for the current system.</exception>
      <remarks> <para> The following specifications must be met in order to function: <list type="table"> <listheader> <term>Specification</term> <description>Valid/Invalid</description> </listheader> <item> <term>LT Mechanism specification NC spec [4,0]</term> <description>Invalid</description> </item> <item> <term>Sub Spindle</term> <description>Invalid</description> </item> </list> </para> </remarks>
      <Figure>CHUCK - CHUCK/CENTER WORK CHANGE - Chuck Work/Center Work Type <para> <img src="Chuck1.jpg" /> </para> </Figure>
      <SubSystem> Please see <see href="SubSystemNoteTable.htm">Sub System Note Table</see> for more information if applicable. <para>Valid sub systems for this function (Y = Valid, N = Not valid)</para> <para> <list type="table"> <listheader> <term>NC_RUN </term> <term>NC_RUN_1 </term> <term>NC_RUN_2 </term> <term>NC_RUN_3 </term> <term>NC_PANEL </term> <term>NC_PANEL_1 </term> <term>NC_PANEL_2 </term> <term>NC_PANEL_3 </term> <term>NC_AL </term> <term>NC_AR </term> <term>NC_BL </term> <term>NC_BR </term> <term>NC_CL </term> <term>NC_CR </term> <term>NC_2AL </term> </listheader> <item> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> </item> </list> </para>  </SubSystem>
    </member>
    <member name="M:Okuma.CLDATAPI.DataAPI.CChuck.GetJawLength(Okuma.CLDATAPI.Enumerations.ChuckIndexEnum)">
      <summary> Get jaw length at the specified chuck index for current sub system. </summary>
      <example> This example shows how to call GetJawLength method. <para>	Me.chuckJawLength.Text = objChuck.GetJawLength(Me.chuckIndexEnum.SelectedValue)	</para> </example>
      <param name="enValue">Chuck index.  Values of parameter come from the Okuma.CLDATAPI.Enumerations.ChuckIndexEnum enumeration.</param>
      <returns>A System.Double value</returns>
      <DataUnit> Default unit is in mm.  Other unit can be set by calling SetDataUnit method. </DataUnit>
      <exception cref="System.ApplicationException">Thrown when function fails to perform the operation at current NC condition.</exception>
      <exception cref="System.NotSupportedException">Thrown when operation/input parameters are not supported for the current system.</exception>
      <remarks> <para> The following specifications for Chuck 2 must be met in order to function: <list type="table"> <listheader> <term>Specification</term> <description>Valid/Invalid</description> </listheader> <item> <term>LT Mechanism specification NC spec [4,0] or Sub Spindle NC spec [4,1]</term> <description>Valid</description> </item> </list> </para> </remarks>
      <Figure>CHUCK - CHUCK BARRIER - L - Chuck Jaw Length L <para> Chuck 1 <img src="Chuck1.jpg" /> </para> <para> <para>Chuck 2</para> <img src="Lathe.Parameter.Chuck2.jpg" /> </para> </Figure>
      <SubSystem> Please see <see href="SubSystemNoteTable.htm">Sub System Note Table</see> for more information if applicable. <para>Valid sub systems for this function (Y = Valid, N = Not valid)</para> <para> Sub system for Chuck 1 and 2 <list type="table"> <listheader> <term>NC_RUN </term> <term>NC_RUN_1 </term> <term>NC_RUN_2 </term> <term>NC_RUN_3 </term> <term>NC_PANEL </term> <term>NC_PANEL_1 </term> <term>NC_PANEL_2 </term> <term>NC_PANEL_3 </term> <term>NC_AL </term> <term>NC_AR </term> <term>NC_BL </term> <term>NC_BR </term> <term>NC_CL </term> <term>NC_CR </term> <term>NC_2AL </term> </listheader> <item> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> </item> </list> </para>  </SubSystem>
    </member>
    <member name="M:Okuma.CLDATAPI.DataAPI.CChuck.SetJawLength(Okuma.CLDATAPI.Enumerations.ChuckIndexEnum,System.Double)">
      <summary> Sets jaw length at the specified chuck index for current sub system. </summary>
      <example> This example shows how to call SetJawLength method. <para>	objChuck.SetJawLength(Me.chuckIndexEnum.SelectedValue, CDbl(Me.chuckJawLengthUpd.Text))	</para> </example>
      <param name="enValue">Chuck index. Values of parameter come from the Okuma.CLDATAPI.Enumerations.ChuckIndexEnum enumeration.</param>
      <param name="dblValue">Chuck's jaw length value to be set</param>
      <returns>None</returns>
      <DataUnit> Default unit is in mm.  Other unit can be set by calling SetDataUnit method </DataUnit>
      <exception cref="System.ApplicationException">Thrown when function fails to perform the operation at current NC condition.</exception>
      <exception cref="System.NotSupportedException">Thrown when operation/input parameters are not supported for the current system.</exception>
      <remarks> <para> The following specifications for Chuck 2 must be met in order to function: <list type="table"> <listheader> <term>Specification</term> <description>Valid/Invalid</description> </listheader> <item> <term>LT Mechanism specification NC spec [4,0] or Sub Spindle NC spec [4,1]</term> <description>Valid</description> </item> </list> </para> </remarks>
      <Figure>CHUCK - CHUCK BARRIER - L - Chuck Jaw Length L <para> Chuck 1 <img src="Chuck1.jpg" /> </para> <para> <para>Chuck 2</para> <img src="Lathe.Parameter.Chuck2.jpg" /> </para> </Figure>
      <SubSystem> Please see <see href="SubSystemNoteTable.htm">Sub System Note Table</see> for more information if applicable. <para>Valid sub systems for this function (Y = Valid, N = Not valid)</para> <para> Sub system for Chuck 1 and 2 <list type="table"> <listheader> <term>NC_RUN </term> <term>NC_RUN_1 </term> <term>NC_RUN_2 </term> <term>NC_RUN_3 </term> <term>NC_PANEL </term> <term>NC_PANEL_1 </term> <term>NC_PANEL_2 </term> <term>NC_PANEL_3 </term> <term>NC_AL </term> <term>NC_AR </term> <term>NC_BL </term> <term>NC_BR </term> <term>NC_CL </term> <term>NC_CR </term> <term>NC_2AL </term> </listheader> <item> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> </item> </list> </para>  </SubSystem>
    </member>
    <member name="M:Okuma.CLDATAPI.DataAPI.CChuck.AddJawLength(Okuma.CLDATAPI.Enumerations.ChuckIndexEnum,System.Double)">
      <summary> Sets jaw length by adding the input value to the existing data at the specified chuck index for current sub system. </summary>
      <example> This example shows how to call AddJawLength method. <para>	objChuck.AddJawLength(Me.chuckIndexEnum.SelectedValue, CDbl(Me.chuckJawLengthUpd.Text))	</para> </example>
      <param name="enValue">Chuck index.  Values of parameter come from the Okuma.CLDATAPI.Enumerations.ChuckIndexEnum enumeration.</param>
      <param name="dblValue">Chuck's jaw length value to be added to</param>
      <returns>None</returns>
      <DataUnit> Default unit is in mm.  Other unit can be set by calling SetDataUnit method </DataUnit>
      <exception cref="System.ApplicationException">Thrown when function fails to perform the operation at current NC condition.</exception>
      <exception cref="System.NotSupportedException">Thrown when operation/input parameters are not supported for the current system.</exception>
      <remarks> <para> The following specifications for Chuck 2 must be met in order to function: <list type="table"> <listheader> <term>Specification</term> <description>Valid/Invalid</description> </listheader> <item> <term>LT Mechanism specification NC spec [4,0] or Sub Spindle NC spec [4,1]</term> <description>Valid</description> </item> </list> </para> </remarks>
      <Figure>CHUCK - CHUCK BARRIER - L - Chuck Jaw Length L <para> Chuck 1 <img src="Chuck1.jpg" /> </para> <para><para> Chuck 2</para> <img src="Lathe.Parameter.Chuck2.jpg" /> </para> </Figure>
      <SubSystem> Please see <see href="SubSystemNoteTable.htm">Sub System Note Table</see> for more information if applicable. <para>Valid sub systems for this function (Y = Valid, N = Not valid)</para> <para> Sub system for Chuck 1 and 2 <list type="table"> <listheader> <term>NC_RUN </term> <term>NC_RUN_1 </term> <term>NC_RUN_2 </term> <term>NC_RUN_3 </term> <term>NC_PANEL </term> <term>NC_PANEL_1 </term> <term>NC_PANEL_2 </term> <term>NC_PANEL_3 </term> <term>NC_AL </term> <term>NC_AR </term> <term>NC_BL </term> <term>NC_BR </term> <term>NC_CL </term> <term>NC_CR </term> <term>NC_2AL </term> </listheader> <item> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> </item> </list> </para>  </SubSystem>
    </member>
    <member name="M:Okuma.CLDATAPI.DataAPI.CChuck.GetJawSize(Okuma.CLDATAPI.Enumerations.ChuckIndexEnum)">
      <summary> Gets chuck's jaw size by at the specified chuck index for current sub system. </summary>
      <example> This example shows how to call GetJawSize method. <para>	Me.chuckJawSize.Text = objChuck.GetJawSize(Me.chuckIndexEnum.SelectedValue)	</para> </example>
      <param name="enValue">Chuck index.  Values of parameter come from the Okuma.CLDATAPI.Enumerations.ChuckIndexEnum enumeration.</param>
      <returns>A System.Double value.</returns>
      <DataUnit> Default unit is in mm.  Other unit can be set by calling SetDataUnit method. </DataUnit>
      <exception cref="System.ApplicationException">Thrown when function fails to perform the operation at current NC condition.</exception>
      <exception cref="System.NotSupportedException">Thrown when operation/input parameters are not supported for the current system.</exception>
      <remarks> <para> The following specifications for Chuck 2 must be met in order to function: <list type="table"> <listheader> <term>Specification</term> <description>Valid/Invalid</description> </listheader> <item> <term>LT Mechanism specification NC spec [4,0] or Sub Spindle NC spec [4,1]</term> <description>Valid</description> </item> </list> </para> </remarks>
      <Figure>CHUCK - CHUCK BARRIER - D - Chuck Jaw Size D <para> Chuck 1 <img src="Chuck1.jpg" /> </para> <para> <para>Chuck 2</para> <img src="Lathe.Parameter.Chuck2.jpg" /> </para> </Figure>
      <SubSystem> Please see <see href="SubSystemNoteTable.htm">Sub System Note Table</see> for more information if applicable. <para>Valid sub systems for this function (Y = Valid, N = Not valid)</para> <para> Sub system for Chuck 1 and 2 <list type="table"> <listheader> <term>NC_RUN </term> <term>NC_RUN_1 </term> <term>NC_RUN_2 </term> <term>NC_RUN_3 </term> <term>NC_PANEL </term> <term>NC_PANEL_1 </term> <term>NC_PANEL_2 </term> <term>NC_PANEL_3 </term> <term>NC_AL </term> <term>NC_AR </term> <term>NC_BL </term> <term>NC_BR </term> <term>NC_CL </term> <term>NC_CR </term> <term>NC_2AL </term> </listheader> <item> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> </item> </list> </para>  </SubSystem>
    </member>
    <member name="M:Okuma.CLDATAPI.DataAPI.CChuck.SetJawSize(Okuma.CLDATAPI.Enumerations.ChuckIndexEnum,System.Double)">
      <summary> Sets chuck's jaw size at the specified chuck index for current sub system. </summary>
      <example> This example shows how to call SetJawSize method. <para>	objChuck.SetJawSize(Me.chuckIndexEnum.SelectedValue, CDbl(Me.chuckJawSizeUpd.Text))	</para> </example>
      <param name="enValue">Chuck index.  Values of parameter come from the Okuma.CLDATAPI.Enumerations.ChuckIndexEnum enumeration.</param>
      <param name="dblValue">Chuck's jaw size value to be set</param>
      <returns>None</returns>
      <DataUnit> Default unit is in mm.  Other unit can be set by calling SetDataUnit method </DataUnit>
      <exception cref="System.ApplicationException">Thrown when function fails to perform the operation at current NC condition.</exception>
      <exception cref="System.NotSupportedException">Thrown when operation/input parameters are not supported for the current system.</exception>
      <remarks> <para> The following specifications for Chuck 2 must be met in order to function: <list type="table"> <listheader> <term>Specification</term> <description>Valid/Invalid</description> </listheader> <item> <term>LT Mechanism specification NC spec [4,0] or Sub Spindle NC spec [4,1]</term> <description>Valid</description> </item> </list> </para> </remarks>
      <Figure>CHUCK - CHUCK BARRIER - D - Chuck Jaw Size D <para> Chuck 1 <img src="Chuck1.jpg" /> </para> <para> <para>Chuck 2</para> <img src="Lathe.Parameter.Chuck2.jpg" /> </para> </Figure>
      <SubSystem> Please see <see href="SubSystemNoteTable.htm">Sub System Note Table</see> for more information if applicable. <para>Valid sub systems for this function (Y = Valid, N = Not valid)</para> <para> Sub system for Chuck 1 and 2 <list type="table"> <listheader> <term>NC_RUN </term> <term>NC_RUN_1 </term> <term>NC_RUN_2 </term> <term>NC_RUN_3 </term> <term>NC_PANEL </term> <term>NC_PANEL_1 </term> <term>NC_PANEL_2 </term> <term>NC_PANEL_3 </term> <term>NC_AL </term> <term>NC_AR </term> <term>NC_BL </term> <term>NC_BR </term> <term>NC_CL </term> <term>NC_CR </term> <term>NC_2AL </term> </listheader> <item> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> </item> </list> </para>  </SubSystem>
    </member>
    <member name="M:Okuma.CLDATAPI.DataAPI.CChuck.AddJawSize(Okuma.CLDATAPI.Enumerations.ChuckIndexEnum,System.Double)">
      <summary> Sets chuck's jaw size by adding the input value to the existing data at the specified chuck index for current sub system. </summary>
      <example> This example shows how to call AddJawSize method. <para>	objChuck.AddJawSize(Me.chuckIndexEnum.SelectedValue, CDbl(Me.chuckJawSizeUpd.Text))	</para> </example>
      <param name="enValue">Chuck index.  Values of parameter come from the Okuma.CLDATAPI.Enumerations.ChuckIndexEnum enumeration.</param>
      <param name="dblValue">Chuck's jaw size value to be added to</param>
      <returns>None</returns>
      <DataUnit> Default unit is in mm.  Other unit can be set by calling SetDataUnit method </DataUnit>
      <exception cref="System.ApplicationException">Thrown when function fails to perform the operation at current NC condition.</exception>
      <exception cref="System.NotSupportedException">Thrown when operation/input parameters are not supported for the current system.</exception>
      <remarks> <para> The following specifications for Chuck 2 must be met in order to function: <list type="table"> <listheader> <term>Specification</term> <description>Valid/Invalid</description> </listheader> <item> <term>LT Mechanism specification NC spec [4,0] or Sub Spindle NC spec [4,1]</term> <description>Valid</description> </item> </list> </para> </remarks>
      <Figure>CHUCK - CHUCK BARRIER - D - Chuck Jaw Size D <para> Chuck 1 <img src="Chuck1.jpg" /> </para> <para> <para>Chuck 2</para> <img src="Lathe.Parameter.Chuck2.jpg" /> </para> </Figure>
      <SubSystem> Please see <see href="SubSystemNoteTable.htm">Sub System Note Table</see> for more information if applicable. <para>Valid sub systems for this function (Y = Valid, N = Not valid)</para> <para> Sub system for Chuck 1 and 2 <list type="table"> <listheader> <term>NC_RUN </term> <term>NC_RUN_1 </term> <term>NC_RUN_2 </term> <term>NC_RUN_3 </term> <term>NC_PANEL </term> <term>NC_PANEL_1 </term> <term>NC_PANEL_2 </term> <term>NC_PANEL_3 </term> <term>NC_AL </term> <term>NC_AR </term> <term>NC_BL </term> <term>NC_BR </term> <term>NC_CL </term> <term>NC_CR </term> <term>NC_2AL </term> </listheader> <item> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> </item> </list> </para>  </SubSystem>
    </member>
    <member name="M:Okuma.CLDATAPI.DataAPI.CChuck.GetGrippingLength(Okuma.CLDATAPI.Enumerations.ChuckIndexEnum)">
      <summary> Gets chuck's gripping length at the specified chuck index for current sub system. </summary>
      <example> This example shows how to call GetGrippingLength method. <para>	Me.chuckGrippingLength.Text = objChuck.GetGrippingLength(Me.chuckIndexEnum.SelectedValue)	</para> </example>
      <param name="enValue">Chuck index. Values of parameter come from the Okuma.CLDATAPI.Enumerations.ChuckIndexEnum enumeration.</param>
      <returns>A System.Double value</returns>
      <DataUnit> Default unit is in mm.  Other unit can be set by calling SetDataUnit method. </DataUnit>
      <exception cref="System.ApplicationException">Thrown when function fails to perform the operation at current NC condition.</exception>
      <exception cref="System.NotSupportedException">Thrown when operation/input parameters are not supported for the current system.</exception>
      <remarks> <para> The following specifications for Chuck 2 must be met in order to function: <list type="table"> <listheader> <term>Specification</term> <description>Valid/Invalid</description> </listheader> <item> <term>LT Mechanism specification NC spec [4,0] or Sub Spindle NC spec [4,1]</term> <description>Valid</description> </item> </list> </para> </remarks>
      <Figure>CHUCK - CHUCK BARRIER - L1 - Chuck Gripping Length L1 <para> Chuck 1 <img src="Chuck1.jpg" /> </para> <para> <para>Chuck 2</para> <img src="Lathe.Parameter.Chuck2.jpg" /> </para> </Figure>
      <SubSystem> Please see <see href="SubSystemNoteTable.htm">Sub System Note Table</see> for more information if applicable. <para>Valid sub systems for this function (Y = Valid, N = Not valid)</para> <para> Sub system for Chuck 1 and 2 <list type="table"> <listheader> <term>NC_RUN </term> <term>NC_RUN_1 </term> <term>NC_RUN_2 </term> <term>NC_RUN_3 </term> <term>NC_PANEL </term> <term>NC_PANEL_1 </term> <term>NC_PANEL_2 </term> <term>NC_PANEL_3 </term> <term>NC_AL </term> <term>NC_AR </term> <term>NC_BL </term> <term>NC_BR </term> <term>NC_CL </term> <term>NC_CR </term> <term>NC_2AL </term> </listheader> <item> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> </item> </list> </para>  </SubSystem>
    </member>
    <member name="M:Okuma.CLDATAPI.DataAPI.CChuck.SetGrippingLength(Okuma.CLDATAPI.Enumerations.ChuckIndexEnum,System.Double)">
      <summary> Sets chuck's gripping length at the specified chuck index for current sub system. </summary>
      <example> This example shows how to call SetGrippingLength method. <para>	objChuck.SetGrippingLength(Me.chuckIndexEnum.SelectedValue, CDbl(Me.chuckGrippingLengthUpd.Text))	</para> </example>
      <param name="enValue">Chuck index.  Values of parameter come from the Okuma.CLDATAPI.Enumerations.ChuckIndexEnum enumeration.</param>
      <param name="dblValue">Chuck's gripping length value to be set</param>
      <returns>None</returns>
      <DataUnit> Default unit is in mm.  Other unit can be set by calling SetDataUnit method </DataUnit>
      <exception cref="System.ApplicationException">Thrown when function fails to perform the operation at current NC condition.</exception>
      <exception cref="System.NotSupportedException">Thrown when operation/input parameters are not supported for the current system.</exception>
      <remarks> <para> The following specifications for Chuck 2 must be met in order to function: <list type="table"> <listheader> <term>Specification</term> <description>Valid/Invalid</description> </listheader> <item> <term>LT Mechanism specification NC spec [4,0] or Sub Spindle NC spec [4,1]</term> <description>Valid</description> </item> </list> </para> </remarks>
      <Figure>CHUCK - CHUCK BARRIER - L1 - Chuck Gripping Length L1 <para> Chuck 1 <img src="Chuck1.jpg" /> </para> <para> <para>Chuck 2</para> <img src="Lathe.Parameter.Chuck2.jpg" /> </para> </Figure>
      <SubSystem> Please see <see href="SubSystemNoteTable.htm">Sub System Note Table</see> for more information if applicable. <para>Valid sub systems for this function (Y = Valid, N = Not valid)</para> <para> Sub system for Chuck 1 and 2 <list type="table"> <listheader> <term>NC_RUN </term> <term>NC_RUN_1 </term> <term>NC_RUN_2 </term> <term>NC_RUN_3 </term> <term>NC_PANEL </term> <term>NC_PANEL_1 </term> <term>NC_PANEL_2 </term> <term>NC_PANEL_3 </term> <term>NC_AL </term> <term>NC_AR </term> <term>NC_BL </term> <term>NC_BR </term> <term>NC_CL </term> <term>NC_CR </term> <term>NC_2AL </term> </listheader> <item> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> </item> </list> </para>  </SubSystem>
    </member>
    <member name="M:Okuma.CLDATAPI.DataAPI.CChuck.AddGrippingLength(Okuma.CLDATAPI.Enumerations.ChuckIndexEnum,System.Double)">
      <summary> Sets chuck's gripping length by adding the input value to the existing data at the specified chuck index for current sub system. </summary>
      <example> This example shows how to call AddGrippingLength method. <para>	objChuck.AddGrippingLength(Me.chuckIndexEnum.SelectedValue, CDbl(Me.chuckGrippingLengthUpd.Text))	</para> </example>
      <param name="enValue">Chuck index.  Values of parameter come from the Okuma.CLDATAPI.Enumerations.ChuckIndexEnum enumeration.</param>
      <param name="dblValue">Chuck's gripping length value to be added to</param>
      <returns>None</returns>
      <DataUnit> Default unit is in mm.  Other unit can be set by calling SetDataUnit method </DataUnit>
      <exception cref="System.ApplicationException">Thrown when function fails to perform the operation at current NC condition.</exception>
      <exception cref="System.NotSupportedException">Thrown when operation/input parameters are not supported for the current system.</exception>
      <remarks> <para> The following specifications for Chuck 2 must be met in order to function: <list type="table"> <listheader> <term>Specification</term> <description>Valid/Invalid</description> </listheader> <item> <term>LT Mechanism specification NC spec [4,0] or Sub Spindle NC spec [4,1]</term> <description>Valid</description> </item> </list> </para> </remarks>
      <Figure>CHUCK - CHUCK BARRIER - L1 - Chuck's Gripping Length L1 <para> Chuck 1 <img src="Chuck1.jpg" /> </para> <para><para> Chuck 2</para> <img src="Lathe.Parameter.Chuck2.jpg" /> </para> </Figure>
      <SubSystem> Please see <see href="SubSystemNoteTable.htm">Sub System Note Table</see> for more information if applicable. <para>Valid sub systems for this function (Y = Valid, N = Not valid)</para> <para> Sub system for Chuck 1 and 2 <list type="table"> <listheader> <term>NC_RUN </term> <term>NC_RUN_1 </term> <term>NC_RUN_2 </term> <term>NC_RUN_3 </term> <term>NC_PANEL </term> <term>NC_PANEL_1 </term> <term>NC_PANEL_2 </term> <term>NC_PANEL_3 </term> <term>NC_AL </term> <term>NC_AR </term> <term>NC_BL </term> <term>NC_BR </term> <term>NC_CL </term> <term>NC_CR </term> <term>NC_2AL </term> </listheader> <item> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> </item> </list> </para>  </SubSystem>
    </member>
    <member name="M:Okuma.CLDATAPI.DataAPI.CChuck.GetGrippingFaceWidth(Okuma.CLDATAPI.Enumerations.ChuckIndexEnum)">
      <summary> Gets chuck's gripping face width at the specified chuck index for current sub system. </summary>
      <example> This example shows how to call GetGrippingFaceWidth method. <para>	Me.chuckGrippingFaceWidth.Text = objChuck.GetGrippingFaceWidth(Me.chuckIndexEnum.SelectedValue)	</para> </example>
      <param name="enValue">Chuck index.  Values of parameter come from the Okuma.CLDATAPI.Enumerations.ChuckIndexEnum enumeration.</param>
      <returns>A System.Double value</returns>
      <DataUnit> Default unit is in mm.  Other unit can be set by calling SetDataUnit method. </DataUnit>
      <exception cref="System.ApplicationException">Thrown when function fails to perform the operation at current NC condition.</exception>
      <exception cref="System.NotSupportedException">Thrown when operation/input parameters are not supported for the current system.</exception>
      <remarks> <para> The following specifications for Chuck 2 must be met in order to function: <list type="table"> <listheader> <term>Specification</term> <description>Valid/Invalid</description> </listheader> <item> <term>LT Mechanism specification NC spec [4,0] or Sub Spindle NC spec [4,1]</term> <description>Valid</description> </item> </list> </para> </remarks>
      <Figure>CHUCK - CHUCK BARRIER - D1 - Chuck Gripping Face Width D1 <para> Chuck 1 <img src="Chuck1.jpg" /> </para> <para> <para>Chuck 2</para> <img src="Lathe.Parameter.Chuck2.jpg" /> </para> </Figure>
      <SubSystem> Please see <see href="SubSystemNoteTable.htm">Sub System Note Table</see> for more information if applicable. <para>Valid sub systems for this function (Y = Valid, N = Not valid)</para> <para> Sub system for Chuck 1 <list type="table"> <listheader> <term>NC_RUN </term> <term>NC_RUN_1 </term> <term>NC_RUN_2 </term> <term>NC_RUN_3 </term> <term>NC_PANEL </term> <term>NC_PANEL_1 </term> <term>NC_PANEL_2 </term> <term>NC_PANEL_3 </term> <term>NC_AL </term> <term>NC_AR </term> <term>NC_BL </term> <term>NC_BR </term> <term>NC_CL </term> <term>NC_CR </term> <term>NC_2AL </term> </listheader> <item> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> </item> </list> </para> <para> Sub system for Chuck 2 <list type="table"> <listheader> <term>NC_RUN </term> <term>NC_RUN_1 </term> <term>NC_RUN_2 </term> <term>NC_RUN_3 </term> <term>NC_PANEL </term> <term>NC_PANEL_1 </term> <term>NC_PANEL_2 </term> <term>NC_PANEL_3 </term> <term>NC_AL </term> <term>NC_AR </term> <term>NC_BL </term> <term>NC_BR </term> <term>NC_CL </term> <term>NC_CR </term> <term>NC_2AL </term> </listheader> <item> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> </item> </list> </para>  </SubSystem>
    </member>
    <member name="M:Okuma.CLDATAPI.DataAPI.CChuck.SetGrippingFaceWidth(Okuma.CLDATAPI.Enumerations.ChuckIndexEnum,System.Double)">
      <summary> Sets chuck's gripping face width at the specified chuck index for current sub system. </summary>
      <example> This example shows how to call SetGrippingFaceWidth method. <para>	objChuck.SetGrippingFaceWidth(Me.chuckIndexEnum.SelectedValue, CDbl(Me.chuckGrippingFaceWidthUpd.Text))	</para> </example>
      <param name="enValue">Chuck index.  Values of parameter come from the Okuma.CLDATAPI.Enumerations.ChuckIndexEnum enumeration.</param>
      <param name="dblValue">Chuck's gripping face width value to be set</param>
      <returns>None</returns>
      <DataUnit> Default unit is in mm.  Other unit can be set by calling SetDataUnit method </DataUnit>
      <exception cref="System.ApplicationException">Thrown when function fails to perform the operation at current NC condition.</exception>
      <exception cref="System.NotSupportedException">Thrown when operation/input parameters are not supported for the current system.</exception>
      <remarks> <para> The following specifications for Chuck 2 must be met in order to function: <list type="table"> <listheader> <term>Specification</term> <description>Valid/Invalid</description> </listheader> <item> <term>LT Mechanism specification NC spec [4,0] or Sub Spindle NC spec [4,1]</term> <description>Valid</description> </item> </list> </para> </remarks>
      <Figure>CHUCK - CHUCK BARRIER - D1 - Chuck Gripping Face Width D1 <para> Chuck 1 <img src="Chuck1.jpg" /> </para> <para> <para>Chuck 2</para> <img src="Lathe.Parameter.Chuck2.jpg" /> </para> </Figure>
      <SubSystem> Please see <see href="SubSystemNoteTable.htm">Sub System Note Table</see> for more information if applicable. <para>Valid sub systems for this function (Y = Valid, N = Not valid)</para> <para> Sub system for Chuck 1 and 2 <list type="table"> <listheader> <term>NC_RUN </term> <term>NC_RUN_1 </term> <term>NC_RUN_2 </term> <term>NC_RUN_3 </term> <term>NC_PANEL </term> <term>NC_PANEL_1 </term> <term>NC_PANEL_2 </term> <term>NC_PANEL_3 </term> <term>NC_AL </term> <term>NC_AR </term> <term>NC_BL </term> <term>NC_BR </term> <term>NC_CL </term> <term>NC_CR </term> <term>NC_2AL </term> </listheader> <item> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> </item> </list> </para>  </SubSystem>
    </member>
    <member name="M:Okuma.CLDATAPI.DataAPI.CChuck.AddGrippingFaceWidth(Okuma.CLDATAPI.Enumerations.ChuckIndexEnum,System.Double)">
      <summary> Sets chuck's gripping face width by adding the input value to the existing data at the specified chuck index for current sub system. </summary>
      <example> This example shows how to call AddGrippingFaceWidth method. <para>	objChuck.AddGrippingFaceWidth(Me.chuckIndexEnum.SelectedValue, CDbl(Me.chuckGrippingFaceWidthUpd.Text))	</para> </example>
      <param name="enValue">Chuck index.  Values of parameter come from the Okuma.CLDATAPI.Enumerations.ChuckIndexEnum enumeration.</param>
      <param name="dblValue">Chuck's gripping face width value to be added to</param>
      <returns>None</returns>
      <DataUnit> Default unit is in mm.  Other unit can be set by calling SetDataUnit method </DataUnit>
      <exception cref="System.ApplicationException">Thrown when function fails to perform the operation at current NC condition.</exception>
      <exception cref="System.NotSupportedException">Thrown when operation/input parameters are not supported for the current system.</exception>
      <remarks> <para> The following specifications for Chuck 2 must be met in order to function: <list type="table"> <listheader> <term>Specification</term> <description>Valid/Invalid</description> </listheader> <item> <term>LT Mechanism specification NC spec [4,0] or Sub Spindle NC spec [4,1]</term> <description>Valid</description> </item> </list> </para> </remarks>
      <Figure>CHUCK - CHUCK BARRIER - D1 - Chuck Gripping Face Width D1 <para> Chuck 1 <img src="Chuck1.jpg" /> </para> <para><para> Chuck 2</para> <img src="Lathe.Parameter.Chuck2.jpg" /> </para> </Figure>
      <SubSystem> Please see <see href="SubSystemNoteTable.htm">Sub System Note Table</see> for more information if applicable. <para>Valid sub systems for this function (Y = Valid, N = Not valid)</para> <para> Sub system for Chuck 1 and 2 <list type="table"> <listheader> <term>NC_RUN </term> <term>NC_RUN_1 </term> <term>NC_RUN_2 </term> <term>NC_RUN_3 </term> <term>NC_PANEL </term> <term>NC_PANEL_1 </term> <term>NC_PANEL_2 </term> <term>NC_PANEL_3 </term> <term>NC_AL </term> <term>NC_AR </term> <term>NC_BL </term> <term>NC_BR </term> <term>NC_CL </term> <term>NC_CR </term> <term>NC_2AL </term> </listheader> <item> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> </item> </list> </para>  </SubSystem>
    </member>
    <member name="M:Okuma.CLDATAPI.DataAPI.CChuck.GetGrippingDiameter(Okuma.CLDATAPI.Enumerations.ChuckIndexEnum)">
      <summary> Gets chuck's gripping diameter at the specified chuck index for current sub system. </summary>
      <example> This example shows how to call GetGrippingDiameter method. <para>	Me.chuckGrippingDiameter.Text = objChuck.GetGrippingDiameter(Me.chuckIndexEnum.SelectedValue	</para> </example>
      <param name="enValue">Chuck index.  Values of parameter come from the Okuma.CLDATAPI.Enumerations.ChuckIndexEnum enumeration.</param>
      <returns>A System.Double value</returns>
      <DataUnit> Default unit is in mm.  Other unit can be set by calling SetDataUnit method. </DataUnit>
      <exception cref="System.ApplicationException">Thrown when function fails to perform the operation at current NC condition.</exception>
      <exception cref="System.NotSupportedException">Thrown when operation/input parameters are not supported for the current system.</exception>
      <remarks> <para> The following specifications for Chuck 2 must be met in order to function: <list type="table"> <listheader> <term>Specification</term> <description>Valid/Invalid</description> </listheader> <item> <term>LT Mechanism specification NC spec [4,0] or Sub Spindle NC spec [4,1]</term> <description>Valid</description> </item> </list> </para> </remarks>
      <Figure>CHUCK - CHUCK BARRIER - CX - Chuck Gripping Diameter CX <para> Chuck 1 <img src="Chuck1.jpg" /> </para> <para> <para>Chuck 2</para> <img src="Lathe.Parameter.Chuck2.jpg" /> </para> </Figure>
      <SubSystem> Please see <see href="SubSystemNoteTable.htm">Sub System Note Table</see> for more information if applicable. <para>Valid sub systems for this function (Y = Valid, N = Not valid)</para> <para> Sub system for Chuck 1 and 2 <list type="table"> <listheader> <term>NC_RUN </term> <term>NC_RUN_1 </term> <term>NC_RUN_2 </term> <term>NC_RUN_3 </term> <term>NC_PANEL </term> <term>NC_PANEL_1 </term> <term>NC_PANEL_2 </term> <term>NC_PANEL_3 </term> <term>NC_AL </term> <term>NC_AR </term> <term>NC_BL </term> <term>NC_BR </term> <term>NC_CL </term> <term>NC_CR </term> <term>NC_2AL </term> </listheader> <item> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> </item> </list> </para>  </SubSystem>
    </member>
    <member name="M:Okuma.CLDATAPI.DataAPI.CChuck.SetGrippingDiameter(Okuma.CLDATAPI.Enumerations.ChuckIndexEnum,System.Double)">
      <summary> Sets chuck's gripping diameter at the specified chuck index for current sub system. </summary>
      <example> This example shows how to call SetGrippingDiameter method. <para>	objChuck.SetGrippingDiameter(Me.chuckIndexEnum.SelectedValue, CDbl(Me.chuckGrippingDiameterUpd.Text))	</para> </example>
      <param name="enValue">Chuck index.  Values of parameter come from the Okuma.CLDATAPI.Enumerations.ChuckIndexEnum enumeration.</param>
      <param name="dblValue">Chuck's gripping diameter value to be set</param>
      <returns>None</returns>
      <DataUnit> Default unit is in mm.  Other unit can be set by calling SetDataUnit method </DataUnit>
      <exception cref="System.ApplicationException">Thrown when function fails to perform the operation at current NC condition.</exception>
      <exception cref="System.NotSupportedException">Thrown when operation/input parameters are not supported for the current system.</exception>
      <remarks> <para> The following specifications for Chuck 2 must be met in order to function: <list type="table"> <listheader> <term>Specification</term> <description>Valid/Invalid</description> </listheader> <item> <term>LT Mechanism specification NC spec [4,0] or Sub Spindle NC spec [4,1]</term> <description>Valid</description> </item> </list> </para> </remarks>
      <Figure>CHUCK - CHUCK BARRIER - CX - Chuck Gripping Diameter CX <para> Chuck 1 <img src="Chuck1.jpg" /> </para> <para> <para>Chuck 2</para> <img src="Lathe.Parameter.Chuck2.jpg" /> </para> </Figure>
      <SubSystem> Please see <see href="SubSystemNoteTable.htm">Sub System Note Table</see> for more information if applicable. <para>Valid sub systems for this function (Y = Valid, N = Not valid)</para> <para> Sub system for Chuck 1 and 2 <list type="table"> <listheader> <term>NC_RUN </term> <term>NC_RUN_1 </term> <term>NC_RUN_2 </term> <term>NC_RUN_3 </term> <term>NC_PANEL </term> <term>NC_PANEL_1 </term> <term>NC_PANEL_2 </term> <term>NC_PANEL_3 </term> <term>NC_AL </term> <term>NC_AR </term> <term>NC_BL </term> <term>NC_BR </term> <term>NC_CL </term> <term>NC_CR </term> <term>NC_2AL </term> </listheader> <item> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> </item> </list> </para>  </SubSystem>
    </member>
    <member name="M:Okuma.CLDATAPI.DataAPI.CChuck.AddGrippingDiameter(Okuma.CLDATAPI.Enumerations.ChuckIndexEnum,System.Double)">
      <summary> Sets chuck's gripping diameter by adding the input value to the existing data at the specified chuck index for current sub system. </summary>
      <example> This example shows how to call AddGrippingDiameter method. <para>	objChuck.AddGrippingDiameter(Me.chuckIndexEnum.SelectedValue, CDbl(Me.chuckGrippingDiameterUpd.Text))	</para> </example>
      <param name="enValue">Chuck index.  Values of parameter come from the Okuma.CLDATAPI.Enumerations.ChuckIndexEnum enumeration.</param>
      <param name="dblValue">Chuck's gripping diameter value to be added to</param>
      <returns>None</returns>
      <DataUnit> Default unit is in mm.  Other unit can be set by calling SetDataUnit method </DataUnit>
      <exception cref="System.ApplicationException">Thrown when function fails to perform the operation at current NC condition.</exception>
      <exception cref="System.NotSupportedException">Thrown when operation/input parameters are not supported for the current system.</exception>
      <remarks> <para> The following specifications for Chuck 2 must be met in order to function: <list type="table"> <listheader> <term>Specification</term> <description>Valid/Invalid</description> </listheader> <item> <term>LT Mechanism specification NC spec [4,0] or Sub Spindle NC spec [4,1]</term> <description>Valid</description> </item> </list> </para> </remarks>
      <Figure>CHUCK - CHUCK BARRIER - CX - Chuck Gripping Diameter CX <para> Chuck 1 <img src="Chuck1.jpg" /> </para> <para><para> Chuck 2</para> <img src="Lathe.Parameter.Chuck2.jpg" /> </para> </Figure>
      <SubSystem> Please see <see href="SubSystemNoteTable.htm">Sub System Note Table</see> for more information if applicable. <para>Valid sub systems for this function (Y = Valid, N = Not valid)</para> <para> Sub system for Chuck 1 and 2 <list type="table"> <listheader> <term>NC_RUN </term> <term>NC_RUN_1 </term> <term>NC_RUN_2 </term> <term>NC_RUN_3 </term> <term>NC_PANEL </term> <term>NC_PANEL_1 </term> <term>NC_PANEL_2 </term> <term>NC_PANEL_3 </term> <term>NC_AL </term> <term>NC_AR </term> <term>NC_BL </term> <term>NC_BR </term> <term>NC_CL </term> <term>NC_CR </term> <term>NC_2AL </term> </listheader> <item> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> </item> </list> </para>  </SubSystem>
    </member>
    <member name="M:Okuma.CLDATAPI.DataAPI.CChuck.CalGrippingDiameter(Okuma.CLDATAPI.Enumerations.ChuckIndexEnum,System.Double)">
      <summary> Determines chuck's gripping diameter value based on the calculation made for the input data and actual position. </summary>
      <example> This example shows how to call CalGrippingDiameter method. <para>	objChuck.CalGrippingDiameter(Me.chuckIndexEnum.SelectedValue, CDbl(Me.chuckGrippingDiameterUpd.Text))	</para> </example>
      <param name="enValue">Chuck index.  Values of parameter come from the Okuma.CLDATAPI.Enumerations.ChuckIndexEnum enumeration.</param>
      <param name="dblValue">Input value to be calculated from</param>
      <returns>None</returns>
      <DataUnit> Default unit is in mm.  Other unit can be set by calling SetDataUnit method </DataUnit>
      <exception cref="System.ApplicationException">Thrown when function fails to perform the operation at current NC condition.</exception>
      <exception cref="System.NotSupportedException">Thrown when operation/input parameters are not supported for the current system.</exception>
      <remarks> <para> The following specifications for Chuck 2 must be met in order to function: <list type="table"> <listheader> <term>Specification</term> <description>Valid/Invalid</description> </listheader> <item> <term>LT Mechanism specification NC spec [4,0] or Sub Spindle NC spec [4,1]</term> <description>Valid</description> </item> </list> </para> </remarks>
      <Figure>CHUCK - CHUCK BARRIER - CX - Chuck Gripping Diameter CX <para> Chuck 1 <img src="Chuck1.jpg" /> </para> <para> <para>Chuck 2</para> <img src="Lathe.Parameter.Chuck2.jpg" /> </para> </Figure>
      <SubSystem> Please see <see href="SubSystemNoteTable.htm">Sub System Note Table</see> for more information if applicable. <para>Valid sub systems for this function (Y = Valid, N = Not valid)</para> <para> Sub system for Chuck 1 and 2 <list type="table"> <listheader> <term>NC_RUN </term> <term>NC_RUN_1 </term> <term>NC_RUN_2 </term> <term>NC_RUN_3 </term> <term>NC_PANEL </term> <term>NC_PANEL_1 </term> <term>NC_PANEL_2 </term> <term>NC_PANEL_3 </term> <term>NC_AL </term> <term>NC_AR </term> <term>NC_BL </term> <term>NC_BR </term> <term>NC_CL </term> <term>NC_CR </term> <term>NC_2AL </term> </listheader> <item> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> </item> </list> </para>  </SubSystem>
    </member>
    <member name="M:Okuma.CLDATAPI.DataAPI.CChuck.GetGrippingFaceToProgramZeroDistance(Okuma.CLDATAPI.Enumerations.ChuckIndexEnum)">
      <summary> Gets distance from chuck's gripping face to program zero at the specified chuck index for current sub system. </summary>
      <example> This example shows how to call GetGrippingFaceToProgramZeroDistance method. <para>	Me.chuckGrippingFaceToDistance.Text = objChuck.GetGrippingFaceToProgramZeroDistance(Me.chuckIndexEnum.SelectedValue)	</para> </example>
      <param name="enValue">Chuck index.  Values of parameter come from the Okuma.CLDATAPI.Enumerations.ChuckIndexEnum enumeration.</param>
      <returns>A System.Double value</returns>
      <DataUnit> Default unit is in mm.  Other unit can be set by calling SetDataUnit method. </DataUnit>
      <exception cref="System.ApplicationException">Thrown when function fails to perform the operation at current NC condition.</exception>
      <exception cref="System.NotSupportedException">Thrown when operation/input parameters are not supported for the current system.</exception>
      <remarks> <para> The following specifications for Chuck 2 must be met in order to function: <list type="table"> <listheader> <term>Specification</term> <description>Valid/Invalid</description> </listheader> <item> <term>LT Mechanism specification NC spec [4,0] or Sub Spindle NC spec [4,1]</term> <description>Valid</description> </item> </list> </para> </remarks>
      <Figure>CHUCK - CHUCK BARRIER - CZ - Distance from chuck's gripping face to program zero. <para> Chuck 1 <img src="Chuck1.jpg" /> </para> <para> <para>Chuck 2</para> <img src="Lathe.Parameter.Chuck2.jpg" /> </para> </Figure>
      <SubSystem> Please see <see href="SubSystemNoteTable.htm">Sub System Note Table</see> for more information if applicable. <para>Valid sub systems for this function (Y = Valid, N = Not valid)</para> <para> Sub system for Chuck 1 and 2 <list type="table"> <listheader> <term>NC_RUN </term> <term>NC_RUN_1 </term> <term>NC_RUN_2 </term> <term>NC_RUN_3 </term> <term>NC_PANEL </term> <term>NC_PANEL_1 </term> <term>NC_PANEL_2 </term> <term>NC_PANEL_3 </term> <term>NC_AL </term> <term>NC_AR </term> <term>NC_BL </term> <term>NC_BR </term> <term>NC_CL </term> <term>NC_CR </term> <term>NC_2AL </term> </listheader> <item> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> </item> </list> </para>  </SubSystem>
    </member>
    <member name="M:Okuma.CLDATAPI.DataAPI.CChuck.SetGrippingFaceToProgramZeroDistance(Okuma.CLDATAPI.Enumerations.ChuckIndexEnum,System.Double)">
      <summary> Sets distance from chuck's gripping face to program zero at the specified chuck index for current sub system. </summary>
      <example> This example shows how to call SetGrippingFaceToProgramZeroDistance method. <para>	objChuck.SetGrippingFaceToProgramZeroDistance(Me.chuckIndexEnum.SelectedValue, CDbl(Me.chuckGrippingFaceToDistanceUpd.Text))	</para> </example>
      <param name="enValue">Chuck index.  Values of parameter come from the Okuma.CLDATAPI.Enumerations.ChuckIndexEnum enumeration.</param>
      <param name="dblValue">Distance from chuck's gripping face to program zero to be set.</param>
      <returns>None</returns>
      <DataUnit> Default unit is in mm.  Other unit can be set by calling SetDataUnit method </DataUnit>
      <exception cref="System.ApplicationException">Thrown when function fails to perform the operation at current NC condition.</exception>
      <exception cref="System.NotSupportedException">Thrown when operation/input parameters are not supported for the current system.</exception>
      <remarks> <para> The following specifications for Chuck 2 must be met in order to function: <list type="table"> <listheader> <term>Specification</term> <description>Valid/Invalid</description> </listheader> <item> <term>LT Mechanism specification NC spec [4,0] or Sub Spindle NC spec [4,1]</term> <description>Valid</description> </item> </list> </para> </remarks>
      <Figure>CHUCK - CHUCK BARRIER - CZ - Distance from chuck's gripping face to program zero. <para> Chuck 1 <img src="Chuck1.jpg" /> </para> <para> <para>Chuck 2</para> <img src="Lathe.Parameter.Chuck2.jpg" /> </para> </Figure>
      <SubSystem> Please see <see href="SubSystemNoteTable.htm">Sub System Note Table</see> for more information if applicable. <para>Valid sub systems for this function (Y = Valid, N = Not valid)</para> <para> Sub system for Chuck 1 and 2 <list type="table"> <listheader> <term>NC_RUN </term> <term>NC_RUN_1 </term> <term>NC_RUN_2 </term> <term>NC_RUN_3 </term> <term>NC_PANEL </term> <term>NC_PANEL_1 </term> <term>NC_PANEL_2 </term> <term>NC_PANEL_3 </term> <term>NC_AL </term> <term>NC_AR </term> <term>NC_BL </term> <term>NC_BR </term> <term>NC_CL </term> <term>NC_CR </term> <term>NC_2AL </term> </listheader> <item> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> </item> </list> </para>  </SubSystem>
    </member>
    <member name="M:Okuma.CLDATAPI.DataAPI.CChuck.AddGrippingFaceToProgramZeroDistance(Okuma.CLDATAPI.Enumerations.ChuckIndexEnum,System.Double)">
      <summary> Sets distance from chuck's gripping face to program zero by adding the input value to the existing data at the specified chuck index for current sub system. </summary>
      <example> This example shows how to call AddGrippingFaceToProgramZeroDistance method. <para>	objChuck.AddGrippingFaceToProgramZeroDistance(Me.chuckIndexEnum.SelectedValue, CDbl(Me.chuckGrippingFaceToDistanceUpd.Text))	</para> </example>
      <param name="enValue">Chuck index.  Values of parameter come from the Okuma.CLDATAPI.Enumerations.ChuckIndexEnum enumeration.</param>
      <param name="dblValue">Value to be added to chuck's gripping face.</param>
      <returns>None</returns>
      <DataUnit> Default unit is in mm.  Other unit can be set by calling SetDataUnit method </DataUnit>
      <exception cref="System.ApplicationException">Thrown when function fails to perform the operation at current NC condition.</exception>
      <exception cref="System.NotSupportedException">Thrown when operation/input parameters are not supported for the current system.</exception>
      <remarks> <para> The following specifications for Chuck 2 must be met in order to function: <list type="table"> <listheader> <term>Specification</term> <description>Valid/Invalid</description> </listheader> <item> <term>LT Mechanism specification NC spec [4,0] or Sub Spindle NC spec [4,1]</term> <description>Valid</description> </item> </list> </para> </remarks>
      <Figure>CHUCK - CHUCK BARRIER - CZ - Distance from chuck's gripping face to program zero. <para> Chuck 1 <img src="Chuck1.jpg" /> </para> <para><para> Chuck 2</para> <img src="Lathe.Parameter.Chuck2.jpg" /> </para> </Figure>
      <SubSystem> Please see <see href="SubSystemNoteTable.htm">Sub System Note Table</see> for more information if applicable. <para>Valid sub systems for this function (Y = Valid, N = Not valid)</para> <para> Sub system for Chuck 1 and 2 <list type="table"> <listheader> <term>NC_RUN </term> <term>NC_RUN_1 </term> <term>NC_RUN_2 </term> <term>NC_RUN_3 </term> <term>NC_PANEL </term> <term>NC_PANEL_1 </term> <term>NC_PANEL_2 </term> <term>NC_PANEL_3 </term> <term>NC_AL </term> <term>NC_AR </term> <term>NC_BL </term> <term>NC_BR </term> <term>NC_CL </term> <term>NC_CR </term> <term>NC_2AL </term> </listheader> <item> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> </item> </list> </para>  </SubSystem>
    </member>
    <member name="M:Okuma.CLDATAPI.DataAPI.CChuck.CalGrippingFaceToProgramZeroDistance(Okuma.CLDATAPI.Enumerations.ChuckIndexEnum,System.Double)">
      <summary> Determines the distance from chuck gripping face to program zero based on the calculation made for the input data and actual position. </summary>
      <example> This example shows how to call CalGrippingFaceToProgramZeroDistance method. <para>	objChuck.CalGrippingFaceToProgramZeroDistance(Me.chuckIndexEnum.SelectedValue, CDbl(Me.chuckGrippingFaceToDistanceUpd.Text))	</para> </example>
      <param name="enValue">Chuck index.  Values of parameter come from the Okuma.CLDATAPI.Enumerations.ChuckIndexEnum enumeration.</param>
      <param name="dblValue">Input value to be calculated from</param>
      <returns>None</returns>
      <DataUnit> Default unit is in mm.  Other unit can be set by calling SetDataUnit method </DataUnit>
      <exception cref="System.ApplicationException">Thrown when input parameters are out of range or it fails to write to NC system</exception>
      <exception cref="System.NotSupportedException">Thrown when operation/input parameters are not supported for the current system.</exception>
      <remarks> <para> The following specifications for Chuck 2 must be met in order to function: <list type="table"> <listheader> <term>Specification</term> <description>Valid/Invalid</description> </listheader> <item> <term>LT Mechanism specification NC spec [4,0] or Sub Spindle NC spec [4,1]</term> <description>Valid</description> </item> </list> </para> </remarks>
      <Figure>CHUCK - CHUCK BARRIER - CZ - Chuck Gripping Diameter CZ <para> Chuck 1 <img src="Chuck1.jpg" /> </para> <para> <para>Chuck 2</para> <img src="Lathe.Parameter.Chuck2.jpg" /> </para> </Figure>
      <SubSystem> Please see <see href="SubSystemNoteTable.htm">Sub System Note Table</see> for more information if applicable. <para>Valid sub systems for this function (Y = Valid, N = Not valid)</para> <para> Sub system for Chuck 1 and 2 <list type="table"> <listheader> <term>NC_RUN </term> <term>NC_RUN_1 </term> <term>NC_RUN_2 </term> <term>NC_RUN_3 </term> <term>NC_PANEL </term> <term>NC_PANEL_1 </term> <term>NC_PANEL_2 </term> <term>NC_PANEL_3 </term> <term>NC_AL </term> <term>NC_AR </term> <term>NC_BL </term> <term>NC_BR </term> <term>NC_CL </term> <term>NC_CR </term> <term>NC_2AL </term> </listheader> <item> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> </item> </list> </para>  </SubSystem>
    </member>
    <member name="M:Okuma.CLDATAPI.DataAPI.CChuck.GetSecondChuckZeroOffset">
      <summary> Gets zero offset of the second chuck for current sub system. </summary>
      <example> This example shows how to call GetSecondChuckZeroOffset method. <para>	Me.chuckSecondChuckZeroOffset.Text = objChuck.GetSecondChuckZeroOffset()	</para> </example>
      <returns>A System.Double value</returns>
      <DataUnit> Default unit is in mm.  Other unit can be set by calling SetDataUnit method. </DataUnit>
      <exception cref="System.ApplicationException">Thrown when function fails to perform the operation at current NC condition.</exception>
      <exception cref="System.NotSupportedException">Thrown when operation/input parameters are not supported for the current system.</exception>
      <remarks> <para> The following specifications must be met in order to function: <list type="table"> <listheader> <term>Specification</term> <description>Valid/Invalid</description> </listheader> <item> <term>LT Mechanism specification NC spec [4,0] or Sub Spindle NC spec [4,1]</term> <description>Valid</description> </item> </list> </para> </remarks>
      <Figure>CHUCK - CHUCK BARRIER - ZOF - Second Chuck's Zero Offset <para> <img src="Lathe.Parameter.Chuck2.jpg" /> </para> </Figure>
      <SubSystem> Please see <see href="SubSystemNoteTable.htm">Sub System Note Table</see> for more information if applicable. <para>Valid sub systems for this function (Y = Valid, N = Not valid)</para> <para> <list type="table"> <listheader> <term>NC_RUN </term> <term>NC_RUN_1 </term> <term>NC_RUN_2 </term> <term>NC_RUN_3 </term> <term>NC_PANEL </term> <term>NC_PANEL_1 </term> <term>NC_PANEL_2 </term> <term>NC_PANEL_3 </term> <term>NC_AL </term> <term>NC_AR </term> <term>NC_BL </term> <term>NC_BR </term> <term>NC_CL </term> <term>NC_CR </term> <term>NC_2AL </term> </listheader> <item> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> </item> </list> </para>  </SubSystem>
    </member>
    <member name="M:Okuma.CLDATAPI.DataAPI.CChuck.SetSecondChuckZeroOffset(System.Double)">
      <summary> Sets second chuck's zero offset for current sub system. </summary>
      <example> This example shows how to call SetSecondChuckZeroOffset method. <para>	objChuck.SetSecondChuckZeroOffset(CDbl(Me.chuckSecondChuckZeroOffsetUpd.Text))	</para> </example>
      <param name="dblValue">Zero offset value to be set</param>
      <returns>None</returns>
      <DataUnit> Default unit is in mm.  Other unit can be set by calling SetDataUnit method </DataUnit>
      <exception cref="System.ApplicationException">Thrown when function fails to perform the operation at current NC condition.</exception>
      <exception cref="System.NotSupportedException">Thrown when operation/input parameters are not supported for the current system.</exception>
      <remarks> <para> The following specifications must be met in order to function: <list type="table"> <listheader> <term>Specification</term> <description>Valid/Invalid</description> </listheader> <item> <term>LT Mechanism specification NC spec [4,0] or Sub Spindle NC spec [4,1]</term> <description>Valid</description> </item> </list> </para> </remarks>
      <Figure>CHUCK - CHUCK BARRIER - ZOF - Second Chuck's Zero Offset <para> <img src="Lathe.Parameter.Chuck2.jpg" /> </para> </Figure>
      <SubSystem> Please see <see href="SubSystemNoteTable.htm">Sub System Note Table</see> for more information if applicable. <para>Valid sub systems for this function (Y = Valid, N = Not valid)</para> <para> Sub system for Chuck 2 <list type="table"> <listheader> <term>NC_RUN </term> <term>NC_RUN_1 </term> <term>NC_RUN_2 </term> <term>NC_RUN_3 </term> <term>NC_PANEL </term> <term>NC_PANEL_1 </term> <term>NC_PANEL_2 </term> <term>NC_PANEL_3 </term> <term>NC_AL </term> <term>NC_AR </term> <term>NC_BL </term> <term>NC_BR </term> <term>NC_CL </term> <term>NC_CR </term> <term>NC_2AL </term> </listheader> <item> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> </item> </list> </para>  </SubSystem>
    </member>
    <member name="M:Okuma.CLDATAPI.DataAPI.CChuck.AddSecondChuckZeroOffset(System.Double)">
      <summary> Sets second chuck's zero offset by adding the input value to the existing data for current sub system. </summary>
      <example> This example shows how to call AddSecondChuckZeroOffset method. <para>	objChuck.AddSecondChuckZeroOffset(CDbl(Me.chuckSecondChuckZeroOffsetUpd.Text))	</para> </example>
      <param name="dblValue">Zero offset value to be added to</param>
      <returns>None</returns>
      <DataUnit> Default unit is in mm.  Other unit can be set by calling SetDataUnit method </DataUnit>
      <exception cref="System.ApplicationException">Thrown when function fails to perform the operation at current NC condition.</exception>
      <exception cref="System.NotSupportedException">Thrown when operation/input parameters are not supported for the current system.</exception>
      <remarks> <para> The following specifications must be met in order to function: <list type="table"> <listheader> <term>Specification</term> <description>Valid/Invalid</description> </listheader> <item> <term>LT Mechanism specification NC spec [4,0] or Sub Spindle NC spec [4,1]</term> <description>Valid</description> </item> </list> </para> </remarks>
      <Figure>CHUCK - CHUCK BARRIER - ZOF - Second Chuck's Zero Offset <para> <img src="Lathe.Parameter.Chuck2.jpg" /> </para> </Figure>
      <SubSystem> Please see <see href="SubSystemNoteTable.htm">Sub System Note Table</see> for more information if applicable. <para>Valid sub systems for this function (Y = Valid, N = Not valid)</para> <para> Sub system for Chuck 2 <list type="table"> <listheader> <term>NC_RUN </term> <term>NC_RUN_1 </term> <term>NC_RUN_2 </term> <term>NC_RUN_3 </term> <term>NC_PANEL </term> <term>NC_PANEL_1 </term> <term>NC_PANEL_2 </term> <term>NC_PANEL_3 </term> <term>NC_AL </term> <term>NC_AR </term> <term>NC_BL </term> <term>NC_BR </term> <term>NC_CL </term> <term>NC_CR </term> <term>NC_2AL </term> </listheader> <item> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> </item> </list> </para>  </SubSystem>
    </member>
    <member name="T:Okuma.CLDATAPI.DataAPI.CCurrentAlarm">
      <summary> <para> Class represents current alarm information from NC. For more information, please refer to the CNC System OSP-P200L/P20L/OSP-P200L-R/P20L-R Alarm and Error List document. </para>  </summary>
    </member>
    <member name="M:Okuma.CLDATAPI.DataAPI.CCurrentAlarm.#ctor(System.Int32,Okuma.CLDATAPI.Enumerations.OSPAlarmLevelEnum,System.Int32,System.String,System.String,System.String,System.String)">
      <summary> Initializes a new instance of the CCurrentAlarm class with the alarm number, alarm level, alarm object, alarm code, alarm message, object message, and alarm character string. </summary>
      <param name="intAlarmNumber">Alarm number</param>
      <param name="enAlarmLevel">Alarm level</param>
      <param name="intAlarmObject">Alarm object</param>
      <param name="strAlarmCode">Alarm code</param>
      <param name="strAlarmMessage">Alarm message</param>
      <param name="strObjectMessage">Object message</param>
      <param name="strAlarmCharacterString">Alarm Character String</param>
    </member>
    <member name="P:Okuma.CLDATAPI.DataAPI.CCurrentAlarm.AlarmNumber">
      <summary> Gets the alarm number for this CCurrentAlarm instance. </summary>
      <returns> A System.Int32 containing the alarm number</returns>
      <Figure> Alarm Format - Alarm number (1) <para> <img src="Lathe.AlarmFormat.jpg" /> </para>  </Figure>
    </member>
    <member name="P:Okuma.CLDATAPI.DataAPI.CCurrentAlarm.AlarmLevel">
      <summary> Gets the alarm level for this CCurrentAlarm instance. </summary>
      <returns>An Okuma.CLDATAPI.Enumerations.AlarmLevelEnum value</returns>
      <Figure> Alarm Classifications <para> <img src="Lathe.AlarmLevel.jpg" /> </para>  </Figure>
    </member>
    <member name="P:Okuma.CLDATAPI.DataAPI.CCurrentAlarm.ObjectNumber">
      <summary> Gets the alarm Object number for this CCurrentAlarm instance. The object number and the object message show the programming system and the control axis where the alarm has occurred by the number and message as shown in the table below: </summary>
      <returns> A System.Int32 containing the alarm Object</returns>
      <Figure> Alarm Format - Object number (2) <para> <img src="Lathe.AlarmFormat.jpg" /> </para> <para> Object Number and Object Message Table: </para> <para> <img src="Lathe.AlarmObject.jpg" /> </para> <para> As indicated above, the object numbers and messages to be used are determined by the machine specifications. </para>  </Figure>
    </member>
    <member name="P:Okuma.CLDATAPI.DataAPI.CCurrentAlarm.AlarmCode">
      <summary> Gets the alarm code for this CCurrentAlarm instance. </summary>
      <returns> A System.Int32 containing the alarm code</returns>
      <Figure> Alarm Format - Alarm code (6) <para> <img src="Lathe.AlarmFormat.jpg" /> </para>  </Figure>
    </member>
    <member name="P:Okuma.CLDATAPI.DataAPI.CCurrentAlarm.AlarmMessage">
      <summary> Gets the alarm message for this CCurrentAlarm instance. </summary>
      <returns>A System.String containing the alarm message</returns>
      <Figure> Alarm Format - Alarm Message (4) <para> <img src="Lathe.AlarmFormat.jpg" /> </para>  </Figure>
    </member>
    <member name="P:Okuma.CLDATAPI.DataAPI.CCurrentAlarm.ObjectMessage">
      <summary> Gets the alarm Object message for this CCurrentAlarm instance. </summary>
      <returns>A System.String containing the alarm Object message</returns>
      <Figure> Alarm Format - Object Message (5) <para> <img src="Lathe.AlarmFormat.jpg" /> </para>  </Figure>
    </member>
    <member name="P:Okuma.CLDATAPI.DataAPI.CCurrentAlarm.AlarmCharacterString">
      <summary> Gets the alarm Character String for this CCurrentAlarm instance. </summary>
      <returns>A System.String containing the alarm Character String</returns>
      <Figure> Alarm Format - Alarm character-string (7) <para> <img src="Lathe.AlarmFormat.jpg" /> </para>  </Figure>
    </member>
    <member name="T:Okuma.CLDATAPI.DataAPI.CFCommand">
      <exclude> For internal usage only.  </exclude>
    </member>
    <member name="M:Okuma.CLDATAPI.DataAPI.CFCommand.SetSubSystem(Okuma.CLDATAPI.Enumerations.SubSystemEnum)">
      <summary> Set current sub System for this class instance </summary>
      <example> This example shows how to call SetSubSystemEnum method <para> objTurret.SetSubSystem(cmb_Turret_SubSys.SelectedItem)	</para> </example>
      <param name="enSubSystemEnum">Sub System Enum value. Value of parameter comes from Okuma.CLDATAPI.Enumerations.SubSystemEnum.</param>
      <exception cref="System.ApplicationException">Thrown when function fails to perform the operation at current NC condition.</exception>
      <exception cref="System.NotSupportedException">Thrown when operation/input parameters are not supported for the current System.</exception>
    </member>
    <member name="T:Okuma.CLDATAPI.DataAPI.CP300SFCommand">
      <exclude> For internal usage only.  </exclude>
    </member>
    <member name="T:Okuma.CLDATAPI.DataAPI.CP300LFCommand">
      <exclude> For internal usage only.  </exclude>
    </member>
    <member name="T:Okuma.CLDATAPI.DataAPI.CIO">
      <summary> Class provides information about PLC I/O Bit, Word, and Long Word.  </summary>
    </member>
    <member name="M:Okuma.CLDATAPI.DataAPI.CIO.#ctor(Okuma.CLDATAPI.Enumerations.SubSystemEnum)">
      <summary> Create an instance of this class given sub system.  By default, class is created with sub system = NC_AL. </summary>
      <param name="enSubSystem">Sub system</param>
    </member>
    <member name="M:Okuma.CLDATAPI.DataAPI.CIO.SetSubSystem(Okuma.CLDATAPI.Enumerations.SubSystemEnum)">
      <summary> Set current sub system for this class instance </summary>
      <example> This sample shows how to call the SetSubSystem method. <para> Dim enSubSystem as SubSystemEnum = SubSystemEnum.NC_AL </para> <para> objProgram.SetSubSystem(enSubSystem)	</para> </example>
      <param name="enSubSystem">Sub Sytem value. Value of parameter comes from Okuma.CLDATAPI.Enumerations.SubSystemEnum.</param>
      <exception cref="System.ApplicationException">Thrown when function fails to perform the operation at current NC condition.</exception>
      <exception cref="System.NotSupportedException">Thrown when operation/input parameters are not supported for the current system.</exception>
    </member>
    <member name="M:Okuma.CLDATAPI.DataAPI.CIO.GetBitIO(Okuma.CLDATAPI.Enumerations.IOTypeEnum,System.Int32,Okuma.CLDATAPI.Enumerations.BitsEnum)">
      <summary>Gets I/O bit at the specified address index. </summary>
      <example> This example shows how to call GetBitIO method <para>  Me.varValue.Text = objIO.GetBitIO( enIO,  intAddressIndex,  enBits)	</para> </example>
      <param name="enIO">I/O variable type.  Values of parameter come from Okuma.CLDATAPI.Enumerations.IOTypeEnum enumeration.</param>
      <param name="intAddressIndex"> <para> Logical I/O address index</para> <para>Input address is starting from 0 to 511</para> <para>Output address is starting from 512 to 1023</para> </param>
      <param name="enBits">Bit number.  Values of parameter come from Okuma.CLDATAPI.Enumerations.BitsEnum enumeration.</param>
      <returns>An Okuma.CLDATAPI.Enumerations.OnOffStateEnum enumeration value</returns>
      <exception cref="System.ApplicationException">Thrown when function fails to perform the operation at current NC condition.</exception>
      <exception cref="System.NotSupportedException">Thrown when operation/input parameters are not supported for the current system.</exception>
      <Figure> I/O Monitor application <para> <img src="Lathe.IO.Monitor.Bit.jpg" /> </para>  </Figure>
    </member>
    <member name="M:Okuma.CLDATAPI.DataAPI.CIO.GetWordIO(Okuma.CLDATAPI.Enumerations.IOTypeEnum,System.Int32)">
      <summary>Gets I/O WORD at the specified address index. </summary>
      <example> This example shows how to call GetWordIO method <para>  Me.varValue.Text = objIO.GetWordIO( enIO,  intAddressIndex)	</para> </example>
      <param name="enIO">I/O type.  Values of parameter come from Okuma.CMDATAPI.Enumerations.IOTypeEnum enumeration.</param>
      <param name="intAddressIndex">Logical I/O address index</param>
      <returns>A System.Int32 value represents decimal value</returns>
      <exception cref="System.ApplicationException">Thrown when function fails to perform the operation at current NC condition.</exception>
      <exception cref="System.NotSupportedException">Thrown when operation/input parameters are not supported for the current system.</exception>
      <Figure> I/O Monitor application <para> <img src="Lathe.IO.Monitor.Word.jpg" /> </para> </Figure>
      <remarks> Data value displayed on OSP IO Monitor application can have negative values in DEC column. However, HEX column will display actual value. For example: If Word data of index 17 bit 15 is ON then it will be displayed as -1 in DEC column, and FFFF in HEX column. This function will return 65535.  </remarks>
    </member>
    <member name="M:Okuma.CLDATAPI.DataAPI.CIO.GetLongWordIO(Okuma.CLDATAPI.Enumerations.IOTypeEnum,System.Int32)">
      <summary>Gets I/O LONG WORD at the specified address index. </summary>
      <example> This example shows how to call GetLongWordIO method <para>  Me.varValue.Text = objIO.GetLongWordIO( enIO,  intAddressIndex)	</para> </example>
      <param name="enIO">I/O variable type.  Values of parameter come from Okuma.CLDATAPI.Enumerations.IOTypeEnum enumeration.</param>
      <param name="intAddressIndex">Logical I/O address index</param>
      <returns>A System.Int64 value represents decimal value</returns>
      <exception cref="System.ApplicationException">Thrown when function fails to perform the operation at current NC condition.</exception>
      <exception cref="System.NotSupportedException">Thrown when operation/input parameters are not supported for the current system.</exception>
      <Figure> I/O Monitor application <para> <img src="Lathe.IO.Monitor.LongWord.jpg" /> </para> </Figure>
      <remarks> Data value displayed on OSP IO Monitor application can have negative values in DEC column. However, HEX column will display actual value. For example: If Long Word data has a HEX value of FFFFFFFF then it will be displayed as -1 in DEC column. This function will return 4294967295 for the equivalent value of FFFFFFFF in HEX .  </remarks>
    </member>
    <member name="M:Okuma.CLDATAPI.DataAPI.CIO.GetUserTaskIOVariable(Okuma.CLDATAPI.Enumerations.IOTypeEnum,System.Int32)">
      <summary>Gets User Task I/O variable given I/O type and variable index. </summary>
      <example> This example shows how to call GetUserTaskIOVariable method <para>  Me.varValue.Text = objIO.GetUserTaskIOVariable(enIO, intIndex)	</para> </example>
      <param name="enIO">I/O variable type.  Values of parameter come from Okuma.CLDATAPI.Enumerations.IOTypeEnum enumeration.</param>
      <param name="intIndex">User Task I/O variable index. Valid variable indexes are ranging from 11-18.</param>
      <returns>An Okuma.CLDATAPI.Enumerations.OnOffStateEnum enumeration value</returns>
      <exception cref="System.ApplicationException">Thrown when function fails to perform the operation at current NC condition.</exception>
      <exception cref="System.NotSupportedException">Thrown when operation/input parameters are not supported for the current system.</exception>
      <Figure> I/O Monitor application <para> <img src="Lathe.IO.Monitor.UserTaskIO.jpg" /> </para> </Figure>
      <remarks> <para> ********************* This function cannot be supported in OSP-P100 II machines. ************************ </para> </remarks>
      <SubSystem> Please see <see href="SubSystemNoteTable.htm">Sub System Note Table</see> for more information if applicable. <para>Valid sub systems for this function (Y = Valid, N = Not valid)</para> <para> <list type="table"> <listheader> <term>NC_RUN </term> <term>NC_RUN_1 </term> <term>NC_RUN_2 </term> <term>NC_RUN_3 </term> <term>NC_PANEL </term> <term>NC_PANEL_1 </term> <term>NC_PANEL_2 </term> <term>NC_PANEL_3 </term> <term>NC_AL </term> <term>NC_AR </term> <term>NC_BL </term> <term>NC_BR </term> <term>NC_CL </term> <term>NC_CR </term> <term>NC_2AL </term> </listheader> <item> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> </item> </list> </para>  </SubSystem>
    </member>
    <member name="M:Okuma.CLDATAPI.DataAPI.CIO.SetUserTaskOutputVariable(System.Int32,Okuma.CLDATAPI.Enumerations.OnOffStateEnum)">
      <summary>Sets User Task Output I/O variable given variable index. </summary>
      <example> This example shows how to call SetUserTaskOutputVariable method <para>  Dim enValue as OnOffStateEnum = OnOffStateEnum.ON	</para> <para>  Me.varValue.Text = objIO.SetUserTaskOutputVariable(intIndex, enValue)	</para> </example>
      <param name="intIndex">User Task I/O variable index. Valid variable indexes are ranging from 11-18.</param>
      <param name="enValue">User Task output value to be set.  Values of parameter come from Okuma.CLDATAPI.Enumerations.OnOffStateEnum enumeration.</param>
      <exception cref="System.ApplicationException">Thrown when function fails to perform the operation at current NC condition.</exception>
      <exception cref="System.NotSupportedException">Thrown when operation/input parameters are not supported for the current system.</exception>
      <Figure> I/O Monitor application <para> <img src="Lathe.IO.Monitor.UserTaskIO.jpg" /> </para> </Figure>
      <remarks> <para> ********************* This function cannot be supported in OSP-P100 II machines. ************************ </para> </remarks>
      <SubSystem> Please see <see href="SubSystemNoteTable.htm">Sub System Note Table</see> for more information if applicable. <para>Valid sub systems for this function (Y = Valid, N = Not valid)</para> <para> <list type="table"> <listheader> <term>NC_RUN </term> <term>NC_RUN_1 </term> <term>NC_RUN_2 </term> <term>NC_RUN_3 </term> <term>NC_PANEL </term> <term>NC_PANEL_1 </term> <term>NC_PANEL_2 </term> <term>NC_PANEL_3 </term> <term>NC_AL </term> <term>NC_AR </term> <term>NC_BL </term> <term>NC_BR </term> <term>NC_CL </term> <term>NC_CR </term> <term>NC_2AL </term> </listheader> <item> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> </item> </list> </para>  </SubSystem>
    </member>
    <member name="M:Okuma.CLDATAPI.DataAPI.CIO.GetProtectedUserTaskOutputVariable(System.Int32)">
      <summary>Gets Protected User Task I/O output variable given variable index. </summary>
      <example> This example shows how to call GetProptectedUserTaskOuptutVariable method <para>  Dim enValue	as OnOffStateEnum </para> <para>  enValue = objIO.GetProptectedUserTaskIOOuptutVariable(intIndex)	</para> </example>
      <param name="intIndex">User Task I/O variable index. Valid variable indexes are ranging from 11-18.</param>
      <returns>An Okuma.CLDATAPI.Enumerations.OnOffStateEnum enumeration value.  It is in protected mode if it is ON otherwise not protected</returns>
      <exception cref="System.ApplicationException">Thrown when function fails to perform the operation at current NC condition.</exception>
      <exception cref="System.NotSupportedException">Thrown when operation/input parameters are not supported for the current system.</exception>
      <Figure> I/O Monitor application <para> <img src="Lathe.IO.Monitor.UserTaskIO.jpg" /> </para> </Figure>
      <remarks> <para> ********************* This function cannot be supported in OSP-P100 II machines. ************************ </para> </remarks>
      <SubSystem> Please see <see href="SubSystemNoteTable.htm">Sub System Note Table</see> for more information if applicable. <para>Valid sub systems for this function (Y = Valid, N = Not valid)</para> <para> <list type="table"> <listheader> <term>NC_RUN </term> <term>NC_RUN_1 </term> <term>NC_RUN_2 </term> <term>NC_RUN_3 </term> <term>NC_PANEL </term> <term>NC_PANEL_1 </term> <term>NC_PANEL_2 </term> <term>NC_PANEL_3 </term> <term>NC_AL </term> <term>NC_AR </term> <term>NC_BL </term> <term>NC_BR </term> <term>NC_CL </term> <term>NC_CR </term> <term>NC_2AL </term> </listheader> <item> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> </item> </list> </para>  </SubSystem>
    </member>
    <member name="M:Okuma.CLDATAPI.DataAPI.CIO.SetProtectedUserTaskOutputVariable(System.Int32,Okuma.CLDATAPI.Enumerations.OnOffStateEnum)">
      <summary>Protect User Task Output I/O variable from writing in NC given variable index. If a User Task Output I/O variable has been set for protection it will prevent NC from writing into this ouptut variable. For example: VDOUT[11] = 1 will generate a NC alarm if output variable 11 is protected. </summary>
      <example> This example shows how to call SetProtectedUserTaskOutputVariable method <para>  Dim enValue as OnOffStateEnum = OnOffStateEnum.ON </para> <para>  objIO.SetProtectedUserTaskOutputVariable(intIndex, enValue)	</para> </example>
      <param name="intIndex">User Task output I/O variable index. Valid variable indexes are ranging from 11-18.</param>
      <param name="enValue">It is in protected mode if setting value is ON, otherwise it is un-protected. Values of parameter come from Okuma.CLDATAPI.Enumerations.OnOffStateEnum enumeration.</param>
      <exception cref="System.ApplicationException">Thrown when function fails to perform the operation at current NC condition.</exception>
      <exception cref="System.NotSupportedException">Thrown when operation/input parameters are not supported for the current system.</exception>
      <Figure> I/O Monitor application <para> <img src="Lathe.IO.Monitor.UserTaskIO.jpg" /> </para> </Figure>
      <remarks> <para> ********************* This function cannot be supported in OSP-P100 II machines. ************************ </para> </remarks>
      <SubSystem> Please see <see href="SubSystemNoteTable.htm">Sub System Note Table</see> for more information if applicable. <para>Valid sub systems for this function (Y = Valid, N = Not valid)</para> <para> <list type="table"> <listheader> <term>NC_RUN </term> <term>NC_RUN_1 </term> <term>NC_RUN_2 </term> <term>NC_RUN_3 </term> <term>NC_PANEL </term> <term>NC_PANEL_1 </term> <term>NC_PANEL_2 </term> <term>NC_PANEL_3 </term> <term>NC_AL </term> <term>NC_AR </term> <term>NC_BL </term> <term>NC_BR </term> <term>NC_CL </term> <term>NC_CR </term> <term>NC_2AL </term> </listheader> <item> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> </item> </list> </para>  </SubSystem>
    </member>
    <member name="M:Okuma.CLDATAPI.DataAPI.CIO.GetIO(System.String)">
      <summary>Gets I/O address value given I/O label. </summary>
      <example> This example shows how to call GetLabel method <para> Try </para> <para> Dim vtIOAddress As IOAddress </para> <para> txtIOBitIndex.Text = "" </para> <para> txtIOBitNo.Text = "" </para> <para> txtIOBit.Text = "" </para> <para> txtIOWordIndex.Text = "" </para> <para> txtIOWord.Text = "" </para> <para> txtIOLongWordIndex.Text = "" </para> <para> txtIOLongWord.Text = "" </para> <para> vtIOAddress = m_objIO.GetIO(txtIOLabel.Text) </para> <para> cboIOVariableTypes.SelectedIndex = (vtIOAddress.enIOType) </para> <para> Select Case vtIOAddress.enSize </para> <para>		Case IOAddressSizeEnum.Bit </para> <para>			txtIOBitIndex.Text = vtIOAddress.Address </para> <para>			txtIOBitNo.Text = vtIOAddress.Bit </para> <para>			txtIOBit.Text = vtIOAddress.Value </para> <para>      Case IOAddressSizeEnum.Word </para> <para>          txtIOWordIndex.Text = vtIOAddress.Address </para> <para>          txtIOWord.Text = vtIOAddress.Value </para> <para>		Case IOAddressSizeEnum.DWord </para> <para>          txtIOLongWordIndex.Text = vtIOAddress.Address </para> <para>          txtIOLongWord.Text = vtIOAddress.Value </para> <para>      Case Else </para> <para>          DisplayError("I/O Variables", "Invalid I/O Label") </para> <para>  End Select </para> <para>  Catch ae As ApplicationException </para> <para>		DisplayError("I/O Variables", ae.Message) </para> <para>  Catch ex As Exception </para> <para>		DisplayError("I/O Variables", ex.Message) </para> <para>  End Try </para> </example>
      <param name="strLabel">I/O address label for Bit/Word/Long Word. It is case-sensitive and cannot be blank label.</param>
      <returns>An I/O address data value associated with the label if it is found.  Otherwise, address/bit location will be reset to -1, and 0 respectively.</returns>
      <exception cref="System.ApplicationException">Thrown when function fails to perform the operation at current NC condition.</exception>
      <exception cref="System.NotSupportedException">Thrown when operation/input parameters are not supported for the current system.</exception>
      <Figure> I/O Monitor application <para> <img src="Lathe.IO.Monitor.Bit.jpg" /> </para>  </Figure>
    </member>
    <member name="M:Okuma.CLDATAPI.DataAPI.CIO.GetLabel(Okuma.CLDATAPI.DataAPI.CIOAddress)">
      <summary> Gets label associated with the I/O address location, I/O size, and I/O type. </summary>
      <example> This example shows how to call GetLabel method <para> Try </para> <para> Dim objAddress As CIOAddress = new CIOAddress</para> <para> Dim strValue As String </para> <para> objAddress.Address = 11 </para> <para> objAddress.Bit = 15 </para> <para> objAddress.enSize = IOAddressSizeEnum.Bit </para> <para> objAddress.enIOType = IOTypeEnum.Input </para> <para> strValue = m_objIO.GetLabel(objAddress) </para> </example>
      <param name="objIOAddress">I/O address location, I/O address size, and I/O type </param>
      <returns>A label if the label can be found based on the given information.  It can be empty if no label assigned to an I/O address location</returns>
      <exception cref="System.ApplicationException">Thrown when function fails to perform the operation at current NC condition.</exception>
      <exception cref="System.NotSupportedException">Thrown when operation/input parameters are not supported for the current system.</exception>
      <Figure> I/O Monitor application <para> <img src="Lathe.IO.Monitor.Bit.jpg" /> </para>  </Figure>
    </member>
    <member name="T:Okuma.CLDATAPI.DataAPI.CIOAddress">
      <summary> Class represents I/O address data  </summary>
    </member>
    <member name="P:Okuma.CLDATAPI.DataAPI.CIOAddress.Address">
      <summary>I/O address index location</summary>
      <returns>A System.Int32 value</returns>
    </member>
    <member name="P:Okuma.CLDATAPI.DataAPI.CIOAddress.Bit">
      <summary>I/O address bit location</summary>
      <returns>A BitsEnum value</returns>
    </member>
    <member name="P:Okuma.CLDATAPI.DataAPI.CIOAddress.Size">
      <summary>I/O data size - Bit/Word/Long Word</summary>
      <returns>A IOAddressSizeEnum value</returns>
    </member>
    <member name="P:Okuma.CLDATAPI.DataAPI.CIOAddress.IOType">
      <summary>I/O type</summary>
      <returns>A IOTypeEnum value</returns>
    </member>
    <member name="P:Okuma.CLDATAPI.DataAPI.CIOAddress.Value">
      <summary> I/O value. For IOAddressSizeEnum.Bit, it has a value of 1 if Bit is ON, otherwise it has a value of zero or Bit is OFF. </summary>
      <returns>A System.Int64 value</returns>
    </member>
    <member name="T:Okuma.CLDATAPI.DataAPI.CMachine">
      <summary> Class provides general machine information. </summary>
      <remarks> This class is the main class that provides access points to machine data. The Init method must be called before accessing to any other machine data.  </remarks>
    </member>
    <member name="M:Okuma.CLDATAPI.DataAPI.CMachine.CMachine">
      <summary> Create an instance of CMachine class.  </summary>
    </member>
    <member name="M:Okuma.CLDATAPI.DataAPI.CMachine.#ctor(System.String)">
      <summary> Create an instance of CMachine class. In addition to library name, the provided logging name will be used for logging all function calls </summary>
      <param name="strLoggingName">Logging name</param>
    </member>
    <member name="M:Okuma.CLDATAPI.DataAPI.CMachine.SetSubSystem(Okuma.CLDATAPI.Enumerations.SubSystemEnum)">
      <summary> Set current SubSystem for this class instance </summary>
      <example>This example shows how to set SubSystem. <para>	objMachine.SetSubSystem(cmb_Machine_SubSys.SelectedItem)	</para> </example>
      <param name="enSubSystem">Sub System. Value for this Parameter come from Okuma.CLDATAPI.Enumerations.SubSystemEnum</param>
      <exception cref="System.ApplicationException">Thrown when function fails to perform the operation at current NC condition.</exception>
      <exception cref="System.NotSupportedException">Thrown when operation/input parameters are not supported for the current system or it fails to write data to system.</exception>
    </member>
    <member name="M:Okuma.CLDATAPI.DataAPI.CMachine.Init">
      <summary> Intialize the library to communicate with machine sharing data. </summary>
      <exception cref="System.ApplicationException">Thrown when function fails to perform the operation at current NC condition.</exception>
      <exception cref="System.NotSupportedException">Thrown when operation/input parameters are not supported for the current system.</exception>
      <exception cref="CAPISpecException">Thrown when API Specification is not enabled on machine</exception>
      <remarks> <para> ***************************************************************************************************************************************************************************</para> <para> ***************************************************************************************************************************************************************************</para> It recommends that this method is called in main thread of application. Subsequent methods can be made from threads other than main thread. <para> ***************************************************************************************************************************************************************************</para> <para> ***************************************************************************************************************************************************************************</para>  </remarks>
    </member>
    <member name="M:Okuma.CLDATAPI.DataAPI.CMachine.Close">
      <summary> Close the communication with NC</summary>
      <remarks> Note: Any subsequent call for NC data will fail after calling this method.</remarks>
      <exception cref="System.ApplicationException">Thrown when function fails to perform the operation at current NC condition.</exception>
      <exception cref="System.NotSupportedException">Thrown when operation/input parameters are not supported for the current system.</exception>
    </member>
    <member name="M:Okuma.CLDATAPI.DataAPI.CMachine.GetTDMode">
      <summary> Get current TD mode of current sub system </summary>
      <example> This example shows how to call GetTDMode() method . <para>	Dim blnValue As Boolean</para> <para>	blnValue = objMachine.GetTDMode()	</para> </example>
      <returns>A System.Boolean value.  It returns True if machine is in TD mode otherwise it returns false</returns>
      <exception cref="System.ApplicationException">Thrown when function fails to perform the operation at current NC condition.</exception>
      <exception cref="System.NotSupportedException">Thrown when operation/input parameters are not supported for the current system.</exception>
    </member>
    <member name="M:Okuma.CLDATAPI.DataAPI.CMachine.SetTDMode(System.Boolean)">
      <summary> FOR OSP-P300S ONLY: Set current TD mode of current sub system if current NC condition is allowable. </summary>
      <example> This example shows how to call SetTDMode() method . <para>	Dim blnValue As Boolean</para> <para>	objMachine.SetTDMode(blnValue)	</para> </example>
      <param name="blnValue">TD/TL Mode. Set to true for TD Mode. Set to False for TL mode.</param>
      <exception cref="System.ApplicationException">Thrown when function fails to perform the operation at current NC condition.</exception>
      <exception cref="System.NotSupportedException">Thrown when operation/input parameters are not supported for the current system.</exception>
      <remarks>  <para> Compatible Chart of this function for different OSP controls: <list type="table"> <listheader> <term>OSP Control</term> <description>Compatible</description> </listheader> <item> <term>P100II</term> <description>No</description> </item> <item> <term>P200</term> <description>No</description> </item> <item> <term>P300L</term> <description>No</description> </item> <item> <term>P300S/TD Mode</term> <description>Yes</description> </item> <item> <term>P300S/TL Mode</term> <description>Yes</description> </item> </list> </para>  </remarks>
    </member>
    <member name="M:Okuma.CLDATAPI.DataAPI.CMachine.GetPanelMode">
      <summary> Gets the panel mode for current sub system. <para>For OSP-P300S/L: PanelModeEnum::ZeroSetup does not exist on the panel.</para> </summary>
      <example> This example shows how to call GetPanelMode method . <para>	Me.machineOperationMode.Text = System.Enum.GetNames(GetType(PanelModeEnum)).GetValue(objMachine.GetPanelMode)	</para> </example>
      <returns>An Okuma.CLDATAPI.Enumerations.PanelModeEnum enum value.</returns>
      <exception cref="System.ApplicationException">Thrown when function fails to perform the operation at current NC condition.</exception>
      <exception cref="System.NotSupportedException">Thrown when operation/input parameters are not supported for the current system.</exception>
      <SubSystem> Please see <see href="SubSystemNoteTable.htm">Sub System Note Table</see> for more information if applicable. <para>Valid sub systems for this function (Y = Valid, N = Not valid)</para> <para> <list type="table"> <listheader> <term>NC_RUN </term> <term>NC_RUN_1 </term> <term>NC_RUN_2 </term> <term>NC_RUN_3 </term> <term>NC_PANEL </term> <term>NC_PANEL_1 </term> <term>NC_PANEL_2 </term> <term>NC_PANEL_3 </term> <term>NC_AL </term> <term>NC_AR </term> <term>NC_BL </term> <term>NC_BR </term> <term>NC_CL </term> <term>NC_CR </term> <term>NC_2AL </term> </listheader> <item> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> </item> </list> </para>  </SubSystem>
    </member>
    <member name="M:Okuma.CLDATAPI.DataAPI.CMachine.GetExecutionMode">
      <summary> Gets the machine execution mode for current sub system.  It is considered running if it is currently executing a block of code either in Auto or MDI mode. <para>Notes: </para> <para>	A block of codes is currently executing for A turret (G13) ==&gt; Running for subsystem NC_AL/NC_AR </para> <para>  No code is executing  for B turret (G14) ==&gt; Not Running for subsystem NC_BL/NC_BR </para> <para>	A block of codes is currently executing for C turret (G313) ==&gt; Running for subsystem NC_CL/NC_CR </para> <para>	A block of codes is currently executing for A turret on R side of 2SP machine spec ==&gt; Running for subsystem NC_AL </para> <para>	No code is executing for A turret on L side of 2SP machine spec ==&gt; Not Running for subsystem NC_2AL </para> </summary>
      <example> This example shows how to call GetExecutionMode method . <para>	Me.machineExecutionMode.Text = System.Enum.GetNames(GetType(ExecutionModeEnum)).GetValue(objMachine.GetExecutionMode)	</para> </example>
      <returns>An Okuma.CLDATAPI.Enumerations.ExecutionModeEnum enum value.</returns>
      <exception cref="System.ApplicationException">Thrown when function fails to perform the operation at current NC condition.</exception>
      <exception cref="System.NotSupportedException">Thrown when operation/input parameters are not supported for the current system.</exception>
      <figure> </figure>
      <SubSystem> Please see <see href="SubSystemNoteTable.htm">Sub System Note Table</see> for more information if applicable. <para>Valid sub systems for this function (Y = Valid, N = Not valid)</para> <para> <list type="table"> <listheader> <term>NC_RUN </term> <term>NC_RUN_1 </term> <term>NC_RUN_2 </term> <term>NC_RUN_3 </term> <term>NC_PANEL </term> <term>NC_PANEL_1 </term> <term>NC_PANEL_2 </term> <term>NC_PANEL_3 </term> <term>NC_AL </term> <term>NC_AR </term> <term>NC_BL </term> <term>NC_BR </term> <term>NC_CL </term> <term>NC_CR </term> <term>NC_2AL </term> </listheader> <item> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> </item> </list> </para>  </SubSystem>
    </member>
    <member name="M:Okuma.CLDATAPI.DataAPI.CMachine.GetOperationMode">
      <summary> Gets the machine operation mode for current sub system. </summary>
      <example> This example shows how to call GetOperationMode method . <para>	Me.machineOperationMode.Text = System.Enum.GetNames(GetType(OperationModeEnum)).GetValue(objMachine.GetOperationMode)	</para> </example>
      <returns>An Okuma.CLDATAPI.Enumerations.OperationModeEnum enum value.</returns>
      <exception cref="System.ApplicationException">Thrown when function fails to perform the operation at current NC condition.</exception>
      <exception cref="System.NotSupportedException">Thrown when operation/input parameters are not supported for the current system.</exception>
      <SubSystem> Please see <see href="SubSystemNoteTable.htm">Sub System Note Table</see> for more information if applicable. <para>Valid sub systems for this function (Y = Valid, N = Not valid)</para> <para> <list type="table"> <listheader> <term>NC_RUN </term> <term>NC_RUN_1 </term> <term>NC_RUN_2 </term> <term>NC_RUN_3 </term> <term>NC_PANEL </term> <term>NC_PANEL_1 </term> <term>NC_PANEL_2 </term> <term>NC_PANEL_3 </term> <term>NC_AL </term> <term>NC_AR </term> <term>NC_BL </term> <term>NC_BR </term> <term>NC_CL </term> <term>NC_CR </term> <term>NC_2AL </term> </listheader> <item> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> </item> </list> </para>  </SubSystem>
    </member>
    <member name="M:Okuma.CLDATAPI.DataAPI.CMachine.GetOperationUnitSystemDisplay">
      <summary> Gets the current setting of machine data unit. </summary>
      <example> This example shows how to call GetOperationUnitSystemDisplay method . <para>	Me.machineUnitSytem.Text = objMachine.GetOperationUnitSystemDisplay	</para> </example>
      <returns> A System.Int32 value. <para> <list type="table"> <listheader> <term>Preset value</term> <description>Operation unit system</description> </listheader> <item> <term>0</term> <description>1mm</description> </item> <item> <term>1</term> <description>0.01mm</description> </item> <item> <term>2</term> <description>0.001mm</description> </item> <item> <term>3</term> <description>0.0001mm</description> </item> <item> <term>4</term> <description>1inch</description> </item> <item> <term>5</term> <description>0.0001inch</description> </item> <item> <term>6</term> <description>0.00001inch</description> </item> </list> </para> </returns>
      <exception cref="System.ApplicationException">Thrown when function fails to perform the operation at current NC condition.</exception>
      <exception cref="System.NotSupportedException">Thrown when operation/input parameters are not supported for the current system.</exception>
      <Figure>PARAMETER - UNIT - OPTIONAL PARAMETER - LENGTH UNIT SYSTEM - Current setting of data unit: mm/inch <para> <img src="ParametersScreen.DataUnit.jpg" /> </para>  </Figure>
    </member>
    <member name="M:Okuma.CLDATAPI.DataAPI.CMachine.GetCurrentAlarm">
      <summary> Gets current alarm for the current sub system. </summary>
      <example> This example shows how to call GetCurrentAlarm method . <para>	Dim objCurrentAlarm as CCurrentAlarm </para> <para>	objCurrentAlarm = objMachine.GetCurrentAlarm()	</para> </example>
      <returns>An Okuma.CLDATAPI.DataAPI.CCurrentAlarm object.  If there is no alarm in the system, alarm properties will be set to 0 and empty string.</returns>
      <exception cref="System.ApplicationException">Thrown when function fails to perform the operation at current NC condition.</exception>
      <exception cref="System.NotSupportedException">Thrown when operation/input parameters are not supported for the current system.</exception>
      <remarks> <para> ********************* This function cannot be supported in OSP-P100 II machines. ************************ </para> </remarks>
      <SubSystem> Please see <see href="SubSystemNoteTable.htm">Sub System Note Table</see> for more information if applicable. <para>Valid sub systems for this function (Y = Valid, N = Not valid)</para> <para> <list type="table"> <listheader> <term>NC_RUN </term> <term>NC_RUN_1 </term> <term>NC_RUN_2 </term> <term>NC_RUN_3 </term> <term>NC_PANEL </term> <term>NC_PANEL_1 </term> <term>NC_PANEL_2 </term> <term>NC_PANEL_3 </term> <term>NC_AL </term> <term>NC_AR </term> <term>NC_BL </term> <term>NC_BR </term> <term>NC_CL </term> <term>NC_CR </term> <term>NC_2AL </term> </listheader> <item> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> </item> </list> </para>  </SubSystem>
    </member>
    <member name="M:Okuma.CLDATAPI.DataAPI.CMachine.GetNCStatus(Okuma.CLDATAPI.Enumerations.NCStatusEnum)">
      <summary> Gets current state of the specified NC status for current subsystem </summary>
      <example> This example shows how to call GetNCStatus method . <para>	Dim enNCStatus as NCStatusEnum </para> <para>	Dim enValue as OnOffStateEnum </para> <para>	enValue = objMachine.GetNCStatus(enNCStatus)	</para> </example>
      <returns>An Okuma.CLDATAPI.Enumerations.OnOffStateEnum object.</returns>
      <exception cref="System.ApplicationException">Thrown when function fails to perform the operation at current NC condition.</exception>
      <exception cref="System.NotSupportedException">Thrown when operation/input parameters are not supported for the current system.</exception>
      <remarks> <para> ********************* This function cannot be supported in OSP-P100 II machines. ************************ </para> </remarks>
      <SubSystem> Please see <see href="SubSystemNoteTable.htm">Sub System Note Table</see> for more information if applicable. <para>Valid sub systems for this function (Y = Valid, N = Not valid)</para> <para> <list type="table"> <listheader> <term>NC_RUN </term> <term>NC_RUN_1 </term> <term>NC_RUN_2 </term> <term>NC_RUN_3 </term> <term>NC_PANEL </term> <term>NC_PANEL_1 </term> <term>NC_PANEL_2 </term> <term>NC_PANEL_3 </term> <term>NC_AL </term> <term>NC_AR </term> <term>NC_BL </term> <term>NC_BR </term> <term>NC_CL </term> <term>NC_CR </term> <term>NC_2AL </term> </listheader> <item> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> </item> </list> </para>  </SubSystem>
    </member>
    <member name="M:Okuma.CLDATAPI.DataAPI.CMachine.GetCurrentAlarm(Okuma.CLDATAPI.Enumerations.MachineSideEnum)">
      <overloads>This function has these overload methods for getting current alarm.</overloads>
      <summary> Gets current alarm for the specified machine side. </summary>
      <example> This example shows how to call GetCurrentAlarm method . <para>	Dim strValue As String</para> <para>	Dim enMachineSystem As MachineSideEnum = MachineSideEnum.FirstSystem </para> <para>	strValue = objMachine.GetCurrentAlarm(enMachineSystem)	</para> </example>
      <param name="enMachineSystem">Machine system index.  Values for this parameter come from the Okuma.CLDATAPI.Enumerations.MachineSideEnum enumeration.</param>
      <returns>A System.String value.  If there is no alarm in the system, alarm message will be empty string.</returns>
      <exception cref="System.ApplicationException">Thrown when function fails to perform the operation at current NC condition.</exception>
      <exception cref="System.NotSupportedException">Thrown when operation/input parameters are not supported for the current system.</exception>
    </member>
    <member name="M:Okuma.CLDATAPI.DataAPI.CMachine.GetHourMeterCount(Okuma.CLDATAPI.Enumerations.HourMeterEnum)">
      <summary> Gets hour meter count for the specified type and current subsystem </summary>
      <example> This example shows how to call GetHourMeterCount() method . <para>	Dim intValue as Int32 </para> <para>	Dim enValue as HourMeterEnum </para> <para>	intValue = objMachine.GetHourMeterCount(HourMeterEnum enValue) </para> </example>
      <param name="enValue">Hour meter type</param>
      <returns>A System.Int32 value.</returns>
      <exception cref="System.ApplicationException">Thrown when function fails to perform the operation at current NC condition.</exception>
      <exception cref="System.NotSupportedException">Thrown when operation/input parameters are not supported for the current system.</exception>
      <DataUnit> Second </DataUnit>
      <remarks> <para> The following specifications must be met in order to function: <list type="table"> <listheader> <term>Specification</term> <description>Valid/Invalid</description> </listheader> <item> <term>NC operation monitor specification NC spec [19,2]</term> <description>Valid</description> </item> </list> </para> </remarks>
      <Figure>AUTO OPERATION - ACTUAL POSITION - HOUR METER - COUNT <para> <img src="Lathe.AutoOperation.ActualPosition.HourMeter.jpg" /> </para> </Figure>
      <SubSystem> Please see <see href="SubSystemNoteTable.htm">Sub System Note Table</see> for more information if applicable. <para>Valid sub systems for this function (Y = Valid, N = Not valid)</para> <para> <list type="table"> <listheader> <term>NC_RUN </term> <term>NC_RUN_1 </term> <term>NC_RUN_2 </term> <term>NC_RUN_3 </term> <term>NC_PANEL </term> <term>NC_PANEL_1 </term> <term>NC_PANEL_2 </term> <term>NC_PANEL_3 </term> <term>NC_AL </term> <term>NC_AR </term> <term>NC_BL </term> <term>NC_BR </term> <term>NC_CL </term> <term>NC_CR </term> <term>NC_2AL </term> </listheader> <item> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> </item> </list> </para>  </SubSystem>
    </member>
    <member name="M:Okuma.CLDATAPI.DataAPI.CMachine.SetHourMeterCount(Okuma.CLDATAPI.Enumerations.HourMeterEnum,System.Int32)">
      <summary> Sets hour meter count for the specified type and current subsystem </summary>
      <example> This example shows how to call SetHourMeterCount() method . <para>	Dim intValue as Int32 </para> <para>	Dim enValue as HourMeterEnum </para> <para>	objMachine.SetHourMeterCount(enValue, intValue) </para> </example>
      <param name="enValue">Hour meter type</param>
      <param name="intValue">Value to be set</param>
      <exception cref="System.ApplicationException">Thrown when function fails to perform the operation at current NC condition.</exception>
      <exception cref="System.NotSupportedException">Thrown when operation/input parameters are not supported for the current system.</exception>
      <DataUnit> Second </DataUnit>
      <remarks> <para> The following specifications must be met in order to function: <list type="table"> <listheader> <term>Specification</term> <description>Valid/Invalid</description> </listheader> <item> <term>NC operation monitor specification NC spec [19,2]</term> <description>Valid</description> </item> </list> </para> </remarks>
      <Figure>AUTO OPERATION - ACTUAL POSITION - HOUR METER - COUNT <para> <img src="Lathe.AutoOperation.ActualPosition.HourMeter.jpg" /> </para> </Figure>
      <SubSystem> Please see <see href="SubSystemNoteTable.htm">Sub System Note Table</see> for more information if applicable. <para>Valid sub systems for this function (Y = Valid, N = Not valid)</para> <para> <list type="table"> <listheader> <term>NC_RUN </term> <term>NC_RUN_1 </term> <term>NC_RUN_2 </term> <term>NC_RUN_3 </term> <term>NC_PANEL </term> <term>NC_PANEL_1 </term> <term>NC_PANEL_2 </term> <term>NC_PANEL_3 </term> <term>NC_AL </term> <term>NC_AR </term> <term>NC_BL </term> <term>NC_BR </term> <term>NC_CL </term> <term>NC_CR </term> <term>NC_2AL </term> </listheader> <item> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> </item> </list> </para>  </SubSystem>
    </member>
    <member name="M:Okuma.CLDATAPI.DataAPI.CMachine.AddHourMeterCount(Okuma.CLDATAPI.Enumerations.HourMeterEnum,System.Int32)">
      <summary> Sets hour meter count by adding the input value to the existing data for current sub system. </summary>
      <example> This example shows how to call AddHourMeterCount() method . <para>	Dim intValue as Int32 </para> <para>	Dim enValue as HourMeterEnum </para> <para>	objMachine.AddHourMeterCount(enValue, intValue) </para> </example>
      <param name="enValue">Hour meter type</param>
      <param name="intValue">Value to be added</param>
      <DataUnit> Second </DataUnit>
      <exception cref="System.ApplicationException">Thrown when function fails to perform the operation at current NC condition.</exception>
      <exception cref="System.NotSupportedException">Thrown when operation/input parameters are not supported for the current system.</exception>
      <remarks> <para> The following specifications must be met in order to function: <list type="table"> <listheader> <term>Specification</term> <description>Valid/Invalid</description> </listheader> <item> <term>NC operation monitor specification NC spec [19,2]</term> <description>Valid</description> </item> </list> </para> </remarks>
      <Figure>AUTO OPERATION - ACTUAL POSITION - HOUR METER - COUNT <para> <img src="Lathe.AutoOperation.ActualPosition.HourMeter.jpg" /> </para> </Figure>
      <SubSystem> Please see <see href="SubSystemNoteTable.htm">Sub System Note Table</see> for more information if applicable. <para>Valid sub systems for this function (Y = Valid, N = Not valid)</para> <para> <list type="table"> <listheader> <term>NC_RUN </term> <term>NC_RUN_1 </term> <term>NC_RUN_2 </term> <term>NC_RUN_3 </term> <term>NC_PANEL </term> <term>NC_PANEL_1 </term> <term>NC_PANEL_2 </term> <term>NC_PANEL_3 </term> <term>NC_AL </term> <term>NC_AR </term> <term>NC_BL </term> <term>NC_BR </term> <term>NC_CL </term> <term>NC_CR </term> <term>NC_2AL </term> </listheader> <item> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> </item> </list> </para>  </SubSystem>
    </member>
    <member name="M:Okuma.CLDATAPI.DataAPI.CMachine.GetHourMeterSet(Okuma.CLDATAPI.Enumerations.HourMeterEnum)">
      <summary> Gets hour meter set for the specified type and current subsystem </summary>
      <example> This example shows how to call GetHourMeterSet() method . <para>	Dim intValue as Int32 </para> <para>	Dim enValue as HourMeterEnum </para> <para>	intValue = objMachine.GetHourMeterSet(HourMeterEnum enValue) </para> </example>
      <param name="enValue">Hour meter type</param>
      <returns>A System.Int32 value.</returns>
      <DataUnit> Second </DataUnit>
      <exception cref="System.ApplicationException">Thrown when function fails to perform the operation at current NC condition.</exception>
      <exception cref="System.NotSupportedException">Thrown when operation/input parameters are not supported for the current system.</exception>
      <DataUnit> Second </DataUnit>
      <remarks> <para> The following specifications must be met in order to function: <list type="table"> <listheader> <term>Specification</term> <description>Valid/Invalid</description> </listheader> <item> <term>NC operation monitor specification NC spec [19,2]</term> <description>Valid</description> </item> </list> </para> </remarks>
      <Figure>AUTO OPERATION - ACTUAL POSITION - HOUR METER - SET <para> <img src="Lathe.AutoOperation.ActualPosition.HourMeter.jpg" /> </para> </Figure>
      <SubSystem> Please see <see href="SubSystemNoteTable.htm">Sub System Note Table</see> for more information if applicable. <para>Valid sub systems for this function (Y = Valid, N = Not valid)</para> <para> <list type="table"> <listheader> <term>NC_RUN </term> <term>NC_RUN_1 </term> <term>NC_RUN_2 </term> <term>NC_RUN_3 </term> <term>NC_PANEL </term> <term>NC_PANEL_1 </term> <term>NC_PANEL_2 </term> <term>NC_PANEL_3 </term> <term>NC_AL </term> <term>NC_AR </term> <term>NC_BL </term> <term>NC_BR </term> <term>NC_CL </term> <term>NC_CR </term> <term>NC_2AL </term> </listheader> <item> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> </item> </list> </para>  </SubSystem>
    </member>
    <member name="M:Okuma.CLDATAPI.DataAPI.CMachine.SetHourMeterSet(Okuma.CLDATAPI.Enumerations.HourMeterEnum,System.Int32)">
      <summary> Sets hour meter set for the specified type and current subsystem </summary>
      <example> This example shows how to call SetHourMeterCount() method . <para>	Dim intValue as Int32 </para> <para>	Dim enValue as HourMeterEnum </para> <para>	objMachine.SetHourMeterSet(enValue, intValue) </para> </example>
      <param name="enValue">Hour meter type</param>
      <param name="intValue">Value to be set</param>
      <exception cref="System.ApplicationException">Thrown when function fails to perform the operation at current NC condition.</exception>
      <exception cref="System.NotSupportedException">Thrown when operation/input parameters are not supported for the current system.</exception>
      <DataUnit> Second </DataUnit>
      <remarks> <para> The following specifications must be met in order to function: <list type="table"> <listheader> <term>Specification</term> <description>Valid/Invalid</description> </listheader> <item> <term>NC operation monitor specification NC spec [19,2]</term> <description>Valid</description> </item> </list> </para> </remarks>
      <Figure>AUTO OPERATION - ACTUAL POSITION - HOUR METER - SET <para> <img src="Lathe.AutoOperation.ActualPosition.HourMeter.jpg" /> </para> </Figure>
      <SubSystem> Please see <see href="SubSystemNoteTable.htm">Sub System Note Table</see> for more information if applicable. <para>Valid sub systems for this function (Y = Valid, N = Not valid)</para> <para> <list type="table"> <listheader> <term>NC_RUN </term> <term>NC_RUN_1 </term> <term>NC_RUN_2 </term> <term>NC_RUN_3 </term> <term>NC_PANEL </term> <term>NC_PANEL_1 </term> <term>NC_PANEL_2 </term> <term>NC_PANEL_3 </term> <term>NC_AL </term> <term>NC_AR </term> <term>NC_BL </term> <term>NC_BR </term> <term>NC_CL </term> <term>NC_CR </term> <term>NC_2AL </term> </listheader> <item> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> </item> </list> </para>  </SubSystem>
    </member>
    <member name="M:Okuma.CLDATAPI.DataAPI.CMachine.AddHourMeterSet(Okuma.CLDATAPI.Enumerations.HourMeterEnum,System.Int32)">
      <summary> Sets hour meter set by adding the input value to the existing data for current sub system. </summary>
      <example> This example shows how to call AddHourMeterSet() method . <para>	Dim intValue as Int32 </para> <para>	Dim enValue as HourMeterEnum </para> <para>	objMachine.AddHourMeterSet(enValue, intValue) </para> </example>
      <param name="enValue">Hour meter type</param>
      <param name="intValue">Value to be added</param>
      <exception cref="System.ApplicationException">Thrown when function fails to perform the operation at current NC condition.</exception>
      <exception cref="System.NotSupportedException">Thrown when operation/input parameters are not supported for the current system.</exception>
      <DataUnit> Second </DataUnit>
      <remarks> <para> The following specifications must be met in order to function: <list type="table"> <listheader> <term>Specification</term> <description>Valid/Invalid</description> </listheader> <item> <term>NC operation monitor specification NC spec [19,2]</term> <description>Valid</description> </item> </list> </para> </remarks>
      <Figure>AUTO OPERATION - ACTUAL POSITION - HOUR METER - SET <para> <img src="Lathe.AutoOperation.ActualPosition.HourMeter.jpg" /> </para> </Figure>
      <SubSystem> Please see <see href="SubSystemNoteTable.htm">Sub System Note Table</see> for more information if applicable. <para>Valid sub systems for this function (Y = Valid, N = Not valid)</para> <para> <list type="table"> <listheader> <term>NC_RUN </term> <term>NC_RUN_1 </term> <term>NC_RUN_2 </term> <term>NC_RUN_3 </term> <term>NC_PANEL </term> <term>NC_PANEL_1 </term> <term>NC_PANEL_2 </term> <term>NC_PANEL_3 </term> <term>NC_AL </term> <term>NC_AR </term> <term>NC_BL </term> <term>NC_BR </term> <term>NC_CL </term> <term>NC_CR </term> <term>NC_2AL </term> </listheader> <item> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> </item> </list> </para>  </SubSystem>
    </member>
    <member name="M:Okuma.CLDATAPI.DataAPI.CMachine.GetMachineSelection">
      <summary> <para>Gets current machine selection on NC panel</para> <para>On dual sides machine, first system is R side of machine and second system is L side of machine</para> <para>On single side machine, first system is always designated</para> </summary>
      <example> This example shows how to call GetMachineSelection() method . <para>	Dim enValue as MachineSideEnum </para> <para> enValue = objMachine.GetMachineSelection() </para> </example>
      <returns>A MachineSideEnum value.</returns>
      <exception cref="System.ApplicationException">Thrown when function fails to perform the operation at current NC condition.</exception>
      <exception cref="System.NotSupportedException">Thrown when operation/input parameters are not supported for the current system.</exception>
      <Figure>DUAL SPINDLE CNC LATHE <para> <img src="Lathe.DualScreenLathe.jpg" /> </para>  </Figure>
    </member>
    <member name="M:Okuma.CLDATAPI.DataAPI.CMachine.GetNCStatus2(Okuma.CLDATAPI.Enumerations.NCStatusEnum,Okuma.CLDATAPI.Enumerations.MachineSideEnum)">
      <summary> Gets current state of the specified NC status for current machine side selection </summary>
      <example> This example shows how to call GetNCStatus2 method . <para>	Dim enNCStatus as NCStatusEnum </para> <para>	Dim enMachineSide as MachineSideEnum  </para> <para>	Dim enValue as OnOffStateEnum </para> <para>	enValue = objMachine.GetNCStatus2(enNCStatus, enMachineSide)	</para> </example>
      <param name="enNCStatus">NC status to be obtained</param>
      <param name="enMachineSide">machine side to obtain NC status from</param>
      <returns>An Okuma.CLDATAPI.Enumerations.OnOffStateEnum object.</returns>
      <exception cref="System.ApplicationException">Thrown when function fails to perform the operation at current NC condition.</exception>
      <exception cref="System.NotSupportedException">Thrown when operation/input parameters are not supported for the current system.</exception>
      <remarks>  <para> Compatible Chart of this function for different OSP controls: <list type="table"> <listheader> <term>OSP Control</term> <description>Compatible</description> </listheader> <item> <term>P100II</term> <description>No</description> </item> <item> <term>P200</term> <description>No</description> </item> <item> <term>P300L</term> <description> <para> Yes </para> </description> </item> <item> <term>P300S/TD Mode</term> <description> <para> Yes </para> </description> </item> <item> <term>P300S/TL Mode</term> <description> <para> Yes </para> </description> </item> </list> </para>  </remarks>
    </member>
    <member name="T:Okuma.CLDATAPI.DataAPI.MacMan.CMachining">
      <summary> Class represents a machining report data.  </summary>
    </member>
    <member name="P:Okuma.CLDATAPI.DataAPI.MacMan.CMachining.NumberOfWork">
      <summary>Gets processing track record - Number of work.  Sets processing track record - Number of work for this class instance only</summary>
      <returns>A System.Int32 value.</returns>
      <DataUnit> Unit  </DataUnit>
    </member>
    <member name="P:Okuma.CLDATAPI.DataAPI.MacMan.CMachining.RunningTime">
      <summary> Gets processing track record - Running time.  Sets processing track record - Running Time for this class instance only. Data unit is second. </summary>
      <returns>A System.Int64 value.</returns>
      <DataUnit> Second  </DataUnit>
    </member>
    <member name="P:Okuma.CLDATAPI.DataAPI.MacMan.CMachining.OperatingTime">
      <summary> Gets processing track record - Operating time.  Sets processing track record - Operating Time for this class instance only.  Data unit is second. </summary>
      <returns>A System.Int64 value.</returns>
      <DataUnit> seconds  </DataUnit>
    </member>
    <member name="P:Okuma.CLDATAPI.DataAPI.MacMan.CMachining.CuttingTime">
      <summary> Gets processing track record - Cutting time.  Sets processing track record - Cutting Time for this class instance only.  Data unit is second. </summary>
      <returns>A System.Int64 value.</returns>
      <DataUnit> Second  </DataUnit>
    </member>
    <member name="P:Okuma.CLDATAPI.DataAPI.MacMan.CMachining.MainProgramFileName">
      <summary> Gets processing track record - Main program file name.  Sets processing track record - Main program file name for this class instance only. </summary>
      <returns>A System.String value</returns>
    </member>
    <member name="P:Okuma.CLDATAPI.DataAPI.MacMan.CMachining.MainProgramName">
      <summary> Gets processing track record - Main program name.  Sets processing track record - Main program name for this class instance only. </summary>
      <returns>A System.String value</returns>
    </member>
    <member name="P:Okuma.CLDATAPI.DataAPI.MacMan.CMachining.StartDate">
      <summary> Gets processing track record - Start Date.  Sets processing track record - Start Date for this class instance only.  Data is in "yyyy/mm/dd" format. </summary>
      <returns>A System.String value in this format "yyyy/mm/dd"</returns>
    </member>
    <member name="P:Okuma.CLDATAPI.DataAPI.MacMan.CMachining.StartTime">
      <summary> Gets processing track record - Start Time. Sets processing track record - Start Time for this class instance only.  Data is in "hh:mm:ss" format. </summary>
      <returns>A System.Int32 value in this format "hh:mm:ss"</returns>
    </member>
    <member name="T:Okuma.CLDATAPI.DataAPI.MacMan.CMachiningReport">
      <summary> Class provides machining reports information stored by NC.  </summary>
    </member>
    <member name="M:Okuma.CLDATAPI.DataAPI.MacMan.CMachiningReport.#ctor(Okuma.CLDATAPI.Enumerations.MacManSubSystemEnum)">
      <summary> Create an instance of this class given sub system.  By default, class is created with sub system = MacManSubSystemEnum::CurrentSubSystem. </summary>
      <param name="enSubSystem">Sub system</param>
    </member>
    <member name="M:Okuma.CLDATAPI.DataAPI.MacMan.CMachiningReport.SetSubSystem(Okuma.CLDATAPI.Enumerations.MacManSubSystemEnum)">
      <summary> Set current sub system for this class instance </summary>
      <example>This example shows how to call SetSubSystem method. <para>	objMachine.SetSubSystem(cmb_Machine_SubSys.SelectedItem)	</para> </example>
      <param name="enSubSystem">Sub System. Values for this parameter come from the Okuma.CLDATAPI.Enumerations.MacManSubSystemEnum</param>
      <exception cref="System.ApplicationException">Thrown when function fails to perform the operation at current NC condition.</exception>
      <exception cref="System.NotSupportedException">Thrown when operation/input parameters are not supported for the current system.</exception>
    </member>
    <member name="M:Okuma.CLDATAPI.DataAPI.MacMan.CMachiningReport.GetMaxCount(Okuma.CLDATAPI.Enumerations.ReportPeriodEnum)">
      <summary> Gets maximum number of machining report that can stored by the system for current sub system </summary>
      <example>This example shows how to call GetMaxCount method. <para>	On Error GoTo sd	</para> <para>		Dim objMeh As MacMan.CMachiningReport	</para> <para>		Dim Mac_reportObject As MacMan.CMachining	</para> <para>		opIndex = CInt(Me.MacReport_Index.Text)	</para> <para>		int_PeriodReport = CInt(Me.Cmb_rptPeriod.SelectedItem)	</para> <para>		Mac_reportObject = objMeh.GetMachiningReport(opIndex,int_PeriodReport)	</para> <para>		Me.macreport_maxcount.Text =objMeh.GetMaxCount(int_PeriodReport)	</para> <para>		Exit Sub	</para> <para>	sd:	</para> <para>		doError("MacMan Machining  Report", Err.Description)	</para> <para>		Resume Next	</para> </example>
      <param name="enReportPeriod">Values for this parameter come from the  Okuma.CLDATAPI.Enumerations.ReportPeriodEnum.</param>
      <returns>A System.Int32 value that represents the maximum number of machining reports</returns>
      <exception cref="System.ApplicationException">Thrown when function fails to perform the operation at current NC condition.</exception>
      <exception cref="System.NotSupportedException">Thrown when operation/input parameters are not supported for the current system.</exception>
    </member>
    <member name="M:Okuma.CLDATAPI.DataAPI.MacMan.CMachiningReport.GetCount(Okuma.CLDATAPI.Enumerations.ReportPeriodEnum)">
      <summary> Gets number of machining report available for current sub system </summary>
      <example>This example shows how to call GetCount method. <para>	On Error GoTo sd	</para> <para>		Dim objMeh As MacMan.CMachiningReport	</para> <para>		Dim Mac_reportObject As MacMan.CMachining	</para> <para>		opIndex = CInt(Me.MacReport_Index.Text)	</para> <para>		int_PeriodReport = CInt(Me.Cmb_rptPeriod.SelectedItem)	</para> <para>		Mac_reportObject = objMeh.GetMachiningReport(opIndex, int_PeriodReport)	</para> <para>		Me.MacReport_count.Text = objMeh.GetCount(int_PeriodReport)	</para> <para>		Exit Sub	</para> <para>	sd:	</para> <para>		doError("MacMan Machining  Report", Err.Description)	</para> <para>		Resume Next	</para> </example>
      <param name="enReportPeriod">A report period index.  Values for this parameter come from the Okuma.CLDATAPI.Enumerations.ReportPeriodEnum.</param>
      <returns>A System.Int32 value that represents the number of machining report available</returns>
      <exception cref="System.ApplicationException">Thrown when function fails to perform the operation at current NC condition.</exception>
      <exception cref="System.NotSupportedException">Thrown when operation/input parameters are not supported for the current system.</exception>
    </member>
    <member name="M:Okuma.CLDATAPI.DataAPI.MacMan.CMachiningReport.GetMachiningReport(System.Int32,Okuma.CLDATAPI.Enumerations.ReportPeriodEnum)">
      <summary> Gets the Machining report data at the specified report index, and report period type for current sub system. </summary>
      <example>This example shows how to call GetMachiningReport method. <para>	Dim Mac_reportObject As MacMan.CMachining	</para> <para>	Dim int_PeriodReport As Int32	</para> <para>	Dim opIndex As Int16	</para> <para>	int_PeriodReport = CInt(Me.Cmb_rptPeriod.SelectedItem)	</para> <para>	opIndex = CInt(Me.MacReport_Index.Text)	</para> <para>	Mac_reportObject = objMeh.GetMachiningReport(opIndex, int_PeriodRepor)	</para> <para>	Exit Sub	</para> <para>	sd:	</para> <para>	    doError("MacMan Machining  Report", Err.Description)	</para> <para>		Resume Next	</para> </example>
      <param name="intIndex">Machining report index</param>
      <param name="enReportPeriod">Type of report to be retrieved.  Values of parameter come from Okuma.CLDATAPI.Enumerations.ReportPeriodEnum enumeration.</param>
      <returns>An Okuma.CLDATAPI.DataAPI.CMachining object that represents the machining report data.</returns>
      <exception cref="System.ApplicationException">Thrown when function fails to perform the operation at current NC condition.</exception>
      <exception cref="System.NotSupportedException">Thrown when operation/input parameters are not supported for the current system.</exception>
      <Figure> MACHINING REPORT: DAILY(TODAY) 2006/10/25 - Machining report for today on October 25, 2006 <para> <img src="MacMan-MachiningReport.jpg" /> </para>  </Figure>
    </member>
    <member name="M:Okuma.CLDATAPI.DataAPI.MacMan.CMachiningReport.GetMachiningReports(System.Int32,System.Int32,Okuma.CLDATAPI.Enumerations.ReportPeriodEnum)">
      <summary> Gets the Machining report data at the specified report indexes, and report period type for current sub system. </summary>
      <example>This example shows how to call GetMachiningReports method. <para>	Dim Mac_reportObject As MacMan.CMachining	</para> <para>	Dim int_PeriodReport As Int32	</para> <para>	Dim opIndex As Int16	</para> <para>	Dim Mac_reportObjects As ArrayList	</para> <para>	Try	</para> <para>	    Me.txtmecreport_result.Text = ""	</para> <para>	    int_PeriodReport = CInt(Me.Cmb_rptPeriod.SelectedItem)	</para> <para>	    opIndex = CInt(Me.MacReport_Index.Text)	</para> <para>	    Mac_reportObject = objMeh.GetMachiningReport(opIndex, int_PeriodReport)	</para> <para>	    Mac_reportObjects = objMeh.GetMachiningReports(CInt(txt_from.Text),CInt(txt_to.Text), int_PeriodReport)	</para> <para>	    For Each Mac_reportObject In Mac_reportObjects	</para> <para>	        Me.mohResults.Text += Mac_reportObject.StartDate &amp; vbTab &amp; Mac_reportObject.NumberOfWork &amp; Mac_reportObject.NumberOfWork &amp; vbTab &amp; Mac_reportObject.RunningTime &amp; Mac_reportObject.OperatingTime &amp; Mac_reportObject.CuttingTime &amp; Mac_reportObject.MainProgramFileName &amp; Mac_reportObject.MainProgramName + vbCrLf	</para> <para>	    Next	</para> <para>	Catch ae As ApplicationException	</para> <para>	    doError("CWorkpiece", ae.Message)	</para> <para>	Catch ex As Exception	</para> <para>	    doError("CWorkpiece", ex.Message)	</para> <para>	End Try	</para> </example>
      <param name="intFromIndex">Starting machining report index</param>
      <param name="intToIndex">Ending machining report index</param>
      <param name="enReportPeriod">Type of report to be retrieved.  Values of parameter come from Okuma.CLDATAPI.Enumerations.ReportPeriodEnum enumeration.</param>
      <returns>A System.Collections.ArrayList object that represents list of machining report data  if possible.</returns>
      <exception cref="System.ApplicationException">Thrown when function fails to perform the operation at current NC condition.</exception>
      <exception cref="System.NotSupportedException">Thrown when operation/input parameters are not supported for the current system.</exception>
      <Figure> MACHINING REPORT: DAILY(TODAY) 2006/10/25 - Machining report for today on October 25, 2006 <para> <img src="MacMan-MachiningReport.jpg" /> </para>  </Figure>
    </member>
    <member name="T:Okuma.CLDATAPI.DataAPI.CMSpindle">
      <summary> Class provides information about M-Spindle (Spindle attacthed to the turret).  </summary>
    </member>
    <member name="M:Okuma.CLDATAPI.DataAPI.CMSpindle.#ctor(Okuma.CLDATAPI.Enumerations.SubSystemEnum)">
      <summary> Create an instance of this class given sub system.  By default, class is created with sub system = NC_AL. </summary>
      <param name="enSubSystem">Sub system</param>
    </member>
    <member name="M:Okuma.CLDATAPI.DataAPI.CMSpindle.SetSubSystem(Okuma.CLDATAPI.Enumerations.SubSystemEnum)">
      <summary> Set current SubSystem for this class instance </summary>
      <example>This example shows how to set SubSystem. <para>	objMSpindle.SetSubSystem(Me.mspinSubSystemCombo.SelectedValue)	</para> </example>
      <param name="enSubSystem">Sub System. Value for this Parameter come from Okuma.CLDATAPI.Enumerations.SubSystemEnum</param>
      <exception cref="System.ApplicationException">Thrown when function fails to perform the operation at current NC condition.</exception>
      <exception cref="System.NotSupportedException">Thrown when operation/input parameters are not supported for the current system or it fails to write data to system.</exception>
    </member>
    <member name="M:Okuma.CLDATAPI.DataAPI.CMSpindle.GetCommandMSpindlerate">
      <summary> Gets the command feedrate of M-Spindle for current sub system. </summary>
      <example>This example shows how to call GetCommandMSpindlerate method. <para>	Try	</para> <para>	    Me.mspinCommandMSpindleRate.Text = objMSpindle.GetCommandMSpindlerate	</para> <para>	Catch ae As ApplicationException	</para> <para>	    doError("MSpindle", ae.Message)	</para> <para>	Catch ex As Exception	</para> <para>	    doError("MSpindle", ex.Message)	</para> <para>	End Try	</para> </example>
      <returns>A System.Int32 value</returns>
      <DataUnit> RPM </DataUnit>
      <exception cref="System.ApplicationException">Thrown when function fails to perform the operation at current NC condition.</exception>
      <exception cref="System.NotSupportedException">Thrown when operation/input parameters are not supported for the current system.</exception>
      <remarks> <para> The following specifications must be met in order to function: <list type="table"> <listheader> <term>Specification</term> <description>Valid/Invalid</description> </listheader> <item> <term>Compound processing</term> <description>Valid</description> </item> </list> </para> </remarks>
      <Figure> BLOCK DATA - SB - Command feedrate of M-Spindle <para> <img src="BlockData.CommandFeedrate.MSP.jpg" /> </para> </Figure>
      <SubSystem> Please see <see href="SubSystemNoteTable.htm">Sub System Note Table</see> for more information if applicable. <para>Valid sub systems for this function (Y = Valid, N = Not valid)</para> Please see <see href="SubSystemNoteTable.htm">Sub System Note Table</see> for more information if applicable. <para> <list type="table"> <listheader> <term>NC_RUN </term> <term>NC_RUN_1 </term> <term>NC_RUN_2 </term> <term>NC_RUN_3 </term> <term>NC_PANEL </term> <term>NC_PANEL_1 </term> <term>NC_PANEL_2 </term> <term>NC_PANEL_3 </term> <term>NC_AL </term> <term>NC_AR </term> <term>NC_BL </term> <term>NC_BR </term> <term>NC_CL </term> <term>NC_CR </term> <term>NC_2AL </term> </listheader> <item> <term>Y (*1)</term> <term>Y</term> <term>Y (*2)</term> <term>Y (*34)</term> <term>Y (*1)</term> <term>Y</term> <term>Y (*2)</term> <term>Y (*34)</term> <term>Y</term> <term>Y</term> <term>Y (*2)</term> <term>Y (*2)</term> <term>Y (*34)</term> <term>Y (*34)</term> <term>N</term> </item> </list> </para>  </SubSystem>
    </member>
    <member name="M:Okuma.CLDATAPI.DataAPI.CMSpindle.GetActualMSpindlerate">
      <summary> Gets the actual M-Spindle speed rate for current sub system. </summary>
      <example>This example shows how to call GetActualMSpindlerate method. <para>	mspinActualMSpindleRate.Text = objMSpindle.GetActualMSpindlerate	</para> </example>
      <returns>A System.Int32 value represents actual speed rate of M-spindle .</returns>
      <DataUnit> RPM </DataUnit>
      <exception cref="System.ApplicationException">Thrown when function fails to perform the operation at current NC condition.</exception>
      <exception cref="System.NotSupportedException">Thrown when operation/input parameters are not supported for the current system.</exception>
      <remarks> <para> The following specifications must be met in order to function: <list type="table"> <listheader> <term>Specification</term> <description>Valid/Invalid</description> </listheader> <item> <term>Multitasking machine specification NC spec [3,0]</term> <description>Valid</description> </item> </list> </para> </remarks>
      <Figure> BLOCK DATA - SB - Actual Speed rate of M-Spindle <para> <img src="BlockData.ActualSpindlerate.MSP.jpg" /> </para> </Figure>
      <SubSystem> Please see <see href="SubSystemNoteTable.htm">Sub System Note Table</see> for more information if applicable. <para>Valid sub systems for this function (Y = Valid, N = Not valid)</para> <para>Valid sub systems for this function (Y = Valid, N = Not valid)</para> <para> <list type="table"> <listheader> <term>NC_RUN </term> <term>NC_RUN_1 </term> <term>NC_RUN_2 </term> <term>NC_RUN_3 </term> <term>NC_PANEL </term> <term>NC_PANEL_1 </term> <term>NC_PANEL_2 </term> <term>NC_PANEL_3 </term> <term>NC_AL </term> <term>NC_AR </term> <term>NC_BL </term> <term>NC_BR </term> <term>NC_CL </term> <term>NC_CR </term> <term>NC_2AL </term> </listheader> <item> <term>Y (*1)</term> <term>Y</term> <term>Y (*2)</term> <term>Y (*34)</term> <term>Y (*1)</term> <term>Y</term> <term>Y (*2)</term> <term>Y (*34)</term> <term>Y</term> <term>Y</term> <term>Y (*2)</term> <term>Y (*2)</term> <term>Y (*34)</term> <term>Y (*34)</term> <term>N</term> </item> </list> </para>  </SubSystem>
    </member>
    <member name="M:Okuma.CLDATAPI.DataAPI.CMSpindle.GetMSpindleLoad">
      <summary> Gets load of M-Spindle for current sub system. </summary>
      <example>This example shows how to call GetMSpindleLoad method. <para>	Try	</para> <para>	    Me.mspinMSpindleLoad.Text = objMSpindle.GetMSpindleLoad	</para> <para>	Catch ae As ApplicationException	</para> <para>	    doError("MSpindle", ae.Message)	</para> <para>	Catch ex As Exception	</para> <para>	    doError("MSpindle", ex.Message)	</para> <para>	End Try	</para> </example>
      <returns>A System.Int32 value</returns>
      <DataUnit> Percentage </DataUnit>
      <exception cref="System.ApplicationException">Thrown when function fails to perform the operation at current NC condition.</exception>
      <exception cref="System.NotSupportedException">Thrown when operation/input parameters are not supported for the current system.</exception>
      <remarks> <para> The following specifications must be met in order to function: <list type="table"> <listheader> <term>Specification</term> <description>Valid/Invalid</description> </listheader> <item> <term>Compound processing</term> <description>Valid</description> </item> </list> </para> </remarks>
      <Figure> LOAD MONITOR - M - M-Spindle Load <para> <img src="LoadMonitor2.jpg" /> </para> </Figure>
      <SubSystem> Please see <see href="SubSystemNoteTable.htm">Sub System Note Table</see> for more information if applicable. <para>Valid sub systems for this function (Y = Valid, N = Not valid)</para> Please see <see href="SubSystemNoteTable.htm">Sub System Note Table</see> for more information if applicable. <para> <list type="table"> <listheader> <term>NC_RUN </term> <term>NC_RUN_1 </term> <term>NC_RUN_2 </term> <term>NC_RUN_3 </term> <term>NC_PANEL </term> <term>NC_PANEL_1 </term> <term>NC_PANEL_2 </term> <term>NC_PANEL_3 </term> <term>NC_AL </term> <term>NC_AR </term> <term>NC_BL </term> <term>NC_BR </term> <term>NC_CL </term> <term>NC_CR </term> <term>NC_2AL </term> </listheader> <item> <term>Y (*1)</term> <term>Y</term> <term>Y (*2)</term> <term>Y (*34)</term> <term>Y (*1)</term> <term>Y</term> <term>Y (*2)</term> <term>Y (*34)</term> <term>Y</term> <term>Y</term> <term>Y (*2)</term> <term>Y (*2)</term> <term>Y (*34)</term> <term>Y (*34)</term> <term>N</term> </item> </list> </para>  </SubSystem>
    </member>
    <member name="M:Okuma.CLDATAPI.DataAPI.CMSpindle.GetMSpindleState">
      <summary> Gets current state of M-Spindle </summary>
      <example>This example shows how to call GetMSpindleState method. <para>	Me.mspinMSpindleState.Text = System.Enum.GetNames(GetType(SpindleStateEnum)).GetValue(objMSpindle.GetMSpindleState)	</para> </example>
      <returns>An Okuma.CLDATAPI.Enumerations.SpindleStateEnum enum value.</returns>
      <exception cref="System.ApplicationException">Thrown when function fails to perform the operation at current NC condition.</exception>
      <exception cref="System.NotSupportedException">Thrown when operation/input parameters are not supported for the current system.</exception>
      <remarks> <para> The following specifications must be met in order to function: <list type="table"> <listheader> <term>Specification</term> <description>Valid/Invalid</description> </listheader> <item> <para>Multitasking machine specification NC spec [3,0]</para> <description>Valid</description> </item> </list> </para> </remarks>
      <Figure> AUTO OPERATION - MAIN PROGRAM - M AXIS - STOP - M-Spindle axis stops. <para> <img src="AutoOperation.MainProgram.jpg" /> </para> </Figure>
      <SubSystem> Please see <see href="SubSystemNoteTable.htm">Sub System Note Table</see> for more information if applicable. <para>Valid sub systems for this function (Y = Valid, N = Not valid)</para> Please see <see href="SubSystemNoteTable.htm">Sub System Note Table</see> for more information if applicable. <para> <list type="table"> <listheader> <term>NC_RUN </term> <term>NC_RUN_1 </term> <term>NC_RUN_2 </term> <term>NC_RUN_3 </term> <term>NC_PANEL </term> <term>NC_PANEL_1 </term> <term>NC_PANEL_2 </term> <term>NC_PANEL_3 </term> <term>NC_AL </term> <term>NC_AR </term> <term>NC_BL </term> <term>NC_BR </term> <term>NC_CL </term> <term>NC_CR </term> <term>NC_2AL </term> </listheader> <item> <term>Y (*1)</term> <term>Y</term> <term>Y (*2)</term> <term>Y (*34)</term> <term>Y (*1)</term> <term>Y</term> <term>Y (*2)</term> <term>Y (*34)</term> <term>Y</term> <term>Y</term> <term>Y (*2)</term> <term>Y (*2)</term> <term>Y (*34)</term> <term>Y (*34)</term> <term>N</term> </item> </list> </para>  </SubSystem>
    </member>
    <member name="M:Okuma.CLDATAPI.DataAPI.CMSpindle.GetCurrentToolInH1Turret">
      <summary> Gets the current tool number currently mounted in the M-Spindle for current sub system. </summary>
      <example>This example shows how to call GetCurrentToolInH1Turret method. <para>	Me.mspinCurrentToolInH1Turret.Text = objMSpindle.GetCurrentToolInH1Turret	</para> </example>
      <returns>A System.Int32 value</returns>
      <exception cref="System.ApplicationException">Thrown when function fails to perform the operation at current NC condition.</exception>
      <exception cref="System.NotSupportedException">Thrown when operation/input parameters are not supported for the current system.</exception>
      <Figure> ANIMATE SIMUATION(REAL 3D) - T000 - Current tool number mounted in the M-Spindle <para> <img src="AnimateSimulation.jpg" /> </para> </Figure>
      <SubSystem> Please see <see href="SubSystemNoteTable.htm">Sub System Note Table</see> for more information if applicable. <para>Valid sub systems for this function (Y = Valid, N = Not valid)</para> <para> <list type="table"> <listheader> <term>NC_RUN </term> <term>NC_RUN_1 </term> <term>NC_RUN_2 </term> <term>NC_RUN_3 </term> <term>NC_PANEL </term> <term>NC_PANEL_1 </term> <term>NC_PANEL_2 </term> <term>NC_PANEL_3 </term> <term>NC_AL </term> <term>NC_AR </term> <term>NC_BL </term> <term>NC_BR </term> <term>NC_CL </term> <term>NC_CR </term> <term>NC_2AL </term> </listheader> <item> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> </item> </list> </para>  </SubSystem>
    </member>
    <member name="M:Okuma.CLDATAPI.DataAPI.CMSpindle.GetSpindlerateOverride(Okuma.CLDATAPI.Enumerations.MSpindleEnum)">
      <summary> Gets M spindle rate override at the specified M-spindle index. </summary>
      <example>This example shows how to call GetSpindlerateOverride method. <para>	Me.spinRateOverride.Text = objSpindle.GetSpindlerateOverride(Me.spinComboAxis.SelectedValue)	</para> <para>	Me.mspinSpindleRateOverride.Text = objMSpindle.GetSpindlerateOverride(Me.mspinSpindleRateOverrideCombo.SelectedValue	</para> </example>
      <param name="enMSpindle">M-Spindle index.  Values of parameter come from the Okuma.CLDATAPI.Enumerations.MSpindleEnum enumeration.</param>
      <returns>A System.Int32 value</returns>
      <DataUnit> Percentage </DataUnit>
      <exception cref="System.ApplicationException">Thrown when function fails to perform the operation at current NC condition.</exception>
      <exception cref="System.NotSupportedException">Thrown when operation/input parameters are not supported for the current system.</exception>
      <remarks> <para> The following specifications for MA axis must be met in order to function: <list type="table"> <listheader> <term>Specification</term> <description>Valid/Invalid</description> </listheader> <item> <term>Multitasking machine specification NC spec [3,0]</term> <description>Valid</description> </item> </list> </para> <para> The following specifications for MB axis must be met in order to function: <list type="table"> <listheader> <term>Specification</term> <description>Valid/Invalid</description> </listheader> <item> <term>Multitasking machine specification NC spec [3,0]</term> <description>Valid</description> </item> <item> <term>4 Axis 2 Saddle specification NC spec [2,0]</term> <description>Valid</description> </item> <item> <term>B-Turret M-Axis specification</term> <description>Valid</description> </item> </list> </para> <para> The following specifications for MC axis must be met in order to function: <list type="table"> <listheader> <term>Specification</term> <description>Valid/Invalid</description> </listheader> <item> <term>Multitasking machine specification NC spec [3,0]</term> <description>Valid</description> </item> <item> <term>3 Saddle specification</term> <description>Valid</description> </item> <item> <term>C-Turret M-Axis specification</term> <description>Valid</description> </item> </list> </para> <para> The following specifications for ML/MR axis must be met in order to function: <list type="table"> <listheader> <term>Specification</term> <description>Valid/Invalid</description> </listheader> <item> <term>Multitasking machine specification NC spec [3,0]</term> <description>Valid</description> </item> <item> <term>Parallel2 Spindle specification</term> <description>Valid</description> </item> </list> </para> </remarks>
      <Figure> Standard Navigation Panel - G02 - M-Spindlle rate override for current select A,B, and C Turret. <para> <img src="Standard.Navigation.Panel.jpg" /> </para> </Figure>
      <Figure> Parallel 2SP Navigation Panel - G04 - Left Machine/M-Spindlle rate override, G05 - Right Machine/M-Spindlle rate override <para> <img src="Parallel2SPNavigationPanel.jpg" /> </para>  </Figure>
    </member>
    <member name="T:Okuma.CLDATAPI.DataAPI.MacMan.COperatingHistory">
      <summary> Class provides operating history information stored by NC.  </summary>
    </member>
    <member name="M:Okuma.CLDATAPI.DataAPI.MacMan.COperatingHistory.#ctor(Okuma.CLDATAPI.Enumerations.MacManSubSystemEnum)">
      <summary> Create an instance of this class given sub system.  By default, class is created with sub system = MacManSubSystemEnum::CurrentSubSystem . </summary>
      <param name="enSubSystem">Sub system</param>
    </member>
    <member name="M:Okuma.CLDATAPI.DataAPI.MacMan.COperatingHistory.SetSubSystem(Okuma.CLDATAPI.Enumerations.MacManSubSystemEnum)">
      <summary> Set current sub system for this class instance </summary>
      <example> This example shows how to sets SubSystem <para>	objMopnh.SetSubSystem(Me.CMB_OPERATINGHISTORY.SelectedValue)	</para> </example>
      <param name="enSubSystem">Sub System value. Value for this parameter come from  Okuma.CLDATAPI.Enumerations.MacManSubSystemEnum</param>
      <exception cref="System.ApplicationException">Thrown when function fails to perform the operation at current NC condition.</exception>
      <exception cref="System.NotSupportedException">Thrown when operation/input parameters are not supported for the current system.</exception>
    </member>
    <member name="M:Okuma.CLDATAPI.DataAPI.MacMan.COperatingHistory.GetMaxCount">
      <summary> Gets the maximum number of operating history data for current sub system. </summary>
      <example> This example shows how to call GetMaxCount method <para>	Dim objMopnh As DataAPI.MacMan.COperatingHistory	</para> <para>	mopnhMaxNoofReports.Text = objMopnh.GetMaxCount	</para> </example>
      <returns>A System.Int32 value</returns>
      <exception cref="System.ApplicationException">Thrown when function fails to perform the operation at current NC condition.</exception>
      <exception cref="System.NotSupportedException">Thrown when operation/input parameters are not supported for the current system.</exception>
    </member>
    <member name="M:Okuma.CLDATAPI.DataAPI.MacMan.COperatingHistory.GetTodayOperatingHistory(System.Int32,System.Int32,Okuma.CLDATAPI.Enumerations.OperatingReportDataEnum)">
      <summary> Gets today operating history at the specified report data, and report indexes for current sub system </summary>
      <example> This example shows how to call GetTodayOperatingHistory method <para>	Dim rp As Int32()	</para> <para>	rp = objMopnh.GetTodayOperatingHistory(mopnhFrom.Text, mopnhTo.Text, OperatingReportDataEnum.RunningTime)	</para> </example>
      <param name="intFromIndex">Starting operating history index.  The 1-based index at which the alarm information is obtained</param>
      <param name="intToIndex">Ending operating history index.  The 1-based index at which the alarm information is obtained</param>
      <param name="enReportData">Operating history data to be retrieved</param>
      <returns>A zero-based array of System.Int32 values that represents the operation history data for the given indexes.</returns>
      <exception cref="System.ApplicationException">Thrown when function fails to perform the operation at current NC condition.</exception>
      <exception cref="System.NotSupportedException">Thrown when operation/input parameters are not supported for the current system.</exception>
      <remarks> If a request for a total of 144 operating histories, then each value in the array is equivalent to the time period as shown in the table below. A value of 1 indicates that the state of this requested report data is ON; otherwise it is OFF. <list type="table"> <listheader> <term>Index</term> <description>Time slot (hh:mm) </description> </listheader> <item> <term>0</term> <description>00:00</description> </item> <item> <term>1</term> <description>00:10</description> </item> <item> <term>2</term> <description>00:20</description> </item> <item> <term>...</term> <description>...</description> </item> <item> <term>...</term> <description>...</description> </item> <item> <term>142</term> <description>23:40</description> </item> <item> <term>143</term> <description>23:50</description> </item> </list> </remarks>
      <Figure> OPERATING HIS - DAILY(TODAY):2006/10/25 <para> <img src="MacMan-OperatingHistory.jpg" /> </para>  </Figure>
    </member>
    <member name="M:Okuma.CLDATAPI.DataAPI.MacMan.COperatingHistory.GetPreviousOperatingHistory(System.Int32,System.Int32,Okuma.CLDATAPI.Enumerations.OperatingReportDataEnum)">
      <summary> Gets previous operating history at the specified report data, and report indexes for current sub system </summary>
      <example> This example shows how to call GetPreviousOperatingHistory method <para>	Dim rp As Int32()	</para> <para>	rp = objMopnh.GetPreviousOperatingHistory(mopnhFrom.Text, mopnhTo.Text, OperatingReportDataEnum.RunningTime)	</para> </example>
      <param name="intFromIndex">Starting operating history index.  The 1-based index at which the alarm information is obtained</param>
      <param name="intToIndex">Ending operating history index.  The 1-based index at which the alarm information is obtained</param>
      <param name="enReportData">Operating history data to be retrieved</param>
      <returns>A zero-based array of System.Int32 values that represents the operation history data for the given indexes.</returns>
      <exception cref="System.ApplicationException">Thrown when function fails to perform the operation at current NC condition.</exception>
      <exception cref="System.NotSupportedException">Thrown when operation/input parameters are not supported for the current system.</exception>
      <remarks> If a request for a total of 144 operating histories, then each value in the array is equivalent to the time period as shown in the table below. A value of 1 indicates that the state of this requested report data is ON; otherwise it is OFF. <list type="table"> <listheader> <term>Index</term> <description>Time slot (hh:mm) </description> </listheader> <item> <term>0</term> <description>00:00</description> </item> <item> <term>1</term> <description>00:10</description> </item> <item> <term>2</term> <description>00:20</description> </item> <item> <term>...</term> <description>...</description> </item> <item> <term>...</term> <description>...</description> </item> <item> <term>142</term> <description>23:40</description> </item> <item> <term>143</term> <description>23:50</description> </item> </list> </remarks>
      <Figure> OPERATING HIS - DAILY(PRE):2006/10/25 <para> <img src="MacMan-OperatingHistory.jpg" /> </para>  </Figure>
    </member>
    <member name="T:Okuma.CLDATAPI.DataAPI.MacMan.COperatingReport">
      <summary> Class provides operating report information stored by NC.  </summary>
    </member>
    <member name="M:Okuma.CLDATAPI.DataAPI.MacMan.COperatingReport.#ctor(Okuma.CLDATAPI.Enumerations.MacManSubSystemEnum)">
      <summary> Create an instance of this class given sub system.  By default, class is created with sub system = MacManSubSystemEnum::CurrentSubSystem . </summary>
      <param name="enSubSystem">Sub system</param>
    </member>
    <member name="M:Okuma.CLDATAPI.DataAPI.MacMan.COperatingReport.SetSubSystem(Okuma.CLDATAPI.Enumerations.MacManSubSystemEnum)">
      <summary> Set current sub system for this class instance </summary>
      <example> This example shows how to sets SubSystem <para>	objMcOR.SetSubSystem(Me.McORSubSystemCombo.SelectedValue)	</para> </example>
      <param name="enSubSystem">Sub System. Values for this parameter come from the Okuma.CLDATAPI.Enumerations.MacManSubSystemEnum</param>
      <exception cref="System.ApplicationException">Thrown when function fails to perform the operation at current NC condition.</exception>
      <exception cref="System.NotSupportedException">Thrown when operation/input parameters are not supported for the current system.</exception>
    </member>
    <member name="M:Okuma.CLDATAPI.DataAPI.MacMan.COperatingReport.GetMaxCount">
      <summary> Gets maximum number of Operating report that can be stored by the system for current sub system. </summary>
      <example> This example shows how to call GetMaxCount method <para>	Dim objMcOR As DataAPI.MacMan.COperatingReport	</para> <para>	Me.txt_optreportgetmaxcount.Text = objMcOR.GetMaxCount()	</para> </example>
      <returns>A System.Int32 value that represents the maximum number of Operating report</returns>
      <exception cref="System.ApplicationException">Thrown when function fails to perform the operation at current NC condition.</exception>
      <exception cref="System.NotSupportedException">Thrown when operation/input parameters are not supported for the current system.</exception>
      <Figure>  </Figure>
    </member>
    <member name="M:Okuma.CLDATAPI.DataAPI.MacMan.COperatingReport.GetOperatingStatus">
      <summary> Gets the machine operating status for current sub system. </summary>
      <example> This example shows how to call GetOperatingStatus method <para>	On Error GoTo sd	</para> <para>		Me.morNonoperatingCondition.Text = System.Enum.GetNames(GetType(NonOperatingConditionEnum)).GetValue(objMor.GetNonOperatingCondition)	</para> <para>		Me.morOperatingStatus.Text = System.Enum.GetNames(GetType(OperatingStatusEnum)).GetValue(objMor.GetOperatingStatus)	</para> <para>		Me.morPeriodOperatingReport.Text = objMor.GetPeriodOperatingTime	</para> <para>		Me.morPreviousOperatingTime.Text = objMor.GetPreviousOperatingTime	</para> <para>		Me.morTodayOperatingTime.Text = objMor.GetTodayOperatingTime	</para> <para>		Exit Sub	</para> <para>	sd:	</para> <para>		doError("MacmMan Operating Report", Err.Description)	</para> <para>		Resume Next	</para> </example>
      <returns>An Okuma.CLDATAPI.Enumerations.OperatingStatusEnum enumeration value</returns>
      <exception cref="System.ApplicationException">Thrown when function fails to perform the operation at current NC condition.</exception>
      <exception cref="System.NotSupportedException">Thrown when operation/input parameters are not supported for the current system.</exception>
      <Figure> START - OPERATING - Machine is operating if Operating has a yellow color in its background.  Otherwise, it is not operating. <para> <img src="MacMan-OperatingReport.jpg" /> </para>  </Figure>
    </member>
    <member name="M:Okuma.CLDATAPI.DataAPI.MacMan.COperatingReport.GetNonOperatingCondition">
      <summary> Gets the Non-operating condition of the machine for current sub system. </summary>
      <example> This example shows how to call GetNonOperatingCondition method <para>	Private Sub xyz	</para> <para>	On Error GoTo sd	</para> <para>		Dim objMor As new CLDATAPILib.MacMan.COperatingReport(sdSubSystem)	</para> <para>		Me.morNonoperatingCondition.Text = System.Enum.GetNames(GetType(NonOperatingConditionEnum)).GetValue(objMor.GetNonOperatingCondition)	</para> <para>		Exit Sub	</para> <para>	sd:	</para> <para>		doError("MacmMan Operating Report", Err.Description)	</para> <para>		Resume Next	</para> <para>	End Sub </para> </example>
      <returns>An Okuma.CLDATAPI.Enumerations.NonOperatingConditionEnum enumeration value</returns>
      <exception cref="System.ApplicationException">Thrown when function fails to perform the operation at current NC condition.</exception>
      <exception cref="System.NotSupportedException">Thrown when operation/input parameters are not supported for the current system.</exception>
      <Figure> OPERATING REP:DAILY(TODAY) - NOT OPERATING - NO OPERATOR -  When the machine is not operating, it is in one the non-operating condition such as in-proc setup, no operator, part waiting, maintenance, other. <para> <img src="MacMan-OperatingReport.jpg" /> </para>  </Figure>
    </member>
    <member name="M:Okuma.CLDATAPI.DataAPI.MacMan.COperatingReport.GetTodayOperatingReport(Okuma.CLDATAPI.Enumerations.OperatingReportDataEnum)">
      <summary> Gets Today operating report at the specified report data for current sub system. </summary>
      <example> This example shows how to call GetTodayOperatingReport method <para>	On Error GoTo sd	</para> <para>		Dim OjbOptreport As DataAPI.MacMan.COperatingReport	</para> <para>		Me.txt_optreportOperatingTime.Text = OjbOptreport.GetTodayOperatingReport(CInt(Me.txt_optReportFrom.Text), CInt(Me.txt_optReportTo.Text),OperatingReportDataEnum.OperatingTime)	</para> <para>		Exit Sub	</para> <para>	sd:	</para> <para>		doError("MacMan Operating History Report", Err.Description)	</para> <para>		Resume Next	</para> </example>
      <param name="enReportData">Report data to be retrieved.  Values for this parameter come from the OperatingReportDataEnum enumeration.</param>
      <returns>A System.Int64 value.</returns>
      <DataUnit>Second</DataUnit>
      <exception cref="System.ApplicationException">Thrown when function fails to perform the operation at current NC condition.</exception>
      <exception cref="System.NotSupportedException">Thrown when operation/input parameters are not supported for the current system.</exception>
      <Figure> OPERATING REP: DAILY(TODAY) <para> <img src="MacMan.OperatingReport.Today.jpg" /> </para>  </Figure>
    </member>
    <member name="M:Okuma.CLDATAPI.DataAPI.MacMan.COperatingReport.GetPreviousOperatingReport(Okuma.CLDATAPI.Enumerations.OperatingReportDataEnum)">
      <summary> Gets Previous operating report for the specified report data. </summary>
      <example> This example shows how to call GetPreviousOperatingReport method <para>	Dim OjbOptreport As DataAPI.MacMan.COperatingReport	</para> <para>	Me.txt_optreportAlarmonTime.Text =	OjbOptreport.GetPreviousOperatingReport(OperatingReportDataEnum.AlarmOnTime)	</para> </example>
      <param name="enReportData">Report data to be retrieved.  Values for this parameter come from the Okuma.CLDATAPI.OperatingReportDataEnum enumeration.</param>
      <returns>A System.Int64 value.</returns>
      <DataUnit>Second</DataUnit>
      <exception cref="System.ApplicationException">Thrown when function fails to perform the operation at current NC condition.</exception>
      <exception cref="System.NotSupportedException">Thrown when operation/input parameters are not supported for the current system.</exception>
      <Figure> OPERATING REP:DAILY(PRE) <para> <img src="MacMan.OperatingReport.Previous.jpg" /> </para>  </Figure>
    </member>
    <member name="M:Okuma.CLDATAPI.DataAPI.MacMan.COperatingReport.GetPeriodOperatingReport(Okuma.CLDATAPI.Enumerations.OperatingReportDataEnum)">
      <summary> Gets Period operating report at the specified report data for current sub system </summary>
      <example> This example shows how to call GetPeriodOperatingReport method <para>	Me.txt_optreportAlarmonTime.Text =	OjbOptreport.GetPeriodOperatingReport(OperatingReportDataEnum.AlarmOnTime)	</para> </example>
      <param name="enReportData">Report data to be retrieved.  Values for this parameter come from the Okuma.CLDATAPI.OperatingReportDataEnum enumeration.</param>
      <returns>A System.Int64 value</returns>
      <DataUnit>Second</DataUnit>
      <exception cref="System.ApplicationException">Thrown when function fails to perform the operation at current NC condition.</exception>
      <exception cref="System.NotSupportedException">Thrown when operation/input parameters are not supported for the current system.</exception>
      <Figure> OPERATING REP:PERIOD <para> <img src="MacMan.OperatingReport.Period.jpg" /> </para>  </Figure>
    </member>
    <member name="M:Okuma.CLDATAPI.DataAPI.MacMan.COperatingReport.GetTodayOperatingReportDate">
      <summary> Gets Today operating report date for current sub system </summary>
      <example> This example shows how to call COperatingReport method <para>	Dim OjbOptreport As DataAPI.MacMan.COperatingReport	</para> <para>	txt_optreportOperatingReportDate.Text = OjbOptreport.GetPeriodOperatingReportDate	</para> </example>
      <returns>A System.String value that represents the date in yyyy/mm/dd format</returns>
      <exception cref="System.ApplicationException">Thrown when function fails to perform the operation at current NC condition.</exception>
      <exception cref="System.NotSupportedException">Thrown when operation/input parameters are not supported for the current system.</exception>
      <Figure> OPERATING REP: DAILY(TODAY) <para> <img src="MacMan.OperatingReport.Today.jpg" /> </para>  </Figure>
    </member>
    <member name="M:Okuma.CLDATAPI.DataAPI.MacMan.COperatingReport.GetPreviousOperatingReportDate">
      <summary> Gets Previous operating report date for current sub system. </summary>
      <example> This example shows how to call GetPreviousOperatingReportDate method <para>	Dim OjbOptreport As DataAPI.MacMan.COperatingReport	</para> <para>	txt_optreportOperatingReportDate.Text=OjbOptreport.GetPreviousOperatingReportDate	</para> </example>
      <returns>A System.String value that represents the date in yyyy/mm/dd format</returns>
      <exception cref="System.ApplicationException">Thrown when function fails to perform the operation at current NC condition.</exception>
      <exception cref="System.NotSupportedException">Thrown when operation/input parameters are not supported for the current system.</exception>
      <Figure> OPERATING REP:DAILY(PRE) <para> <img src="MacMan.OperatingReport.Previous.jpg" /> </para>  </Figure>
    </member>
    <member name="M:Okuma.CLDATAPI.DataAPI.MacMan.COperatingReport.GetPeriodOperatingReportDate">
      <summary> Gets Period operating report date for current sub system </summary>
      <example> This example shows how to call GetPeriodOperatingReportDate method <para>	Me.txt_optreportAlarmonTime.Text =	OjbOptreport.GetPeriodOperatingReport(OperatingReportDataEnum.AlarmOnTime)	</para> </example>
      <returns>A System.String value that represents the date in yyyy/mm/dd format</returns>
      <exception cref="System.ApplicationException">Thrown when function fails to perform the operation at current NC condition.</exception>
      <exception cref="System.NotSupportedException">Thrown when operation/input parameters are not supported for the current system.</exception>
      <Figure> OPERATING REP:PERIOD <para> <img src="MacMan.OperatingReport.Period.jpg" /> </para>  </Figure>
    </member>
    <member name="T:Okuma.CLDATAPI.DataAPI.MacMan.COperation">
      <summary> Class represents particular operation history information.  </summary>
    </member>
    <member name="P:Okuma.CLDATAPI.DataAPI.MacMan.COperation.Date">
      <summary> Gets Operation history Date. Sets Operation history Date for this class instance only.  It is in "yyyy/mm/dd" format </summary>
      <returns> A System.String value containg operation history data  </returns>
    </member>
    <member name="P:Okuma.CLDATAPI.DataAPI.MacMan.COperation.Time">
      <summary> Gets Operation history Time. Sets Operation history Time for this class instance only.  It is in "hh:mm:ss" format </summary>
      <returns> A System.String value containg operation history Time  </returns>
    </member>
    <member name="P:Okuma.CLDATAPI.DataAPI.MacMan.COperation.Data">
      <summary> Gets Operation history data.  Sets Operation data for this class instance only. </summary>
      <returns> A System.String value containg operation history data  </returns>
    </member>
    <member name="T:Okuma.CLDATAPI.DataAPI.MacMan.COperationHistory">
      <summary> Class provides operation history information stored by NC.  </summary>
    </member>
    <member name="M:Okuma.CLDATAPI.DataAPI.MacMan.COperationHistory.#ctor(Okuma.CLDATAPI.Enumerations.MacManSubSystemEnum)">
      <summary> Create an instance of this class given sub system.  By default, class is created with sub system = MacManSubSystemEnum::CurrentSubSystem . </summary>
      <param name="enSubSystem">Sub system</param>
    </member>
    <member name="M:Okuma.CLDATAPI.DataAPI.MacMan.COperationHistory.SetSubSystem(Okuma.CLDATAPI.Enumerations.MacManSubSystemEnum)">
      <summary> Set current sub system for this class instance </summary>
      <example> This example shows how to sets SetSubSystem method <para>	objMcOH.SetSubSystem(Me.mohSubSystemCombo.SelectedValue)	</para> </example>
      <param name="enSubSystem">Sub System. Values for this paramter come from the Okuma.CLDATAPI.Enumerations.MacManSubSystemEnum</param>
      <exception cref="System.ApplicationException">Thrown when function fails to perform the operation at current NC condition.</exception>
      <exception cref="System.NotSupportedException">Thrown when operation/input parameters are not supported for the current system.</exception>
    </member>
    <member name="M:Okuma.CLDATAPI.DataAPI.MacMan.COperationHistory.GetMaxCount">
      <summary> Gets the maximum number of operation history that can be stored by the system for current sub system. </summary>
      <example> This example shows how to sets GetMaxCount method <para>	Private Sub xyz	</para> <para>	On Error GoTo sd	</para> <para>		Dim objMoh As CLDATAPILib.MacMan.COperationHistory(sdSubSystem)	</para> <para>		Dim opIndex As Int16	</para> <para>		opIndex = CInt(Me.mohOperationIndex.Text)	</para> <para>		Me.mohOperationMaxCount.Text = objMoh.GetMaxCount	</para> <para>		Exit Sub	</para> <para>	sd:	</para> <para>		doError("MacMan Operating Report", Err.Description)	</para> <para>		Resume Next	</para> <para>	End Sub	</para> </example>
      <returns>A System.Int32 value that represents the maximum number of Operation history</returns>
      <exception cref="System.ApplicationException">Thrown when function fails to perform the operation at current NC condition.</exception>
      <exception cref="System.NotSupportedException">Thrown when operation/input parameters are not supported for the current system.</exception>
      <Figure>  </Figure>
    </member>
    <member name="M:Okuma.CLDATAPI.DataAPI.MacMan.COperationHistory.GetCount">
      <summary> Gets number of Operation history that is currently available for current sub system. </summary>
      <example> This example shows how to sets GetCount method <para>	On Error GoTo sd	</para> <para>		Dim opIndex As Int16	</para> <para>		Dim objMoh As CLDATAPILib.MacMan.COperationHistory(sdSubSystem)	</para> <para>		opIndex = CInt(Me.mohOperationIndex.Text)	</para> <para>		Me.mohOperationCount.Text = objMoh.GetCount	</para> <para>		Exit Sub	</para> <para>	sd:	</para> <para>		doError("MacMan Operating Report", Err.Description)	</para> <para>		Resume Next	</para> <para>	End Sub	</para> </example>
      <returns>A System.Int32 value that represents the number of Operation history</returns>
      <exception cref="System.ApplicationException">Thrown when function fails to perform the operation at current NC condition.</exception>
      <exception cref="System.NotSupportedException">Thrown when operation/input parameters are not supported for the current system.</exception>
    </member>
    <member name="M:Okuma.CLDATAPI.DataAPI.MacMan.COperationHistory.GetOperationHistory(System.Int32)">
      <overloads>This funcion has 2 overload methods to get operation history data.</overloads>
      <summary> Gets the Operation history data at the specified index for current sub system. </summary>
      <example> This example shows how to call GetOperationHistory method <para>	On Error GoTo sd	</para> <para>		Dim opIndex As Int16	</para> <para>		Dim mohObject As CLDATAPILib.MacMan.COperation(sbSubSystem)	</para> <para>		opIndex = CInt(Me.mohOperationIndex.Text)	</para> <para>		mohObject = objMoh.GetOperationHistory(opIndex)	</para> <para>		Me.mohHistoryObject.Text = mohObject.Date + vbCrLf &amp; mohObject.Data + vbCrLf &amp; mohObject.Time	</para> <para>		Me.mohOperationData.Text = mohObject.Data	</para> <para>		Me.mohOperationDate.Text = mohObject.Date	</para> <para>		Me.mohOperationTime.Text = mohObject.Time	</para> <para>		Me.mohOperationCount.Text = objMoh.GetCount	</para> <para>		Me.mohOperationMaxCount.Text = objMoh.GetMaxCount	</para> <para>		Exit Sub	</para> <para>	sd:	</para> <para>		doError("MacMan Operating Report", Err.Description)	</para> <para>		Resume Next.	</para> </example>
      <param name="intIndex">Operation history index</param>
      <returns>An Okuma.CLDATAPI.DataAPI.COperation object that represents the Operation history data.</returns>
      <exception cref="System.ApplicationException">Thrown when function fails to perform the operation at current NC condition.</exception>
      <exception cref="System.NotSupportedException">Thrown when operation/input parameters are not supported for the current system.</exception>
      <Figure> OPERATION HISTORY: OPERATE PANEL <para> <img src="MacMan-OperationHistory.jpg" /> </para>  </Figure>
    </member>
    <member name="M:Okuma.CLDATAPI.DataAPI.MacMan.COperationHistory.GetOperationHistory(System.Int32,System.Int32)">
      <summary> Gets the Operation history at the specified indexes for current sub system. </summary>
      <example> This example shows how to call GetOperationHistory method <para>	Dim objOperationHistory As DataAPI.MacMan.COperation	</para> <para>	Dim arOperationHistory As ArrayList	</para> <para>	Dim strOperationHistory As String	</para> <para>		mohObjects = objMcOH.GetOperationHistory(intFromIndex, intToIndex)	</para> <para>		For Each objOperationHistory In mohObjects	</para> <para>			strOperationHistory = objOperationHistory.Date &amp; vbTab &amp; objOperationHistory.Data &amp; vbTab &amp; objOperationHistory.Time + vbCrLf	</para> <para>		Next	</para> </example>
      <param name="intFromIndex">Starting Operation history index.  The 1-based index at which the information is obtained</param>
      <param name="intToIndex">Ending Operation history index.  The 1-based index at which the information is obtained</param>
      <returns>A System.Collection.ArrayList object that represents the list of Operation history record. Each operation history record will be stored in the array starting from zero-based index.</returns>
      <exception cref="System.ApplicationException">Thrown when function fails to perform the operation at current NC condition.</exception>
      <exception cref="System.NotSupportedException">Thrown when operation/input parameters are not supported for the current system.</exception>
      <Figure> OPERATION HISTORY: OPERATE PANEL <para> <img src="MacMan-OperationHistory.jpg" /> </para>  </Figure>
    </member>
    <member name="T:Okuma.CLDATAPI.DataAPI.COptionalParameter">
      <summary> Class provides operation to Optional Parameter Long, Word, and Bit on NC.  </summary>
    </member>
    <member name="M:Okuma.CLDATAPI.DataAPI.COptionalParameter.SetSubSystem(Okuma.CLDATAPI.Enumerations.SubSystemEnum)">
      <summary> Set current sub system for this class instance </summary>
      <example> This example shows how to call SetSubSystem method <para>	Dim objOptionalParameter As DataAPI.COptionalParameter	</para> <para>	objOptionalParameter.SetSubSystem(cboOptionalParameterSubSystem.SelectedItem)	</para> </example>
      <param name="enSubSystem">SubSystemEnum value</param>
      <exception cref="System.ApplicationException">Thrown when function fails to perform the operation at current NC condition.</exception>
      <exception cref="System.NotSupportedException">Thrown when operation/input parameters are not supported for the current system.</exception>
    </member>
    <member name="M:Okuma.CLDATAPI.DataAPI.COptionalParameter.GetNCOptionalParameterBit(System.Int32,System.Int32)">
      <summary>Gets NC Optional parameter bit value at bit index for current sub system. Please see <see href="Lathe.OPE-B1003.htm">Optional Parameter (Bit)</see> or Lathe Operation Manual SECTION 4 PARAMETER SETTING and Appendix Section 1. Optional Parameter for more information. </summary>
      <example> This example shows how to Gets NC Optional parameter bit value at bit index for current sub system. <para> <code> Dim enValue as BitStateEnum	</code> <code> enValue = objVariables.GetNCOptionalParameterBit(intBitIndex)	</code> </para> </example>
      <param name="intBitIndex">Bit index</param>
      <param name="intBitNo">Bit nummber ranging from 0 to 7</param>
      <returns>An OnOffStateEnum value</returns>
      <exception cref="System.ApplicationException">Thrown when function fails to perform the operation at current NC condition.</exception>
      <exception cref="System.NotSupportedException">Thrown when operation/input parameters are not supported for the current system.</exception>
      <Figure> PARAMETER - OPTIONAL PARAMETER - BIT, WORD, LONG WORD <para> <img src="Lathe.Parameter.NCOptionalBitWordLongWord.jpg" /> </para> </Figure>
      <SubSystem> Please see <see href="SubSystemNoteTable.htm">Sub System Note Table</see> for more information if applicable. <para>Valid sub systems for this function (Y = Valid, N = Not valid)</para> <para> <list type="table"> <listheader> <term>NC_RUN </term> <term>NC_RUN_1 </term> <term>NC_RUN_2 </term> <term>NC_RUN_3 </term> <term>NC_PANEL </term> <term>NC_PANEL_1 </term> <term>NC_PANEL_2 </term> <term>NC_PANEL_3 </term> <term>NC_AL </term> <term>NC_AR </term> <term>NC_BL </term> <term>NC_BR </term> <term>NC_CL </term> <term>NC_CR </term> <term>NC_2AL </term> </listheader> <item> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> </item> </list> </para>  </SubSystem>
    </member>
    <member name="M:Okuma.CLDATAPI.DataAPI.COptionalParameter.GetNCOptionalParameterWord(System.Int32)">
      <summary>Gets NC Optional parameter WORD value at word index for current sub system. Please see <see href="Lathe.OPE-B1002.htm">Optional Parameter (Word)</see> or Lathe Operation Manual SECTION 4 PARAMETER SETTING and Appendix Section 1. Optional Parameter for more information. </summary>
      <example> This example shows how to Gets NC Optional parameter WORD value at word index for current sub system. <para> <code> Dim intValue as Integer	</code> <code> Dim intWordIndex as Integer	</code> <code> intValue = objVariables.GetNCOptionalParameterWord(intWordIndex)	</code> </para> </example>
      <param name="intWordIndex">WORD index</param>
      <returns>A System.Int32 value</returns>
      <exception cref="System.ApplicationException">Thrown when function fails to perform the operation at current NC condition.</exception>
      <exception cref="System.NotSupportedException">Thrown when operation/input parameters are not supported for the current system.</exception>
      <Figure> PARAMETER - OPTIONAL PARAMETER - BIT, WORD, LONG WORD <para> <img src="Lathe.Parameter.NCOptionalBitWordLongWord.jpg" /> </para> </Figure>
      <SubSystem> Please see <see href="SubSystemNoteTable.htm">Sub System Note Table</see> for more information if applicable. <para>Valid sub systems for this function (Y = Valid, N = Not valid)</para> <para> <list type="table"> <listheader> <term>NC_RUN </term> <term>NC_RUN_1 </term> <term>NC_RUN_2 </term> <term>NC_RUN_3 </term> <term>NC_PANEL </term> <term>NC_PANEL_1 </term> <term>NC_PANEL_2 </term> <term>NC_PANEL_3 </term> <term>NC_AL </term> <term>NC_AR </term> <term>NC_BL </term> <term>NC_BR </term> <term>NC_CL </term> <term>NC_CR </term> <term>NC_2AL </term> </listheader> <item> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> </item> </list> </para>  </SubSystem>
    </member>
    <member name="M:Okuma.CLDATAPI.DataAPI.COptionalParameter.GetNCOptionalParameterLongWord(System.Int32)">
      <summary>Gets NC Optional parameter LONG WORD value at long word index for current sub system. Please see <see href="Lathe.OPE-B1001.htm">Optional Parameter (Long Word)</see> or Lathe Operation Manual SECTION 4 PARAMETER SETTING and Appendix Section 1. Optional Parameter for more information. </summary>
      <example> This example shows how to Gets NC Optional parameter LONG WORD value at long word index for current sub system. <para> <code> Dim intValue as Integer	</code> <code> Dim intLongWordIndex as Integer	</code> <code> intValue = objVariables.GetNCOptionalParameterLongWord(intLongWordIndex)	</code> </para> </example>
      <param name="intLongWordIndex">LONG WORD index</param>
      <returns>A System.Int32 value</returns>
      <exception cref="System.ApplicationException">Thrown when function fails to perform the operation at current NC condition.</exception>
      <exception cref="System.NotSupportedException">Thrown when operation/input parameters are not supported for the current system.</exception>
      <Figure> PARAMETER - OPTIONAL PARAMETER - BIT, WORD, LONG WORD <para> <img src="Lathe.Parameter.NCOptionalBitWordLongWord.jpg" /> </para> </Figure>
      <SubSystem> Please see <see href="SubSystemNoteTable.htm">Sub System Note Table</see> for more information if applicable. <para>Valid sub systems for this function (Y = Valid, N = Not valid)</para> <para> <list type="table"> <listheader> <term>NC_RUN </term> <term>NC_RUN_1 </term> <term>NC_RUN_2 </term> <term>NC_RUN_3 </term> <term>NC_PANEL </term> <term>NC_PANEL_1 </term> <term>NC_PANEL_2 </term> <term>NC_PANEL_3 </term> <term>NC_AL </term> <term>NC_AR </term> <term>NC_BL </term> <term>NC_BR </term> <term>NC_CL </term> <term>NC_CR </term> <term>NC_2AL </term> </listheader> <item> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> </item> </list> </para>  </SubSystem>
    </member>
    <member name="M:Okuma.CLDATAPI.DataAPI.COptionalParameter.SetNCOptionalParameterBit(System.Int32,System.Int32,Okuma.CLDATAPI.Enumerations.OnOffStateEnum)">
      <summary>Set NC Optional parameter bit value at bit index for current sub system. Please see <see href="Lathe.OPE-B1003.htm">Optional Parameter (Bit)</see> or Lathe Operation Manual SECTION 4 PARAMETER SETTING and Appendix Section 1. Optional Parameter for more information. </summary>
      <example> This example shows how to Set NC Optional parameter bit value at bit index, and bit number for current sub system. <para> <code> Dim enValue as OnOffStateEnum </code> <code> objVariables.SetSubSystem(intSubSystem)</code> <code> objVariables.SetNCOptionalParameterBit(intBitIndex, intBitNo, enValue) </code> </para> </example>
      <param name="intBitIndex">Bit index</param>
      <param name="intBitNo">Bit nummber ranging from 0 to 7</param>
      <param name="enValue">Bit value</param>
      <exception cref="System.ApplicationException">Thrown when function fails to perform the operation at current NC condition.</exception>
      <exception cref="System.NotSupportedException">Thrown when operation/input parameters are not supported for the current system.</exception>
      <Figure> PARAMETER - OPTIONAL PARAMETER - BIT, WORD, LONG WORD <para> <img src="Lathe.Parameter.NCOptionalBitWordLongWord.jpg" /> </para> </Figure>
      <SubSystem> Please see <see href="SubSystemNoteTable.htm">Sub System Note Table</see> for more information if applicable. <para>Valid sub systems for this function (Y = Valid, N = Not valid)</para> <para> <list type="table"> <listheader> <term>NC_RUN </term> <term>NC_RUN_1 </term> <term>NC_RUN_2 </term> <term>NC_RUN_3 </term> <term>NC_PANEL </term> <term>NC_PANEL_1 </term> <term>NC_PANEL_2 </term> <term>NC_PANEL_3 </term> <term>NC_AL </term> <term>NC_AR </term> <term>NC_BL </term> <term>NC_BR </term> <term>NC_CL </term> <term>NC_CR </term> <term>NC_2AL </term> </listheader> <item> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> </item> </list> </para>  </SubSystem>
    </member>
    <member name="M:Okuma.CLDATAPI.DataAPI.COptionalParameter.SetNCOptionalParameterWord(System.Int32,System.Int32)">
      <summary>Set NC Optional parameter WORD value at word index for current sub system. Please see <see href="Lathe.OPE-B1002.htm">Optional Parameter (WORD)</see> or Lathe Operation Manual SECTION 4 PARAMETER SETTING and Appendix Section 1. Optional Parameter for more information. </summary>
      <example> This example shows how to Set NC Optional parameter WORD value at word index for current sub system. <para> <code> Dim intValue as Integer	</code> <code> Dim intWordIndex as Integer	</code> <code> objVariables.SetSubSystem(intSubSystem)</code> <code> objVariables.SetNCOptionalParameterWord(intWordIndex, intValue)	</code> </para> </example>
      <param name="intWordIndex">WORD index</param>
      <param name="intValue">WORD value to set at WORD INDEX</param>
      <exception cref="System.ApplicationException">Thrown when function fails to perform the operation at current NC condition.</exception>
      <exception cref="System.NotSupportedException">Thrown when operation/input parameters are not supported for the current system.</exception>
      <Figure> PARAMETER - OPTIONAL PARAMETER - BIT, WORD, LONG WORD <para> <img src="Lathe.Parameter.NCOptionalBitWordLongWord.jpg" /> </para> </Figure>
      <SubSystem> Please see <see href="SubSystemNoteTable.htm">Sub System Note Table</see> for more information if applicable. <para>Valid sub systems for this function (Y = Valid, N = Not valid)</para> <para> <list type="table"> <listheader> <term>NC_RUN </term> <term>NC_RUN_1 </term> <term>NC_RUN_2 </term> <term>NC_RUN_3 </term> <term>NC_PANEL </term> <term>NC_PANEL_1 </term> <term>NC_PANEL_2 </term> <term>NC_PANEL_3 </term> <term>NC_AL </term> <term>NC_AR </term> <term>NC_BL </term> <term>NC_BR </term> <term>NC_CL </term> <term>NC_CR </term> <term>NC_2AL </term> </listheader> <item> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> </item> </list> </para>  </SubSystem>
    </member>
    <member name="M:Okuma.CLDATAPI.DataAPI.COptionalParameter.AddNCOptionalParameterWord(System.Int32,System.Int32)">
      <summary>Sets NC Optional Parameter WORD by adding the input value to the existing data at the specified index for current sub system. Please see <see href="Lathe.OPE-B1002.htm">Optional Parameter (WORD)</see> or Lathe Operation Manual SECTION 4 PARAMETER SETTING and Appendix Section 1. Optional Parameter for more information. </summary>
      <example> This example shows how to add NC Optional parameter WORD value at word index for current sub system. <para> <code> Dim intValue as Integer	</code> <code> Dim intWordIndex as Integer	</code> <code> objVariables.SetSubSystem(intSubSystem)</code> <code> objVariables.AddNCOptionalParameterWord(intWordIndex, intValue)	</code> </para> </example>
      <param name="intWordIndex">WORD index</param>
      <param name="intValue">WORD value to be added</param>
      <exception cref="System.ApplicationException">Thrown when function fails to perform the operation at current NC condition.</exception>
      <exception cref="System.NotSupportedException">Thrown when operation/input parameters are not supported for the current system.</exception>
      <Figure> PARAMETER - OPTIONAL PARAMETER - BIT, WORD, LONG WORD <para> <img src="Lathe.Parameter.NCOptionalBitWordLongWord.jpg" /> </para> </Figure>
      <SubSystem> Please see <see href="SubSystemNoteTable.htm">Sub System Note Table</see> for more information if applicable. <para>Valid sub systems for this function (Y = Valid, N = Not valid)</para> <para> <list type="table"> <listheader> <term>NC_RUN </term> <term>NC_RUN_1 </term> <term>NC_RUN_2 </term> <term>NC_RUN_3 </term> <term>NC_PANEL </term> <term>NC_PANEL_1 </term> <term>NC_PANEL_2 </term> <term>NC_PANEL_3 </term> <term>NC_AL </term> <term>NC_AR </term> <term>NC_BL </term> <term>NC_BR </term> <term>NC_CL </term> <term>NC_CR </term> <term>NC_2AL </term> </listheader> <item> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> </item> </list> </para>  </SubSystem>
    </member>
    <member name="M:Okuma.CLDATAPI.DataAPI.COptionalParameter.SetNCOptionalParameterLongWord(System.Int32,System.Int32)">
      <summary>Set NC Optional parameter LONG WORD value at long word index for current sub system. Please see <see href="Lathe.OPE-B1001.htm">Optional Parameter (Long Word)</see> or Lathe Operation Manual SECTION 4 PARAMETER SETTING and Appendix Section 1. Optional Parameter for more information. </summary>
      <example> This example shows how to Set NC Optional parameter LONG WORD value at long word index for current sub system. <para> <code> Dim intValue as Integer	</code> <code> Dim intLongWordIndex as Integer	</code> <code> objVariables.SetSubSystem(intSubSystem)</code> <code> objVariables.SetNCOptionalParameterLongWord(intLongWordIndex, intValue)	</code> </para> </example>
      <param name="intLongWordIndex">LONG WORD index</param>
      <param name="intValue">LONG WORD value to set at LONG WORD INDEX</param>
      <exception cref="System.ApplicationException">Thrown when function fails to perform the operation at current NC condition.</exception>
      <exception cref="System.NotSupportedException">Thrown when operation/input parameters are not supported for the current system.</exception>
      <Figure> PARAMETER - OPTIONAL PARAMETER - BIT, WORD, LONG WORD <para> <img src="Lathe.Parameter.NCOptionalBitWordLongWord.jpg" /> </para> </Figure>
      <SubSystem> Please see <see href="SubSystemNoteTable.htm">Sub System Note Table</see> for more information if applicable. <para>Valid sub systems for this function (Y = Valid, N = Not valid)</para> <para> <list type="table"> <listheader> <term>NC_RUN </term> <term>NC_RUN_1 </term> <term>NC_RUN_2 </term> <term>NC_RUN_3 </term> <term>NC_PANEL </term> <term>NC_PANEL_1 </term> <term>NC_PANEL_2 </term> <term>NC_PANEL_3 </term> <term>NC_AL </term> <term>NC_AR </term> <term>NC_BL </term> <term>NC_BR </term> <term>NC_CL </term> <term>NC_CR </term> <term>NC_2AL </term> </listheader> <item> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> </item> </list> </para>  </SubSystem>
    </member>
    <member name="M:Okuma.CLDATAPI.DataAPI.COptionalParameter.AddNCOptionalParameterLongWord(System.Int32,System.Int32)">
      <summary>Sets NC Optional Parameter LONG WORD by adding the input value to the existing data at the specified index for current sub system. Please see <see href="Lathe.OPE-B1001.htm">Optional Parameter (Long Word)</see> or Lathe Operation Manual SECTION 4 PARAMETER SETTING and Appendix Section 1. Optional Parameter for more information. </summary>
      <example> This example shows how to Set NC Optional parameter LONG WORD value at long word index for current sub system. <para> <code> Dim intValue as Integer	</code> <code> Dim intLongWordIndex as Integer	</code> <code> objVariables.SetSubSystem(intSubSystem)</code> <code> objVariables.AddNCOptionalParameterLongWord(intLongWordIndex, intValue)	</code> </para> </example>
      <param name="intLongWordIndex">LONG WORD index</param>
      <param name="intValue">LONG WORD value to be added</param>
      <exception cref="System.ApplicationException">Thrown when function fails to perform the operation at current NC condition.</exception>
      <exception cref="System.NotSupportedException">Thrown when operation/input parameters are not supported for the current system.</exception>
      <Figure> PARAMETER - OPTIONAL BIT, WORD, LONG WORD <para> <img src="Lathe.Parameter.NCOptionalBitWordLongWord.jpg" /> </para> </Figure>
      <SubSystem> Please see <see href="SubSystemNoteTable.htm">Sub System Note Table</see> for more information if applicable. <para>Valid sub systems for this function (Y = Valid, N = Not valid)</para> <para> <list type="table"> <listheader> <term>NC_RUN </term> <term>NC_RUN_1 </term> <term>NC_RUN_2 </term> <term>NC_RUN_3 </term> <term>NC_PANEL </term> <term>NC_PANEL_1 </term> <term>NC_PANEL_2 </term> <term>NC_PANEL_3 </term> <term>NC_AL </term> <term>NC_AR </term> <term>NC_BL </term> <term>NC_BR </term> <term>NC_CL </term> <term>NC_CR </term> <term>NC_2AL </term> </listheader> <item> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> </item> </list> </para>  </SubSystem>
    </member>
    <member name="T:Okuma.CLDATAPI.DataAPI.CProgram">
      <summary> Class provides information about Part program.  </summary>
    </member>
    <member name="M:Okuma.CLDATAPI.DataAPI.CProgram.#ctor(Okuma.CLDATAPI.Enumerations.SubSystemEnum)">
      <summary> Create an instance of this class given sub system.  By default, class is created with sub system = NC_AL. </summary>
      <param name="enSubSystem">Sub system</param>
    </member>
    <member name="M:Okuma.CLDATAPI.DataAPI.CProgram.SetSubSystem(Okuma.CLDATAPI.Enumerations.SubSystemEnum)">
      <summary> Set current sub system for this class instance </summary>
      <example> This example shows how to sets SetSubSystem method <para>objProgram.SetSubSystem(cmb_Program_SubSys.SelectedItem)	</para> </example>
      <param name="enSubSystem">Sub System. Values for this parameter come from the Okuma.CLDATAPI.Enumerations.SubSystemEnum</param>
      <exception cref="System.ApplicationException">Thrown when function fails to perform the operation at current NC condition.</exception>
      <exception cref="System.NotSupportedException">Thrown when operation/input parameters are not supported for the current system.</exception>
    </member>
    <member name="M:Okuma.CLDATAPI.DataAPI.CProgram.GetRunningProgram(System.Int32,System.Int32,System.Int32@,System.Int32@)">
      <summary> Gets running part program for current sub system. The return data is based on the input value of rows and columns. If an actual row in the part program contains more characters (each character is a column) than the specified input columns, the row will automatically break into multiple lines. If an actual row contains fewer characters than the specified input columns, spaces will be added to it. To assure that you can obtain the same number of characters per row it is necessary to specify the column value to be 79. If the specified value for column is less than 79 then the output could be different from actual part program displayed on NC HMI since the entire part program is formatted according to the specified value of column. </summary>
      <example> This example shows how to get running part program <para>Try	</para> <para>	rp = objProgram.GetRunningProgram(CInt(Me.progRow.Text), CInt(Me.progColumn.Text), rpoint, epoint)	</para> <para>	Me.progExecutePoint.Text = epoint	</para> <para>	Me.progRead.Text = rpoint	</para> <para>	For Each currp In rp	</para> <para>		progRunningPrograms.Text += currp + vbCrLf	</para> <para>	Next	</para> <para>Catch ae As ApplicationException	</para> <para>	doError("CProgram", ae.Message)	</para> <para>Catch ex As Exception	</para> <para>	doError("CProgram", ex.Message)	</para> <para>End Try	</para> </example>
      <param name="intRow">Number of rows to get</param>
      <param name="intColumn">Number of columns per row to get</param>
      <param name="pintReadPoint">A return value indicates the current Read Point number  within this running part program.  A zero value means no read point.  '&gt;&gt;' is a read point.</param>
      <param name="pintExecutePoint">A return value indicates the current Execute Point number within this running part program.  A zero value means no execute point. An upper arrow is a execute point.</param>
      <returns>An array of Sytem.String value.</returns>
      <exception cref="System.ApplicationException">Thrown when function fails to perform the operation at current NC condition.</exception>
      <exception cref="System.NotSupportedException">Thrown when operation/input parameters are not supported for the current system.</exception>
      <Figure> AUTO OPERATION - ACTUAL POSITION - MAIN PROGRAM - A section of part programm is running. <para>'&gt;&gt;' is the read point, and an upper arrow is the execute point.</para> <para> <img src="Lathe.AutoOperation.ActualPosition.MainProgram.jpg" /> </para> </Figure>
      <remarks> The number of row * column should not exceed 2048.  Number of column should not be greater than 79. Row must be greater than or equal to 0. Column must be greater than or equal to 1. </remarks>
      <SubSystem> Please see <see href="SubSystemNoteTable.htm">Sub System Note Table</see> for more information if applicable. <para>Valid sub systems for this function (Y = Valid, N = Not valid)</para> <para> <list type="table"> <listheader> <term>NC_RUN </term> <term>NC_RUN_1 </term> <term>NC_RUN_2 </term> <term>NC_RUN_3 </term> <term>NC_PANEL </term> <term>NC_PANEL_1 </term> <term>NC_PANEL_2 </term> <term>NC_PANEL_3 </term> <term>NC_AL </term> <term>NC_AR </term> <term>NC_BL </term> <term>NC_BR </term> <term>NC_CL </term> <term>NC_CR </term> <term>NC_2AL </term> </listheader> <item> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> </item> </list> </para>  </SubSystem>
    </member>
    <member name="M:Okuma.CLDATAPI.DataAPI.CProgram.CycleComplete(Okuma.CLDATAPI.Enumerations.MachineSideEnum)">
      <summary> Check whether or not M02/M30 has been executed in the part program being run at the specified machine index. </summary>
      <example> This example shows how to calls CycleComplete method <para>Me.TxtCycleComplte.Text = objProgram.CycleComplete(CycleCompleteCombo.SelectedValue)	</para> </example>
      <param name="enMachineSystem">Machine side index.  Values for this parameter come from the Okuma.CLDATAPI.Enumerations.MachineSideEnum enumeration.</param>
      <returns>A System.Boolean value that represents the completion of part program being executed.  True if part program finishes its cycle by executing M02/M30 in the part program, otherwise false</returns>
      <exception cref="System.ApplicationException">Thrown when function fails to perform the operation at current NC condition.</exception>
      <exception cref="System.NotSupportedException">Thrown when operation/input parameters are not supported for the current system.</exception>
      <remarks> <para> The following specifications for right side must be met in order to function: <list type="table"> <listheader> <term>Specification</term> <description>Valid/Invalid</description> </listheader> <item> <term>Parallel 2 Spindle specification NC spec [4,2]</term> <description>Valid</description> </item> </list> </para>  </remarks>
    </member>
    <member name="M:Okuma.CLDATAPI.DataAPI.CProgram.ScheduleProgramCycleComplete(Okuma.CLDATAPI.Enumerations.MachineSideEnum)">
      <summary> Check whether or not the schedule program has finished. </summary>
      <example> This example shows how to calls ScheduleProgramCycleComplete method <para>Me.TxtProgrameCycleComplete.Text = objProgram.ScheduleProgramCycleComplete(CycleCompleteCombo.SelectedValue)	</para> </example>
      <param name="enMachineSide">Machine side index.  Values for this parameter come from the Okuma.CLDATAPI.Enumerations.MachineSideEnum enumeration.</param>
      <returns>A System.Boolean value that represents the completion of schedule program being executed.  True if shcedule program finishes its cycle by executing the END block, otherwise false</returns>
      <exception cref="System.ApplicationException">Thrown when function fails to perform the operation at current NC condition.</exception>
      <exception cref="System.NotSupportedException">Thrown when operation/input parameters are not supported for the current system.</exception>
      <remarks> <para> The following specifications for second system/left side must be met in order to function: <list type="table"> <listheader> <term>Specification</term> <description>Valid/Invalid</description> </listheader> <item> <term>Parallel 2 Spindle specification NC spec [4,2]</term> <description>Valid</description> </item> </list> </para>  </remarks>
    </member>
    <member name="M:Okuma.CLDATAPI.DataAPI.CProgram.GetActiveProgramFileName">
      <summary> Gets current part program file name loaded in NC for current sub system </summary>
      <example> This example shows how to get the active main part program file name by calling GetActiveProgramFileName method <para>activeProgramFname = objProgram.GetActiveProgramFileName	</para> </example>
      <returns>A System.String value</returns>
      <exception cref="System.ApplicationException">Thrown when function fails to perform the operation at current NC condition.</exception>
      <exception cref="System.NotSupportedException">Thrown when operation/input parameters are not supported for the current system.</exception>
      <Figure> AUTO OPERATION - a.min - Current active part program file name being loaded into NC. <para> <img src="ActualPosition.1.jpg" /> </para> </Figure>
      <SubSystem> Please see <see href="SubSystemNoteTable.htm">Sub System Note Table</see> for more information if applicable. <para>Valid sub systems for this function (Y = Valid, N = Not valid)</para> <para> <list type="table"> <listheader> <term>NC_RUN </term> <term>NC_RUN_1 </term> <term>NC_RUN_2 </term> <term>NC_RUN_3 </term> <term>NC_PANEL </term> <term>NC_PANEL_1 </term> <term>NC_PANEL_2 </term> <term>NC_PANEL_3 </term> <term>NC_AL </term> <term>NC_AR </term> <term>NC_BL </term> <term>NC_BR </term> <term>NC_CL </term> <term>NC_CR </term> <term>NC_2AL </term> </listheader> <item> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> </item> </list> </para>  </SubSystem>
    </member>
    <member name="M:Okuma.CLDATAPI.DataAPI.CProgram.GetActiveProgramName">
      <summary> Gets current selected program name for current sub system </summary>
      <example> This example shows how to call GetActiveProgramName method <para>Dim activeProgramName As String	</para> <para>Dim objProgram As DataAPI.CProgram	</para> <para>activeProgramName = objProgram.GetActiveProgramName	</para> </example>
      <returns>A System.String value</returns>
      <exception cref="System.ApplicationException">Thrown when function fails to perform the operation at current NC condition.</exception>
      <exception cref="System.NotSupportedException">Thrown when operation/input parameters are not supported for the current system or it fails to write data to system.</exception>
      <remarks> A program file name can have multiple program name.  Each program name starts with an O such as O1234 </remarks>
      <Figure> AUTO OPERATION - O1234 - Active program name is O1234 <para> <img src="ActualPosition.1.jpg" /> </para> </Figure>
      <SubSystem> Please see <see href="SubSystemNoteTable.htm">Sub System Note Table</see> for more information if applicable. <para>Valid sub systems for this function (Y = Valid, N = Not valid)</para> <para> <list type="table"> <listheader> <term>NC_RUN </term> <term>NC_RUN_1 </term> <term>NC_RUN_2 </term> <term>NC_RUN_3 </term> <term>NC_PANEL </term> <term>NC_PANEL_1 </term> <term>NC_PANEL_2 </term> <term>NC_PANEL_3 </term> <term>NC_AL </term> <term>NC_AR </term> <term>NC_BL </term> <term>NC_BR </term> <term>NC_CL </term> <term>NC_CR </term> <term>NC_2AL </term> </listheader> <item> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> </item> </list> </para>  </SubSystem>
    </member>
    <member name="M:Okuma.CLDATAPI.DataAPI.CProgram.GetRunningProgramName">
      <summary> Gets the current running program name.  It can be active main program name or sub program name. </summary>
      <example> This example shows how to get running program name <para>Try	</para> <para>	Dim rp as String	</para> <para>	rp = objProgram.GetRunningProgramName	</para> <para>Catch ae As ApplicationException	</para> <para>	doError("CProgram", ae.Message)	</para> <para>Catch ex As Exception	</para> <para>	doError("CProgram", ex.Message)	</para> <para>End Try	</para> </example>
      <returns>A System.String value</returns>
      <remarks> Running program name can be the same as Active Program Name if there is no other program names being called by Active(Main) program.</remarks>
      <exception cref="System.ApplicationException">Thrown when function fails to perform the operation at current NC condition.</exception>
      <exception cref="System.NotSupportedException">Thrown when operation/input parameters are not supported for the current system.</exception>
      <Figure>THINC1.MIN - OM321 - NRST - Running program name is OM321. <para> <img src="Lathe.AutoOperation.ActualPosition.RunningProgram.jpg" /> </para>  </Figure>
    </member>
    <member name="M:Okuma.CLDATAPI.DataAPI.CProgram.GetExecutedSequenceNumber">
      <summary> Gets the running sequence name/number for current sub system </summary>
      <example> This example shows how to get the running sequence name/number. <para>Dim activeProgramFname As String	</para> <para>Dim activeProgramName As String	</para> <para>Dim currentBlockNumber As Int32	</para> <para>Dim defaultProgramPath As String	</para> <para>Dim execSequenceNumber As String	</para> <para>Dim gCodes As String	</para> <para>Dim mCodes As String	</para> <para>Dim executeBlock As String	</para> <para>Try	</para> <para>	activeProgramFname = objProgram.GetActiveProgramFileName	</para> <para>	activeProgramName = objProgram.GetActiveProgramName	</para> <para>	currentBlockNumber = objProgram.GetCurrentBlockNumber	</para> <para>	defaultProgramPath = objProgram.GetDefaultProgramPath	</para> <para>	executeBlock = objProgram.GetExecuteBlock	</para> <para>	execSequenceNumber = objProgram.GetExecutedSequenceNumber	</para> <para>	gCodes = objProgram.GetGCodes	</para> <para>Catch ae As ApplicationException	</para> <para>	doError("CProgram", ae.Message)	</para> <para>Catch ex As Exception	</para> <para>	doError("CProgram", ex.Message)	</para> <para>End Try	</para> <para>Me.progNoParams.Text = "Active Program Filename: " &amp; activeProgramFname + vbCrLf _	</para> <para>&amp; "Active Program Name: " &amp; activeProgramName + vbCrLf _	</para> <para>&amp; "Current Block Number: " &amp; currentBlockNumber + vbCrLf _	</para> <para>&amp; "Default Program Path: " &amp; defaultProgramPath + vbCrLf _	</para> <para>&amp; "Execution Sequence Number: " &amp; execSequenceNumber + vbCrLf _	</para> <para>&amp; "G Codes: " &amp; gCodes + vbCrLf _	</para> <para>&amp; "M Codes: " &amp; mCodes + vbCrLf	</para> </example>
      <returns>A System.String value of current executing sequence number that starts with N.  Otherwise, N will be return.</returns>
      <exception cref="System.ApplicationException">Thrown when function fails to perform the operation at current NC condition.</exception>
      <exception cref="System.NotSupportedException">Thrown when operation/input parameters are not supported for the current system.</exception>
      <Figure> AUTO OPERATION - ACTUAL POSITION - MAIN PROGRAM - N100 - The current executed sequence number is N100 <para> <img src="Lathe.AutoOperation.ActualPosition.MainProgram.jpg" /> </para> </Figure>
      <SubSystem> Please see <see href="SubSystemNoteTable.htm">Sub System Note Table</see> for more information if applicable. <para>Valid sub systems for this function (Y = Valid, N = Not valid)</para> <para> <list type="table"> <listheader> <term>NC_RUN </term> <term>NC_RUN_1 </term> <term>NC_RUN_2 </term> <term>NC_RUN_3 </term> <term>NC_PANEL </term> <term>NC_PANEL_1 </term> <term>NC_PANEL_2 </term> <term>NC_PANEL_3 </term> <term>NC_AL </term> <term>NC_AR </term> <term>NC_BL </term> <term>NC_BR </term> <term>NC_CL </term> <term>NC_CR </term> <term>NC_2AL </term> </listheader> <item> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> </item> </list> </para>  </SubSystem>
    </member>
    <member name="M:Okuma.CLDATAPI.DataAPI.CProgram.GetCurrentBlockNumber">
      <summary> Gets the current block number for current sub system </summary>
      <example> This example shows how to get the GetCurrentBlockNumber method <para>Dim intValue As Integer</para> <para>intValue = objProgram.GetCurrentBlockNumber()	</para> </example>
      <returns>A System.Int32 value that represents current block number for current sub system</returns>
      <exception cref="System.ApplicationException">Thrown when function fails to perform the operation at current NC condition.</exception>
      <exception cref="System.NotSupportedException">Thrown when operation/input parameters are not supported for the current system.</exception>
      <Figure> AUTO OPERATION - ACTUAL POSITION 1mm a.min O1234 N 1 - 1 is current block number. <para> <img src="ActualPosition.1.jpg" /> </para> </Figure>
      <SubSystem> Please see <see href="SubSystemNoteTable.htm">Sub System Note Table</see> for more information if applicable. <para>Valid sub systems for this function (Y = Valid, N = Not valid)</para> <para> <list type="table"> <listheader> <term>NC_RUN </term> <term>NC_RUN_1 </term> <term>NC_RUN_2 </term> <term>NC_RUN_3 </term> <term>NC_PANEL </term> <term>NC_PANEL_1 </term> <term>NC_PANEL_2 </term> <term>NC_PANEL_3 </term> <term>NC_AL </term> <term>NC_AR </term> <term>NC_BL </term> <term>NC_BR </term> <term>NC_CL </term> <term>NC_CR </term> <term>NC_2AL </term> </listheader> <item> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> </item> </list> </para>  </SubSystem>
    </member>
    <member name="M:Okuma.CLDATAPI.DataAPI.CProgram.GetDefaultProgramPath">
      <summary> Gets the default program path where all part programs stored. </summary>
      <example> This example shows how to get the default program path. method <para>defaultProgramPath = objProgram.GetDefaultProgramPath	</para> </example>
      <returns>A System.String value</returns>
      <exception cref="System.ApplicationException">Thrown when function fails to perform the operation at current NC condition.</exception>
      <exception cref="System.NotSupportedException">Thrown when operation/input parameters are not supported for the current system.</exception>
    </member>
    <member name="M:Okuma.CLDATAPI.DataAPI.CProgram.GetGCodes">
      <summary> Gets the running G codes of each G code group for current sub system. </summary>
      <example> This example shows how to get G Codes method <para>gCodes = objProgram.GetGCodes	</para> </example>
      <returns>A System.String value</returns>
      <exception cref="System.ApplicationException">Thrown when function fails to perform the operation at current NC condition.</exception>
      <exception cref="System.NotSupportedException">Thrown when operation/input parameters are not supported for the current system.</exception>
      <Figure> BLOCK DATA - CURRENT G CODE - List of all G codes being executed in NC <para> <img src="BlockData.jpg" /> </para> </Figure>
      <SubSystem> Please see <see href="SubSystemNoteTable.htm">Sub System Note Table</see> for more information if applicable. <para>Valid sub systems for this function (Y = Valid, N = Not valid)</para> <para> <list type="table"> <listheader> <term>NC_RUN </term> <term>NC_RUN_1 </term> <term>NC_RUN_2 </term> <term>NC_RUN_3 </term> <term>NC_PANEL </term> <term>NC_PANEL_1 </term> <term>NC_PANEL_2 </term> <term>NC_PANEL_3 </term> <term>NC_AL </term> <term>NC_AR </term> <term>NC_BL </term> <term>NC_BR </term> <term>NC_CL </term> <term>NC_CR </term> <term>NC_2AL </term> </listheader> <item> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> </item> </list> </para>  </SubSystem>
    </member>
    <member name="M:Okuma.CLDATAPI.DataAPI.CProgram.GetMCodes(Okuma.CLDATAPI.Enumerations.MCodesEnum)">
      <summary> Gets the running M codes of each M code group at the specified M-code line index for current sub system. </summary>
      <example> This example shows how to get M codes method <para>progGetMCodes_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles progGetMCodes.Click	</para> <para>Try	</para> <para>	progMCodes.Text = objProgram.GetMCodes(Me.progMCodesCombo.SelectedValue)	</para> <para>Catch ae As ApplicationException	</para> <para>	doError("CProgram", ae.Message)	</para> <para>Catch ex As Exception	</para> <para>	doError("CProgram", ex.Message)	</para> <para>End Try	</para> </example>
      <param name="enMCodes">M-Code line index</param>
      <returns>A System.String value</returns>
      <exception cref="System.ApplicationException">Thrown when function fails to perform the operation at current NC condition.</exception>
      <exception cref="System.NotSupportedException">Thrown when operation/input parameters are not supported for the current system.</exception>
      <Figure> AUTO OPERATION - MAIN PROGRAM - MCODE - List of all M codes in line 1,2,3 being executed in NC <para> <img src="Lathe.AutoOperation.MainProgram.4.4.jpg" /> </para> </Figure>
      <SubSystem> Please see <see href="SubSystemNoteTable.htm">Sub System Note Table</see> for more information if applicable. <para>Valid sub systems for this function (Y = Valid, N = Not valid)</para> <para> <list type="table"> <listheader> <term>NC_RUN </term> <term>NC_RUN_1 </term> <term>NC_RUN_2 </term> <term>NC_RUN_3 </term> <term>NC_PANEL </term> <term>NC_PANEL_1 </term> <term>NC_PANEL_2 </term> <term>NC_PANEL_3 </term> <term>NC_AL </term> <term>NC_AR </term> <term>NC_BL </term> <term>NC_BR </term> <term>NC_CL </term> <term>NC_CR </term> <term>NC_2AL </term> </listheader> <item> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> </item> </list> </para>  </SubSystem>
    </member>
    <member name="M:Okuma.CLDATAPI.DataAPI.CProgram.GetExecuteBlock">
      <summary> Gets the Execute block for current sub system.  Only the first 65 characters will be obtainable. </summary>
      <example> This example shows how to call GetExecuteBlock method <para>executeBlock = objProgram.GetExecuteBlock	</para> </example>
      <returns>A System.String value</returns>
      <exception cref="System.ApplicationException">Thrown when function fails to perform the operation at current NC condition.</exception>
      <exception cref="System.NotSupportedException">Thrown when operation/input parameters are not supported for the current system.</exception>
      <Figure> AUTO OPERATION - EXECUTE BLOCK (COMMENT LINE BEING EXECUTED BY NC) - It is a block being executed by NC <para> <img src="ActualPosition.3.jpg" /> </para> </Figure>
      <SubSystem> Please see <see href="SubSystemNoteTable.htm">Sub System Note Table</see> for more information if applicable. <para>Valid sub systems for this function (Y = Valid, N = Not valid)</para> <para> <list type="table"> <listheader> <term>NC_RUN </term> <term>NC_RUN_1 </term> <term>NC_RUN_2 </term> <term>NC_RUN_3 </term> <term>NC_PANEL </term> <term>NC_PANEL_1 </term> <term>NC_PANEL_2 </term> <term>NC_PANEL_3 </term> <term>NC_AL </term> <term>NC_AR </term> <term>NC_BL </term> <term>NC_BR </term> <term>NC_CL </term> <term>NC_CR </term> <term>NC_2AL </term> </listheader> <item> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> </item> </list> </para>  </SubSystem>
    </member>
    <member name="M:Okuma.CLDATAPI.DataAPI.CProgram.GetProgramRunningState(Okuma.CLDATAPI.Enumerations.MachineSideEnum)">
      <summary> Gets program running state for current machine selection. </summary>
      <example> This example shows how to calls GetProgramRunningState() method <para>Dim enRunningState As ProgramRunningStateEnum</para> <para>Dim enMachineSystem As MachineSideEnum</para> <para>enRunningState = objProgram.GetProgramRunningState(enMachineSystem)	</para> </example>
      <param name="enMachineSide">Machine side index.  Values for this parameter come from the Okuma.CLDATAPI.Enumerations.MachineSideEnum enumeration.</param>
      <returns>A ProgramRunningStateEnum value</returns>
      <exception cref="System.ApplicationException">Thrown when function fails to perform the operation at current NC condition.</exception>
      <exception cref="System.NotSupportedException">Thrown when operation/input parameters are not supported for the current system.</exception>
    </member>
    <member name="M:Okuma.CLDATAPI.DataAPI.CProgram.GetActiveScheduleProgramFileName(Okuma.CLDATAPI.Enumerations.MachineSideEnum)">
      <summary> Gets active schedule program file name for current sub system </summary>
      <example> This example shows how to get the active schedule program file name by calling GetActiveScheduleProgramFileName method <para>Dim strValue As String </para> <para>Dim enMachineSystem As MachineSideEnum = MachineSideEnum.FirstSystem </para> <para>strValue = objProgram.GetActiveScheduleProgramFileName(enMachineSystem)	</para> </example>
      <param name="enMachineSystem">Machine system index.  Values for this parameter come from the Okuma.CLDATAPI.Enumerations.MachineSideEnum enumeration.</param>
      <returns>A System.String value.  If there is no alarm in the system, alarm message will be empty string.</returns>
      <exception cref="System.ApplicationException">Thrown when function fails to perform the operation at current NC condition.</exception>
      <exception cref="System.NotSupportedException">Thrown when operation/input parameters are not supported for the current system.</exception>
      <Figure> AUTO OPERATION - SCHEDULE PROGRAM - DAN.SDF <para> <img src="Lathe.Program.ScheduleProgram.jpg" /> </para>  </Figure>
    </member>
    <member name="T:Okuma.CLDATAPI.DataAPI.CSpec">
      <summary> Class provides the current specification of machine.  </summary>
    </member>
    <member name="M:Okuma.CLDATAPI.DataAPI.CSpec.Get2SaddleSpec">
      <summary>Check whether the system supports 2 saddles(Turrets) specification or not </summary>
      <example> This sample shows how to call the Get2SaddleSpec method. <para>Me.specSaddleSpec.Text = objSpec.Get2SaddleSpec	</para> </example>
      <returns>A System.Boolean value.  True if the specification is available to the system, otherwise false</returns>
      <exception cref="System.ApplicationException">Thrown when function fails to perform the operation at current NC condition.</exception>
      <exception cref="System.NotSupportedException">Thrown when operation/input parameters are not supported for the current system.</exception>
    </member>
    <member name="M:Okuma.CLDATAPI.DataAPI.CSpec.GetOptionSpecCode(Okuma.CLDATAPI.Enumerations.OptionSpecEnum)">
      <summary>Check whether if the option code is available for this system. </summary>
      <example> This sample shows how to call the GetOptionSpecCode method. <para>Me.specCode.Text = objSpec.GetOptionSpecCode(curSpecEnum)	</para> </example>
      <param name="enValue">Option Spec Value. Value of parameter comes from Okuma.CLDATAPI.Enumerations.OptionSpecEnum.</param>
      <returns>A System.Boolean value.  True if the option is available to the system, otherwise false</returns>
      <exception cref="System.ApplicationException">Thrown when function fails to perform the operation at current NC condition.</exception>
      <exception cref="System.NotSupportedException">Thrown when operation/input parameters are not supported for the current system.</exception>
    </member>
    <member name="M:Okuma.CLDATAPI.DataAPI.CSpec.GetMachineName">
      <summary>Retrieve machine name </summary>
      <example> This sample shows how to call the GetMachineName method. <para>Me.specMachineName.Text = objSpec.GetMachineName	</para> </example>
      <returns>System.String value  </returns>
      <exception cref="System.ApplicationException">Thrown when function fails to perform the operation at current NC condition.</exception>
      <exception cref="System.NotSupportedException">Thrown when operation/input parameters are not supported for the current system.</exception>
      <Figure>  </Figure>
    </member>
    <member name="M:Okuma.CLDATAPI.DataAPI.CSpec.GetSpecCode(System.Int32,System.Int32)">
      <summary> Check if spec. code is enabled or not given spec. code index and spec. code bit number. Please see <see href="Lathe.SpecCodeTable.html">Spec. Code Table</see> for more information. </summary>
      <example> This sample shows how to call the GetSpecCode method. <para>Dim objSpec As new CSpec </para> <para>Dim intSpecCodeIndex As Int32 </para> <para>Dim intBit As Int32 </para> <para>Try </para> <para>		txtSpecCode.Text = objSpec.GetSpecCode(intSpecCodeIndex, intBit) </para> <para>Catch ae As ApplicationException </para> <para>		doError("CSpec", ae.Message) </para> <para>Catch ex As Exception </para> <para>		doError("CSpec", ex.Message) </para> <para>End Try </para> </example>
      <param name="intSpecCodeIndex">spec. code index</param>
      <param name="intBit">spec. code bit index</param>
      <returns>A System.Boolean value.  True if option is enabled, otherwise false.</returns>
      <exception cref="System.ApplicationException">Thrown when function fails to perform the operation at current NC condition.</exception>
      <exception cref="System.NotSupportedException">Thrown when operation/input parameters are not supported for the current system.</exception>
      <Figure> AUTO OPERATION - SPEC CODE <para> <img src="Lathe.SpecCodeTable.jpg" /> </para>  </Figure>
    </member>
    <member name="M:Okuma.CLDATAPI.DataAPI.CSpec.GetBSpecCode(System.Int32,System.Int32)">
      <summary> Check if B spec. code is enabled or not given B spec. code index and B spec. code bit number. Please see <see href="Lathe.BSpecCodeTable.html">B Spec. Code Table</see> for more information. </summary>
      <example> This sample shows how to call the GetBSpecCode method. <para>Dim objSpec As new CSpec </para> <para>Dim intSpecCodeIndex As Int32 </para> <para>Dim intBit As Int32 </para> <para>Try </para> <para>		txtSpecCode.Text = objSpec.GetBSpecCode(intSpecCodeIndex, intBit) </para> <para>Catch ae As ApplicationException </para> <para>		doError("CSpec", ae.Message) </para> <para>Catch ex As Exception </para> <para>		doError("CSpec", ex.Message) </para> <para>End Try </para> </example>
      <param name="intBSpecCodeIndex">B spec. code index</param>
      <param name="intBit">Bit Index</param>
      <returns>A System.Boolean value.  True if option is enabled, otherwise false.</returns>
      <exception cref="System.ApplicationException">Thrown when function fails to perform the operation at current NC condition.</exception>
      <exception cref="System.NotSupportedException">Thrown when operation/input parameters are not supported for the current system.</exception>
    </member>
    <member name="M:Okuma.CLDATAPI.DataAPI.CSpec.GetMachineSerialNumber">
      <summary>Retrieve machine serial number </summary>
      <example> This sample shows how to call the GetMachineSerialNumber method. <para>Dim curSpecEnum As OptionSpecEnum	</para> <para>Try	</para> <para>    curSpecEnum = Me.specCombo.SelectedValue	</para> <para>    Me.specMachineName.Text = objSpec.GetMachineName	</para> <para>    Me.specSerialNumber.Text = objSpec.GetMachineSerialNumber	</para> <para>    Me.specCode.Text = objSpec.GetOptionSpecCode(curSpecEnum)	</para> <para>    Me.specSaddleSpec.Text = objSpec.Get2SaddleSpec	</para> <para>    specInterfaceVersion.Text = objCMDSpec.GetInterfaceVersion(CInt(Me.specMajor.Text), CInt(Me.specMinor.Text), CInt(Me.specBuildNumber.Text), CInt(Me.specRevision.Text))	</para> <para>Catch ae As ApplicationException	</para> <para>    doError("CSpec", ae.Message)	</para> <para>Catch ex As Exception	</para> <para>    doError("CSpec", ex.Message)	</para> <para>End Try	</para> </example>
      <returns>System.String value  </returns>
      <exception cref="System.ApplicationException">Thrown when function fails to perform the operation at current NC condition.</exception>
      <exception cref="System.NotSupportedException">Thrown when operation/input parameters are not supported for the current system.</exception>
    </member>
    <member name="M:Okuma.CLDATAPI.DataAPI.CSpec.GetPLCSpecCode(System.Int32,System.Int32)">
      <summary> Check if PLC code is enabled or not given spec. code index and spec. code bit number. Please see <see href="Lathe.PLCSpecCodeTable.html">PLC Spec. Code Table</see> for more information. </summary>
      <example> This sample shows how to call the GetPLCSpecCode method. <para>Dim objSpec As new CSpec </para> <para>Dim intSpecCodeIndex As Int32 </para> <para>Dim intBit As Int32 </para> <para>Try </para> <para>		txtPLCSpecCode.Text = objSpec.GetPLCSpecCode(intSpecCodeIndex, intBit) </para> <para>Catch ae As ApplicationException </para> <para>		doError("CSpec", ae.Message) </para> <para>Catch ex As Exception </para> <para>		doError("CSpec", ex.Message) </para> <para>End Try </para> </example>
      <param name="intPLCSpecCodeIndex">PLC spec. code index</param>
      <param name="intBit">Bit Index</param>
      <returns>A System.Boolean value.  True if option is enabled, otherwise false.</returns>
      <exception cref="System.NotSupportedException">Thrown when operation/input parameters are not supported for the current system.</exception>
      <Figure> AUTO OPERATION -PLC SPEC CODE <para> <img src="Lathe.PLCSpec.jpg" /> </para>  </Figure>
    </member>
    <member name="M:Okuma.CLDATAPI.DataAPI.CSpec.GetPLCSpecCode2(System.Int32,System.Int32)">
      <summary> Check if PLC code 2 is enabled or not given spec. code 2 index and spec. code bit number. Please see <see href="Lathe.PLCSpecCode2Table.html">PLC Spec. Code 2 Table</see> for more information. </summary>
      <example> This sample shows how to call the GetPLCSpecCode2 method. <para>Dim objSpec As new CSpec </para> <para>Dim intSpecCodeIndex As Int32 </para> <para>Dim intBit As Int32 </para> <para>Try </para> <para>		txtPLCSpecCode.Text = objSpec.GetPLCSpecCode2(intSpecCodeIndex, intBit) </para> <para>Catch ae As ApplicationException </para> <para>		doError("CSpec", ae.Message) </para> <para>Catch ex As Exception </para> <para>		doError("CSpec", ex.Message) </para> <para>End Try </para> </example>
      <param name="intPLCSpecCodeIndex">PLC spec. code index</param>
      <param name="intBit">Bit Index</param>
      <returns>A System.Boolean value.  True if option is enabled, otherwise false.</returns>
      <exception cref="System.NotSupportedException">Thrown when operation/input parameters are not supported for the current system.</exception>
      <Figure> AUTO OPERATION -PLC SPEC CODE 2 <para> <img src="Lathe.PLCSpec_2.jpg" /> </para>  </Figure>
    </member>
    <member name="M:Okuma.CLDATAPI.DataAPI.CSpec.GetPLCSpecCode3(System.Int32,System.Int32)">
      <summary> Check if PLC code 3 is enabled or not given spec. code 3 index and spec. code bit number. Please see <see href="Lathe.PLCSpecCode3Table.html">PLC Spec. Codes 3 Table</see> for more information. </summary>
      <example> This sample shows how to call the GetPLCSpecCode3 method. <para>Dim objSpec As new CSpec </para> <para>Dim intSpecCodeIndex As Int32 </para> <para>Dim intBit As Int32 </para> <para>Dim blnValue As Boolean </para> <para>	blnValue = objSpec.GetPLCSpecCode3(intSpecCodeIndex, intBit) </para> </example>
      <param name="intPLCSpecCodeIndex">PLC spec. code index</param>
      <param name="intBit">Bit Index</param>
      <returns>A System.Boolean value.  True if option is enabled, otherwise false.</returns>
      <exception cref="System.NotSupportedException">Thrown when operation/input parameters are not supported for the current system.</exception>
      <Figure> AUTO OPERATION -PLC SPEC CODE 3 <para> <img src="Lathe.PLCSpec_3.jpg" /> </para>  </Figure>
    </member>
    <member name="M:Okuma.CLDATAPI.DataAPI.CSpec.IsValidSystem(Okuma.CLDATAPI.Enumerations.SubSystemEnum)">
      <summary> <para>Determine if a sub system can be supported for current machine configuration.</para> <para>To be valid, this function must be called after sucessfully initializing API by calling CMachine.Init method without error.</para> <para>Note: If a sub system is not valid then all functions using sub system will fail for this sub system.</para> <para>Note: If a sub system is valid then the validity of a function also depends on current machine condition and specification if applicable.</para> </summary>
      <example> This sample shows how to call the IsValidSystem method and to check for subsystem NC_2_AL which is a 2 sides machine. <para>Dim objSpec As new CSpec </para> <para>Dim enSubSystem As SubSystemEnum = SubSystemEnum::NC_2_AL</para> <para>Dim blnValue As Boolean </para> <para>Try </para> <para>		blnValue = objSpec.IsValidSystem(enSubSystem) </para> <para>		if blnValue = true then </para> <para>			MsgBox("Valid sub system") </para> <para>		else</para> <para>			MsgBox("Invalid sub system") </para> <para>		end if</para> <para>Catch ae As ApplicationException </para> <para>		doError("CSpec", ae.Message) </para> <para>Catch ex As Exception </para> <para>		doError("CSpec", ex.Message) </para> <para>End Try </para> </example>
      <param name="enSubSystem">Sub system to be validated</param>
      <returns>A System.Boolean value.  True if subsystem is valid, otherwise false.</returns>
      <exception cref="System.NotSupportedException">Thrown when operation/input parameters are not supported for the current system.</exception>
    </member>
    <member name="M:Okuma.CLDATAPI.DataAPI.CSpec.GetControlType">
      <summary> Get control type of machine </summary>
      <example> This sample shows how to call the GetControlType method. <para>Dim objSpec As new CSpec </para> <para>Dim enValue As ControlTypeEnum </para> <para>	enValue = objSpec.GetControlType() </para> </example>
      <returns>A ControlTypeEnum value.  </returns>
    </member>
    <member name="M:Okuma.CLDATAPI.DataAPI.CSpec.GetXAxisCoordinate">
      <summary> <para>Gets X-axis coordinate that is currently used by the system</para> <para>ATTENTION:</para> <para>By default, X-axis coordinate is Diameter. </para> <para>When X-axis coordinate is changed to Radius mode, </para> <para>it is necessary to review all settings related to offset and position as mentioned in </para> <para>OSP-P300S and OSP-P300L document number W7218-100-79 </para> </summary>
      <example> This example shows how to GetXAxisCoordinate. <para>	Dim objSpec As New CSpec</para> <para>	Dim enXAxisCoordinate As XAxisCoordinateEnum</para> <para>	 enXAxisCoordinate = objSpec.GetXAxisCoordinate()	</para> </example>
      <returns>A XAxisCoordinateEnum value that represents the current setting of X-axis coordinate used by machine</returns>
      <exception cref="System.ApplicationException">Thrown when function fails to perform the operation at current NC condition.</exception>
      <exception cref="System.NotSupportedException">Thrown when operation/input parameters are not supported for the current System.</exception>
      <Figure>PARAMETER - OPTIONAL PARAMETER - LATHE X-AXIS COORDINATE <para> <img src="Lathe.OptionalParameter.XAxisCoordinate.jpg" /> </para> </Figure>
      <remarks> <para> The following specifications must be met in order to function.  Otherwise, it returns NONE: <list type="table"> <listheader> <term>Specification</term> <description>Valid/Invalid</description> </listheader> <item> <term>NC spec code 2 [24,5]</term> <description>Valid</description> </item> </list> </para> </remarks>
      <SubSystem> Please see <see href="SubSystemNoteTable.htm">Sub System Note Table</see> for more information if applicable. <para>Valid sub systems for this function (Y = Valid, N = Not valid)</para> <para> <list type="table"> <listheader> <term>NC_RUN </term> <term>NC_RUN_1 </term> <term>NC_RUN_2 </term> <term>NC_RUN_3 </term> <term>NC_PANEL </term> <term>NC_PANEL_1 </term> <term>NC_PANEL_2 </term> <term>NC_PANEL_3 </term> <term>NC_AL </term> <term>NC_AR </term> <term>NC_BL </term> <term>NC_BR </term> <term>NC_CL </term> <term>NC_CR </term> <term>NC_2AL </term> </listheader> <item> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> </item> </list> </para>  </SubSystem>
    </member>
    <member name="T:Okuma.CLDATAPI.DataAPI.CSpindle">
      <summary> Class provides information about spindle.  </summary>
    </member>
    <member name="M:Okuma.CLDATAPI.DataAPI.CSpindle.#ctor(Okuma.CLDATAPI.Enumerations.SubSystemEnum)">
      <summary> Create an instance of this class given sub system.  By default, class is created with sub system = NC_AL. </summary>
      <param name="enSubSystem">Sub system</param>
    </member>
    <member name="M:Okuma.CLDATAPI.DataAPI.CSpindle.SetSubSystem(Okuma.CLDATAPI.Enumerations.SubSystemEnum)">
      <summary> Set current sub system for this class instance </summary>
      <example> This sample shows how to call the SetSubSystem method. <para>objProgram.SetSubSystem(cmb_Program_SubSys.SelectedItem)	</para> </example>
      <param name="enSubSystem">Sub Sytem value. Value of parameter comes from Okuma.CLDATAPI.Enumerations.SubSystemEnum.</param>
      <exception cref="System.ApplicationException">Thrown when function fails to perform the operation at current NC condition.</exception>
      <exception cref="System.NotSupportedException">Thrown when operation/input parameters are not supported for the current system.</exception>
    </member>
    <member name="M:Okuma.CLDATAPI.DataAPI.CSpindle.SetDataUnit(Okuma.CLDATAPI.Enumerations.DataUnitEnum)">
      <summary> Sets current data unit for this class instance. </summary>
      <example>This example shows how to set DataUnit. <para>	objSpindle.SetDataUnit(cmb_Spindle_DataUnit.SelectedItem)		</para> </example>
      <param name="enDataUnit">Data Unit to be set</param>
      <exception cref="System.NotSupportedException">Thrown when operation/input parameters are not supported for the current system.</exception>
      <remarks> If applicable, this setting is applied to data in this class instance only, not for NC Data Unit. For example: If NC Data unit is set to mm, and the data unit for this class instance is in inch, then NC data will not be converted to inch and vice versa. </remarks>
      <Figure> OPTIONAL PARAMETER - UNIT - LENGTH UNIT SYSTEM mm / inch.  This is for NC Data only. <para> <img src="ParametersScreen.DataUnit.jpg" /> </para>  </Figure>
    </member>
    <member name="M:Okuma.CLDATAPI.DataAPI.CSpindle.GetCommandSpindlerate">
      <summary>Gets command spindle rate for current sub system. </summary>
      <example> This sample shows how to call the GetCommandSpindlerate method. <para>Me.spinCommandRate.Text = objSpindle.GetCommandSpindlerate	</para> </example>
      <returns> System.Int32 value</returns>
      <DataUnit> RPM </DataUnit>
      <exception cref="System.ApplicationException">Thrown when function fails to perform the operation at current NC condition.</exception>
      <exception cref="System.NotSupportedException">Thrown when operation/input parameters are not supported for the current system.</exception>
      <Figure>AUTO OPERATION - BLOCK DATA - S is Command Spindle rate. <para> <img src="Axis.Feedrate.jpg" /> </para> </Figure>
      <SubSystem> Please see <see href="SubSystemNoteTable.htm">Sub System Note Table</see> for more information if applicable. <para>Valid sub systems for this function (Y = Valid, N = Not valid)</para> <para> <list type="table"> <listheader> <term>NC_RUN </term> <term>NC_RUN_1 </term> <term>NC_RUN_2 </term> <term>NC_RUN_3 </term> <term>NC_PANEL </term> <term>NC_PANEL_1 </term> <term>NC_PANEL_2 </term> <term>NC_PANEL_3 </term> <term>NC_AL </term> <term>NC_AR </term> <term>NC_BL </term> <term>NC_BR </term> <term>NC_CL </term> <term>NC_CR </term> <term>NC_2AL </term> </listheader> <item> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> </item> </list> </para>  </SubSystem>
    </member>
    <member name="M:Okuma.CLDATAPI.DataAPI.CSpindle.GetSpindleMode">
      <summary>Gets spindle mode, Main Spindle/C-axis </summary>
      <example> This sample shows how to call the GetSpindleMode method. <para>Me.spinSpindleMode.Text = objSpindle.GetSpindleMode	</para> </example>
      <returns> An Okuma.CLDATAPI.Enumerations.SpindleModeEnum value</returns>
      <exception cref="System.ApplicationException">Thrown when function fails to perform the operation at current NC condition.</exception>
      <exception cref="System.NotSupportedException">Thrown when operation/input parameters are not supported for the current system.</exception>
      <SubSystem> Please see <see href="SubSystemNoteTable.htm">Sub System Note Table</see> for more information if applicable. <para>Valid sub systems for this function (Y = Valid, N = Not valid)</para> <para> <list type="table"> <listheader> <term>NC_RUN </term> <term>NC_RUN_1 </term> <term>NC_RUN_2 </term> <term>NC_RUN_3 </term> <term>NC_PANEL </term> <term>NC_PANEL_1 </term> <term>NC_PANEL_2 </term> <term>NC_PANEL_3 </term> <term>NC_AL </term> <term>NC_AR </term> <term>NC_BL </term> <term>NC_BR </term> <term>NC_CL </term> <term>NC_CR </term> <term>NC_2AL </term> </listheader> <item> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> </item> </list> </para>  </SubSystem>
    </member>
    <member name="M:Okuma.CLDATAPI.DataAPI.CSpindle.GetSpindleState">
      <summary>Get main spindle state for current sub system. </summary>
      <example> This sample shows how to call the GetSpindleState method. <para>Me.spinState.Text = System.Enum.GetNames(GetType(SpindleStateEnum)).GetValue(objSpindle.GetSpindleState)	</para> </example>
      <returns>An Okuma.CLDATAPI.Enumerations.SpindleStateEnum value</returns>
      <exception cref="System.ApplicationException">Thrown when function fails to perform the operation at current NC condition.</exception>
      <exception cref="System.NotSupportedException">Thrown when operation/input parameters are not supported for the current system.</exception>
      <Figure>AUTO OPERATION - MAIN PROGRAM - SPINDLE - STOP - Main spindle is in stop state. <para> <img src="AutoOperation.MainProgram.jpg" /> </para> </Figure>
      <SubSystem> Please see <see href="SubSystemNoteTable.htm">Sub System Note Table</see> for more information if applicable. <para>Valid sub systems for this function (Y = Valid, N = Not valid)</para> <para> <list type="table"> <listheader> <term>NC_RUN </term> <term>NC_RUN_1 </term> <term>NC_RUN_2 </term> <term>NC_RUN_3 </term> <term>NC_PANEL </term> <term>NC_PANEL_1 </term> <term>NC_PANEL_2 </term> <term>NC_PANEL_3 </term> <term>NC_AL </term> <term>NC_AR </term> <term>NC_BL </term> <term>NC_BR </term> <term>NC_CL </term> <term>NC_CR </term> <term>NC_2AL </term> </listheader> <item> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> </item> </list> </para>  </SubSystem>
    </member>
    <member name="M:Okuma.CLDATAPI.DataAPI.CSpindle.GetSpindleSurfaceSpeed">
      <summary>Gets spindle surface speed for current sub system </summary>
      <example> This sample shows how to call the GetSpindleSurfaceSpeed method. <para>Me.spinSpindleSurfaceSpeed.Text = objSpindle.GetSpindleSurfaceSpeed	</para> </example>
      <returns> System.Int32 value</returns>
      <DataUnit> It is m/min when data unit sets to mm. Otherwise, it is ft/min for inch unit. </DataUnit>
      <exception cref="System.ApplicationException">Thrown when function fails to perform the operation at current NC condition.</exception>
      <exception cref="System.NotSupportedException">Thrown when operation/input parameters are not supported for the current system.</exception>
      <Figure>AUTO OPERATION - MAIN PROGRAM - V - Spindle surface speed <para> <img src="AutoOperation.MainProgram.jpg" /> </para> </Figure>
      <SubSystem> Please see <see href="SubSystemNoteTable.htm">Sub System Note Table</see> for more information if applicable. <para>Valid sub systems for this function (Y = Valid, N = Not valid)</para> <para> <list type="table"> <listheader> <term>NC_RUN </term> <term>NC_RUN_1 </term> <term>NC_RUN_2 </term> <term>NC_RUN_3 </term> <term>NC_PANEL </term> <term>NC_PANEL_1 </term> <term>NC_PANEL_2 </term> <term>NC_PANEL_3 </term> <term>NC_AL </term> <term>NC_AR </term> <term>NC_BL </term> <term>NC_BR </term> <term>NC_CL </term> <term>NC_CR </term> <term>NC_2AL </term> </listheader> <item> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> </item> </list> </para>  </SubSystem>
    </member>
    <member name="M:Okuma.CLDATAPI.DataAPI.CSpindle.GetSpindleLoad">
      <summary>Gets spindle load for current sub system. </summary>
      <example> This sample shows how to call the GetSpindleLoad method. <para>Me.spinLoad.Text = objSpindle.GetSpindleLoad	</para> </example>
      <returns> System.Int32 value</returns>
      <DataUnit> Percentage </DataUnit>
      <exception cref="System.ApplicationException">Thrown when function fails to perform the operation at current NC condition.</exception>
      <exception cref="System.NotSupportedException">Thrown when operation/input parameters are not supported for the current system.</exception>
      <Figure>AUTO OPERATION - LOAD MONITOR - S value from 0 to 200% is spindle load. <para> <img src="Axis.load.jpg" /> </para> </Figure>
      <SubSystem> Please see <see href="SubSystemNoteTable.htm">Sub System Note Table</see> for more information if applicable. <para>Valid sub systems for this function (Y = Valid, N = Not valid)</para> <para> <list type="table"> <listheader> <term>NC_RUN </term> <term>NC_RUN_1 </term> <term>NC_RUN_2 </term> <term>NC_RUN_3 </term> <term>NC_PANEL </term> <term>NC_PANEL_1 </term> <term>NC_PANEL_2 </term> <term>NC_PANEL_3 </term> <term>NC_AL </term> <term>NC_AR </term> <term>NC_BL </term> <term>NC_BR </term> <term>NC_CL </term> <term>NC_CR </term> <term>NC_2AL </term> </listheader> <item> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> </item> </list> </para>  </SubSystem>
    </member>
    <member name="M:Okuma.CLDATAPI.DataAPI.CSpindle.GetActualSpindlerate">
      <summary>Gets actual spindle rate for current sub system. </summary>
      <example> This sample shows how to call the GetActualSpindlerate method. <para> Me.spinActualRate.Text = objSpindle.GetActualSpindlerate	</para> </example>
      <returns> System.Int32 value</returns>
      <DataUnit> RPM </DataUnit>
      <exception cref="System.ApplicationException">Thrown when function fails to perform the operation at current NC condition.</exception>
      <exception cref="System.NotSupportedException">Thrown when operation/input parameters are not supported for the current system.</exception>
      <Figure>AUTO OPERATION - BLOCK DATA - Sr is Actual Spindle rate. <para> <img src="Axis.Feedrate.jpg" /> </para> </Figure>
      <SubSystem> Please see <see href="SubSystemNoteTable.htm">Sub System Note Table</see> for more information if applicable. <para>Valid sub systems for this function (Y = Valid, N = Not valid)</para> <para> <list type="table"> <listheader> <term>NC_RUN </term> <term>NC_RUN_1 </term> <term>NC_RUN_2 </term> <term>NC_RUN_3 </term> <term>NC_PANEL </term> <term>NC_PANEL_1 </term> <term>NC_PANEL_2 </term> <term>NC_PANEL_3 </term> <term>NC_AL </term> <term>NC_AR </term> <term>NC_BL </term> <term>NC_BR </term> <term>NC_CL </term> <term>NC_CR </term> <term>NC_2AL </term> </listheader> <item> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> </item>	/// </list> </para>  </SubSystem>
    </member>
    <member name="M:Okuma.CLDATAPI.DataAPI.CSpindle.GetSpindlerateOverride(Okuma.CLDATAPI.Enumerations.SpindleAxisIndexEnum)">
      <summary> Gets spindle rate override for the specified spindle axis index. </summary>
      <example> This sample shows how to call the GetSpindlerateOverride method. <para>Me.spinRateOverride.Text = objSpindle.GetSpindlerateOverride(Me.spinComboAxis.SelectedValue)	</para> </example>
      <param name="enAxisIndex">Spinde axis index. Value of parameter comes from Okuma.CLDATAPI.Enumerations.SpindleAxisIndexEnum</param>
      <returns> System.Int32 value</returns>
      <DataUnit> Percentage </DataUnit>
      <exception cref="System.ApplicationException">Thrown when function fails to perform the operation at current NC condition.</exception>
      <exception cref="System.NotSupportedException">Thrown when operation/input parameters are not supported for the current system.</exception>
      <remarks> <para> The following specifications for spindle 2 must be met in order to function: <list type="table"> <listheader> <term>Specification</term> <description>Valid/Invalid</description> </listheader> <item> <term>Sub spindle specification NC spec [4,1]</term> <description>Valid</description> </item> </list> </para>  <para> The following specifications for left and right spindle axis must be met in order to function: <list type="table"> <listheader> <term>Specification</term> <description>Valid/Invalid</description> </listheader> <item> <term>Parallel 2 Spindle specification NC spec [4,2]</term> <description>Valid</description> </item> </list> </para> </remarks>
      <Figure>Standard Navigation Panel <para>G02 is spindle rate override for main spindle.  G03 is second main spindle rate override.</para> <para> <img src="Standard.Navigation.Panel.jpg" /> </para> <para></para> <para>G04 is spindle rate override for left spindle on parallel 2 spindles specification machine. G045 is spindle rate override for right spindle on parallel 2 spindles specification machine.</para> <para> <img src="Parallel2SPNavigationPanel.jpg" /> </para>  </Figure>
    </member>
    <member name="M:Okuma.CLDATAPI.DataAPI.CSpindle.GetMaxSpindlerateOverride">
      <summary>Get maximum spindle rate override. </summary>
      <example> This sample shows how to call the GetMaxSpindlerateOverride method. <para> Me.MaxSpindleRateOverride.Text = objSpindle.GetMaxSpindlerateOverride	</para> </example>
      <returns> System.Int32 value</returns>
      <DataUnit> Percent </DataUnit>
      <exception cref="System.ApplicationException">Thrown when function fails to perform the operation at current NC condition.</exception>
      <exception cref="System.NotSupportedException">Thrown when operation/input parameters are not supported for the current system.</exception>
    </member>
    <member name="M:Okuma.CLDATAPI.DataAPI.CSpindle.GetCurrentSpindleSelection">
      <summary>For machine equipped with 2 spindles, it gets current spindle selection for current sub system. <para> Note: For machine equipped with single spindle, left spindle is the default value. </para> </summary>
      <example> This sample shows how to call the GetSpindleSelection method. <para> Dim enValue As SpindleSelectionEnum </para> <para> enValue = objSpindle.GetCurrentSpindleSelection()	</para> </example>
      <returns> A SpindleSelectionEnum value</returns>
      <exception cref="System.ApplicationException">Thrown when function fails to perform the operation at current NC condition.</exception>
      <exception cref="System.NotSupportedException">Thrown when operation/input parameters are not supported for the current system.</exception>
      <SubSystem> Please see <see href="SubSystemNoteTable.htm">Sub System Note Table</see> for more information if applicable. <para>Valid sub systems for this function (Y = Valid, N = Not valid)</para> <para> <list type="table"> <listheader> <term>NC_RUN </term> <term>NC_RUN_1 </term> <term>NC_RUN_2 </term> <term>NC_RUN_3 </term> <term>NC_PANEL </term> <term>NC_PANEL_1 </term> <term>NC_PANEL_2 </term> <term>NC_PANEL_3 </term> <term>NC_AL </term> <term>NC_AR </term> <term>NC_BL </term> <term>NC_BR </term> <term>NC_CL </term> <term>NC_CR </term> <term>NC_2AL </term> </listheader> <item> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> </item> </list> </para>  </SubSystem>
    </member>
    <member name="M:Okuma.CLDATAPI.DataAPI.CSpindle.GetCurrentSpindlePosition">
      <summary>Get current spindle position for current sub system. <para> </para> </summary>
      <example> This sample shows how to call the GetCurrentSpindlePosition method. <para> Dim dblValue as Double </para> <para> enValue = objSpindle.GetCurrentSpindlePosition()	</para> </example>
      <returns> A System.Double value</returns>
      <DataUnit> Degree </DataUnit>
      <exception cref="System.ApplicationException">Thrown when function fails to perform the operation at current NC condition.</exception>
      <exception cref="System.NotSupportedException">Thrown when operation/input parameters are not supported for the current system.</exception>
      <Figure>MANUAL OPERATION - MAIN PROGRAM - CD <para> <img src="ActualPosition.2.jpg" /> </para> </Figure>
      <SubSystem> Please see <see href="SubSystemNoteTable.htm">Sub System Note Table</see> for more information if applicable. <para>Valid sub systems for this function (Y = Valid, N = Not valid)</para> <para> <list type="table"> <listheader> <term>NC_RUN </term> <term>NC_RUN_1 </term> <term>NC_RUN_2 </term> <term>NC_RUN_3 </term> <term>NC_PANEL </term> <term>NC_PANEL_1 </term> <term>NC_PANEL_2 </term> <term>NC_PANEL_3 </term> <term>NC_AL </term> <term>NC_AR </term> <term>NC_BL </term> <term>NC_BR </term> <term>NC_CL </term> <term>NC_CR </term> <term>NC_2AL </term> </listheader> <item> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> </item> </list> </para>  </SubSystem>
    </member>
    <member name="T:Okuma.CLDATAPI.DataAPI.CTailStock">
      <summary> Class provides information about Tailstock.  </summary>
    </member>
    <member name="M:Okuma.CLDATAPI.DataAPI.CTailStock.#ctor(Okuma.CLDATAPI.Enumerations.SubSystemEnum)">
      <summary> Create an instance of this class given sub system.  By default, class is created with sub system = NC_AL. </summary>
      <param name="enSubSystem">Sub system</param>
    </member>
    <member name="M:Okuma.CLDATAPI.DataAPI.CTailStock.SetSubSystem(Okuma.CLDATAPI.Enumerations.SubSystemEnum)">
      <summary> Set current sub system for this class instance </summary>
      <example> This example shows how to sets SetSubSystem method <para>Try	</para> <para>	objTailStock.SetSubSystem(cmb_Chuck_SubSys.SelectedItem)	</para> <para>Catch ae As ApplicationException	</para> <para>	doError("CTailStock", ae.Message)	</para> <para>Catch ex As Exception	</para> <para>	doError("CTailStock", ex.Message)	</para> <para>End Try	</para> </example>
      <param name="enSubSystem">Sub System value to be set</param>
      <exception cref="System.ApplicationException">Thrown when function fails to perform the operation at current NC condition.</exception>
      <exception cref="System.NotSupportedException">Thrown when operation/input parameters are not supported for the current system.</exception>
    </member>
    <member name="M:Okuma.CLDATAPI.DataAPI.CTailStock.SetDataUnit(Okuma.CLDATAPI.Enumerations.DataUnitEnum)">
      <summary> Sets current data unit for this class instance. </summary>
      <example> This example shows how to sets SetDataUnit method <para>Try	</para> <para>	Me.TailStockDiameter.Text = objTailStock.GetDiameter(Me.TailStockDiameterCombo.SelectedValue)	</para> <para>	Me.TailStockLength.Text = objTailStock.GetLength(Me.TailStockLengthCombo.SelectedValue)	</para> <para>	objTailStock.SetSubSystem(cmb_Chuck_SubSys.SelectedItem)	</para> <para>	objTailStock.SetDataUnit(cmb_Chuck_Dataunit.SelectedItem)	</para> <para>	lbl_axis_position.Text = objTailStock.GetTailstockSpindlePosition()	</para> <para>Catch ae As ApplicationException	</para> <para>	doError("CTailStock", ae.Message)	</para> <para>Catch ex As Exception	</para> <para>	doError("CTailStock", ex.Message)	</para> <para>End Try	</para> </example>
      <param name="enDataUnit">Data Unit to be set. Value of this parameter comes from Okuma.CLDATAPI.Enumerations.SubSystemEnum.</param>
      <exception cref="System.NotSupportedException">Thrown when operation/input parameters are not supported for the current system.</exception>
      <remarks> If applicable, this setting is applied to data in this class instance only, not for NC Data Unit. For example: If NC Data unit is set to mm and the data unit for this class instance is in inch, then position will be converted to inch from NC data and vice versa. </remarks>
      <Figure> OPTIONAL PARAMETER - UNIT - LENGTH UNIT SYSTEM mm / inch.  This is for NC Data only. <para> <img src="ParametersScreen.DataUnit.jpg" /> </para>  </Figure>
    </member>
    <member name="M:Okuma.CLDATAPI.DataAPI.CTailStock.GetLength(Okuma.CLDATAPI.Enumerations.TailStockLengthEnum)">
      <summary> Gets the tailstock's length at the specified tailstock's length index for current sub system. </summary>
      <example> This example shows how to call GetLength method <para>Try	</para> <para>	Me.TailStockDiameter.Text = objTailStock.GetDiameter(Me.TailStockDiameterCombo.SelectedValue)	</para> <para>	Me.TailStockLength.Text = objTailStock.GetLength(Me.TailStockLengthCombo.SelectedValue)	</para> <para>Catch ae As ApplicationException	</para> <para>	doError("CTailStock", ae.Message)	</para> <para>Catch ex As Exception	</para> <para>	doError("CTailStock", ex.Message)	</para> <para>End Try	</para> </example>
      <param name="enValue">Tail Stock length index.  Value of parameter comes from Okuma.CLDATAPI.Enumerations.TailStockLengthEnum.</param>
      <returns>System.Double value</returns>
      <DataUnit> Default unit is in mm.  Other unit can be set by calling SetDataUnit method </DataUnit>
      <exception cref="System.ApplicationException">Thrown when function fails to perform the operation at current NC condition.</exception>
      <exception cref="System.NotSupportedException">Thrown when operation/input parameters are not supported for the current system.</exception>
      <remarks> <para> The following specifications must be met in order to function: <list type="table"> <listheader> <term>Specification</term> <description>Valid/Invalid</description> </listheader> <item> <term>LT Mechanism specification NC spec [4,0]</term> <description>Invalid</description> </item> <item> <term>Sub Spindle</term> <description>Invalid</description> </item> </list> </para> </remarks>
      <Figure> PARAMETER - TAILSTOCK SPINDLE - TAILSTOCK BARRIER - L, L1, and L2 are different length of tailstock <para> <img src="Lathe.Parameter.Tailstock.jpg" /> </para> </Figure>
      <SubSystem> Please see <see href="SubSystemNoteTable.htm">Sub System Note Table</see> for more information if applicable. <para>Valid sub systems for this function (Y = Valid, N = Not valid)</para> <para> <list type="table"> <listheader> <term>NC_RUN </term> <term>NC_RUN_1 </term> <term>NC_RUN_2 </term> <term>NC_RUN_3 </term> <term>NC_PANEL </term> <term>NC_PANEL_1 </term> <term>NC_PANEL_2 </term> <term>NC_PANEL_3 </term> <term>NC_AL </term> <term>NC_AR </term> <term>NC_BL </term> <term>NC_BR </term> <term>NC_CL </term> <term>NC_CR </term> <term>NC_2AL </term> </listheader> <item> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> </item> </list> </para>  </SubSystem>
    </member>
    <member name="M:Okuma.CLDATAPI.DataAPI.CTailStock.SetLength(Okuma.CLDATAPI.Enumerations.TailStockLengthEnum,System.Double)">
      <summary>Sets tailstock length at the specfied tailstock index for current sub system. </summary>
      <example> This example shows how to sets SetLength method <para>Try	</para> <para>	objTailStock.SetLength(Me.TailStockLengthCombo.SelectedValue, CDbl(Me.TailStockLengthUpd.Text))	</para> <para>	Update_TailStock()	</para> <para>Catch ae As ApplicationException	</para> <para>	doError("CTailStock", ae.Message)	</para> <para>Catch ex As Exception	</para> <para>	doError("CTailStock", ex.Message)	</para> <para>End Try	</para> </example>
      <param name="enValue">Tailstock length index. Value of parameter comes from Okuma.CLDATAPI.Enumerations.TailStockLengthEnum.</param>
      <param name="dblValue">Tailstock length value to be set</param>
      <returns>None</returns>
      <DataUnit> Default unit is in mm.  Other unit can be set by calling SetDataUnit method </DataUnit>
      <exception cref="System.ApplicationException">Thrown when function fails to perform the operation at current NC condition.</exception>
      <exception cref="System.NotSupportedException">Thrown when operation/input parameters are not supported for the current system.</exception>
      <remarks> <para> The following specifications must be met in order to function: <list type="table"> <listheader> <term>Specification</term> <description>Valid/Invalid</description> </listheader> <item> <term>LT Mechanism specification NC spec [4,0]</term> <description>Invalid</description> </item> <item> <term>Sub Spindle</term> <description>Invalid</description> </item> </list> </para> </remarks>
      <Figure> PARAMETER - TAILSTOCK SPINDLE - TAILSTOCK BARRIER - L, L1, and L2 are different length of tailstock <para> <img src="Lathe.Parameter.Tailstock.jpg" /> </para> </Figure>
      <SubSystem> Please see <see href="SubSystemNoteTable.htm">Sub System Note Table</see> for more information if applicable. <para>Valid sub systems for this function (Y = Valid, N = Not valid)</para> <para> <list type="table"> <listheader> <term>NC_RUN </term> <term>NC_RUN_1 </term> <term>NC_RUN_2 </term> <term>NC_RUN_3 </term> <term>NC_PANEL </term> <term>NC_PANEL_1 </term> <term>NC_PANEL_2 </term> <term>NC_PANEL_3 </term> <term>NC_AL </term> <term>NC_AR </term> <term>NC_BL </term> <term>NC_BR </term> <term>NC_CL </term> <term>NC_CR </term> <term>NC_2AL </term> </listheader> <item> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> </item> </list> </para>  </SubSystem>
    </member>
    <member name="M:Okuma.CLDATAPI.DataAPI.CTailStock.AddLength(Okuma.CLDATAPI.Enumerations.TailStockLengthEnum,System.Double)">
      <summary> Sets the tailstock's length by adding the input value to the existing data at the specified tailstock's length index for current sub system. </summary>
      <example> This example shows how to use AddLength method <para>Try	</para> <para>	objTailStock.AddLength(Me.TailStockLengthCombo.SelectedValue, CDbl(Me.TailStockLengthUpd.Text))	</para> <para>	Update_TailStock()	</para> <para>Catch ae As ApplicationException	</para> <para>	doError("CTailStock", ae.Message)	</para> <para>Catch ex As Exception	</para> <para>	doError("CTailStock", ex.Message)	</para> <para>End Try	</para> </example>
      <param name="enValue">Tail Stock length index. Value of parameter comes from Okuma.CLDATAPI.Enumerations.TailStockLengthEnum.</param>
      <param name="dblValue">Tailstock's length value to be added to</param>
      <returns>None</returns>
      <DataUnit> Default unit is in mm.  Other unit can be set by calling SetDataUnit method </DataUnit>
      <exception cref="System.ApplicationException">Thrown when function fails to perform the operation at current NC condition.</exception>
      <exception cref="System.NotSupportedException">Thrown when operation/input parameters are not supported for the current system.</exception>
      <remarks> <para> The following specifications must be met in order to function: <list type="table"> <listheader> <term>Specification</term> <description>Valid/Invalid</description> </listheader> <item> <term>LT Mechanism specification NC spec [4,0]</term> <description>Invalid</description> </item> <item> <term>Sub Spindle</term> <description>Invalid</description> </item> </list> </para> </remarks>
      <Figure> PARAMETER - TAILSTOCK SPINDLE - TAILSTOCK BARRIER - L, L1, and L2 are different length of tailstock <para> <img src="Lathe.Parameter.Tailstock.jpg" /> </para> </Figure>
      <SubSystem> Please see <see href="SubSystemNoteTable.htm">Sub System Note Table</see> for more information if applicable. <para>Valid sub systems for this function (Y = Valid, N = Not valid)</para> <para> <list type="table"> <listheader> <term>NC_RUN </term> <term>NC_RUN_1 </term> <term>NC_RUN_2 </term> <term>NC_RUN_3 </term> <term>NC_PANEL </term> <term>NC_PANEL_1 </term> <term>NC_PANEL_2 </term> <term>NC_PANEL_3 </term> <term>NC_AL </term> <term>NC_AR </term> <term>NC_BL </term> <term>NC_BR </term> <term>NC_CL </term> <term>NC_CR </term> <term>NC_2AL </term> </listheader> <item> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> </item> </list> </para>  </SubSystem>
    </member>
    <member name="M:Okuma.CLDATAPI.DataAPI.CTailStock.GetDiameter(Okuma.CLDATAPI.Enumerations.TailStockDiameterEnum)">
      <summary> Gets the tailstock's diameter at the specified tailstock's diameter index for current sub system. </summary>
      <example> This example shows how to use GetDiameter method <para>Try	</para> <para>	Me.TailStockDiameter.Text = objTailStock.GetDiameter(Me.TailStockDiameterCombo.SelectedValue)	</para> <para>Catch ae As ApplicationException	</para> <para>	doError("CTailStock", ae.Message)	</para> <para>Catch ex As Exception	</para> <para>	doError("CTailStock", ex.Message)	</para> <para>End Try	</para> </example>
      <param name="enValue">Tail Stock diameter index. Value of parameter comes from Okuma.CLDATAPI.Enumerations.TailStockLengthEnum.</param>
      <returns>System.Double value </returns>
      <DataUnit> Default unit is in mm.  Other unit can be set by calling SetDataUnit method </DataUnit>
      <exception cref="System.ApplicationException">Thrown when function fails to perform the operation at current NC condition.</exception>
      <exception cref="System.NotSupportedException">Thrown when operation/input parameters are not supported for the current system.</exception>
      <remarks> <para> The following specifications must be met in order to function: <list type="table"> <listheader> <term>Specification</term> <description>Valid/Invalid</description> </listheader> <item> <term>LT Mechanism specification NC spec [4,0]</term> <description>Invalid</description> </item> <item> <term>Sub Spindle</term> <description>Invalid</description> </item> </list> </para> </remarks>
      <Figure> PARAMETER - TAILSTOCK SPINDLE - TAILSTOCK BARRIER - D, D1, D2, and D3 are different diameters of tailstock <para> <img src="Lathe.Parameter.Tailstock.jpg" /> </para> </Figure>
      <SubSystem> Please see <see href="SubSystemNoteTable.htm">Sub System Note Table</see> for more information if applicable. <para>Valid sub systems for this function (Y = Valid, N = Not valid)</para> <para> <list type="table"> <listheader> <term>NC_RUN </term> <term>NC_RUN_1 </term> <term>NC_RUN_2 </term> <term>NC_RUN_3 </term> <term>NC_PANEL </term> <term>NC_PANEL_1 </term> <term>NC_PANEL_2 </term> <term>NC_PANEL_3 </term> <term>NC_AL </term> <term>NC_AR </term> <term>NC_BL </term> <term>NC_BR </term> <term>NC_CL </term> <term>NC_CR </term> <term>NC_2AL </term> </listheader> <item> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> </item> </list> </para>  </SubSystem>
    </member>
    <member name="M:Okuma.CLDATAPI.DataAPI.CTailStock.SetDiameter(Okuma.CLDATAPI.Enumerations.TailStockDiameterEnum,System.Double)">
      <summary>Sets tailstock diameter at the specified tailstock index for current sub system. </summary>
      <example> This example shows how to use SetDiameter method <para>Try	</para> <para>	objTailStock.SetDiameter(Me.TailStockDiameterCombo.SelectedValue, CDbl(Me.TailStockDiameterUpd.Text))	</para> <para>	Update_TailStock()	</para> <para>Catch ae As ApplicationException	</para> <para>	doError("CTailStock", ae.Message)	</para> <para>Catch ex As Exception	</para> <para>	doError("CTailStock", ex.Message)	</para> <para>End Try	</para> </example>
      <param name="enValue">Tail Stock Diameter index. Value of parameter comes from Okuma.CLDATAPI.Enumerations.TailStockDiameterEnum</param>
      <param name="dblValue">Tailstock diameter value to be set</param>
      <returns>None</returns>
      <DataUnit> Default unit is in mm.  Other unit can be set by calling SetDataUnit method </DataUnit>
      <exception cref="System.ApplicationException">Thrown when function fails to perform the operation at current NC condition.</exception>
      <exception cref="System.NotSupportedException">Thrown when operation/input parameters are not supported for the current system.</exception>
      <remarks> <para> The following specifications must be met in order to function: <list type="table"> <listheader> <term>Specification</term> <description>Valid/Invalid</description> </listheader> <item> <term>LT Mechanism specification NC spec [4,0]</term> <description>Invalid</description> </item> <item> <term>Sub Spindle</term> <description>Invalid</description> </item> </list> </para> </remarks>
      <Figure> PARAMETER - TAILSTOCK SPINDLE - TAILSTOCK BARRIER - D, D1, D2, and D3 are different diameters of tailstock <para> <img src="Lathe.Parameter.Tailstock.jpg" /> </para> </Figure>
      <SubSystem> Please see <see href="SubSystemNoteTable.htm">Sub System Note Table</see> for more information if applicable. <para>Valid sub systems for this function (Y = Valid, N = Not valid)</para> <para> <list type="table"> <listheader> <term>NC_RUN </term> <term>NC_RUN_1 </term> <term>NC_RUN_2 </term> <term>NC_RUN_3 </term> <term>NC_PANEL </term> <term>NC_PANEL_1 </term> <term>NC_PANEL_2 </term> <term>NC_PANEL_3 </term> <term>NC_AL </term> <term>NC_AR </term> <term>NC_BL </term> <term>NC_BR </term> <term>NC_CL </term> <term>NC_CR </term> <term>NC_2AL </term> </listheader> <item> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> </item> </list> </para>  </SubSystem>
    </member>
    <member name="M:Okuma.CLDATAPI.DataAPI.CTailStock.AddDiameter(Okuma.CLDATAPI.Enumerations.TailStockDiameterEnum,System.Double)">
      <summary> Sets the tailstock's diameter by adding the input value to the existing data at the specified tailstock's diameter index for current sub system. </summary>
      <example> This example shows how to use AddDiameter method <para>Try	</para> <para>	objTailStock.AddDiameter(Me.TailStockDiameterCombo.SelectedValue, CDbl(Me.TailStockDiameterUpd.Text))	</para> <para>	Update_TailStock()	</para> <para>Catch ae As ApplicationException	</para> <para>	doError("CTailStock", ae.Message)	</para> <para>Catch ex As Exception	</para> <para>	doError("CTailStock", ex.Message)	</para> <para>End Try	</para> </example>
      <param name="enValue">Tail Stock Diameter index. Value of parameter comes from Okuma.CLDATAPI.Enumerations.TailStockDiameterEnum</param>
      <param name="dblValue">Diameter value to be added to</param>
      <returns>None</returns>
      <DataUnit> Default unit is in mm.  Other unit can be set by calling SetDataUnit method </DataUnit>
      <exception cref="System.ApplicationException">Thrown when function fails to perform the operation at current NC condition.</exception>
      <exception cref="System.NotSupportedException">Thrown when operation/input parameters are not supported for the current system.</exception>
      <remarks> <para> The following specifications must be met in order to function: <list type="table"> <listheader> <term>Specification</term> <description>Valid/Invalid</description> </listheader> <item> <term>LT Mechanism specification NC spec [4,0]</term> <description>Invalid</description> </item> <item> <term>Sub Spindle</term> <description>Invalid</description> </item> </list> </para> </remarks>
      <Figure> PARAMETER - TAILSTOCK SPINDLE - TAILSTOCK BARRIER - D, D1, D2, and D3 are different diameters of tailstock <para> <img src="Lathe.Parameter.Tailstock.jpg" /> </para> </Figure>
      <SubSystem> Please see <see href="SubSystemNoteTable.htm">Sub System Note Table</see> for more information if applicable. <para>Valid sub systems for this function (Y = Valid, N = Not valid)</para> <para> <list type="table"> <listheader> <term>NC_RUN </term> <term>NC_RUN_1 </term> <term>NC_RUN_2 </term> <term>NC_RUN_3 </term> <term>NC_PANEL </term> <term>NC_PANEL_1 </term> <term>NC_PANEL_2 </term> <term>NC_PANEL_3 </term> <term>NC_AL </term> <term>NC_AR </term> <term>NC_BL </term> <term>NC_BR </term> <term>NC_CL </term> <term>NC_CR </term> <term>NC_2AL </term> </listheader> <item> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> </item> </list> </para>  </SubSystem>
    </member>
    <member name="M:Okuma.CLDATAPI.DataAPI.CTailStock.GetTailstockSpindlePosition">
      <summary> Gets the tailstock spindle position for current sub system. </summary>
      <example> This example shows how to use GetTailstockSpindlePosition method <para>Try	</para> <para>	Me.TailStockDiameter.Text = objTailStock.GetDiameter(Me.TailStockDiameterCombo.SelectedValue)	</para> <para>	Me.TailStockLength.Text = objTailStock.GetLength(Me.TailStockLengthCombo.SelectedValue)	</para> <para>	objTailStock.SetSubSystem(cmb_Chuck_SubSys.SelectedItem)	</para> <para>	objTailStock.SetDataUnit(cmb_Chuck_Dataunit.SelectedItem)	</para> <para>	lbl_axis_position.Text = objTailStock.GetTailstockSpindlePosition()	</para> <para>Catch ae As ApplicationException	</para> <para>	doError("CTailStock", ae.Message)	</para> <para>Catch ex As Exception	</para> <para>	doError("CTailStock", ex.Message)	</para> <para>End Try	</para> </example>
      <returns>System.Double value </returns>
      <DataUnit> Default unit is in mm.  Other unit can be set by calling SetDataUnit method </DataUnit>
      <exception cref="System.ApplicationException">Thrown when function fails to perform the operation at current NC condition.</exception>
      <exception cref="System.NotSupportedException">Thrown when operation/input parameters are not supported for the current system.</exception>
      <remarks> <para> The following specifications must be met in order to function: <list type="table"> <listheader> <term>Specification</term> <description>Valid/Invalid</description> </listheader> <item> <term>LT Mechanism specification NC spec [4,0]</term> <description>Invalid</description> </item> <item> <term>Sub Spindle</term> <description>Invalid</description> </item> </list> </para> </remarks>
      <Figure> PARAMETER - TAILSTOCK SPINDLE - TAILSTOCK BARRIER - WR is  tailstock spindle position (end face of material in Z-axis direction). <para> <img src="Lathe.Parameter.Tailstock.jpg" /> </para> </Figure>
      <SubSystem> Please see <see href="SubSystemNoteTable.htm">Sub System Note Table</see> for more information if applicable. <para>Valid sub systems for this function (Y = Valid, N = Not valid)</para> <para> <list type="table"> <listheader> <term>NC_RUN </term> <term>NC_RUN_1 </term> <term>NC_RUN_2 </term> <term>NC_RUN_3 </term> <term>NC_PANEL </term> <term>NC_PANEL_1 </term> <term>NC_PANEL_2 </term> <term>NC_PANEL_3 </term> <term>NC_AL </term> <term>NC_AR </term> <term>NC_BL </term> <term>NC_BR </term> <term>NC_CL </term> <term>NC_CR </term> <term>NC_2AL </term> </listheader> <item> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> </item> </list> </para>  </SubSystem>
    </member>
    <member name="M:Okuma.CLDATAPI.DataAPI.CTailStock.SetTailstockSpindlePosition(System.Double)">
      <summary>Sets tailstock spindle position, WR, by adding the input value to the existing data for the current sub system. </summary>
      <example> This example shows how to use SetTailstockSpindlePosition method <para>Dim objTailStock As Okuma.CLDATAPI.DataAPI.CTailStock	</para> <para>Try	</para> <para>	objTailStock = New Okuma.CLDATAPI.DataAPI.CTailStock	</para> <para>	objTailStock.SetTailstockSpindlePosition(lbl_axis_position.Text)	</para> <para>	Update_TailStock()	</para> <para>Catch ex As Exception	</para> <para>	doError("CTailStock", ex.Message)	</para> <para>End Try	</para> </example>
      <param name="dblValue">Tailstock spindle position value to be added to</param>
      <returns>None</returns>
      <DataUnit> Default unit is in mm.  Other unit can be set by calling SetDataUnit method </DataUnit>
      <exception cref="System.ApplicationException">Thrown when function fails to perform the operation at current NC condition.</exception>
      <exception cref="System.NotSupportedException">Thrown when operation/input parameters are not supported for the current system.</exception>
      <remarks> <para> The following specifications must be met in order to function: <list type="table"> <listheader> <term>Specification</term> <description>Valid/Invalid</description> </listheader> <item> <term>LT Mechanism specification NC spec [4,0]</term> <description>Invalid</description> </item> <item> <term>Sub Spindle</term> <description>Invalid</description> </item> </list> </para> </remarks>
      <Figure> PARAMETER - TAILSTOCK SPINDLE - TAILSTOCK BARRIER - WR is  tailstock spindle position (end face of material in Z-axis direction). <para> <img src="Lathe.Parameter.Tailstock.jpg" /> </para> </Figure>
      <SubSystem> Please see <see href="SubSystemNoteTable.htm">Sub System Note Table</see> for more information if applicable. <para>Valid sub systems for this function (Y = Valid, N = Not valid)</para> <para> <list type="table"> <listheader> <term>NC_RUN </term> <term>NC_RUN_1 </term> <term>NC_RUN_2 </term> <term>NC_RUN_3 </term> <term>NC_PANEL </term> <term>NC_PANEL_1 </term> <term>NC_PANEL_2 </term> <term>NC_PANEL_3 </term> <term>NC_AL </term> <term>NC_AR </term> <term>NC_BL </term> <term>NC_BR </term> <term>NC_CL </term> <term>NC_CR </term> <term>NC_2AL </term> </listheader> <item> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> </item> </list> </para>  </SubSystem>
    </member>
    <member name="M:Okuma.CLDATAPI.DataAPI.CTailStock.AddTailstockSpindlePosition(System.Double)">
      <summary>Sets tailstock spindle position, WR, by adding the input value to the existing data for the current sub system. </summary>
      <example> This example shows how to use AddTailstockSpindlePosition method <para>Dim objTailStock As Okuma.CLDATAPI.DataAPI.CTailStock	</para> <para>Try	</para> <para>	objTailStock = New Okuma.CLDATAPI.DataAPI.CTailStock	</para> <para>	objTailStock.AddTailstockSpindlePosition(lbl_axis_position.Text)	</para> <para>	Update_TailStock()	</para> <para>Catch ex As Exception	</para> <para>	doError("CTailStock", ex.Message)	</para> <para>End Try	</para> </example>
      <param name="dblValue">Tailstock spindle position value to be added to</param>
      <returns>None</returns>
      <DataUnit> Default unit is in mm.  Other unit can be set by calling SetDataUnit method </DataUnit>
      <exception cref="System.ApplicationException">Thrown when function fails to perform the operation at current NC condition.</exception>
      <exception cref="System.NotSupportedException">Thrown when operation/input parameters are not supported for the current system.</exception>
      <remarks> <para> The following specifications must be met in order to function: <list type="table"> <listheader> <term>Specification</term> <description>Valid/Invalid</description> </listheader> <item> <term>LT Mechanism specification NC spec [4,0]</term> <description>Invalid</description> </item> <item> <term>Sub Spindle</term> <description>Invalid</description> </item> </list> </para> </remarks>
      <Figure> PARAMETER - TAILSTOCK SPINDLE - TAILSTOCK BARRIER - WR is  tailstock spindle position (end face of material in Z-axis direction). <para> <img src="Lathe.Parameter.Tailstock.jpg" /> </para> </Figure>
      <SubSystem> Please see <see href="SubSystemNoteTable.htm">Sub System Note Table</see> for more information if applicable. <para>Valid sub systems for this function (Y = Valid, N = Not valid)</para> <para> <list type="table"> <listheader> <term>NC_RUN </term> <term>NC_RUN_1 </term> <term>NC_RUN_2 </term> <term>NC_RUN_3 </term> <term>NC_PANEL </term> <term>NC_PANEL_1 </term> <term>NC_PANEL_2 </term> <term>NC_PANEL_3 </term> <term>NC_AL </term> <term>NC_AR </term> <term>NC_BL </term> <term>NC_BR </term> <term>NC_CL </term> <term>NC_CR </term> <term>NC_2AL </term> </listheader> <item> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> </item> </list> </para>  </SubSystem>
    </member>
    <member name="M:Okuma.CLDATAPI.DataAPI.CTailStock.CalTailstockSpindlePosition(System.Double)">
      <summary> Determines the distance, WR, from tailstock end face to program zero based on the calculation made for the input data and actual position. </summary>
      <example> This example shows how to uses CalTailstockSpindlePosition method <para>Dim objTailStock As Okuma.CLDATAPI.DataAPI.CTailStock	</para> <para>Try	</para> <para>	objTailStock = New Okuma.CLDATAPI.DataAPI.CTailStock	</para> <para>	objTailStock.CalTailstockSpindlePosition(lbl_axis_position.Text)	</para> <para>	Update_TailStock()	</para> <para>Catch ex As Exception	</para> <para>	doError("CTailStock", ex.Message)	</para> <para>End Try	</para> </example>
      <param name="dblValue">Input value to be calculated from</param>
      <returns>None</returns>
      <DataUnit> Default unit is in mm.  Other unit can be set by calling SetDataUnit method </DataUnit>
      <exception cref="System.ApplicationException">Thrown when function fails to perform the operation at current NC condition.</exception>
      <exception cref="System.NotSupportedException">Thrown when operation/input parameters are not supported for the current system.</exception>
      <remarks> <para> The following specifications must be met in order to function: <list type="table"> <listheader> <term>Specification</term> <description>Valid/Invalid</description> </listheader> <item> <term>LT Mechanism specification NC spec [4,0]</term> <description>Invalid</description> </item> <item> <term>Sub Spindle</term> <description>Invalid</description> </item> </list> </para> </remarks>
      <Figure> PARAMETER - TAILSTOCK SPINDLE - TAILSTOCK BARRIER - WR is  tailstock spindle position (end face of material in Z-axis direction). <para> <img src="Lathe.Parameter.Tailstock.jpg" /> </para> </Figure>
      <SubSystem> Please see <see href="SubSystemNoteTable.htm">Sub System Note Table</see> for more information if applicable. <para>Valid sub systems for this function (Y = Valid, N = Not valid)</para> <para> <list type="table"> <listheader> <term>NC_RUN </term> <term>NC_RUN_1 </term> <term>NC_RUN_2 </term> <term>NC_RUN_3 </term> <term>NC_PANEL </term> <term>NC_PANEL_1 </term> <term>NC_PANEL_2 </term> <term>NC_PANEL_3 </term> <term>NC_AL </term> <term>NC_AR </term> <term>NC_BL </term> <term>NC_BR </term> <term>NC_CL </term> <term>NC_CR </term> <term>NC_2AL </term> </listheader> <item> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> </item> </list> </para>  </SubSystem>
    </member>
    <member name="T:Okuma.CLDATAPI.DataAPI.CTools">
      <summary> Class provides different offsets and tool life information.  </summary>
    </member>
    <member name="M:Okuma.CLDATAPI.DataAPI.CTools.#ctor(Okuma.CLDATAPI.Enumerations.SubSystemEnum)">
      <summary> Create an instance of this class given sub system.  By default, class is created with sub system = NC_AL. </summary>
      <param name="enSubSystem">Sub system</param>
    </member>
    <member name="M:Okuma.CLDATAPI.DataAPI.CTools.SetSubSystem(Okuma.CLDATAPI.Enumerations.SubSystemEnum)">
      <summary> Set current sub system for this class instance </summary>
      <example> This sample shows how to call the SetSubSystem() method. <para>	objTool.SetSubSystem(cmb_Tool2_SubSys.SelectedItem)	</para> </example>
      <param name="enSubSystem">SubSystemEnum value</param>
      <exception cref="System.ApplicationException">Thrown when function fails to perform the operation at current NC condition.</exception>
      <exception cref="System.NotSupportedException">Thrown when operation/input parameters are not supported for the current system.</exception>
    </member>
    <member name="M:Okuma.CLDATAPI.DataAPI.CTools.SetDataUnit(Okuma.CLDATAPI.Enumerations.DataUnitEnum)">
      <summary> Sets current data unit for this class instance. </summary>
      <example> This sample shows how to call the SetDataUnit() method. <para>	objTool.SetDataUnit(cmb_Tool2_DataUnit.SelectedItem)	</para> </example>
      <param name="enDataUnit">Data Unit to be set</param>
      <exception cref="System.NotSupportedException">Thrown when operation/input parameters are not supported for the current system.</exception>
      <remarks> If applicable, this setting is applied to data in this class instance only, not for NC Data Unit. For linear axis position, data unit can be either mm or inch. For circular (rotary) axis position, data unit is in degree only. For example: If NC Data unit is set to mm, and the data unit for this class instance is in inch, then position data will be converted to inch from NC position and vice versa. </remarks>
      <Figure> OPTIONAL PARAMETER - UNIT - LENGTH UNIT SYSTEM mm / inch.  This is for NC Data only. <para> <img src="ParametersScreen.DataUnit.jpg" /> </para>  </Figure>
    </member>
    <member name="M:Okuma.CLDATAPI.DataAPI.CTools.GetLifeStatus(System.Int32)">
      <summary>Gets tool life status at the specified tool number for current sub system. <para>Notes: On OSP-P300S it can only refer to registered and mounted tool and edge number # 1 if it is a multi-edges tool. In order to refer to other edges of a multi-edges tool in OSP-P300S, the function ToolLifeStatusEnum GetLifeStatus(Int32 intToolNo, ToolEdgeEnum enEdgeNo) must be used. </para> <para>Notes: On OSP-P300L, tool life status of tool number is referred to TNO. but not REG. NO. </para> </summary>
      <example> This sample shows how to call the GetLifeStatus() method. <para> Dim intToolNo as Integer </para> <para> Dim intEdgeNo as Integer </para> <para> Dim intEdges() as Integer </para> <para> Dim enValue as ToolLifeStatusEnum </para> <para> Dim objSpec as CSpec = new CSpec </para> <para> Dim objTool as CTools = new CTools </para> <para> if ( objSpec.GetControlType() = ControlTypeEnum.P300S) then</para> <para>		if ( objTools.IsMountedTool(intToolNo) then </para> <para>			enValue = objTools.GetLifeStatus(intToolNo)</para> <para>		End If</para> <para> else</para> <para>		enValue = objTools.GetLifeStatus(intToolNo)</para> <para> End If</para> </example>
      <param name="intToolNo">Tool number</param>
      <returns>An Okuma.CLDATAPI.Enumerations.ToolLifeStatusEnum value</returns>
      <exception cref="System.ApplicationException">Thrown when function fails to perform the operation at current NC condition.</exception>
      <exception cref="System.NotSupportedException">Thrown when operation/input parameters are not supported for the current system.</exception>
      <remarks> <para> The following specifications must be met in order to function on OSP-P200/P100II: <list type="table"> <listheader> <term>Specification</term> <description>Valid/Invalid</description> </listheader> <item> <term>Tool life management specification NC spec [21,3]</term> <description>Valid</description> </item> </list> </para>  <para> Compatible Chart of this function for different OSP controls: <list type="table"> <listheader> <term>OSP Control</term> <description>Compatible</description> </listheader> <item> <term>P100II</term> <description>Yes</description> </item> <item> <term>P200</term> <description>Yes</description> </item> <item> <term>P300L</term> <description>Yes</description> </item> <item> <term>P300S/TD Mode</term> <description>Yes</description> </item> <item> <term>P300S/TL Mode</term> <description>Yes</description> </item> </list> </para> </remarks>
      <Figure> <para> TOOL DATA - TOOL LIFE MANAGEMENT - A(NO. OF WORK) - LIFE <img src="Lathe.ToolData.TLM.Work.jpg" /> </para> <para> OSP-P300S - TOOL DATA SETTING - TOOL LIFE DATA -  LIFE <img src="Lathe.P300.TD.ToolLife.jpg" /> </para> <para> TOOL DATA SETTING - TURRET INFO -  LIFE <img src="Lathe.P300S.TurretInfo.jpg" /> </para> <para> OSP-P300L - TOOL LIFE MANAGEMENT - A(NO. OF WORK) - LIFE <img src="Lathe.P300L.ToolLife.jpg" /> </para> </Figure>
      <SubSystem> Please see <see href="SubSystemNoteTable.htm">Sub System Note Table</see> for more information if applicable. <para>Valid sub systems for this function (Y = Valid, N = Not valid)</para> <para> <list type="table"> <listheader> <term>NC_RUN </term> <term>NC_RUN_1 </term> <term>NC_RUN_2 </term> <term>NC_RUN_3 </term> <term>NC_PANEL </term> <term>NC_PANEL_1 </term> <term>NC_PANEL_2 </term> <term>NC_PANEL_3 </term> <term>NC_AL </term> <term>NC_AR </term> <term>NC_BL </term> <term>NC_BR </term> <term>NC_CL </term> <term>NC_CR </term> <term>NC_2AL </term> </listheader> <item> <term>Y </term> <term>Y </term> <term>Y </term> <term>N </term> <term>Y </term> <term>Y </term> <term>Y </term> <term>N </term> <term>Y </term> <term>Y </term> <term>Y </term> <term>Y </term> <term>N </term> <term>N </term> <term>Y</term> </item> </list> </para> </SubSystem>
      <SubSystem> Please see <see href="SubSystemNoteTable.htm">Sub System Note Table for OSP-P300S</see> for more information if applicable. <para>Valid sub systems for this function (Y = Valid, N = Not valid)</para> <para> <list type="table"> <listheader> <term>NC_RUN </term> <term>NC_RUN_1 </term> <term>NC_RUN_2 </term> <term>NC_RUN_3 </term> <term>NC_PANEL </term> <term>NC_PANEL_1 </term> <term>NC_PANEL_2 </term> <term>NC_PANEL_3 </term> <term>NC_AL </term> <term>NC_AR </term> <term>NC_BL </term> <term>NC_BR </term> <term>NC_CL </term> <term>NC_CR </term> <term>NC_2AL </term> </listheader> <item> <term>Y (*35)</term> <term>Y (*35)</term> <term>Y (*35)</term> <term>Y (*35)</term> <term>Y (*35)</term> <term>Y (*35)</term> <term>Y (*35)</term> <term>Y (*35)</term> <term>Y (*35)</term> <term>Y (*35)</term> <term>Y (*35)</term> <term>Y (*35)</term> <term>Y (*35)</term> <term>Y (*35)</term> <term>Y (*35)</term> </item> </list> </para>  </SubSystem>
    </member>
    <member name="M:Okuma.CLDATAPI.DataAPI.CTools.SetLifeStatus(System.Int32,Okuma.CLDATAPI.Enumerations.ToolLifeStatusEnum)">
      <summary>Sets tool life value at the specified tool number for current sub system. <para>Notes: On OSP-P300S it can only refer to registered and mounted tool and edge number # 1 if it is a multi-edges tool. In order to refer to other edges of a multi-edges tool in OSP-P300S, the function ToolLifeStatusEnum SetLifeStatus(Int32 intToolNo, ToolEdgeEnum enEdgeNo, enValue) must be used. </para> <para>Notes: On OSP-P300L, tool life status of tool number is referred to TNO. but not REG. NO. </para> </summary>
      <example> This sample shows how to call the SetLifeStatus() method. <para> Dim intToolNo as Integer </para> <para> Dim intEdgeNo as Integer </para> <para> Dim intEdges() as Integer </para> <para> Dim enValue as ToolLifeStatusEnum </para> <para> Dim objSpec as CSpec = new CSpec </para> <para> Dim objTool as CTools = new CTools </para> <para> if ( objSpec.GetControlType() = ControlTypeEnum.P300S) then</para> <para>		if ( objTools.IsMountedTool(intToolNo) then </para> <para>			objTools.SetLifeStatus(intToolNo, 1, enValue)</para> <para>		End If</para> <para> else</para> <para>		objTools.SetLifeStatus(intToolNo, enValue)</para> <para> End If</para> </example>
      <param name="intToolNo">Tool number value</param>
      <param name="enValue">Tool life status value</param>
      <exception cref="System.ApplicationException">Thrown when function fails to perform the operation at current NC condition.</exception>
      <exception cref="System.NotSupportedException">Thrown when operation/input parameters are not supported for the current system.</exception>
      <remarks> <para> The following specifications must be met in order to function: <list type="table"> <listheader> <term>Specification</term> <description>Valid/Invalid</description> </listheader> <item> <term>Tool life management specification NC spec [21,3]</term> <description>Valid</description> </item> </list> </para>  <para> Compatible Chart of this function for different OSP controls: <list type="table"> <listheader> <term>OSP Control</term> <description>Compatible</description> </listheader> <item> <term>P100II</term> <description>Yes</description> </item> <item> <term>P200</term> <description>Yes</description> </item> <item> <term>P300L</term> <description>Yes</description> </item> <item> <term>P300S/TD Mode</term> <description>Yes</description> </item> <item> <term>P300S/TL Mode</term> <description>Yes</description> </item> </list> </para> </remarks>
      <Figure> <para> TOOL DATA - TOOL LIFE MANAGEMENT - A(NO. OF WORK) - LIFE <img src="Lathe.ToolData.TLM.Work.jpg" /> </para> <para> OSP-P300S - TOOL DATA SETTING - TOOL LIFE DATA -  LIFE <img src="Lathe.P300.TD.ToolLife.jpg" /> </para> <para> TOOL DATA SETTING - TURRET INFO -  LIFE <img src="Lathe.P300S.TurretInfo.jpg" /> </para> <para> OSP-P300L - TOOL LIFE MANAGEMENT - A(NO. OF WORK) - LIFE <img src="Lathe.P300L.ToolLife.jpg" /> </para> </Figure>
      <SubSystem> Please see <see href="SubSystemNoteTable.htm">Sub System Note Table</see> for more information if applicable. <para>Valid sub systems for this function (Y = Valid, N = Not valid)</para> <para> <list type="table"> <listheader> <term>NC_RUN </term> <term>NC_RUN_1 </term> <term>NC_RUN_2 </term> <term>NC_RUN_3 </term> <term>NC_PANEL </term> <term>NC_PANEL_1 </term> <term>NC_PANEL_2 </term> <term>NC_PANEL_3 </term> <term>NC_AL </term> <term>NC_AR </term> <term>NC_BL </term> <term>NC_BR </term> <term>NC_CL </term> <term>NC_CR </term> <term>NC_2AL </term> </listheader> <item> <term>Y </term> <term>Y </term> <term>Y </term> <term>N </term> <term>Y </term> <term>Y </term> <term>Y </term> <term>N </term> <term>Y </term> <term>Y </term> <term>Y </term> <term>Y </term> <term>N </term> <term>N </term> <term>Y</term> </item> </list> </para> </SubSystem>
      <SubSystem> Please see <see href="SubSystemNoteTable.htm">Sub System Note Table for OSP-P300S</see> for more information if applicable. <para>Valid sub systems for this function (Y = Valid, N = Not valid)</para> <para> <list type="table"> <listheader> <term>NC_RUN </term> <term>NC_RUN_1 </term> <term>NC_RUN_2 </term> <term>NC_RUN_3 </term> <term>NC_PANEL </term> <term>NC_PANEL_1 </term> <term>NC_PANEL_2 </term> <term>NC_PANEL_3 </term> <term>NC_AL </term> <term>NC_AR </term> <term>NC_BL </term> <term>NC_BR </term> <term>NC_CL </term> <term>NC_CR </term> <term>NC_2AL </term> </listheader> <item> <term>Y (*35)</term> <term>Y (*35)</term> <term>Y (*35)</term> <term>Y (*35)</term> <term>Y (*35)</term> <term>Y (*35)</term> <term>Y (*35)</term> <term>Y (*35)</term> <term>Y (*35)</term> <term>Y (*35)</term> <term>Y (*35)</term> <term>Y (*35)</term> <term>Y (*35)</term> <term>Y (*35)</term> <term>Y (*35)</term> </item> </list> </para>  </SubSystem>
    </member>
    <member name="M:Okuma.CLDATAPI.DataAPI.CTools.GetGaugeStatus(System.Int32)">
      <summary>Gets tool's gauge status at the specified tool number for current sub system. <para>Notes: On OSP-P300S it can only refer to registered and mounted tool and edge number # 1 if it is a multi-edges tool. In order to refer to other edges of a multi-edges tool in OSP-P300S, the function ToolLifeStatusEnum GetGaugeStatus(Int32 intToolNo, ToolEdgeEnum enEdgeNo) must be used. </para> <para>Notes: On OSP-P300L, tool gauge status of tool number is referred to TNO. but not REG. NO. </para> </summary>
      <example> This sample shows how to call the GetGaugeStatus() method. <para> Dim intToolNo as Integer </para> <para> Dim intEdgeNo as Integer </para> <para> Dim intEdges() as Integer </para> <para> Dim enValue as ToolGaugeStatusEnum </para> <para> Dim objSpec as CSpec = new CSpec </para> <para> Dim objTool as CTools = new CTools </para> <para> if ( objSpec.GetControlType() = ControlTypeEnum.P300S) then</para> <para>		if ( objTools.IsMountedTool(intToolNo) then </para> <para>			enValue = objTools.GetGaugeStatus(intToolNo)</para> <para>		End If</para> <para> else</para> <para>		enValue = objTools.GetGaugeStatus(intToolNo)</para> <para> End If</para> </example>
      <param name="intToolNo">tool number</param>
      <returns>An Okuma.CLDATAPI.Enumerations.ToolGaugeStatusEnum value</returns>
      <exception cref="System.ApplicationException">Thrown when function fails to perform the operation at current NC condition.</exception>
      <exception cref="System.NotSupportedException">Thrown when operation/input parameters are not supported for the current system.</exception>
      <remarks> <para> The following specifications must be met in order to function: <list type="table"> <listheader> <term>Specification</term> <description>Valid/Invalid</description> </listheader> <item> <term>Tool life management specification NC spec [21,3]</term> <description>Valid</description> </item> </list> </para>  <para> Compatible Chart of this function for different OSP controls: <list type="table"> <listheader> <term>OSP Control</term> <description>Compatible</description> </listheader> <item> <term>P100II</term> <description>Yes</description> </item> <item> <term>P200</term> <description>Yes</description> </item> <item> <term>P300L</term> <description>Yes</description> </item> <item> <term>P300S/TD Mode</term> <description>Yes</description> </item> <item> <term>P300S/TL Mode</term> <description>Yes</description> </item> </list> </para> </remarks>
      <Figure>TOOL DATA - TOOL LIFE MANAGEMENT - A(NO. OF WORK) - GAUGE <para> <img src="Lathe.ToolData.TLM.Work.jpg" /> </para> <para> OSP-P300S - TOOL DATA SETTING - TOOL LIFE DATA -  GAUGE <img src="Lathe.P300.TD.ToolLife.jpg" /> </para> <para> TOOL DATA SETTING - TURRET INFO -  GAUGE <img src="Lathe.P300S.TurretInfo.jpg" /> </para> <para> OSP-P300L - TOOL LIFE MANAGEMENT - A(NO. OF WORK) - GAUGE <img src="Lathe.P300L.ToolLife.jpg" /> </para> </Figure>
      <SubSystem> Please see <see href="SubSystemNoteTable.htm">Sub System Note Table</see> for more information if applicable. <para>Valid sub systems for this function (Y = Valid, N = Not valid)</para> <para> <list type="table"> <listheader> <term>NC_RUN </term> <term>NC_RUN_1 </term> <term>NC_RUN_2 </term> <term>NC_RUN_3 </term> <term>NC_PANEL </term> <term>NC_PANEL_1 </term> <term>NC_PANEL_2 </term> <term>NC_PANEL_3 </term> <term>NC_AL </term> <term>NC_AR </term> <term>NC_BL </term> <term>NC_BR </term> <term>NC_CL </term> <term>NC_CR </term> <term>NC_2AL </term> </listheader> <item> <term>Y (*15)</term> <term>Y</term> <term>Y (*16)</term> <term>Y (*4)</term> <term>Y (*15)</term> <term>Y</term> <term>Y (*16)</term> <term>Y (*4)</term> <term>Y</term> <term>Y</term> <term>Y (*16)</term> <term>Y (*16)</term> <term>Y (*4)</term> <term>Y (*4)</term> <term>Y </term> </item> </list> </para> </SubSystem>
      <SubSystem> Please see <see href="SubSystemNoteTable.htm">Sub System Note Table for OSP-P300S</see> for more information if applicable. <para>Valid sub systems for this function (Y = Valid, N = Not valid)</para> <para> <list type="table"> <listheader> <term>NC_RUN </term> <term>NC_RUN_1 </term> <term>NC_RUN_2 </term> <term>NC_RUN_3 </term> <term>NC_PANEL </term> <term>NC_PANEL_1 </term> <term>NC_PANEL_2 </term> <term>NC_PANEL_3 </term> <term>NC_AL </term> <term>NC_AR </term> <term>NC_BL </term> <term>NC_BR </term> <term>NC_CL </term> <term>NC_CR </term> <term>NC_2AL </term> </listheader> <item> <term>Y (*35)</term> <term>Y (*35)</term> <term>Y (*35)</term> <term>Y (*35)</term> <term>Y (*35)</term> <term>Y (*35)</term> <term>Y (*35)</term> <term>Y (*35)</term> <term>Y (*35)</term> <term>Y (*35)</term> <term>Y (*35)</term> <term>Y (*35)</term> <term>Y (*35)</term> <term>Y (*35)</term> <term>Y (*35)</term> </item> </list> </para>  </SubSystem>
    </member>
    <member name="M:Okuma.CLDATAPI.DataAPI.CTools.SetGaugeStatus(System.Int32,Okuma.CLDATAPI.Enumerations.ToolGaugeStatusEnum)">
      <overloads> This function has these overload methods for setting tool life gauging status.</overloads>
      <summary>Sets tool life gauging status at the specified tool number for current sub system. <para>Notes: On OSP-P300S it can only refer to registered and mounted tool and edge number # 1 if it is a multi-edges tool. In order to refer to other edges of a multi-edges tool in OSP-P300S, the function ToolLifeStatusEnum SetGaugeStatus(Int32 intToolNo, ToolEdgeEnum enEdgeNo, enValue) must be used. </para> <para>Notes: On OSP-P300L, tool gauging status of tool number is referred to TNO. but not REG. NO. </para> </summary>
      <example> This sample shows how to call the SetGaugeStatus() method. <para> Dim intToolNo as Integer </para> <para> Dim intEdgeNo as Integer </para> <para> Dim intEdges() as Integer </para> <para> Dim enValue as ToolGaugeStatusEnum </para> <para> Dim objSpec as CSpec = new CSpec </para> <para> Dim objTool as CTools = new CTools </para> <para> if ( objSpec.GetControlType() = ControlTypeEnum.P300S) then</para> <para>		if ( objTools.IsMountedTool(intToolNo) then </para> <para>			objTools.SetGaugeStatus(intToolNo, 1, enValue)</para> <para>		End If</para> <para> else</para> <para>		objTools.SetGaugeStatus(intToolNo, enValue)</para> <para> End If</para> </example>
      <param name="intToolNo">Tool number value</param>
      <param name="enValue">Gauging status value</param>
      <exception cref="System.ApplicationException">Thrown when function fails to perform the operation at current NC condition.</exception>
      <exception cref="System.NotSupportedException">Thrown when operation/input parameters are not supported for the current system.</exception>
      <remarks> <para> The following specifications must be met in order to function: <list type="table"> <listheader> <term>Specification</term> <description>Valid/Invalid</description> </listheader> <item> <term>Tool life management specification NC spec [21,3]</term> <description>Valid</description> </item> </list> </para> </remarks>
      <Figure>TOOL DATA - TOOL LIFE MANAGEMENT - A(NO. OF WORK) - GAUGE <para> <img src="Lathe.ToolData.TLM.Work.jpg" /> </para> <para> OSP-P300S - TOOL DATA SETTING - TOOL LIFE DATA -  GAUGE <img src="Lathe.P300.TD.ToolLife.jpg" /> </para> <para> TOOL DATA SETTING - TURRET INFO - GAUGE <img src="Lathe.P300S.TurretInfo.jpg" /> </para> <para> TOOL DATA SETTING - TURRET INFO -  GAUGE <img src="Lathe.P300S.TurretInfo.jpg" /> </para> <para> OSP-P300L - TOOL LIFE MANAGEMENT - A(NO. OF WORK) - GAUGE <img src="Lathe.P300L.ToolLife.jpg" /> </para> </Figure>
      <SubSystem> Please see <see href="SubSystemNoteTable.htm">Sub System Note Table</see> for more information if applicable. <para>Valid sub systems for this function (Y = Valid, N = Not valid)</para> <para> <list type="table"> <listheader> <term>NC_RUN </term> <term>NC_RUN_1 </term> <term>NC_RUN_2 </term> <term>NC_RUN_3 </term> <term>NC_PANEL </term> <term>NC_PANEL_1 </term> <term>NC_PANEL_2 </term> <term>NC_PANEL_3 </term> <term>NC_AL </term> <term>NC_AR </term> <term>NC_BL </term> <term>NC_BR </term> <term>NC_CL </term> <term>NC_CR </term> <term>NC_2AL </term> </listheader> <item> <term>Y (*15)</term> <term>Y</term> <term>Y (*16)</term> <term>Y (*4)</term> <term>Y (*15)</term> <term>Y</term> <term>Y (*16)</term> <term>Y (*4)</term> <term>Y</term> <term>Y</term> <term>Y (*16)</term> <term>Y (*16)</term> <term>Y (*4)</term> <term>Y (*4)</term> <term>Y </term> </item> </list> </para> </SubSystem>
      <SubSystem> Please see <see href="SubSystemNoteTable.htm">Sub System Note Table for OSP-P300S</see> for more information if applicable. <para>Valid sub systems for this function (Y = Valid, N = Not valid)</para> <para> <list type="table"> <listheader> <term>NC_RUN </term> <term>NC_RUN_1 </term> <term>NC_RUN_2 </term> <term>NC_RUN_3 </term> <term>NC_PANEL </term> <term>NC_PANEL_1 </term> <term>NC_PANEL_2 </term> <term>NC_PANEL_3 </term> <term>NC_AL </term> <term>NC_AR </term> <term>NC_BL </term> <term>NC_BR </term> <term>NC_CL </term> <term>NC_CR </term> <term>NC_2AL </term> </listheader> <item> <term>Y (*35)</term> <term>Y (*35)</term> <term>Y (*35)</term> <term>Y (*35)</term> <term>Y (*35)</term> <term>Y (*35)</term> <term>Y (*35)</term> <term>Y (*35)</term> <term>Y (*35)</term> <term>Y (*35)</term> <term>Y (*35)</term> <term>Y (*35)</term> <term>Y (*35)</term> <term>Y (*35)</term> <term>Y (*35)</term> </item> </list> </para>  </SubSystem>
    </member>
    <member name="M:Okuma.CLDATAPI.DataAPI.CTools.GetCurrentToolNumber">
      <summary>Gets current tool number in use for current sub system. <para> For OSP-P300L: The current tool number will be the tool number registered with a turret station number.</para> <para> For OSP-P300S with 8 Digits Tool ID spec: It is not compatible</para> </summary>
      <example> This sample shows how to call the GetCurrentToolNumber() method. <para>	Me.tulCurrentToolNumber.Text = objTool.GetCurrentToolNumber	</para> </example>
      <returns>A System.Int32 value.  It returns 0 if there is no active tool</returns>
      <exception cref="System.ApplicationException">Thrown when function fails to perform the operation at current NC condition.</exception>
      <exception cref="System.NotSupportedException">Thrown when operation/input parameters are not supported for the current system.</exception>
      <remarks> <para> Compatible Chart of this function for different OSP controls: <list type="table"> <listheader> <term>OSP Control</term> <description>Compatible</description> </listheader> <item> <term>P100II</term> <description>Yes</description> </item> <item> <term>P200</term> <description>Yes</description> </item> <item> <term>P300L</term> <description>Yes</description> </item> <item> <term>P300S/TD Mode</term> <description>Yes</description> </item> <item> <term>P300S/TL Mode</term> <description>Yes</description> </item> </list> </para> </remarks>
      <Figure> TOOL DATA - TOOL OFFSET/NOSE R COMPENSATION - TOOL NO. 0 <para> Current tool number is 0. <img src="Lathe.Multi.ToolData.ToolOffsetNoseR.jpg" /> </para> </Figure>
      <Figure> <para> OSP-P300L - MANAGE INFORMATION PROCESSING TOOLS - TURRET INFO - CURT. REG NO. <img src="Lathe.P300L.TurretInfo.jpg" /> </para> </Figure>
      <SubSystem> Please see <see href="SubSystemNoteTable.htm">Sub System Note Table</see> for more information if applicable. <para>Valid sub systems for this function (Y = Valid, N = Not valid)</para> <para> <list type="table"> <listheader> <term>NC_RUN </term> <term>NC_RUN_1 </term> <term>NC_RUN_2 </term> <term>NC_RUN_3 </term> <term>NC_PANEL </term> <term>NC_PANEL_1 </term> <term>NC_PANEL_2 </term> <term>NC_PANEL_3 </term> <term>NC_AL </term> <term>NC_AR </term> <term>NC_BL </term> <term>NC_BR </term> <term>NC_CL </term> <term>NC_CR </term> <term>NC_2AL </term> </listheader> <item> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> </item> </list> </para> </SubSystem>
      <SubSystem> Please see <see href="SubSystemNoteTable.htm">Sub System Note Table for OSP-P300</see> for more information if applicable. <para>Valid sub systems for this function (Y = Valid, N = Not valid)</para> <para>Using Subsystem Note *35 on OSP-P300S</para> <para>Using Subsystem Note *43 on OSP-P300L</para> <para> <list type="table"> <listheader> <term>NC_RUN </term> <term>NC_RUN_1 </term> <term>NC_RUN_2 </term> <term>NC_RUN_3 </term> <term>NC_PANEL </term> <term>NC_PANEL_1 </term> <term>NC_PANEL_2 </term> <term>NC_PANEL_3 </term> <term>NC_AL </term> <term>NC_AR </term> <term>NC_BL </term> <term>NC_BR </term> <term>NC_CL </term> <term>NC_CR </term> <term>NC_2AL </term> </listheader> <item> <term>Y (*X)</term> <term>Y (*X)</term> <term>Y (*X)</term> <term>Y (*X)</term> <term>Y (*X)</term> <term>Y (*X)</term> <term>Y (*X)</term> <term>Y (*X)</term> <term>Y (*X)</term> <term>Y (*X)</term> <term>Y (*X)</term> <term>Y (*X)</term> <term>Y (*X)</term> <term>Y (*X)</term> <term>Y (*X)</term> </item> </list> </para>  </SubSystem>
    </member>
    <member name="M:Okuma.CLDATAPI.DataAPI.CTools.GetToolKind(System.Int32)">
      <summary>Get tool kind given a registered tool number for current sub system. </summary>
      <example> This sample shows how to call the GetToolKind() method. <para>		Dim intToolNo As Integer	</para> <para>		Dim enValue As ToolKind2Enum	</para> <para>	    enValue = objTool.GetToolKind(intToolNo)	</para> </example>
      <param name="intToolNo">Tool Number</param>
      <returns>A ToolKind2Enum value represents took kind </returns>
      <exception cref="System.ApplicationException">Thrown when function fails to perform the operation at current NC condition.</exception>
      <exception cref="System.NotSupportedException">Thrown when operation/input parameters are not supported for the current system.</exception>
      <Figure> <para>For OSP-P300 S:</para> <para> TOOL DATA SETTING - MAGAZINE INFO -  KIND <img src="Lathe.P300.TD.ToolDataSetting.ATc.jpg" /> </para> <para>For OSP-P300 L:</para> <para> TOOL DATA - MANAGE INFORMATION PROCESSING TOOLS - TOOL EDIT -  KIND <img src="Lathe.P300L.ToolData.ToolEdit.jpg" /> </para> </Figure>
      <SubSystem> Please see <see href="SubSystemNoteTable.htm">Sub System Note Table</see> for more information if applicable. <para>Valid sub systems for this function (Y = Valid, N = Not valid)</para> <para> <list type="table"> <listheader> <term>NC_RUN </term> <term>NC_RUN_1 </term> <term>NC_RUN_2 </term> <term>NC_RUN_3 </term> <term>NC_PANEL </term> <term>NC_PANEL_1 </term> <term>NC_PANEL_2 </term> <term>NC_PANEL_3 </term> <term>NC_AL </term> <term>NC_AR </term> <term>NC_BL </term> <term>NC_BR </term> <term>NC_CL </term> <term>NC_CR </term> <term>NC_2AL </term> </listheader> <item> <term>Y (*35)</term> <term>Y (*35)</term> <term>Y (*35)</term> <term>Y (*35)</term> <term>Y (*35)</term> <term>Y (*35)</term> <term>Y (*35)</term> <term>Y (*35)</term> <term>Y (*35)</term> <term>Y (*35)</term> <term>Y (*35)</term> <term>Y (*35)</term> <term>Y (*35)</term> <term>Y (*35)</term> <term>Y (*35)</term> </item> </list> </para> </SubSystem>
      <remarks>  <para> Compatible Chart of this function for different OSP controls: <list type="table"> <listheader> <term>OSP Control</term> <description>Compatible</description> </listheader> <item> <term>P100II</term> <description>No</description> </item> <item> <term>P200</term> <description>No</description> </item> <item> <term>P300L</term> <description> <para> Yes </para> </description> </item> <item> <term>P300S/TD Mode</term> <description> <para> Yes </para> </description> </item> <item> <term>P300S/TL Mode</term> <description> <para> Yes </para> </description> </item> </list> </para>  </remarks>
    </member>
    <member name="M:Okuma.CLDATAPI.DataAPI.CTools.IsActiveCuttingPosition(System.Int32,Okuma.CLDATAPI.Enumerations.ToolEdgeEnum,Okuma.CLDATAPI.Enumerations.ToolCuttingPositionEnum)">
      <summary>For OSP-P300: Check if a tool cutting position is currentlty selected as active cutting position (having blue circle displayed beside PNo) given tool number, edge number, and cutting position for current sub system. </summary>
      <example> This sample shows how to call the IsActiveCuttingPosition() method. <para>		Dim intToolNo As Integer	</para> <para>		Dim enEdgeNo As EdgeNoEnum	</para> <para>		Dim enToolCuttingPosition As ToolCuttingPositionEnum	</para> <para>		Dim blnValue as Boolean	</para> <para>	    blnValue = objTool.IsActiveCuttingPosition(intToolNo, enEdgeNo, enToolCuttingPosition)	</para> </example>
      <param name="intToolNo">Registered Tool Number</param>
      <param name="enEdgeNo">Registered Tool Edge Number.  Ignored if it is non-multi edges tool</param>
      <param name="enToolCuttingPosition">Registered cutting tool position</param>
      <returns>A System.Boolean value. True if cutting position is active otherwise it returns false. </returns>
      <exception cref="System.ApplicationException">Thrown when function fails to perform the operation at current NC condition.</exception>
      <exception cref="System.NotSupportedException">Thrown when operation/input parameters are not supported for the current system.</exception>
      <remarks> <para> Compatible Chart of this function for different OSP controls: <list type="table"> <listheader> <term>OSP Control</term> <description>Compatible</description> </listheader> <item> <term>P100II</term> <description>No</description> </item> <item> <term>P200</term> <description>No</description> </item> <item> <term>P300L</term> <description> <para> Yes </para> </description> </item> <item> <term>P300S/TD Mode</term> <description> <para> Yes </para> </description> </item> <item> <term>P300S/TL Mode</term> <description> <para> Yes </para> </description> </item> </list> </para> </remarks>
      <SubSystem> Please see <see href="SubSystemNoteTable.htm">Sub System Note Table</see> for more information if applicable. <para>Valid sub systems for this function (Y = Valid, N = Not valid)</para> <para> <list type="table"> <listheader> <term>NC_RUN </term> <term>NC_RUN_1 </term> <term>NC_RUN_2 </term> <term>NC_RUN_3 </term> <term>NC_PANEL </term> <term>NC_PANEL_1 </term> <term>NC_PANEL_2 </term> <term>NC_PANEL_3 </term> <term>NC_AL </term> <term>NC_AR </term> <term>NC_BL </term> <term>NC_BR </term> <term>NC_CL </term> <term>NC_CR </term> <term>NC_2AL </term> </listheader> <item> <term>Y (*35)</term> <term>Y (*35)</term> <term>Y (*35)</term> <term>Y (*35)</term> <term>Y (*35)</term> <term>Y (*35)</term> <term>Y (*35)</term> <term>Y (*35)</term> <term>Y (*35)</term> <term>Y (*35)</term> <term>Y (*35)</term> <term>Y (*35)</term> <term>Y (*35)</term> <term>Y (*35)</term> <term>Y (*35)</term> </item> </list> </para>  </SubSystem>
    </member>
    <member name="M:Okuma.CLDATAPI.DataAPI.CTools.IsRegisteredEdge(System.Int32,Okuma.CLDATAPI.Enumerations.ToolEdgeEnum)">
      <summary>For OSP-P300: Check if a tool edge is registered with the system given tool number and edge number for current sub system. </summary>
      <example> This sample shows how to call the IsRegisteredEdge() method. <para>		Dim intToolNo As Integer	</para> <para>		Dim enEdgeNo As ToolEdgeEnum	</para> <para>		Dim blnValue as Boolean	</para> <para>	    blnValue = objTool.IsRegisteredEdge(intToolNo, enEdgeNo)	</para> </example>
      <param name="intToolNo">Tool Number</param>
      <param name="enEdgeNo">Edge Number</param>
      <returns>A System.Boolean value. True if the tool edge is registered with the system otherwise it returns false. </returns>
      <exception cref="System.ApplicationException">Thrown when function fails to perform the operation at current NC condition.</exception>
      <exception cref="System.NotSupportedException">Thrown when operation/input parameters are not supported for the current system.</exception>
      <remarks> <para> Compatible Chart of this function for different OSP controls: <list type="table"> <listheader> <term>OSP Control</term> <description>Compatible</description> </listheader> <item> <term>P100II</term> <description>No</description> </item> <item> <term>P200</term> <description>No</description> </item> <item> <term>P300L</term> <description> <para> Yes </para> </description> </item> <item> <term>P300S/TD Mode</term> <description> <para> Yes </para> </description> </item> <item> <term>P300S/TL Mode</term> <description> <para> Yes </para> </description> </item> </list> </para> </remarks>
      <SubSystem> Please see <see href="SubSystemNoteTable.htm">Sub System Note Table</see> for more information if applicable. <para>Valid sub systems for this function (Y = Valid, N = Not valid)</para> <para> <list type="table"> <listheader> <term>NC_RUN </term> <term>NC_RUN_1 </term> <term>NC_RUN_2 </term> <term>NC_RUN_3 </term> <term>NC_PANEL </term> <term>NC_PANEL_1 </term> <term>NC_PANEL_2 </term> <term>NC_PANEL_3 </term> <term>NC_AL </term> <term>NC_AR </term> <term>NC_BL </term> <term>NC_BR </term> <term>NC_CL </term> <term>NC_CR </term> <term>NC_2AL </term> </listheader> <item> <term>Y (*35)</term> <term>Y (*35)</term> <term>Y (*35)</term> <term>Y (*35)</term> <term>Y (*35)</term> <term>Y (*35)</term> <term>Y (*35)</term> <term>Y (*35)</term> <term>Y (*35)</term> <term>Y (*35)</term> <term>Y (*35)</term> <term>Y (*35)</term> <term>Y (*35)</term> <term>Y (*35)</term> <term>Y (*35)</term> </item> </list> </para>  </SubSystem>
    </member>
    <member name="M:Okuma.CLDATAPI.DataAPI.CTools.IsMultiEdgesTool(System.Int32)">
      <summary>For OSP-P300: Check if a tool is registered as Multi-Edges Tool given tool number for current sub system. </summary>
      <example> This sample shows how to call the IsMultiEdgesTool() method. <para>		Dim intToolNo As Integer	</para> <para>		Dim blnValue As Boolean	</para> <para>	    blnValue = objTool.IsMultiEdgesTool(intToolNo)	</para> </example>
      <param name="intToolNo">Tool Number</param>
      <returns>A System.Boolean value. <para>True if the registered tool is a multi-edges tool otherwise it returns false</para> </returns>
      <exception cref="System.ApplicationException">Thrown when function fails to perform the operation at current NC condition.</exception>
      <exception cref="System.NotSupportedException">Thrown when operation/input parameters are not supported for the current system.</exception>
      <Figure> <para> TOOL DATA SETTING - TOOL DATA ALL - ENo <img src="Lathe.P300.TD.ToolDataSetting.jpg" /> </para> </Figure>
      <remarks>  <para> Compatible Chart of this function for different OSP controls: <list type="table"> <listheader> <term>OSP Control</term> <description>Compatible</description> </listheader> <item> <term>P100II</term> <description>No</description> </item> <item> <term>P200</term> <description>No</description> </item> <item> <term>P300L</term> <description> <para> Yes </para> </description> </item> <item> <term>P300S/TD Mode</term> <description> <para> Yes </para> </description> </item> <item> <term>P300S/TL Mode</term> <description> <para> Yes </para> </description> </item> </list> </para> </remarks>
      <SubSystem> Please see <see href="SubSystemNoteTable.htm">Sub System Note Table</see> for more information if applicable. <para>Valid sub systems for this function (Y = Valid, N = Not valid)</para> <para> <list type="table"> <listheader> <term>NC_RUN </term> <term>NC_RUN_1 </term> <term>NC_RUN_2 </term> <term>NC_RUN_3 </term> <term>NC_PANEL </term> <term>NC_PANEL_1 </term> <term>NC_PANEL_2 </term> <term>NC_PANEL_3 </term> <term>NC_AL </term> <term>NC_AR </term> <term>NC_BL </term> <term>NC_BR </term> <term>NC_CL </term> <term>NC_CR </term> <term>NC_2AL </term> </listheader> <item> <term>Y (*35)</term> <term>Y (*35)</term> <term>Y (*35)</term> <term>Y (*35)</term> <term>Y (*35)</term> <term>Y (*35)</term> <term>Y (*35)</term> <term>Y (*35)</term> <term>Y (*35)</term> <term>Y (*35)</term> <term>Y (*35)</term> <term>Y (*35)</term> <term>Y (*35)</term> <term>Y (*35)</term> <term>Y (*35)</term> </item> </list> </para>  </SubSystem>
    </member>
    <member name="M:Okuma.CLDATAPI.DataAPI.CTools.IsMountedTool(System.Int32)">
      <summary>For OSP-P300: Check if a tool is registered and mounted on turret/ATC given tool number for current sub system. </summary>
      <example> This sample shows how to call the IsMountedTool() method. <para>		Dim intToolNo As Integer	</para> <para>		Dim blnValue as Boolean	</para> <para>	    blnValue = objTool.IsMountedTool(intToolNo)	</para> </example>
      <param name="intToolNo">Tool Number</param>
      <returns>A System.Boolean value. True if the tool is mounted otherwise it returns false. </returns>
      <exception cref="System.ApplicationException">Thrown when function fails to perform the operation at current NC condition.</exception>
      <exception cref="System.NotSupportedException">Thrown when operation/input parameters are not supported for the current system.</exception>
      <remarks> <para> Compatible Chart of this function for different OSP controls: <list type="table"> <listheader> <term>OSP Control</term> <description>Compatible</description> </listheader> <item> <term>P100II</term> <description>No</description> </item> <item> <term>P200</term> <description>No</description> </item> <item> <term>P300L</term> <description> <para> Yes </para> </description> </item> <item> <term>P300S/TD Mode</term> <description> <para> Yes </para> </description> </item> <item> <term>P300S/TL Mode</term> <description> <para> Yes </para> </description> </item> </list> </para> </remarks>
      <SubSystem> Please see <see href="SubSystemNoteTable.htm">Sub System Note Table</see> for more information if applicable. <para>Valid sub systems for this function (Y = Valid, N = Not valid)</para> <para> <list type="table"> <listheader> <term>NC_RUN </term> <term>NC_RUN_1 </term> <term>NC_RUN_2 </term> <term>NC_RUN_3 </term> <term>NC_PANEL </term> <term>NC_PANEL_1 </term> <term>NC_PANEL_2 </term> <term>NC_PANEL_3 </term> <term>NC_AL </term> <term>NC_AR </term> <term>NC_BL </term> <term>NC_BR </term> <term>NC_CL </term> <term>NC_CR </term> <term>NC_2AL </term> </listheader> <item> <term>Y (*35)</term> <term>Y (*35)</term> <term>Y (*35)</term> <term>Y (*35)</term> <term>Y (*35)</term> <term>Y (*35)</term> <term>Y (*35)</term> <term>Y (*35)</term> <term>Y (*35)</term> <term>Y (*35)</term> <term>Y (*35)</term> <term>Y (*35)</term> <term>Y (*35)</term> <term>Y (*35)</term> <term>Y (*35)</term> </item> </list> </para>  </SubSystem>
    </member>
    <member name="M:Okuma.CLDATAPI.DataAPI.CTools.IsRegisteredTool(System.Int32)">
      <summary>For OSP-P300: Check if a tool is registered with the system given tool number for current sub system. </summary>
      <example> This sample shows how to call the IsRegisteredTool() method. <para>		Dim intToolNo As Integer	</para> <para>		Dim blnValue as Boolean	</para> <para>	    blnValue = objTool.IsRegisteredTool(intToolNo)	</para> </example>
      <param name="intToolNo">Tool Number</param>
      <returns>A System.Boolean value. True if the tool is registered with the system otherwise it returns false. </returns>
      <exception cref="System.ApplicationException">Thrown when function fails to perform the operation at current NC condition.</exception>
      <exception cref="System.NotSupportedException">Thrown when operation/input parameters are not supported for the current system.</exception>
      <remarks> <para> Compatible Chart of this function for different OSP controls: <list type="table"> <listheader> <term>OSP Control</term> <description>Compatible</description> </listheader> <item> <term>P100II</term> <description>No</description> </item> <item> <term>P200</term> <description>No</description> </item> <item> <term>P300L</term> <description> <para> Yes </para> </description> </item> <item> <term>P300S/TD Mode</term> <description> <para> Yes </para> </description> </item> <item> <term>P300S/TL Mode</term> <description> <para> Yes </para> </description> </item> </list> </para> </remarks>
      <SubSystem> Please see <see href="SubSystemNoteTable.htm">Sub System Note Table</see> for more information if applicable. <para>Valid sub systems for this function (Y = Valid, N = Not valid)</para> <para> <list type="table"> <listheader> <term>NC_RUN </term> <term>NC_RUN_1 </term> <term>NC_RUN_2 </term> <term>NC_RUN_3 </term> <term>NC_PANEL </term> <term>NC_PANEL_1 </term> <term>NC_PANEL_2 </term> <term>NC_PANEL_3 </term> <term>NC_AL </term> <term>NC_AR </term> <term>NC_BL </term> <term>NC_BR </term> <term>NC_CL </term> <term>NC_CR </term> <term>NC_2AL </term> </listheader> <item> <term>Y (*35)</term> <term>Y (*35)</term> <term>Y (*35)</term> <term>Y (*35)</term> <term>Y (*35)</term> <term>Y (*35)</term> <term>Y (*35)</term> <term>Y (*35)</term> <term>Y (*35)</term> <term>Y (*35)</term> <term>Y (*35)</term> <term>Y (*35)</term> <term>Y (*35)</term> <term>Y (*35)</term> <term>Y (*35)</term> </item> </list> </para>  </SubSystem>
    </member>
    <member name="M:Okuma.CLDATAPI.DataAPI.CTools.GetRegisteredToolEdges(System.Int32)">
      <summary>For OSP-P300: Get all edges that are registered for a given tool number for current sub system. </summary>
      <example> This sample shows how to call the GetRegisteredToolEdges() method. <para>		Dim intToolNo As Integer	</para> <para>		Dim intValues As Integer()	</para> <para>	    intValues = objTool.GetRegisteredToolEdges(intToolNo)	</para> </example>
      <param name="intToolNo">Tool Number</param>
      <returns>An array System.Int32 value. <para>An empty array will be returned if tool is not existed or tool has no edge.</para> </returns>
      <exception cref="System.ApplicationException">Thrown when function fails to perform the operation at current NC condition.</exception>
      <exception cref="System.NotSupportedException">Thrown when operation/input parameters are not supported for the current system.</exception>
      <Figure> <para> TOOL DATA SETTING - TOOL DATA ALL - ENo <img src="Lathe.P300.TD.ToolDataSetting.jpg" /> </para> </Figure>
      <SubSystem> Please see <see href="SubSystemNoteTable.htm">Sub System Note Table</see> for more information if applicable. <para>Valid sub systems for this function (Y = Valid, N = Not valid)</para> <para> <list type="table"> <listheader> <term>NC_RUN </term> <term>NC_RUN_1 </term> <term>NC_RUN_2 </term> <term>NC_RUN_3 </term> <term>NC_PANEL </term> <term>NC_PANEL_1 </term> <term>NC_PANEL_2 </term> <term>NC_PANEL_3 </term> <term>NC_AL </term> <term>NC_AR </term> <term>NC_BL </term> <term>NC_BR </term> <term>NC_CL </term> <term>NC_CR </term> <term>NC_2AL </term> </listheader> <item> <term>Y (*35)</term> <term>Y (*35)</term> <term>Y (*35)</term> <term>Y (*35)</term> <term>Y (*35)</term> <term>Y (*35)</term> <term>Y (*35)</term> <term>Y (*35)</term> <term>Y (*35)</term> <term>Y (*35)</term> <term>Y (*35)</term> <term>Y (*35)</term> <term>Y (*35)</term> <term>Y (*35)</term> <term>Y (*35)</term> </item> </list> </para> </SubSystem>
      <remarks>  <para> Compatible Chart of this function for different OSP controls: <list type="table"> <listheader> <term>OSP Control</term> <description>Compatible</description> </listheader> <item> <term>P100II</term> <description>No</description> </item> <item> <term>P200</term> <description>No</description> </item> <item> <term>P300L</term> <description> <para> Yes </para> </description> </item> <item> <term>P300S/TD Mode</term> <description> <para> Yes </para> </description> </item> <item> <term>P300S/TL Mode</term> <description> <para> Yes </para> </description> </item> </list> </para>  </remarks>
    </member>
    <member name="M:Okuma.CLDATAPI.DataAPI.CTools.GetRegisteredCuttingPositions(System.Int32,Okuma.CLDATAPI.Enumerations.ToolEdgeEnum)">
      <summary> For OSP-P300: Get registered tool cutting position of a tool given tool number, and edge number for current sub system. </summary>
      <example> This sample shows how to call the GetRegisteredCuttingPositions() method. <para>		Dim intToolNo As Integer	</para> <para>		Dim enEdgeNo as ToolEdgeEnum	</para> <para>		Dim intValues() As Integer </para> <para>	    intValues = objTool.GetRegisteredCuttingPositions(intToolNo, enEdgeNo)	</para> </example>
      <param name="intToolNo">Tool Number</param>
      <param name="enEdgeNo">Edge Number. Using Edge No. 1 if tool is a non-multi edges tool.</param>
      <returns> <para>An array of System.Integer value representing registered cutting positions. </para> <para>An empty array is returned if either the tool is not a registered tool or tool has no cutting position for the specified edge.</para> <para>For OSP-P300L: </para> <para>Cutting position is 1 when tool is registered for spindle 1 </para> <para>Cutting position is 7 when tool is registered for spindle 2 </para> </returns>
      <exception cref="System.ApplicationException">Thrown when function fails to perform the operation at current NC condition.</exception>
      <exception cref="System.NotSupportedException">Thrown when operation/input parameters are not supported for the current system.</exception>
      <Figure> <para> TOOL DATA SETTING - TOOL DATA ALL - PNo <img src="Lathe.P300.TD.ToolDataSetting.jpg" /> </para> </Figure>
      <SubSystem> Please see <see href="SubSystemNoteTable.htm">Sub System Note Table</see> for more information if applicable. <para>Valid sub systems for this function (Y = Valid, N = Not valid)</para> <para> <list type="table"> <listheader> <term>NC_RUN </term> <term>NC_RUN_1 </term> <term>NC_RUN_2 </term> <term>NC_RUN_3 </term> <term>NC_PANEL </term> <term>NC_PANEL_1 </term> <term>NC_PANEL_2 </term> <term>NC_PANEL_3 </term> <term>NC_AL </term> <term>NC_AR </term> <term>NC_BL </term> <term>NC_BR </term> <term>NC_CL </term> <term>NC_CR </term> <term>NC_2AL </term> </listheader> <item> <term>Y (*35)</term> <term>Y (*35)</term> <term>Y (*35)</term> <term>Y (*35)</term> <term>Y (*35)</term> <term>Y (*35)</term> <term>Y (*35)</term> <term>Y (*35)</term> <term>Y (*35)</term> <term>Y (*35)</term> <term>Y (*35)</term> <term>Y (*35)</term> <term>Y (*35)</term> <term>Y (*35)</term> <term>Y (*35)</term> </item> </list> </para> </SubSystem>
      <remarks> <para> Compatible Chart of this function for different OSP controls: <list type="table"> <listheader> <term>OSP Control</term> <description>Compatible</description> </listheader> <item> <term>P100II</term> <description>No</description> </item> <item> <term>P200</term> <description>No</description> </item> <item> <term>P300L</term> <description> <para> Yes </para> </description> </item> <item> <term>P300S/TD Mode</term> <description> <para> Yes </para> </description> </item> <item> <term>P300S/TL Mode</term> <description> <para> Yes </para> </description> </item> </list> </para>  </remarks>
    </member>
    <member name="M:Okuma.CLDATAPI.DataAPI.CTools.GetSpindleAxisMode(System.Int32,Okuma.CLDATAPI.Enumerations.ToolEdgeEnum,Okuma.CLDATAPI.Enumerations.ToolCuttingPositionEnum)">
      <summary>For OSP-P300: Gets spindle axis mode designated given tool number, edge number, and tool cutting position for current sub system. </summary>
      <example> This sample shows how to call the GetSpindleAxisMode() method. <para>		Dim intToolNo As Integer	</para> <para>		Dim enEdgeNo As ToolEdgeEnum	</para> <para>		Dim enToolCuttingPosition  As ToolCuttingPositionEnum	</para> <para>		Dim enValue As SpindleAxisModeEnum	</para> <para>	    enValue = objTool.GetSpindleAxisMode(intToolNo, enEdgeNo, enToolCuttingPosition)	</para> </example>
      <param name="intToolNo">Tool Number</param>
      <param name="enEdgeNo">Edge Number</param>
      <param name="enToolCuttingPosition"> <para>OSP-P300S - Tool Cutting Position ranging from 1-20</para> <para>OSP-P300L - Tool Cutting Position is either 1 or 7. </para> <para>If a tool is registered for both spindle 1 and 2 then cutting position will be 1 for spindle 1 and 7 for spindle 2.</para> </param>
      <returns>A SpindleAxisModeEnum value.</returns>
      <exception cref="System.ApplicationException">Thrown when function fails to perform the operation at current NC condition.</exception>
      <exception cref="System.NotSupportedException">Thrown when operation/input parameters are not supported for the current system.</exception>
      <Figure> <para>OSP-P300S:</para> <para> TOOL DATA SETTING - TOOL DATA ALL -  CUT POS. - 1 OR 2 <img src="Lathe.P300.TD.ToolDataSetting.jpg" /> </para> <para>For OSP-P300 L:</para> <para> TOOL DATA - MANAGE INFORMATION PROCESSING TOOLS - TOOL DATA (ALL) -  SPINDLE - 1 OR 2 <img src="Lathe.P300L.ToolData.Tools.jpg" /> </para> </Figure>
      <SubSystem> Please see <see href="SubSystemNoteTable.htm">Sub System Note Table</see> for more information if applicable. <para>Valid sub systems for this function (Y = Valid, N = Not valid)</para> <para> <list type="table"> <listheader> <term>NC_RUN </term> <term>NC_RUN_1 </term> <term>NC_RUN_2 </term> <term>NC_RUN_3 </term> <term>NC_PANEL </term> <term>NC_PANEL_1 </term> <term>NC_PANEL_2 </term> <term>NC_PANEL_3 </term> <term>NC_AL </term> <term>NC_AR </term> <term>NC_BL </term> <term>NC_BR </term> <term>NC_CL </term> <term>NC_CR </term> <term>NC_2AL </term> </listheader> <item> <term>Y (*35)</term> <term>Y (*35)</term> <term>Y (*35)</term> <term>Y (*35)</term> <term>Y (*35)</term> <term>Y (*35)</term> <term>Y (*35)</term> <term>Y (*35)</term> <term>Y (*35)</term> <term>Y (*35)</term> <term>Y (*35)</term> <term>Y (*35)</term> <term>Y (*35)</term> <term>Y (*35)</term> <term>Y (*35)</term> </item> </list> </para> </SubSystem>
      <remarks>  <para> Compatible Chart of this function for different OSP controls: <list type="table"> <listheader> <term>OSP Control</term> <description>Compatible</description> </listheader> <item> <term>P100II</term> <description>No</description> </item> <item> <term>P200</term> <description>No</description> </item> <item> <term>P300L</term> <description> <para> Yes </para> </description> </item> <item> <term>P300S/TD Mode</term> <description> <para> Yes </para> </description> </item> <item> <term>P300S/TL Mode</term> <description> <para> Yes </para> </description> </item> </list> </para>  </remarks>
    </member>
    <member name="M:Okuma.CLDATAPI.DataAPI.CTools.GetToolNumberInGroup3(System.Int32)">
      <summary> Get current tool number/Edge number given group number for current sub system. <para>For OSP-P300S: Multi-edges tool registered with ATC table can only be supported in TD mode.</para> </summary>
      <example> This sample shows how to call the GetToolNumberInGroup3() method. <para> Dim strValue As String </para> <para> Dim intGroupNo As Integer </para> <para> strValue = objTool.GetToolNumberInGroup3(intGroupNo)	</para> </example>
      <param name="intGroupNo">A tool group number</param>
      <returns>A System.String value represents current tool/edge number. It can be normal tool or multi-edges tool with edge number.</returns>
      <exception cref="System.ApplicationException">Thrown when function fails to perform the operation at current NC condition.</exception>
      <exception cref="System.NotSupportedException">Thrown when operation/input parameters are not supported for the current system.</exception>
      <remarks> <para> The following specifications must be met in order to function for regular tools: <list type="table"> <listheader> <term>Specification</term> <description>Valid/Invalid</description> </listheader> <item> <term>Tool life management specification NC spec [21,3]</term> <description>Valid</description> </item> </list> </para> <para> The following specifications must be met in order to function for multi-edges tools: <list type="table"> <listheader> <term>Specification</term> <description>Valid/Invalid</description> </listheader> <item> <term>Tool life management specification NC spec [21,3]</term> <description>Valid</description> </item> <item> <term>H1 Turret specification NC spec [2,6]</term> <description>Valid</description> </item> <item> <term>L Tool index specification NC spec [3,4]</term> <description>Valid</description> </item> <item> <term>Tool Offset multi-system specification NC spec [21,6]</term> <description>Valid</description> </item> <item> <term>Multi-insert tool specification NC spec [5,3]</term> <description>Valid</description> </item> <item> <term>Tool compensation 500 sets NC spec [6,6] or Tool offset 200 sets NC spec [21,4] specification</term> <description>Valid</description> </item> </list> </para> <para> Compatible Chart of this function for different OSP controls: <list type="table"> <listheader> <term>OSP Control</term> <description>Compatible</description> </listheader> <item> <term>P100II</term> <description>No</description> </item> <item> <term>P200</term> <description>No</description> </item> <item> <term>P300L</term> <description> <para> No </para> </description> </item> <item> <term>P300S/TD Mode</term> <description> <para> Yes </para> </description> </item> <item> <term>P300S/TL Mode</term> <description> <para> Yes </para> </description> </item> </list> </para> </remarks>
      <Figure> TOOL DATA - TOOL LIFE MANAGEMENT - GROUP TABLE <para> <img src="Lathe.P300.TD.ToolLife.jpg" /> </para> </Figure>
      <SubSystem> Please see <see href="SubSystemNoteTable.htm">Sub System Note Table</see> for more information if applicable. <para>Valid sub systems for this function (Y = Valid, N = Not valid)</para> <para> <list type="table"> <listheader> <term>NC_RUN </term> <term>NC_RUN_1 </term> <term>NC_RUN_2 </term> <term>NC_RUN_3 </term> <term>NC_PANEL </term> <term>NC_PANEL_1 </term> <term>NC_PANEL_2 </term> <term>NC_PANEL_3 </term> <term>NC_AL </term> <term>NC_AR </term> <term>NC_BL </term> <term>NC_BR </term> <term>NC_CL </term> <term>NC_CR </term> <term>NC_2AL </term> </listheader> <item> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y (for non multi-edges tool only)</term> </item> </list> </para>  </SubSystem>
    </member>
    <member name="M:Okuma.CLDATAPI.DataAPI.CTools.SetToolNumberInGroup3(System.Int32,System.Int32,Okuma.CLDATAPI.Enumerations.ToolEdgeEnum)">
      <summary> Set current tool number/Edge number given group number, tool number, and edge for current sub system. <para>For OSP-P300S: Multi-edges tool registered with ATC table can only be supported in TD mode.</para> </summary>
      <example> This sample shows how to call the SetToolNumberInGroup3() method. <para> Dim intGroupNo As Integer </para> <para> Dim intToolNo As Integer </para> <para> Dim enEdgeNo As ToolEdgeEnum </para> <para> objTool.SetToolNumberInGroup3(intGroupNo, intToolNo, enEdgeNo)	</para> </example>
      <param name="intGroupNo">A tool group number</param>
      <param name="intToolNo">A mounted tool number currently assigned to this group</param>
      <param name="enEdgeNo">Edge Number. Ignored for non multi-edges tools</param>
      <exception cref="System.ApplicationException">Thrown when function fails to perform the operation at current NC condition.</exception>
      <exception cref="System.NotSupportedException">Thrown when operation/input parameters are not supported for the current system.</exception>
      <remarks> <para> The following specifications must be met in order to function for regular tools: <list type="table"> <listheader> <term>Specification</term> <description>Valid/Invalid</description> </listheader> <item> <term>Tool life management specification NC spec [21,3]</term> <description>Valid</description> </item> </list> </para> <para> The following specifications must be met in order to function for multi-edges tools: <list type="table"> <listheader> <term>Specification</term> <description>Valid/Invalid</description> </listheader> <item> <term>Tool life management specification NC spec [21,3]</term> <description>Valid</description> </item> <item> <term>H1 Turret specification NC spec [2,6]</term> <description>Valid</description> </item> <item> <term>L Tool index specification NC spec [3,4]</term> <description>Valid</description> </item> <item> <term>Tool Offset multi-system specification NC spec [21,6]</term> <description>Valid</description> </item> <item> <term>Multi-insert tool specification NC spec [5,3]</term> <description>Valid</description> </item> <item> <term>Tool compensation 500 sets NC spec [6,6] or Tool offset 200 sets NC spec [21,4] specification</term> <description>Valid</description> </item> </list> </para> <para> Compatible Chart of this function for different OSP controls: <list type="table"> <listheader> <term>OSP Control</term> <description>Compatible</description> </listheader> <item> <term>P100II</term> <description>No</description> </item> <item> <term>P200</term> <description>No</description> </item> <item> <term>P300L</term> <description> <para> No </para> </description> </item> <item> <term>P300S/TD Mode</term> <description> <para> Yes </para> </description> </item> <item> <term>P300S/TL Mode</term> <description> <para> Yes </para> </description> </item> </list> </para> </remarks>
      <Figure> TOOL DATA - TOOL LIFE MANAGEMENT - GROUP TABLE <para> <img src="Lathe.P300.TD.ToolLife.jpg" /> </para> </Figure>
      <SubSystem> Please see <see href="SubSystemNoteTable.htm">Sub System Note Table</see> for more information if applicable. <para>Valid sub systems for this function (Y = Valid, N = Not valid)</para> <para> <list type="table"> <listheader> <term>NC_RUN </term> <term>NC_RUN_1 </term> <term>NC_RUN_2 </term> <term>NC_RUN_3 </term> <term>NC_PANEL </term> <term>NC_PANEL_1 </term> <term>NC_PANEL_2 </term> <term>NC_PANEL_3 </term> <term>NC_AL </term> <term>NC_AR </term> <term>NC_BL </term> <term>NC_BR </term> <term>NC_CL </term> <term>NC_CR </term> <term>NC_2AL </term> </listheader> <item> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y (for non multi-edges tool only)</term> </item> </list> </para>  </SubSystem>
    </member>
    <member name="M:Okuma.CLDATAPI.DataAPI.CTools.GetToolProcessKind(System.Int32,Okuma.CLDATAPI.Enumerations.ToolEdgeEnum,Okuma.CLDATAPI.Enumerations.ToolCuttingPositionEnum)">
      <summary>For OSP-P300: Get tool process kind for tool number, edge number, and tool cutting position for current sub system. </summary>
      <example> This sample shows how to call the GetToolProcessKind() method. <para>		Dim intToolNo As Integer	</para> <para>		Dim enEdgeNo As ToolEdgeEnum	</para> <para>		Dim enToolCuttingPosition  As ToolCuttingPositionEnum	</para> <para>		Dim enValue  As ToolProccesKindEnum	</para> <para>	    enValue = objTool.GetToolProcessKind(intToolNo, enEdgeNo, enToolCuttingPosition)	</para> </example>
      <param name="intToolNo">Tool Number</param>
      <param name="enEdgeNo">Edge Number. Using Edge No. 1 if tool is a non-multi edges tool.</param>
      <param name="enToolCuttingPosition">Tool cutting position</param>
      <returns>A ToolProccesKindEnum value</returns>
      <exception cref="System.ApplicationException">Thrown when function fails to perform the operation at current NC condition.</exception>
      <exception cref="System.NotSupportedException">Thrown when operation/input parameters are not supported for the current system.</exception>
      <Figure> <para> TOOL DATA SETTING - TOOL DATA ALL - P-KIND <img src="Lathe.P300.TD.ToolDataSetting.jpg" /> </para> </Figure>
      <SubSystem> Please see <see href="SubSystemNoteTable.htm">Sub System Note Table</see> for more information if applicable. <para>Valid sub systems for this function (Y = Valid, N = Not valid)</para> <para> <list type="table"> <listheader> <term>NC_RUN </term> <term>NC_RUN_1 </term> <term>NC_RUN_2 </term> <term>NC_RUN_3 </term> <term>NC_PANEL </term> <term>NC_PANEL_1 </term> <term>NC_PANEL_2 </term> <term>NC_PANEL_3 </term> <term>NC_AL </term> <term>NC_AR </term> <term>NC_BL </term> <term>NC_BR </term> <term>NC_CL </term> <term>NC_CR </term> <term>NC_2AL </term> </listheader> <item> <term>Y (*35)</term> <term>Y (*35)</term> <term>Y (*35)</term> <term>Y (*35)</term> <term>Y (*35)</term> <term>Y (*35)</term> <term>Y (*35)</term> <term>Y (*35)</term> <term>Y (*35)</term> <term>Y (*35)</term> <term>Y (*35)</term> <term>Y (*35)</term> <term>Y (*35)</term> <term>Y (*35)</term> <term>Y (*35)</term> </item> </list> </para> </SubSystem>
      <remarks>  <para> Compatible Chart of this function for different OSP controls: <list type="table"> <listheader> <term>OSP Control</term> <description>Compatible</description> </listheader> <item> <term>P100II</term> <description>No</description> </item> <item> <term>P200</term> <description>No</description> </item> <item> <term>P300L</term> <description> <para> Yes </para> </description> </item> <item> <term>P300S/TD Mode</term> <description> <para> Yes </para> </description> </item> <item> <term>P300S/TL Mode</term> <description> <para> Yes </para> </description> </item> </list> </para>  </remarks>
    </member>
    <member name="M:Okuma.CLDATAPI.DataAPI.CTools.GetToolList(Okuma.CLDATAPI.Enumerations.ToolListTypeEnum)">
      <summary>Get tool list given tool list type for current sub system. </summary>
      <example> This sample shows how to call the GetToolList() method. <para> Assuming that the tools listed on NC-HMI for C turret are:</para> <para>		1,2,3,4,5,6,7,8,9,10 </para> <para>		1,2,3,4,5 are registered tools </para> <para>		6,7,8,9,10 are attached tools </para> <para>		The function will return 1,2,3,4, and 5 if tool list type is for registered tools </para> <para>		The function will return 6,7,8,9, and 10  if tool list type is for attached tools </para> <para>		The function will return 1,2,3,4,5,6,7,8,9 and 10  if tool list type is for all tools </para> <para>		Dim enToolListType As ToolListTypeEnum	</para> <para>		Dim intValues As Int32()	</para> <para>	    objTool.SetSubSystem(SubSystemEnum.NC_CL)	</para> <para>	    intValues = objTool.GetToolList(enToolListType)	</para> </example>
      <param name="enToolListType">Tool list type</param>
      <returns>An array of distinct tool number in the system based on tool list type</returns>
      <exception cref="System.ApplicationException">Thrown when function fails to perform the operation at current NC condition.</exception>
      <exception cref="System.NotSupportedException">Thrown when operation/input parameters are not supported for the current system.</exception>
      <Figure> <para>For OSP-P300 S:</para> <para> TOOL DATA SETTING - TOOL DATA (ALL) -  TNO <img src="Lathe.P300.TD.ToolDataSetting.jpg" /> </para> <para>For OSP-P300 L:</para> <para> TOOL DATA - MANAGE INFORMATION PROCESSING TOOLS - TOOL DATA (ALL) -  REG. NO. <img src="Lathe.P300L.ToolData.Tools.jpg" /> </para> </Figure>
      <SubSystem> Please see <see href="SubSystemNoteTable.htm">Sub System Note Table</see> for more information if applicable. <para>Valid sub systems for this function (Y = Valid, N = Not valid)</para> <para> <list type="table"> <listheader> <term>NC_RUN </term> <term>NC_RUN_1 </term> <term>NC_RUN_2 </term> <term>NC_RUN_3 </term> <term>NC_PANEL </term> <term>NC_PANEL_1 </term> <term>NC_PANEL_2 </term> <term>NC_PANEL_3 </term> <term>NC_AL </term> <term>NC_AR </term> <term>NC_BL </term> <term>NC_BR </term> <term>NC_CL </term> <term>NC_CR </term> <term>NC_2AL </term> </listheader> <item> <term>Y (*35)</term> <term>Y (*35)</term> <term>Y (*35)</term> <term>Y (*35)</term> <term>Y (*35)</term> <term>Y (*35)</term> <term>Y (*35)</term> <term>Y (*35)</term> <term>Y (*35)</term> <term>Y (*35)</term> <term>Y (*35)</term> <term>Y (*35)</term> <term>Y (*35)</term> <term>Y (*35)</term> <term>Y (*35)</term> </item> </list> </para> </SubSystem>
      <remarks>  <para> Compatible Chart of this function for different OSP controls: <list type="table"> <listheader> <term>OSP Control</term> <description>Compatible</description> </listheader> <item> <term>P100II</term> <description>No</description> </item> <item> <term>P200</term> <description>No</description> </item> <item> <term>P300L</term> <description> <para> Yes </para> </description> </item> <item> <term>P300S/TD Mode</term> <description> <para> Yes </para> </description> </item> <item> <term>P300S/TL Mode</term> <description> <para> Yes </para> </description> </item> </list> </para>  </remarks>
    </member>
    <member name="M:Okuma.CLDATAPI.DataAPI.CTools.GetToolType(System.Int32,Okuma.CLDATAPI.Enumerations.ToolEdgeEnum)">
      <summary> For OSP-P300: Get tool type given registered tool number for current sub system. </summary>
      <example> This sample shows how to call the GetToolType() method. <para>		Dim intToolNo As Integer	</para> <para>		Dim enEdgeNo As ToolEdgeEnum = ToolEdgeeEnum.ToolEdge_01	</para> <para>		Dim enToolType as ToolTypeEnum	</para> <para>	    enToolType = objTool.GetToolType(intToolNo, enEdgeNo)	</para> </example>
      <param name="intToolNo">Tool Number</param>
      <param name="enEdgeNo">Tool Edge Number. For non multi-edges tool, edge number 1 must be used.</param>
      <returns>A ToolTypeEnum value represents type of registered tool and edge number. </returns>
      <exception cref="System.ApplicationException">Thrown when function fails to perform the operation at current NC condition.</exception>
      <exception cref="System.NotSupportedException">Thrown when operation/input parameters are not supported for the current system.</exception>
      <Figure> <para>For P300S: TOOL DATA SETTING - TOOL DATA ALL - TOOL TYPE <img src="Lathe.P300.TD.ToolDataSetting.jpg" /> </para> <para>For P300L: TOOL DATA SETTING - TOOL DATA ALL - TOOL TYPE <img src="Lathe.P300L.ToolData.Tools.jpg" /> </para> </Figure>
      <SubSystem> Please see <see href="SubSystemNoteTable.htm">Sub System Note Table</see> for more information if applicable. <para>Valid sub systems for this function (Y = Valid, N = Not valid)</para> <para> <list type="table"> <listheader> <term>NC_RUN </term> <term>NC_RUN_1 </term> <term>NC_RUN_2 </term> <term>NC_RUN_3 </term> <term>NC_PANEL </term> <term>NC_PANEL_1 </term> <term>NC_PANEL_2 </term> <term>NC_PANEL_3 </term> <term>NC_AL </term> <term>NC_AR </term> <term>NC_BL </term> <term>NC_BR </term> <term>NC_CL </term> <term>NC_CR </term> <term>NC_2AL </term> </listheader> <item> <term>Y (*35)</term> <term>Y (*35)</term> <term>Y (*35)</term> <term>Y (*35)</term> <term>Y (*35)</term> <term>Y (*35)</term> <term>Y (*35)</term> <term>Y (*35)</term> <term>Y (*35)</term> <term>Y (*35)</term> <term>Y (*35)</term> <term>Y (*35)</term> <term>Y (*35)</term> <term>Y (*35)</term> <term>Y (*35)</term> </item> </list> </para> </SubSystem>
      <remarks>  <para> Compatible Chart of this function for different OSP controls: <list type="table"> <listheader> <term>OSP Control</term> <description>Compatible</description> </listheader> <item> <term>P100II</term> <description>No</description> </item> <item> <term>P200</term> <description>No</description> </item> <item> <term>P300L</term> <description> <para> Yes </para> </description> </item> <item> <term>P300S/TD Mode</term> <description> <para> Yes </para> </description> </item> <item> <term>P300S/TL Mode</term> <description> <para> Yes </para> </description> </item> </list> </para>  </remarks>
    </member>
    <member name="M:Okuma.CLDATAPI.DataAPI.CTools.SetToolType(System.Int32,Okuma.CLDATAPI.Enumerations.ToolEdgeEnum,Okuma.CLDATAPI.Enumerations.ToolTypeEnum)">
      <summary> For OSP-P300: Set tool type given registered tool number for current sub system. </summary>
      <example> This sample shows how to call the SetToolType() method. <para>		Dim intToolNo As Integer	</para> <para>		Dim enToolEdgeNo As ToolEdgeEnum = ToolEdgeeEnum.ToolEdge_01	</para> <para>		Dim enToolType as ToolTypeEnum = ToolTypeEnum.Single </para> <para>	    objTool.SetToolType(intToolNo, enToolEdgeNo, enToolType)	</para> </example>
      <param name="intToolNo">Tool Number</param>
      <param name="enToolEdgeNo">Tool Edge Number. For non multi-edges tool, edge number 1 must be used.</param>
      <param name="enToolType">Tool type to be set</param>
      <returns> </returns>
      <exception cref="System.ApplicationException">Thrown when function fails to perform the operation at current NC condition.</exception>
      <exception cref="System.NotSupportedException">Thrown when operation/input parameters are not supported for the current system.</exception>
      <Figure> <para>For P300S: TOOL DATA SETTING - TOOL DATA ALL - TOOL TYPE <img src="Lathe.P300.TD.ToolDataSetting.jpg" /> </para> <para>For P300L: TOOL DATA SETTING - TOOL DATA ALL - TOOL TYPE <img src="Lathe.P300L.ToolData.Tools.jpg" /> </para> </Figure>
      <SubSystem> Please see <see href="SubSystemNoteTable.htm">Sub System Note Table</see> for more information if applicable. <para>Valid sub systems for this function (Y = Valid, N = Not valid)</para> <para> <list type="table"> <listheader> <term>NC_RUN </term> <term>NC_RUN_1 </term> <term>NC_RUN_2 </term> <term>NC_RUN_3 </term> <term>NC_PANEL </term> <term>NC_PANEL_1 </term> <term>NC_PANEL_2 </term> <term>NC_PANEL_3 </term> <term>NC_AL </term> <term>NC_AR </term> <term>NC_BL </term> <term>NC_BR </term> <term>NC_CL </term> <term>NC_CR </term> <term>NC_2AL </term> </listheader> <item> <term>Y (*35)</term> <term>Y (*35)</term> <term>Y (*35)</term> <term>Y (*35)</term> <term>Y (*35)</term> <term>Y (*35)</term> <term>Y (*35)</term> <term>Y (*35)</term> <term>Y (*35)</term> <term>Y (*35)</term> <term>Y (*35)</term> <term>Y (*35)</term> <term>Y (*35)</term> <term>Y (*35)</term> <term>Y (*35)</term> </item> </list> </para> </SubSystem>
      <remarks>  <para> Compatible Chart of this function for different OSP controls: <list type="table"> <listheader> <term>OSP Control</term> <description>Compatible</description> </listheader> <item> <term>P100II</term> <description>No</description> </item> <item> <term>P200</term> <description>No</description> </item> <item> <term>P300L</term> <description> <para> Yes </para> </description> </item> <item> <term>P300S/TD Mode</term> <description> <para> Yes </para> </description> </item> <item> <term>P300S/TL Mode</term> <description> <para> Yes </para> </description> </item> </list> </para>  </remarks>
    </member>
    <member name="M:Okuma.CLDATAPI.DataAPI.CTools.GetToolComment(System.Int32)">
      <summary>For OSP-P300: Get comment of a tool given registered tool number (REG NO.) for current sub system. </summary>
      <example> This sample shows how to call the GetToolComment() method. <para>		Dim intToolNo As Integer	</para> <para>		Dim strValue As String	</para> <para>	    strValue = m_objTool.GetToolComment(intToolNo)	</para> </example>
      <param name="intToolNo">Tool Number. REG NO.</param>
      <returns>A System.String value represents the comment of the registered tool number (REG NO.) </returns>
      <exception cref="System.ApplicationException">Thrown when function fails to perform the operation at current NC condition.</exception>
      <exception cref="System.NotSupportedException">Thrown when operation/input parameters are not supported for the current system.</exception>
      <Figure> <para>For P300S: TOOL DATA SETTING - TOOL DATA ALL - T-COMMENT <img src="Lathe.P300.TD.ToolDataSetting.jpg" /> </para> <para>For P300L: TOOL DATA SETTING - TOOL DATA ALL - T-COMMENT <img src="Lathe.P300L.ToolData.Tools.jpg" /> </para> </Figure>
      <SubSystem> Please see <see href="SubSystemNoteTable.htm">Sub System Note Table</see> for more information if applicable. <para>Valid sub systems for this function (Y = Valid, N = Not valid)</para> <para> <list type="table"> <listheader> <term>NC_RUN </term> <term>NC_RUN_1 </term> <term>NC_RUN_2 </term> <term>NC_RUN_3 </term> <term>NC_PANEL </term> <term>NC_PANEL_1 </term> <term>NC_PANEL_2 </term> <term>NC_PANEL_3 </term> <term>NC_AL </term> <term>NC_AR </term> <term>NC_BL </term> <term>NC_BR </term> <term>NC_CL </term> <term>NC_CR </term> <term>NC_2AL </term> </listheader> <item> <term>Y (*35)</term> <term>Y (*35)</term> <term>Y (*35)</term> <term>Y (*35)</term> <term>Y (*35)</term> <term>Y (*35)</term> <term>Y (*35)</term> <term>Y (*35)</term> <term>Y (*35)</term> <term>Y (*35)</term> <term>Y (*35)</term> <term>Y (*35)</term> <term>Y (*35)</term> <term>Y (*35)</term> <term>Y (*35)</term> </item> </list> </para> </SubSystem>
      <remarks>  <para> Compatible Chart of this function for different OSP controls: <list type="table"> <listheader> <term>OSP Control</term> <description>Compatible</description> </listheader> <item> <term>P100II</term> <description>No</description> </item> <item> <term>P200</term> <description>No</description> </item> <item> <term>P300L</term> <description> <para> Yes </para> </description> </item> <item> <term>P300S/TD Mode</term> <description> <para> Yes </para> </description> </item> <item> <term>P300S/TL Mode</term> <description> <para> Yes </para> </description> </item> </list> </para>  </remarks>
    </member>
    <member name="M:Okuma.CLDATAPI.DataAPI.CTools.SetToolComment(System.Int32,System.String)">
      <summary>For OSP-P300: Set comment of a tool given registered tool number for current sub system. </summary>
      <example> This sample shows how to call the SetToolComment() method. <para>		Dim intToolNo As Integer	</para> <para>		Dim strComment As String	</para> <para>	    m_objTool.SetToolComment(intToolNo, strComment)	</para> </example>
      <param name="intToolNo">Tool Number</param>
      <param name="strComment">Tool comment to be set.  A maximum of 40 characters is allowed</param>
      <returns> </returns>
      <exception cref="System.ApplicationException">Thrown when function fails to perform the operation at current NC condition.</exception>
      <exception cref="System.NotSupportedException">Thrown when operation/input parameters are not supported for the current system.</exception>
      <Figure> <para>For P300S: TOOL DATA SETTING - TOOL DATA ALL - T-COMMENT <img src="Lathe.P300.TD.ToolDataSetting.jpg" /> </para> <para>For P300L: TOOL DATA SETTING - TOOL DATA ALL - T-COMMENT <img src="Lathe.P300L.ToolData.Tools.jpg" /> </para> </Figure>
      <SubSystem> Please see <see href="SubSystemNoteTable.htm">Sub System Note Table</see> for more information if applicable. <para>Valid sub systems for this function (Y = Valid, N = Not valid)</para> <para> <list type="table"> <listheader> <term>NC_RUN </term> <term>NC_RUN_1 </term> <term>NC_RUN_2 </term> <term>NC_RUN_3 </term> <term>NC_PANEL </term> <term>NC_PANEL_1 </term> <term>NC_PANEL_2 </term> <term>NC_PANEL_3 </term> <term>NC_AL </term> <term>NC_AR </term> <term>NC_BL </term> <term>NC_BR </term> <term>NC_CL </term> <term>NC_CR </term> <term>NC_2AL </term> </listheader> <item> <term>Y (*35)</term> <term>Y (*35)</term> <term>Y (*35)</term> <term>Y (*35)</term> <term>Y (*35)</term> <term>Y (*35)</term> <term>Y (*35)</term> <term>Y (*35)</term> <term>Y (*35)</term> <term>Y (*35)</term> <term>Y (*35)</term> <term>Y (*35)</term> <term>Y (*35)</term> <term>Y (*35)</term> <term>Y (*35)</term> </item> </list> </para> </SubSystem>
      <remarks>  <para> Compatible Chart of this function for different OSP controls: <list type="table"> <listheader> <term>OSP Control</term> <description>Compatible</description> </listheader> <item> <term>P100II</term> <description>No</description> </item> <item> <term>P200</term> <description>No</description> </item> <item> <term>P300L</term> <description> <para> Yes </para> </description> </item> <item> <term>P300S/TD Mode</term> <description> <para> Yes </para> </description> </item> <item> <term>P300S/TL Mode</term> <description> <para> Yes </para> </description> </item> </list> </para>  </remarks>
    </member>
    <member name="M:Okuma.CLDATAPI.DataAPI.CTools.GetToolGroupEntry3(System.Int32)">
      <summary> Gets all tool number assigned in tool group for current sub system. </summary>
      <example> This sample shows how to call the GetToolGroupEntry3() method. <para>	Dim intGroupNo As Integer </para> <para>	Dim strTools() As String</para> <para>	strTools = objTool.GetToolGroupEntry3(intGroupNo)	</para> </example>
      <param name="intGroupNo"> <para>A tool group number</para> </param>
      <returns> <para> An array of System.String value contains the tools registered for the group. <para>Note: The order of tools in the list might not have the same order as displayed on NC-HMI.</para> </para> </returns>
      <exception cref="System.ApplicationException">Thrown when function fails to perform the operation at current NC condition.</exception>
      <exception cref="System.NotSupportedException">Thrown when operation/input parameters are not supported for the current system.</exception>
      <Figure> <para> OSP-P300 - TOOL DATA SETTING - TOOL LIFE DATA -  ENTRY TOOL (1/4-4/4) <img src="Lathe.P300.TD.ToolLife.jpg" /> </para> </Figure>
      <SubSystem> Please see <see href="SubSystemNoteTable.htm">Sub System Note Table</see> for more information if applicable. <para>Valid sub systems for this function (Y = Valid, N = Not valid)</para> <para> <list type="table"> <listheader> <term>NC_RUN </term> <term>NC_RUN_1 </term> <term>NC_RUN_2 </term> <term>NC_RUN_3 </term> <term>NC_PANEL </term> <term>NC_PANEL_1 </term> <term>NC_PANEL_2 </term> <term>NC_PANEL_3 </term> <term>NC_AL </term> <term>NC_AR </term> <term>NC_BL </term> <term>NC_BR </term> <term>NC_CL </term> <term>NC_CR </term> <term>NC_2AL </term> </listheader> <item> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>N</term> </item> </list> </para> </SubSystem>
      <remarks>  <para> Compatible Chart of this function for different OSP controls: <list type="table"> <listheader> <term>OSP Control</term> <description>Compatible</description> </listheader> <item> <term>P100II</term> <description>No</description> </item> <item> <term>P200</term> <description>No</description> </item> <item> <term>P300L</term> <description>No</description> </item> <item> <term>P300S/TD Mode</term> <description>Yes</description> </item> <item> <term>P300S/TL Mode</term> <description>Yes</description> </item> </list> </para>  </remarks>
    </member>
    <member name="M:Okuma.CLDATAPI.DataAPI.CTools.GetToolCuttingPosition(System.Int32,Okuma.CLDATAPI.Enumerations.ToolEdgeEnum,Okuma.CLDATAPI.Enumerations.ToolCuttingPositionEnum)">
      <summary>For OSP-P300: Gets tool cutting position type for tool number, edge number, and tool cutting position for current sub system. </summary>
      <example> This sample shows how to call the GetToolCuttingPositon() method. <para>		Dim intToolNo As Integer	</para> <para>		Dim enEdgeNo As ToolEdgeEnum	</para> <para>		Dim enToolCuttingPosition  As ToolCuttingPositionEnum	</para> <para>		Dim enValue As ToolCuttingPositionTypeEnum	</para> <para>	    enValue = objTool.GetToolCuttingPositonType(intToolNo, enEdgeNo, enToolCuttingPosition)	</para> </example>
      <param name="intToolNo">Tool Number</param>
      <param name="enEdgeNo">Edge Number</param>
      <param name="enToolCuttingPosition">Tool cutting position</param>
      <returns>A ToolCuttingPositionTypeEnum value </returns>
      <exception cref="System.ApplicationException">Thrown when function fails to perform the operation at current NC condition.</exception>
      <exception cref="System.NotSupportedException">Thrown when operation/input parameters are not supported for the current system.</exception>
      <Figure> <para> TOOL DATA SETTING - TOOL DATA ALL -  CUT POS. - BASE/VERT <img src="Lathe.P300.TD.ToolDataSetting.jpg" /> </para> </Figure>
      <SubSystem> Please see <see href="SubSystemNoteTable.htm">Sub System Note Table</see> for more information if applicable. <para>Valid sub systems for this function (Y = Valid, N = Not valid)</para> <para> <list type="table"> <listheader> <term>NC_RUN </term> <term>NC_RUN_1 </term> <term>NC_RUN_2 </term> <term>NC_RUN_3 </term> <term>NC_PANEL </term> <term>NC_PANEL_1 </term> <term>NC_PANEL_2 </term> <term>NC_PANEL_3 </term> <term>NC_AL </term> <term>NC_AR </term> <term>NC_BL </term> <term>NC_BR </term> <term>NC_CL </term> <term>NC_CR </term> <term>NC_2AL </term> </listheader> <item> <term>Y (*39)</term> <term>Y (*39)</term> <term>Y (*39)</term> <term>N </term> <term>Y (*39)</term> <term>Y (*39)</term> <term>Y (*39)</term> <term>N </term> <term>Y (*39)</term> <term>Y (*39)</term> <term>Y (*39)</term> <term>Y (*39)</term> <term>N </term> <term>N </term> <term>N</term> </item> </list> </para> </SubSystem>
      <remarks>  <para> Compatible Chart of this function for different OSP controls: <list type="table"> <listheader> <term>OSP Control</term> <description>Compatible</description> </listheader> <item> <term>P100II</term> <description>No</description> </item> <item> <term>P200</term> <description>No</description> </item> <item> <term>P300L</term> <description> <para> No </para> </description> </item> <item> <term>P300S/TD Mode</term> <description> <para> Yes </para> </description> </item> <item> <term>P300S/TL Mode</term> <description> <para> Yes </para> </description> </item> </list> </para>  </remarks>
    </member>
    <member name="M:Okuma.CLDATAPI.DataAPI.CTools.GetReferenceToolOffset1(System.Int32,Okuma.CLDATAPI.Enumerations.ToolEdgeEnum)">
      <summary> Gets reference tool offset 1 at the specified tool number for current sub system. </summary>
      <example> This sample shows how to call the GetReferenceToolOffset1() method. <para>	Dim intToolNo As Integer	</para> <para>	Dim enEdgeNo As ToolEdgeEnum</para> <para>	Dim intValue As Integer</para> <para>	intValue = objTool.GetReferenceToolOffset1(intToolNo, enEdgeNo)	</para> </example>
      <param name="intToolNo">Tool number</param>
      <param name="enEdgeNo">Edge Number. Ignored for non multi-edges tools</param>
      <returns>A System.Int32 that represents the offset number.</returns>
      <exception cref="System.ApplicationException">Thrown when function fails to perform the operation at current NC condition.</exception>
      <exception cref="System.NotSupportedException">Thrown when operation/input parameters are not supported for the current system.</exception>
      <Figure> <para> OSP-P300S - TOOL DATA SETTING - TOOL EDIT - TOOL DATA DETAIL SETTING - OG1/2/3 <img src="Lathe.P300S.ToolData.ToolEdit.DetailSetting.jpg" /> </para> </Figure>
      <SubSystem> Please see <see href="SubSystemNoteTable.htm">Sub System Note Table</see> for more information if applicable. <para>Valid sub systems for this function (Y = Valid, N = Not valid)</para> <para> <list type="table"> <listheader> <term>NC_RUN </term> <term>NC_RUN_1 </term> <term>NC_RUN_2 </term> <term>NC_RUN_3 </term> <term>NC_PANEL </term> <term>NC_PANEL_1 </term> <term>NC_PANEL_2 </term> <term>NC_PANEL_3 </term> <term>NC_AL </term> <term>NC_AR </term> <term>NC_BL </term> <term>NC_BR </term> <term>NC_CL </term> <term>NC_CR </term> <term>NC_2AL </term> </listheader> <item> <term>Y (*42)</term> <term>Y (*42)</term> <term>Y (*42)</term> <term>N</term> <term>Y (*42)</term> <term>Y (*42)</term> <term>Y (*42)</term> <term>N</term> <term>Y (*42)</term> <term>Y (*42)</term> <term>Y (*42)</term> <term>Y (*42)</term> <term>N</term> <term>N</term> <term>N</term> </item> </list> </para> </SubSystem>
      <remarks>  <para> Compatible Chart of this function for different OSP controls: <list type="table"> <listheader> <term>OSP Control</term> <description>Compatible</description> </listheader> <item> <term>P100II</term> <description>No</description> </item> <item> <term>P200</term> <description>No</description> </item> <item> <term>P300L</term> <description> <para> No </para> </description> </item> <item> <term>P300S/TD Mode</term> <description> <para> Yes </para> </description> </item> <item> <term>P300S/TL Mode</term> <description> <para> No </para> </description> </item> </list> </para>  </remarks>
    </member>
    <member name="M:Okuma.CLDATAPI.DataAPI.CTools.SetReferenceToolOffset1(System.Int32,Okuma.CLDATAPI.Enumerations.ToolEdgeEnum,System.Int32)">
      <summary> Sets reference tool offset 1 at the specified tool number for current sub system. </summary>
      <example> This sample shows how to call the SetReferenceToolOffset1() method. <para>	Dim intToolNo As Integer	</para> <para>	Dim enEdgeNo As ToolEdgeEnum</para> <para>	Dim intOffsetNo As Integer</para> <para>	objTool.SetReferenceToolOffset1(intToolNo, enEdgeNo, intOffsetNo)	</para> </example>
      <param name="intToolNo">Tool number</param>
      <param name="enEdgeNo">Edge Number. Ignored for non multi-edges tools</param>
      <param name="intOffsetNo">Offset Number to be set</param>
      <exception cref="System.ApplicationException">Thrown when function fails to perform the operation at current NC condition.</exception>
      <exception cref="System.NotSupportedException">Thrown when operation/input parameters are not supported for the current system.</exception>
      <Figure> <para> OSP-P300S - TOOL DATA SETTING - TOOL EDIT - TOOL DATA DETAIL SETTING - OG1/2/3 <img src="Lathe.P300S.ToolData.ToolEdit.DetailSetting.jpg" /> </para> </Figure>
      <SubSystem> Please see <see href="SubSystemNoteTable.htm">Sub System Note Table</see> for more information if applicable. <para>Valid sub systems for this function (Y = Valid, N = Not valid)</para> <para> <list type="table"> <listheader> <term>NC_RUN </term> <term>NC_RUN_1 </term> <term>NC_RUN_2 </term> <term>NC_RUN_3 </term> <term>NC_PANEL </term> <term>NC_PANEL_1 </term> <term>NC_PANEL_2 </term> <term>NC_PANEL_3 </term> <term>NC_AL </term> <term>NC_AR </term> <term>NC_BL </term> <term>NC_BR </term> <term>NC_CL </term> <term>NC_CR </term> <term>NC_2AL </term> </listheader> <item> <term>Y (*42)</term> <term>Y (*42)</term> <term>Y (*42)</term> <term>N</term> <term>Y (*42)</term> <term>Y (*42)</term> <term>Y (*42)</term> <term>N</term> <term>Y (*42)</term> <term>Y (*42)</term> <term>Y (*42)</term> <term>Y (*42)</term> <term>N</term> <term>N</term> <term>N</term> </item> </list> </para> </SubSystem>
      <remarks>  <para> Compatible Chart of this function for different OSP controls: <list type="table"> <listheader> <term>OSP Control</term> <description>Compatible</description> </listheader> <item> <term>P100II</term> <description>NO</description> </item> <item> <term>P200</term> <description>No</description> </item> <item> <term>P300L</term> <description> <para> No </para> </description> </item> <item> <term>P300S/TD Mode</term> <description> <para> Yes </para> </description> </item> <item> <term>P300S/TL Mode</term> <description> <para> No </para> </description> </item> </list> </para>  </remarks>
    </member>
    <member name="M:Okuma.CLDATAPI.DataAPI.CTools.GetReferenceToolOffset2(System.Int32,Okuma.CLDATAPI.Enumerations.ToolEdgeEnum)">
      <summary> Gets reference tool offset 1 at the specified tool number for current sub system. </summary>
      <example> This sample shows how to call the GetReferenceToolOffset2() method. <para>	Dim intToolNo As Integer	</para> <para>	Dim enEdgeNo As ToolEdgeEnum</para> <para>	Dim intValue As Integer</para> <para>	intValue = objTool.GetReferenceToolOffset2(intToolNo, enEdgeNo)	</para> </example>
      <param name="intToolNo">Tool number</param>
      <param name="enEdgeNo">Edge Number. Ignored for non multi-edges tools</param>
      <returns>A System.Int32 that represents the offset number.</returns>
      <exception cref="System.ApplicationException">Thrown when function fails to perform the operation at current NC condition.</exception>
      <exception cref="System.NotSupportedException">Thrown when operation/input parameters are not supported for the current system.</exception>
      <Figure> <para> OSP-P300S - TOOL DATA SETTING - TOOL EDIT - TOOL DATA DETAIL SETTING - OG1/2/3 <img src="Lathe.P300S.ToolData.ToolEdit.DetailSetting.jpg" /> </para> </Figure>
      <SubSystem> Please see <see href="SubSystemNoteTable.htm">Sub System Note Table</see> for more information if applicable. <para>Valid sub systems for this function (Y = Valid, N = Not valid)</para> <para> <list type="table"> <listheader> <term>NC_RUN </term> <term>NC_RUN_1 </term> <term>NC_RUN_2 </term> <term>NC_RUN_3 </term> <term>NC_PANEL </term> <term>NC_PANEL_1 </term> <term>NC_PANEL_2 </term> <term>NC_PANEL_3 </term> <term>NC_AL </term> <term>NC_AR </term> <term>NC_BL </term> <term>NC_BR </term> <term>NC_CL </term> <term>NC_CR </term> <term>NC_2AL </term> </listheader> <item> <term>Y (*42)</term> <term>Y (*42)</term> <term>Y (*42)</term> <term>N</term> <term>Y (*42)</term> <term>Y (*42)</term> <term>Y (*42)</term> <term>N</term> <term>Y (*42)</term> <term>Y (*42)</term> <term>Y (*42)</term> <term>Y (*42)</term> <term>N</term> <term>N</term> <term>N</term> </item> </list> </para> </SubSystem>
      <remarks>  <para> Compatible Chart of this function for different OSP controls: <list type="table"> <listheader> <term>OSP Control</term> <description>Compatible</description> </listheader> <item> <term>P100II</term> <description>NO</description> </item> <item> <term>P200</term> <description>No</description> </item> <item> <term>P300L</term> <description> <para> No </para> </description> </item> <item> <term>P300S/TD Mode</term> <description> <para> Yes </para> </description> </item> <item> <term>P300S/TL Mode</term> <description> <para> No </para> </description> </item> </list> </para>  </remarks>
    </member>
    <member name="M:Okuma.CLDATAPI.DataAPI.CTools.SetReferenceToolOffset2(System.Int32,Okuma.CLDATAPI.Enumerations.ToolEdgeEnum,System.Int32)">
      <summary> Sets reference tool offset 2 at the specified tool number for current sub system. </summary>
      <example> This sample shows how to call the SetReferenceToolOffset2() method. <para>	Dim intToolNo As Integer	</para> <para>	Dim enEdgeNo As ToolEdgeEnum</para> <para>	Dim intOffsetNo As Integer</para> <para>	objTool.SetReferenceToolOffset2(intToolNo, enEdgeNo, intOffsetNo)	</para> </example>
      <param name="intToolNo">Tool number</param>
      <param name="enEdgeNo">Edge Number. Ignored for non multi-edges tools</param>
      <param name="intOffsetNo">Offset number to be set</param>
      <exception cref="System.ApplicationException">Thrown when function fails to perform the operation at current NC condition.</exception>
      <exception cref="System.NotSupportedException">Thrown when operation/input parameters are not supported for the current system.</exception>
      <Figure> <para> OSP-P300S - TOOL DATA SETTING - TOOL EDIT - TOOL DATA DETAIL SETTING - OG1/2/3 <img src="Lathe.P300S.ToolData.ToolEdit.DetailSetting.jpg" /> </para> </Figure>
      <SubSystem> Please see <see href="SubSystemNoteTable.htm">Sub System Note Table</see> for more information if applicable. <para>Valid sub systems for this function (Y = Valid, N = Not valid)</para> <para> <list type="table"> <listheader> <term>NC_RUN </term> <term>NC_RUN_1 </term> <term>NC_RUN_2 </term> <term>NC_RUN_3 </term> <term>NC_PANEL </term> <term>NC_PANEL_1 </term> <term>NC_PANEL_2 </term> <term>NC_PANEL_3 </term> <term>NC_AL </term> <term>NC_AR </term> <term>NC_BL </term> <term>NC_BR </term> <term>NC_CL </term> <term>NC_CR </term> <term>NC_2AL </term> </listheader> <item> <term>Y (*42)</term> <term>Y (*42)</term> <term>Y (*42)</term> <term>N</term> <term>Y (*42)</term> <term>Y (*42)</term> <term>Y (*42)</term> <term>N</term> <term>Y (*42)</term> <term>Y (*42)</term> <term>Y (*42)</term> <term>Y (*42)</term> <term>N</term> <term>N</term> <term>N</term> </item> </list> </para> </SubSystem>
      <remarks>  <para> Compatible Chart of this function for different OSP controls: <list type="table"> <listheader> <term>OSP Control</term> <description>Compatible</description> </listheader> <item> <term>P100II</term> <description>NO</description> </item> <item> <term>P200</term> <description>No</description> </item> <item> <term>P300L</term> <description> <para> No </para> </description> </item> <item> <term>P300S/TD Mode</term> <description> <para> Yes </para> </description> </item> <item> <term>P300S/TL Mode</term> <description> <para> No </para> </description> </item> </list> </para>  </remarks>
    </member>
    <member name="M:Okuma.CLDATAPI.DataAPI.CTools.GetReferenceToolOffset3(System.Int32,Okuma.CLDATAPI.Enumerations.ToolEdgeEnum)">
      <summary> Gets reference tool offset 3 at the specified tool number for current sub system. </summary>
      <example> This sample shows how to call the GetReferenceToolOffset3() method. <para>	Dim intToolNo As Integer	</para> <para>	Dim enEdgeNo As ToolEdgeEnum</para> <para>	Dim intValue As Integer</para> <para>	intValue = objTool.GetReferenceToolOffset3(intToolNo, enEdgeNo)	</para> </example>
      <param name="intToolNo">Tool number</param>
      <param name="enEdgeNo">Edge Number. Ignored for non multi-edges tools</param>
      <returns>A System.Int32 that represents the offset number.</returns>
      <exception cref="System.ApplicationException">Thrown when function fails to perform the operation at current NC condition.</exception>
      <exception cref="System.NotSupportedException">Thrown when operation/input parameters are not supported for the current system.</exception>
      <Figure> <para> OSP-P300S - TOOL DATA SETTING - TOOL EDIT - TOOL DATA DETAIL SETTING - OG1/2/3 <img src="Lathe.P300S.ToolData.ToolEdit.DetailSetting.jpg" /> </para> </Figure>
      <SubSystem> Please see <see href="SubSystemNoteTable.htm">Sub System Note Table</see> for more information if applicable. <para>Valid sub systems for this function (Y = Valid, N = Not valid)</para> <para> <list type="table"> <listheader> <term>NC_RUN </term> <term>NC_RUN_1 </term> <term>NC_RUN_2 </term> <term>NC_RUN_3 </term> <term>NC_PANEL </term> <term>NC_PANEL_1 </term> <term>NC_PANEL_2 </term> <term>NC_PANEL_3 </term> <term>NC_AL </term> <term>NC_AR </term> <term>NC_BL </term> <term>NC_BR </term> <term>NC_CL </term> <term>NC_CR </term> <term>NC_2AL </term> </listheader> <item> <term>Y (*42)</term> <term>Y (*42)</term> <term>Y (*42)</term> <term>N</term> <term>Y (*42)</term> <term>Y (*42)</term> <term>Y (*42)</term> <term>N</term> <term>Y (*42)</term> <term>Y (*42)</term> <term>Y (*42)</term> <term>Y (*42)</term> <term>N</term> <term>N</term> <term>N</term> </item> </list> </para> </SubSystem>
      <remarks>  <para> Compatible Chart of this function for different OSP controls: <list type="table"> <listheader> <term>OSP Control</term> <description>Compatible</description> </listheader> <item> <term>P100II</term> <description>NO</description> </item> <item> <term>P200</term> <description>No</description> </item> <item> <term>P300L</term> <description> <para> No </para> </description> </item> <item> <term>P300S/TD Mode</term> <description> <para> Yes </para> </description> </item> <item> <term>P300S/TL Mode</term> <description> <para> No </para> </description> </item> </list> </para>  </remarks>
    </member>
    <member name="M:Okuma.CLDATAPI.DataAPI.CTools.SetReferenceToolOffset3(System.Int32,Okuma.CLDATAPI.Enumerations.ToolEdgeEnum,System.Int32)">
      <summary> Sets reference tool offset 3 at the specified tool number for current sub system. </summary>
      <example> This sample shows how to call the SetReferenceToolOffset3() method. <para>	Dim intToolNo As Integer	</para> <para>	Dim enEdgeNo As ToolEdgeEnum</para> <para>	Dim intOffsetNo As Integer</para> <para>	objTool.SetReferenceToolOffset3(intToolNo, enEdgeNo, intOffsetNo)	</para> </example>
      <param name="intToolNo">Tool number</param>
      <param name="enEdgeNo">Edge Number. Ignored for non multi-edges tools</param>
      <param name="intOffsetNo">Offset number to be set</param>
      <exception cref="System.ApplicationException">Thrown when function fails to perform the operation at current NC condition.</exception>
      <exception cref="System.NotSupportedException">Thrown when operation/input parameters are not supported for the current system.</exception>
      <Figure> <para> OSP-P300S - TOOL DATA SETTING - TOOL EDIT - TOOL DATA DETAIL SETTING - OG1/2/3 <img src="Lathe.P300S.ToolData.ToolEdit.DetailSetting.jpg" /> </para> </Figure>
      <SubSystem> Please see <see href="SubSystemNoteTable.htm">Sub System Note Table</see> for more information if applicable. <para>Valid sub systems for this function (Y = Valid, N = Not valid)</para> <para> <list type="table"> <listheader> <term>NC_RUN </term> <term>NC_RUN_1 </term> <term>NC_RUN_2 </term> <term>NC_RUN_3 </term> <term>NC_PANEL </term> <term>NC_PANEL_1 </term> <term>NC_PANEL_2 </term> <term>NC_PANEL_3 </term> <term>NC_AL </term> <term>NC_AR </term> <term>NC_BL </term> <term>NC_BR </term> <term>NC_CL </term> <term>NC_CR </term> <term>NC_2AL </term> </listheader> <item> <term>Y (*42)</term> <term>Y (*42)</term> <term>Y (*42)</term> <term>N</term> <term>Y (*42)</term> <term>Y (*42)</term> <term>Y (*42)</term> <term>N</term> <term>Y (*42)</term> <term>Y (*42)</term> <term>Y (*42)</term> <term>Y (*42)</term> <term>N</term> <term>N</term> <term>N</term> </item> </list> </para> </SubSystem>
      <remarks>  <para> Compatible Chart of this function for different OSP controls: <list type="table"> <listheader> <term>OSP Control</term> <description>Compatible</description> </listheader> <item> <term>P100II</term> <description>NO</description> </item> <item> <term>P200</term> <description>No</description> </item> <item> <term>P300L</term> <description> <para> No </para> </description> </item> <item> <term>P300S/TD Mode</term> <description> <para> Yes </para> </description> </item> <item> <term>P300S/TL Mode</term> <description> <para> No </para> </description> </item> </list> </para>  </remarks>
    </member>
    <member name="M:Okuma.CLDATAPI.DataAPI.CTools.GetLifeStatus(System.Int32,Okuma.CLDATAPI.Enumerations.ToolEdgeEnum)">
      <summary>For OSP-P300: Gets Tool life status of a registered tool given tool number, and edge number for current sub system. </summary>
      <example> This sample shows how to call the GetLifeStatus() method. <para> Dim intToolNo as Integer </para> <para> Dim intEdgeNo as Integer </para> <para> Dim intEdges() as Integer </para> <para> Dim enValue as ToolLifeStatusEnum </para> <para> Dim objSpec as CSpec = new CSpec </para> <para> Dim objTool as CTools = new CTools </para> <para> Dim objMachine as CMachine = new CMachine </para> <para> if ( objSpec.GetControlType() = ControlTypeEnum.P300S And objMachine.GetTDMode()) then</para> <para>		if ( objTools.IsRegisteredTool(intToolNo) then </para> <para>			if ( objTools.IsMultiEdgesTool(intToolNo) then</para> <para>				intEdges = objTools.GetRegisteredToolEdges(intToolNo)</para> <para>				For each intEdgeNo in intEdges</para> <para>					enValue = objTools.GetLifeStatus(intToolNo, intEdgeNo)</para> <para>				Next </para> <para>			else </para> <para>				enValue = objTools.GetLifeStatus(intToolNo, 1)</para> <para>			End If</para> <para>		End If</para> <para> End If</para> </example>
      <param name="intToolNo">Tool Number</param>
      <param name="enEdgeNo">Edge Number. Using Edge No. 1 if it is not a multi-edges tool</param>
      <returns>A ToolLifeStatusEnum value represents life status of a registered tool.</returns>
      <exception cref="System.ApplicationException">Thrown when function fails to perform the operation at current NC condition.</exception>
      <exception cref="System.NotSupportedException">Thrown when operation/input parameters are not supported for the current system.</exception>
      <Figure> <para> TOOL DATA SETTING - TOOL LIFE DATA -  LIFE <img src="Lathe.P300.TD.ToolLife.jpg" /> </para> <para> TOOL DATA SETTING - TURRET INFO -  LIFE <img src="Lathe.P300S.TurretInfo.jpg" /> </para> </Figure>
      <SubSystem> Please see <see href="SubSystemNoteTable.htm">Sub System Note Table for OSP-P300</see> for more information if applicable. <para>Valid sub systems for this function (Y = Valid, N = Not valid)</para> <para> <list type="table"> <listheader> <term>NC_RUN </term> <term>NC_RUN_1 </term> <term>NC_RUN_2 </term> <term>NC_RUN_3 </term> <term>NC_PANEL </term> <term>NC_PANEL_1 </term> <term>NC_PANEL_2 </term> <term>NC_PANEL_3 </term> <term>NC_AL </term> <term>NC_AR </term> <term>NC_BL </term> <term>NC_BR </term> <term>NC_CL </term> <term>NC_CR </term> <term>NC_2AL </term> </listheader> <item> <term>Y (*42)</term> <term>Y (*42)</term> <term>Y (*42)</term> <term>N</term> <term>Y (*42)</term> <term>Y (*42)</term> <term>Y (*42)</term> <term>N</term> <term>Y (*42)</term> <term>Y (*42)</term> <term>Y (*42)</term> <term>Y (*42)</term> <term>N</term> <term>N</term> <term>N</term> </item> </list> </para> </SubSystem>
      <remarks> <para> Compatible Chart of this function for different OSP controls: <list type="table"> <listheader> <term>OSP Control</term> <description>Compatible</description> </listheader> <item> <term>P100II</term> <description>No</description> </item> <item> <term>P200</term> <description>No</description> </item> <item> <term>P300L</term> <description>No</description> </item> <item> <term>P300S/TD Mode</term> <description>Yes</description> </item> <item> <term>P300S/TL Mode</term> <description>No</description> </item> </list> </para>  </remarks>
    </member>
    <member name="M:Okuma.CLDATAPI.DataAPI.CTools.SetLifeStatus(System.Int32,Okuma.CLDATAPI.Enumerations.ToolEdgeEnum,Okuma.CLDATAPI.Enumerations.ToolLifeStatusEnum)">
      <summary>For OSP-P300S ONLY: Sets tool life status of a registered tool given tool number, edge number for current sub system. </summary>
      <example> This sample shows how to call the SetLifeStatus() method. <para> Dim intToolNo as Integer </para> <para> Dim intEdgeNo as Integer </para> <para> Dim intEdges() as Integer </para> <para> Dim enValue as ToolLifeStatusEnum </para> <para> Dim objSpec as CSpec = new CSpec </para> <para> Dim objTool as CTools = new CTools </para> <para> Dim objMachine as CMachine = new CMachine </para> <para> if ( objSpec.GetControlType() = ControlTypeEnum.P300S And objMachine.GetTDMode()) then</para> <para>		if ( objTools.IsRegisteredTool(intToolNo) then </para> <para>			if ( objTools.IsMultiEdgesTool(intToolNo) then</para> <para>				intEdges = objTools.GetRegisteredToolEdges(intToolNo)</para> <para>				For each intEdgeNo in intEdges</para> <para>					objTools.SetLifeStatus(intToolNo, intEdgeNo, enValue)</para> <para>				Next </para> <para>			else </para> <para>				objTools.SetLifeStatus(intToolNo, 1, enValue)</para> <para>			End If</para> <para>		End If</para> <para> End If</para> </example>
      <param name="intToolNo">Tool Number</param>
      <param name="enEdgeNo">Edge Number. Using Edge No. 1 if tool is a non-multi edges tool.</param>
      <param name="enValue">setting value</param>
      <exception cref="System.ApplicationException">Thrown when function fails to perform the operation at current NC condition.</exception>
      <exception cref="System.NotSupportedException">Thrown when operation/input parameters are not supported for the current system.</exception>
      <Figure> <para> TOOL DATA SETTING - TOOL LIFE DATA - LIFE <img src="Lathe.P300.TD.ToolLife.jpg" /> </para> <para> TOOL DATA SETTING - TURRET INFO -  LIFE <img src="Lathe.P300S.TurretInfo.jpg" /> </para> </Figure>
      <SubSystem> Please see <see href="SubSystemNoteTable.htm">Sub System Note Table for OSP-P300</see> for more information if applicable. <para>Valid sub systems for this function (Y = Valid, N = Not valid)</para> <para> <list type="table"> <listheader> <term>NC_RUN </term> <term>NC_RUN_1 </term> <term>NC_RUN_2 </term> <term>NC_RUN_3 </term> <term>NC_PANEL </term> <term>NC_PANEL_1 </term> <term>NC_PANEL_2 </term> <term>NC_PANEL_3 </term> <term>NC_AL </term> <term>NC_AR </term> <term>NC_BL </term> <term>NC_BR </term> <term>NC_CL </term> <term>NC_CR </term> <term>NC_2AL </term> </listheader> <item> <term>Y (*35 *42)</term> <term>Y (*35 *42)</term> <term>Y (*35 *42)</term> <term>N</term> <term>Y (*35 *42)</term> <term>Y (*35 *42)</term> <term>Y (*35 *42)</term> <term>N</term> <term>Y (*35 *42)</term> <term>Y (*35 *42)</term> <term>Y (*35 *42)</term> <term>Y (*35 *42)</term> <term>N</term> <term>N</term> <term>N</term> </item> </list> </para> </SubSystem>
      <remarks> <para> Compatible Chart of this function for different OSP controls: <list type="table"> <listheader> <term>OSP Control</term> <description>Compatible</description> </listheader> <item> <term>P100II</term> <description>No</description> </item> <item> <term>P200</term> <description>No</description> </item> <item> <term>P300L</term> <description>No</description> </item> <item> <term>P300S/TD Mode</term> <description>Yes</description> </item> <item> <term>P300S/TL Mode</term> <description>No</description> </item> </list> </para>  </remarks>
    </member>
    <member name="M:Okuma.CLDATAPI.DataAPI.CTools.GetGaugeStatus(System.Int32,Okuma.CLDATAPI.Enumerations.ToolEdgeEnum)">
      <summary>For OSP-P300: Gets Tool gauge status of a registered tool given tool number, and edge number for current sub system. </summary>
      <example> This sample shows how to call the GetGaugeStatus() method. <para> Dim intToolNo as Integer </para> <para> Dim intEdgeNo as Integer </para> <para> Dim intEdges() as Integer </para> <para> Dim enValue as ToolGaugeStatusEnum </para> <para> Dim objSpec as CSpec = new CSpec </para> <para> Dim objTool as CTools = new CTools </para> <para> Dim objMachine as CMachine = new CMachine </para> <para> if ( objSpec.GetControlType() = ControlTypeEnum.P300S And objMachine.GetTDMode()) then</para> <para>		if ( objTools.IsRegisteredTool(intToolNo) then </para> <para>			if ( objTools.IsMultiEdgesTool(intToolNo) then</para> <para>				intEdges = objTools.GetRegisteredToolEdges(intToolNo)</para> <para>				For each intEdgeNo in intEdges</para> <para>					enValue = objTools.GetGaugeStatus(intToolNo, intEdgeNo)</para> <para>				Next </para> <para>			else </para> <para>				enValue = objTools.GetGaugeStatus(intToolNo, 1)</para> <para>			End If</para> <para>		End If</para> <para> End If</para> </example>
      <param name="intToolNo">Tool Number</param>
      <param name="enEdgeNo">Edge Number. Using Edge No. 1 if tool is a non-multi edges tool.</param>
      <returns>A ToolGaugeStatusEnum value represents gauge status of a registered tool</returns>
      <exception cref="System.ApplicationException">Thrown when function fails to perform the operation at current NC condition.</exception>
      <exception cref="System.NotSupportedException">Thrown when operation/input parameters are not supported for the current system.</exception>
      <Figure> <para> TOOL DATA SETTING - TOOL LIFE DATA -  GAUGE <img src="Lathe.P300.TD.ToolLife.jpg" /> </para> <para> TOOL DATA SETTING - TURRET INFO -  GAUGE <img src="Lathe.P300S.TurretInfo.jpg" /> </para> </Figure>
      <SubSystem> Please see <see href="SubSystemNoteTable.htm">Sub System Note Table for OSP-P300</see> for more information if applicable. <para>Valid sub systems for this function (Y = Valid, N = Not valid)</para> <para> <list type="table"> <listheader> <term>NC_RUN </term> <term>NC_RUN_1 </term> <term>NC_RUN_2 </term> <term>NC_RUN_3 </term> <term>NC_PANEL </term> <term>NC_PANEL_1 </term> <term>NC_PANEL_2 </term> <term>NC_PANEL_3 </term> <term>NC_AL </term> <term>NC_AR </term> <term>NC_BL </term> <term>NC_BR </term> <term>NC_CL </term> <term>NC_CR </term> <term>NC_2AL </term> </listheader> <item> <term>Y (*35 *42)</term> <term>Y (*35 *42)</term> <term>Y (*35 *42)</term> <term>N</term> <term>Y (*35 *42)</term> <term>Y (*35 *42)</term> <term>Y (*35 *42)</term> <term>N</term> <term>Y (*35 *42)</term> <term>Y (*35 *42)</term> <term>Y (*35 *42)</term> <term>Y (*35 *42)</term> <term>N</term> <term>N</term> <term>N</term> </item> </list> </para> </SubSystem>
      <remarks>  <para> Compatible Chart of this function for different OSP controls: <list type="table"> <listheader> <term>OSP Control</term> <description>Compatible</description> </listheader> <item> <term>P100II</term> <description>No</description> </item> <item> <term>P200</term> <description>No</description> </item> <item> <term>P300L</term> <description>No</description> </item> <item> <term>P300S/TD Mode</term> <description>Yes</description> </item> <item> <term>P300S/TL Mode</term> <description>No</description> </item> </list> </para>  </remarks>
    </member>
    <member name="M:Okuma.CLDATAPI.DataAPI.CTools.SetGaugeStatus(System.Int32,Okuma.CLDATAPI.Enumerations.ToolEdgeEnum,Okuma.CLDATAPI.Enumerations.ToolGaugeStatusEnum)">
      <summary>For OSP-P300 ONLY: Sets tool gauge status of a registered tool given tool number , edge number for current sub system. </summary>
      <example> This sample shows how to call the SetGaugeStatus() method. <para> Dim intToolNo as Integer </para> <para> Dim intEdgeNo as Integer </para> <para> Dim intEdges() as Integer </para> <para> Dim enValue as ToolGaugeStatusEnum </para> <para> Dim objSpec as CSpec = new CSpec </para> <para> Dim objTool as CTools = new CTools </para> <para> Dim objMachine as CMachine = new CMachine </para> <para> if ( objSpec.GetControlType() = ControlTypeEnum.P300S And objMachine.GetTDMode()) then</para> <para>		if ( objTools.IsRegisteredTool(intToolNo) then </para> <para>			if ( objTools.IsMultiEdgesTool(intToolNo) then</para> <para>				intEdges = objTools.GetRegisteredToolEdges(intToolNo)</para> <para>				For each intEdgeNo in intEdges</para> <para>					objTools.SetGaugeStatus(intToolNo, intEdgeNo, enValue)</para> <para>				Next </para> <para>			else </para> <para>				objTools.SetGaugeStatus(intToolNo, 1, enValue)</para> <para>			End If</para> <para>		End If</para> <para> End If</para> </example>
      <param name="intToolNo">Tool Number</param>
      <param name="enEdgeNo">Edge Number. Using Edge No. 1 if tool is a non-multi edges tool.</param>
      <param name="enValue">setting value</param>
      <exception cref="System.ApplicationException">Thrown when function fails to perform the operation at current NC condition.</exception>
      <exception cref="System.NotSupportedException">Thrown when operation/input parameters are not supported for the current system.</exception>
      <Figure> <para> TOOL DATA SETTING - TOOL LIFE DATA - GAUGE <img src="Lathe.P300.TD.ToolLife.jpg" /> </para> <para> TOOL DATA SETTING - TURRET INFO -  GAUGE <img src="Lathe.P300S.TurretInfo.jpg" /> </para> </Figure>
      <SubSystem> Please see <see href="SubSystemNoteTable.htm">Sub System Note Table for OSP-P300</see> for more information if applicable. <para>Valid sub systems for this function (Y = Valid, N = Not valid)</para> <para> <list type="table"> <listheader> <term>NC_RUN </term> <term>NC_RUN_1 </term> <term>NC_RUN_2 </term> <term>NC_RUN_3 </term> <term>NC_PANEL </term> <term>NC_PANEL_1 </term> <term>NC_PANEL_2 </term> <term>NC_PANEL_3 </term> <term>NC_AL </term> <term>NC_AR </term> <term>NC_BL </term> <term>NC_BR </term> <term>NC_CL </term> <term>NC_CR </term> <term>NC_2AL </term> </listheader> <item> <term>Y (*35 *42)</term> <term>Y (*35 *42)</term> <term>Y (*35 *42)</term> <term>N</term> <term>Y (*35 *42)</term> <term>Y (*35 *42)</term> <term>Y (*35 *42)</term> <term>N</term> <term>Y (*35 *42)</term> <term>Y (*35 *42)</term> <term>Y (*35 *42)</term> <term>Y (*35 *42)</term> <term>N</term> <term>N</term> <term>N</term> </item> </list> </para> </SubSystem>
      <remarks>  <para> Compatible Chart of this function for different OSP controls: <list type="table"> <listheader> <term>OSP Control</term> <description>Compatible</description> </listheader> <item> <term>P100II</term> <description>No</description> </item> <item> <term>P200</term> <description>No</description> </item> <item> <term>P300L</term> <description>No</description> </item> <item> <term>P300S/TD Mode</term> <description>Yes</description> </item> <item> <term>P300S/TL Mode</term> <description>No</description> </item> </list> </para>  </remarks>
    </member>
    <member name="M:Okuma.CLDATAPI.DataAPI.CTools.GetToolLife(Okuma.CLDATAPI.Enumerations.ToolLifeConditionEnum,System.Int32,Okuma.CLDATAPI.Enumerations.ToolEdgeEnum)">
      <summary>For OSP-P300S: Gets Tool life setting value given registered tool number, edge number, and tool life condition for current sub system. </summary>
      <example> This sample shows how to call the GetToolLife() method. <para> Dim intToolNo As Integer	</para> <para> Dim enEdgeNo As ToolEdgeEnum	</para> <para> Dim enToolLifeCondition As ToolLifeConditionEnum 	</para> <para> Dim dblValue As Double	</para> <para> Dim intEdges() as Integer </para> <para> Dim objSpec as CSpec = new CSpec </para> <para> Dim objTool as CTools = new CTools </para> <para> Dim objMachine as CMachine = new CMachine </para> <para> if ( objSpec.GetControlType() = ControlTypeEnum.P300S And objMachine.GetTDMode()) then</para> <para>		if ( objTools.IsRegisteredTool(intToolNo) then </para> <para>			if ( objTools.IsMultiEdgesTool(intToolNo) then</para> <para>				enEdgeNo = objTools.GetRegisteredToolEdges(intToolNo)</para> <para>				For each intEdgeNo in intEdges</para> <para>					dblValue = objTool.GetToolLife(enToolLifeCondition, intToolNo, enEdgeNo)	</para> <para>				Next </para> <para>			else </para> <para>				dblValue = objTool.GetToolLife(enToolLifeCondition, intToolNo, enEdgeNo)	</para> <para>			End If</para> <para>		End If</para> <para> End If</para> </example>
      <param name="enToolLifeCondition">A tool life condition for getting tool life</param>
      <param name="intToolNo">Tool Number</param>
      <param name="enEdgeNo">Edge Number. Using Edge No. 1 if tool is a non-multi edges tool.</param>
      <returns>A System.Double value represents tool life.  It returns negative value if there is no tool data information</returns>
      <DataUnit> <para> The unit depends on the specified tool life condition: </para> <list type="table"> <listheader> <term>Tool Life Condition</term> <description>Unit</description> </listheader> <item> <term>Cutting Time</term> <description>Second</description> </item> <item> <term>Wear</term> <description>By default, unit of wear amount is in millimeter.  Other units can be set by calling SetDataUnit.</description> </item> <item> <term>Workpiece</term> <description>A unit(machined workpiece)</description> </item> </list> </DataUnit>
      <exception cref="System.ApplicationException">Thrown when function fails to perform the operation at current NC condition.</exception>
      <exception cref="System.NotSupportedException">Thrown when operation/input parameters are not supported for the current system.</exception>
      <Figure> <para> TOOL DATA SETTING - TOOL DATA (ALL) -  TOOL LIFE MANAGE -  X.SET <para>X = N for number of workpiece</para> <para>X = T for cutting time</para> <para>X = W for tool wear amount</para> <img src="Lathe.P300.TD.ToolDataSetting.XZ.jpg" /> </para> <para> TOOL DATA SETTING - TURRET INFO -  X.SET <para>X = N for number of workpiece</para> <para>X = T for cutting time</para> <para>X = W for tool wear amount</para> <img src="Lathe.P300S.TurretInfo.jpg" /> </para> </Figure>
      <SubSystem> Please see <see href="SubSystemNoteTable.htm">Sub System Note Table For OSP-P300S</see> for more information if applicable. <para>Valid sub systems for this function (Y = Valid, N = Not valid)</para> <para> <list type="table"> <listheader> <term>NC_RUN </term> <term>NC_RUN_1 </term> <term>NC_RUN_2 </term> <term>NC_RUN_3 </term> <term>NC_PANEL </term> <term>NC_PANEL_1 </term> <term>NC_PANEL_2 </term> <term>NC_PANEL_3 </term> <term>NC_AL </term> <term>NC_AR </term> <term>NC_BL </term> <term>NC_BR </term> <term>NC_CL </term> <term>NC_CR </term> <term>NC_2AL </term> </listheader> <item> <term>Y (*42)</term> <term>Y (*42)</term> <term>Y (*42)</term> <term>N </term> <term>Y (*42)</term> <term>Y (*42)</term> <term>Y (*42)</term> <term>N </term> <term>Y (*42)</term> <term>Y (*42)</term> <term>Y (*42)</term> <term>Y (*42)</term> <term>N </term> <term>N </term> <term>N </term> </item> </list> </para> </SubSystem>
      <remarks>  <para> Compatible Chart of this function for different OSP controls: <list type="table"> <listheader> <term>OSP Control</term> <description>Compatible</description> </listheader> <item> <term>P100II</term> <description>No</description> </item> <item> <term>P200</term> <description>No</description> </item> <item> <term>P300L</term> <description>No</description> </item> <item> <term>P300S/TD Mode</term> <description>Yes</description> </item> <item> <term>P300S/TL Mode</term> <description>No</description> </item> </list> </para>  </remarks>
    </member>
    <member name="M:Okuma.CLDATAPI.DataAPI.CTools.SetToolLife(Okuma.CLDATAPI.Enumerations.ToolLifeConditionEnum,System.Int32,Okuma.CLDATAPI.Enumerations.ToolEdgeEnum,System.Double)">
      <summary>For OSP-P300S: Sets tool life SET value given registered tool number, edge number, and tool life condition for current sub system. </summary>
      <example> This sample shows how to call the SetToolLife() method. <para> Dim intToolNo As Integer	</para> <para> Dim enEdgeNo As ToolEdgeEnum	</para> <para> Dim enToolLifeCondition As ToolLifeConditionEnum 	</para> <para> Dim dblValue As Double	</para> <para> Dim intEdges() as Integer </para> <para> Dim objSpec as CSpec = new CSpec </para> <para> Dim objTool as CTools = new CTools </para> <para> Dim objMachine as CMachine = new CMachine </para> <para> if ( objSpec.GetControlType() = ControlTypeEnum.P300S And objMachine.GetTDMode()) then</para> <para>		if ( objTools.IsRegisteredTool(intToolNo) then </para> <para>			if ( objTools.IsMultiEdgesTool(intToolNo) then</para> <para>				enEdgeNo = objTools.GetRegisteredToolEdges(intToolNo)</para> <para>				For each intEdgeNo in intEdges</para> <para>					objTool.SetToolLife(enToolLifeCondition, intToolNo, enEdgeNo, dblValue)	</para> <para>				Next </para> <para>			else </para> <para>				objTool.SetToolLife(enToolLifeCondition, intToolNo, 1, dblValue)	</para> <para>			End If</para> <para>		End If</para> <para> End If</para> </example>
      <param name="enToolLifeCondition">Tool Life condition</param>
      <param name="intToolNo">Tool Number</param>
      <param name="enEdgeNo">Edge Number. Using Edge No. 1 if tool is a non-multi edges tool.</param>
      <param name="dblValue">setting value</param>
      <DataUnit> <para> The unit depends on the specified tool life condition: </para> <list type="table"> <listheader> <term>Tool Life Condition</term> <description>Unit</description> </listheader> <item> <term>Cutting Time</term> <description>Second</description> </item> <item> <term>Wear</term> <description>By default, unit of wear amount is in millimeter.  Other units can be set by calling SetDataUnit.</description> </item> <item> <term>Workpiece</term> <description>A unit(machined workpiece)</description> </item> </list> </DataUnit>
      <exception cref="System.ApplicationException">Thrown when function fails to perform the operation at current NC condition.</exception>
      <exception cref="System.NotSupportedException">Thrown when operation/input parameters are not supported for the current system.</exception>
      <Figure> <para> TOOL DATA SETTING - TOOL DATA (ALL) -  TOOL LIFE MANAGE -  X.SET <para>X = N for number of workpiece</para> <para>X = T for cutting time</para> <para>X = W for tool wear amount</para> <img src="Lathe.P300.TD.ToolDataSetting.XZ.jpg" /> </para> <para> TOOL DATA SETTING - TURRET INFO -  X.SET <para>X = N for number of workpiece</para> <para>X = T for cutting time</para> <para>X = W for tool wear amount</para> <img src="Lathe.P300S.TurretInfo.jpg" /> </para> </Figure>
      <SubSystem> Please see <see href="SubSystemNoteTable.htm">Sub System Note Table For OSP-P300S</see> for more information if applicable. <para>Valid sub systems for this function (Y = Valid, N = Not valid)</para> <para> <list type="table"> <listheader> <term>NC_RUN </term> <term>NC_RUN_1 </term> <term>NC_RUN_2 </term> <term>NC_RUN_3 </term> <term>NC_PANEL </term> <term>NC_PANEL_1 </term> <term>NC_PANEL_2 </term> <term>NC_PANEL_3 </term> <term>NC_AL </term> <term>NC_AR </term> <term>NC_BL </term> <term>NC_BR </term> <term>NC_CL </term> <term>NC_CR </term> <term>NC_2AL </term> </listheader> <item> <term>Y (*42)</term> <term>Y (*42)</term> <term>Y (*42)</term> <term>N </term> <term>Y (*42)</term> <term>Y (*42)</term> <term>Y (*42)</term> <term>N </term> <term>Y (*42)</term> <term>Y (*42)</term> <term>Y (*42)</term> <term>Y (*42)</term> <term>N </term> <term>N </term> <term>N </term> </item> </list> </para> </SubSystem>
      <remarks>  <para> Compatible Chart of this function for different OSP controls: <list type="table"> <listheader> <term>OSP Control</term> <description>Compatible</description> </listheader> <item> <term>P100II</term> <description>No</description> </item> <item> <term>P200</term> <description>No</description> </item> <item> <term>P300L</term> <description>No</description> </item> <item> <term>P300S/TD Mode</term> <description>Yes</description> </item> <item> <term>P300S/TL Mode</term> <description>No</description> </item> </list> </para>  </remarks>
    </member>
    <member name="M:Okuma.CLDATAPI.DataAPI.CTools.AddToolLife(Okuma.CLDATAPI.Enumerations.ToolLifeConditionEnum,System.Int32,Okuma.CLDATAPI.Enumerations.ToolEdgeEnum,System.Double)">
      <summary>For OSP-P300S: Sets the tool life by adding the input value to the existing data given registered tool number, edge number, and tool life condition for current sub system. </summary>
      <example> This sample shows how to call the AddToolLife() method. <para> Dim intToolNo As Integer	</para> <para> Dim enEdgeNo As ToolEdgeEnum	</para> <para> Dim enToolLifeCondition As ToolLifeConditionEnum 	</para> <para> Dim dblValue As Double	</para> <para> Dim intEdges() as Integer </para> <para> Dim objSpec as CSpec = new CSpec </para> <para> Dim objTool as CTools = new CTools </para> <para> Dim objMachine as CMachine = new CMachine </para> <para> if ( objSpec.GetControlType() = ControlTypeEnum.P300S And objMachine.GetTDMode()) then</para> <para>		if ( objTools.IsRegisteredTool(intToolNo) then </para> <para>			if ( objTools.IsMultiEdgesTool(intToolNo) then</para> <para>				enEdgeNo = objTools.GetRegisteredToolEdges(intToolNo)</para> <para>				For each intEdgeNo in intEdges</para> <para>					objTool.AddToolLife(enToolLifeCondition, intToolNo, enEdgeNo, dblValue)	</para> <para>				Next </para> <para>			else </para> <para>				objTool.AddToolLife(enToolLifeCondition, intToolNo, 1, dblValue)	</para> <para>			End If</para> <para>		End If</para> <para> End If</para> </example>
      <param name="enToolLifeCondition">Tool Life condition</param>
      <param name="intToolNo">Tool Number</param>
      <param name="enEdgeNo">Edge Number. Using Edge No. 1 if tool is a non-multi edges tool.</param>
      <param name="dblValue">adding value</param>
      <DataUnit> <para> The unit depends on the specified tool life condition: </para> <list type="table"> <listheader> <term>Tool Life Condition</term> <description>Unit</description> </listheader> <item> <term>Cutting Time</term> <description>Second</description> </item> <item> <term>Wear</term> <description>By default, unit of wear amount is in millimeter.  Other units can be set by calling SetDataUnit.</description> </item> <item> <term>Workpiece</term> <description>A unit(machined workpiece)</description> </item> </list> </DataUnit>
      <exception cref="System.ApplicationException">Thrown when function fails to perform the operation at current NC condition.</exception>
      <exception cref="System.NotSupportedException">Thrown when operation/input parameters are not supported for the current system.</exception>
      <Figure> <para> TOOL DATA SETTING - TOOL DATA (ALL) -  TOOL LIFE MANAGE -  X.SET <para>X = N for number of workpiece</para> <para>X = T for cutting time</para> <para>X = W for tool wear amount</para> <img src="Lathe.P300.TD.ToolDataSetting.XZ.jpg" /> </para> <para> TOOL DATA SETTING - TURRET INFO -  X.SET <para>X = N for number of workpiece</para> <para>X = T for cutting time</para> <para>X = W for tool wear amount</para> <img src="Lathe.P300S.TurretInfo.jpg" /> </para> </Figure>
      <SubSystem> Please see <see href="SubSystemNoteTable.htm">Sub System Note Table For OSP-P300S</see> for more information if applicable. <para>Valid sub systems for this function (Y = Valid, N = Not valid)</para> <para> <list type="table"> <listheader> <term>NC_RUN </term> <term>NC_RUN_1 </term> <term>NC_RUN_2 </term> <term>NC_RUN_3 </term> <term>NC_PANEL </term> <term>NC_PANEL_1 </term> <term>NC_PANEL_2 </term> <term>NC_PANEL_3 </term> <term>NC_AL </term> <term>NC_AR </term> <term>NC_BL </term> <term>NC_BR </term> <term>NC_CL </term> <term>NC_CR </term> <term>NC_2AL </term> </listheader> <item> <term>Y (*42)</term> <term>Y (*42)</term> <term>Y (*42)</term> <term>N </term> <term>Y (*42)</term> <term>Y (*42)</term> <term>Y (*42)</term> <term>N </term> <term>Y (*42)</term> <term>Y (*42)</term> <term>Y (*42)</term> <term>Y (*42)</term> <term>N </term> <term>N </term> <term>N </term> </item> </list> </para> </SubSystem>
      <remarks>  <para> Compatible Chart of this function for different OSP controls: <list type="table"> <listheader> <term>OSP Control</term> <description>Compatible</description> </listheader> <item> <term>P100II</term> <description>No</description> </item> <item> <term>P200</term> <description>No</description> </item> <item> <term>P300L</term> <description>No</description> </item> <item> <term>P300S/TD Mode</term> <description>Yes</description> </item> <item> <term>P300S/TL Mode</term> <description>No</description> </item> </list> </para>  </remarks>
    </member>
    <member name="M:Okuma.CLDATAPI.DataAPI.CTools.GetActualToolLife(Okuma.CLDATAPI.Enumerations.ToolLifeConditionEnum,System.Int32,Okuma.CLDATAPI.Enumerations.ToolEdgeEnum)">
      <summary>For OSP-P300: Gets Tool life actual value given registered tool number, edge number, and tool life condition for current sub system. </summary>
      <example> This sample shows how to call the GetActualToolLife() method. <para> Dim intToolNo As Integer	</para> <para> Dim enEdgeNo As ToolEdgeEnum	= ToolEdgeEnum.ToolEdge_01 </para> <para> Dim enToolLifeCondition As ToolLifeConditionEnum 	</para> <para> Dim dblValue As Double	</para> <para> Dim intEdges() as Integer </para> <para> Dim objSpec as CSpec = new CSpec </para> <para> Dim objTool as CTools = new CTools </para> <para> Dim objMachine as CMachine = new CMachine </para> <para> if ( objSpec.GetControlType() = ControlTypeEnum.P300S And objMachine.GetTDMode()) then</para> <para>		if ( objTools.IsRegisteredTool(intToolNo) then </para> <para>			if ( objTools.IsMultiEdgesTool(intToolNo) then</para> <para>				enEdgeNo = objTools.GetRegisteredToolEdges(intToolNo)</para> <para>				For each intEdgeNo in intEdges</para> <para>					dblValue = objTool.GetActualToolLife(enToolLifeCondition, intToolNo, enEdgeNo)	</para> <para>				Next </para> <para>			else </para> <para>				dblValue = objTool.GetActualToolLife(enToolLifeCondition, intToolNo, enEdgeNo)	</para> <para>			End If</para> <para>		End If</para> <para> End If</para> </example>
      <param name="enToolLifeCondition">A tool life condition for getting tool life</param>
      <param name="intToolNo">Tool Number</param>
      <param name="enEdgeNo">Edge Number. Using Edge No. 1 if tool is a non-multi edges tool.</param>
      <returns>A System.Double value represents actual tool life.</returns>
      <DataUnit> <para> The unit depends on the specified tool life condition: </para> <list type="table"> <listheader> <term>Tool Life Condition</term> <description>Unit</description> </listheader> <item> <term>Cutting Time</term> <description>Second</description> </item> <item> <term>Wear</term> <description>By default, unit of wear amount is in millimeter.  Other units can be set by calling SetDataUnit.</description> </item> <item> <term>Workpiece</term> <description>A unit(machined workpiece)</description> </item> </list> </DataUnit>
      <exception cref="System.ApplicationException">Thrown when function fails to perform the operation at current NC condition.</exception>
      <exception cref="System.NotSupportedException">Thrown when operation/input parameters are not supported for the current system.</exception>
      <Figure> <para> TOOL DATA SETTING - TOOL DATA (ALL) -  TOOL LIFE MANAGE -  X.ACTUAL <para>X = N for number of workpiece</para> <para>X = T for cutting time</para> <para>X = W for tool wear amount</para> <img src="Lathe.P300.TD.ToolDataSetting.XZ.jpg" /> </para> <para> TOOL DATA SETTING - TURRET INFO -  X.ACTUAL <para>X = N for number of workpiece</para> <para>X = T for cutting time</para> <para>X = W for tool wear amount</para> <img src="Lathe.P300S.TurretInfo.jpg" /> </para> </Figure>
      <SubSystem> Please see <see href="SubSystemNoteTable.htm">Sub System Note Table For OSP-P300S</see> for more information if applicable. <para>Valid sub systems for this function (Y = Valid, N = Not valid)</para> <para> <list type="table"> <listheader> <term>NC_RUN </term> <term>NC_RUN_1 </term> <term>NC_RUN_2 </term> <term>NC_RUN_3 </term> <term>NC_PANEL </term> <term>NC_PANEL_1 </term> <term>NC_PANEL_2 </term> <term>NC_PANEL_3 </term> <term>NC_AL </term> <term>NC_AR </term> <term>NC_BL </term> <term>NC_BR </term> <term>NC_CL </term> <term>NC_CR </term> <term>NC_2AL </term> </listheader> <item> <term>Y (*42)</term> <term>Y (*42)</term> <term>Y (*42)</term> <term>N </term> <term>Y (*42)</term> <term>Y (*42)</term> <term>Y (*42)</term> <term>N </term> <term>Y (*42)</term> <term>Y (*42)</term> <term>Y (*42)</term> <term>Y (*42)</term> <term>N </term> <term>N </term> <term>N </term> </item> </list> </para> </SubSystem>
      <remarks>  <para> Compatible Chart of this function for different OSP controls: <list type="table"> <listheader> <term>OSP Control</term> <description>Compatible</description> </listheader> <item> <term>P100II</term> <description>No</description> </item> <item> <term>P200</term> <description>No</description> </item> <item> <term>P300L</term> <description>No</description> </item> <item> <term>P300S/TD Mode</term> <description>Yes</description> </item> <item> <term>P300S/TL Mode</term> <description>No</description> </item> </list> </para>  </remarks>
    </member>
    <member name="M:Okuma.CLDATAPI.DataAPI.CTools.SetActualToolLife(Okuma.CLDATAPI.Enumerations.ToolLifeConditionEnum,System.Int32,Okuma.CLDATAPI.Enumerations.ToolEdgeEnum,System.Double)">
      <summary>For OSP-P300: Sets Actual tool life value given registered tool number, edge number, and tool life condition for current sub system. </summary>
      <example> This sample shows how to call the SetActualToolLife() method. <para> Dim intToolNo As Integer	</para> <para> Dim enEdgeNo As ToolEdgeEnum	</para> <para> Dim enToolLifeCondition As ToolLifeConditionEnum 	</para> <para> Dim dblValue As Double	</para> <para> Dim intEdges() as Integer </para> <para> Dim objSpec as CSpec = new CSpec </para> <para> Dim objTool as CTools = new CTools </para> <para> Dim objMachine as CMachine = new CMachine </para> <para> if ( objSpec.GetControlType() = ControlTypeEnum.P300S And objMachine.GetTDMode()) then</para> <para>		if ( objTools.IsRegisteredTool(intToolNo) then </para> <para>			if ( objTools.IsMultiEdgesTool(intToolNo) then</para> <para>				enEdgeNo = objTools.GetRegisteredToolEdges(intToolNo)</para> <para>				For each intEdgeNo in intEdges</para> <para>					objTool.SetActualToolLife(enToolLifeCondition, intToolNo, enEdgeNo, dblValue)	</para> <para>				Next </para> <para>			else </para> <para>				objTool.SetActualToolLife(enToolLifeCondition, intToolNo, 1, dblValue)	</para> <para>			End If</para> <para>		End If</para> <para> End If</para> </example>
      <param name="enToolLifeCondition">Tool Life condition</param>
      <param name="intToolNo">Tool Number</param>
      <param name="enEdgeNo">Edge Number. Using Edge No. 1 if tool is a non-multi edges tool.</param>
      <param name="dblValue">setting value</param>
      <DataUnit> <para> The unit depends on the specified tool life condition: </para> <list type="table"> <listheader> <term>Tool Life Condition</term> <description>Unit</description> </listheader> <item> <term>Cutting Time</term> <description>Second</description> </item> <item> <term>Wear</term> <description>By default, unit of wear amount is in millimeter.  Other units can be set by calling SetDataUnit.</description> </item> <item> <term>Workpiece</term> <description>A unit(machined workpiece)</description> </item> </list> </DataUnit>
      <exception cref="System.ApplicationException">Thrown when function fails to perform the operation at current NC condition.</exception>
      <exception cref="System.NotSupportedException">Thrown when operation/input parameters are not supported for the current system.</exception>
      <Figure> <para> TOOL DATA SETTING - TOOL DATA (ALL) -  TOOL LIFE MANAGE -  X.ACTUAL <para>X = N for number of workpiece</para> <para>X = T for cutting time</para> <para>X = W for tool wear amount</para> <img src="Lathe.P300.TD.ToolDataSetting.XZ.jpg" /> </para> <para> TOOL DATA SETTING - TURRET INFO -  X.ACTUAL <para>X = N for number of workpiece</para> <para>X = T for cutting time</para> <para>X = W for tool wear amount</para> <img src="Lathe.P300S.TurretInfo.jpg" /> </para> </Figure>
      <SubSystem> Please see <see href="SubSystemNoteTable.htm">Sub System Note Table For OSP-P300S</see> for more information if applicable. <para>Valid sub systems for this function (Y = Valid, N = Not valid)</para> <para> <list type="table"> <listheader> <term>NC_RUN </term> <term>NC_RUN_1 </term> <term>NC_RUN_2 </term> <term>NC_RUN_3 </term> <term>NC_PANEL </term> <term>NC_PANEL_1 </term> <term>NC_PANEL_2 </term> <term>NC_PANEL_3 </term> <term>NC_AL </term> <term>NC_AR </term> <term>NC_BL </term> <term>NC_BR </term> <term>NC_CL </term> <term>NC_CR </term> <term>NC_2AL </term> </listheader> <item> <term>Y (*42)</term> <term>Y (*42)</term> <term>Y (*42)</term> <term>N </term> <term>Y (*42)</term> <term>Y (*42)</term> <term>Y (*42)</term> <term>N </term> <term>Y (*42)</term> <term>Y (*42)</term> <term>Y (*42)</term> <term>Y (*42)</term> <term>N </term> <term>N </term> <term>N </term> </item> </list> </para> </SubSystem>
      <remarks>  <para> Compatible Chart of this function for different OSP controls: <list type="table"> <listheader> <term>OSP Control</term> <description>Compatible</description> </listheader> <item> <term>P100II</term> <description>No</description> </item> <item> <term>P200</term> <description>No</description> </item> <item> <term>P300L</term> <description>No</description> </item> <item> <term>P300S/TD Mode</term> <description>Yes</description> </item> <item> <term>P300S/TL Mode</term> <description>No</description> </item> </list> </para>  </remarks>
    </member>
    <member name="M:Okuma.CLDATAPI.DataAPI.CTools.AddActualToolLife(Okuma.CLDATAPI.Enumerations.ToolLifeConditionEnum,System.Int32,Okuma.CLDATAPI.Enumerations.ToolEdgeEnum,System.Double)">
      <summary>For OSP-P300S: Sets the tool life by adding the input value to the existing data given registered tool number, edge number, and tool life condition for current sub system. </summary>
      <example> This sample shows how to call the AddActualToolLife() method. <para> Dim intToolNo As Integer	</para> <para> Dim enEdgeNo As ToolEdgeEnum	</para> <para> Dim enToolLifeCondition As ToolLifeConditionEnum 	</para> <para> Dim dblValue As Double	</para> <para> Dim intEdges() as Integer </para> <para> Dim objSpec as CSpec = new CSpec </para> <para> Dim objTool as CTools = new CTools </para> <para> Dim objMachine as CMachine = new CMachine </para> <para> if ( objSpec.GetControlType() = ControlTypeEnum.P300S And objMachine.GetTDMode()) then</para> <para>		if ( objTools.IsRegisteredTool(intToolNo) then </para> <para>			if ( objTools.IsMultiEdgesTool(intToolNo) then</para> <para>				enEdgeNo = objTools.GetRegisteredToolEdges(intToolNo)</para> <para>				For each intEdgeNo in intEdges</para> <para>					objTool.AddActualToolLife(enToolLifeCondition, intToolNo, enEdgeNo, dblValue)	</para> <para>				Next </para> <para>			else </para> <para>				objTool.AddActualToolLife(enToolLifeCondition, intToolNo, 1, dblValue)	</para> <para>			End If</para> <para>		End If</para> <para> End If</para> </example>
      <param name="enToolLifeCondition">Tool Life condition</param>
      <param name="intToolNo">Tool Number</param>
      <param name="enEdgeNo">Edge Number. Using Edge No. 1 if tool is a non-multi edges tool.</param>
      <param name="dblValue">setting value</param>
      <DataUnit> <para> The unit depends on the specified tool life condition: </para> <list type="table"> <listheader> <term>Tool Life Condition</term> <description>Unit</description> </listheader> <item> <term>Cutting Time</term> <description>Second</description> </item> <item> <term>Wear</term> <description>By default, unit of wear amount is in millimeter.  Other units can be set by calling SetDataUnit.</description> </item> <item> <term>Workpiece</term> <description>A unit(machined workpiece)</description> </item> </list> </DataUnit>
      <exception cref="System.ApplicationException">Thrown when function fails to perform the operation at current NC condition.</exception>
      <exception cref="System.NotSupportedException">Thrown when operation/input parameters are not supported for the current system.</exception>
      <Figure> <para> TOOL DATA SETTING - TOOL DATA (ALL) -  TOOL LIFE MANAGE -  X.ACTUAL <para>X = N for number of workpiece</para> <para>X = T for cutting time</para> <para>X = W for tool wear amount</para> <img src="Lathe.P300.TD.ToolDataSetting.XZ.jpg" /> </para> <para> TOOL DATA SETTING - TURRET INFO -  X.ACTUAL <para>X = N for number of workpiece</para> <para>X = T for cutting time</para> <para>X = W for tool wear amount</para> <img src="Lathe.P300S.TurretInfo.jpg" /> </para> </Figure>
      <SubSystem> Please see <see href="SubSystemNoteTable.htm">Sub System Note Table For OSP-P300S</see> for more information if applicable. <para>Valid sub systems for this function (Y = Valid, N = Not valid)</para> <para> <list type="table"> <listheader> <term>NC_RUN </term> <term>NC_RUN_1 </term> <term>NC_RUN_2 </term> <term>NC_RUN_3 </term> <term>NC_PANEL </term> <term>NC_PANEL_1 </term> <term>NC_PANEL_2 </term> <term>NC_PANEL_3 </term> <term>NC_AL </term> <term>NC_AR </term> <term>NC_BL </term> <term>NC_BR </term> <term>NC_CL </term> <term>NC_CR </term> <term>NC_2AL </term> </listheader> <item> <term>Y (*42)</term> <term>Y (*42)</term> <term>Y (*42)</term> <term>N </term> <term>Y (*42)</term> <term>Y (*42)</term> <term>Y (*42)</term> <term>N </term> <term>Y (*42)</term> <term>Y (*42)</term> <term>Y (*42)</term> <term>Y (*42)</term> <term>N </term> <term>N </term> <term>N </term> </item> </list> </para> </SubSystem>
      <remarks>  <para> Compatible Chart of this function for different OSP controls: <list type="table"> <listheader> <term>OSP Control</term> <description>Compatible</description> </listheader> <item> <term>P100II</term> <description>No</description> </item> <item> <term>P200</term> <description>No</description> </item> <item> <term>P300L</term> <description>No</description> </item> <item> <term>P300S/TD Mode</term> <description>Yes</description> </item> <item> <term>P300S/TL Mode</term> <description>No</description> </item> </list> </para>  </remarks>
    </member>
    <member name="M:Okuma.CLDATAPI.DataAPI.CTools.GetToolWearOffset(System.Int32,Okuma.CLDATAPI.Enumerations.ToolWearOffsetAxisIndexEnum,Okuma.CLDATAPI.Enumerations.ToolEdgeEnum,Okuma.CLDATAPI.Enumerations.ToolCuttingPositionEnum)">
      <summary>For OSP-P300: Gets Tool wear offset value at the specified registered tool number, axis index, edge number, and cutting position for current sub system. </summary>
      <example> This sample shows how to call the GetToolWearOffset() method. <para>		Dim intToolNo As Integer	</para> <para>	    Dim enAxisIndex	as ToolWearOffsetAxisIndexEnum</para> <para>	    Dim enToolCuttingPosition	as ToolCuttingPositionEnum</para> <para>		Dim enEdgeNo As ToolEdgeEnum	</para> <para>	    Dim dblValue As Double	</para> <para>	    dblValue = objTool.GetToolWearOffset(intToolNo, enAxisIndex, enEdgeNo, enToolCuttingPosition)	</para> </example>
      <param name="intToolNo">Tool Number</param>
      <param name="enAxisIndex">Axis index</param>
      <param name="enEdgeNo">Edge Number. Using Edge No. 1 if tool is a non-multi edges tool.</param>
      <param name="enToolCuttingPosition">Tool Cutting Position</param>
      <returns>A System.Double value</returns>
      <DataUnit> Default unit is in mm.  Other unit can be set by calling SetDataUnit method </DataUnit>
      <exception cref="System.ApplicationException">Thrown when function fails to perform the operation at current NC condition.</exception>
      <exception cref="System.NotSupportedException">Thrown when operation/input parameters are not supported for the current system.</exception>
      <Figure> <para> TOOL DATA SETTING - TOOL DATA (ALL) -  TOOL WEAR - X, Z <img src="Lathe.P300.TD.ToolDataSetting.XZ.jpg" /> </para> </Figure>
      <SubSystem> Please see <see href="SubSystemNoteTable.htm">Sub System Note Table</see> for more information if applicable. <para>Valid sub systems for this function (Y = Valid, N = Not valid)</para> <para> <list type="table"> <listheader> <term>NC_RUN </term> <term>NC_RUN_1 </term> <term>NC_RUN_2 </term> <term>NC_RUN_3 </term> <term>NC_PANEL </term> <term>NC_PANEL_1 </term> <term>NC_PANEL_2 </term> <term>NC_PANEL_3 </term> <term>NC_AL </term> <term>NC_AR </term> <term>NC_BL </term> <term>NC_BR </term> <term>NC_CL </term> <term>NC_CR </term> <term>NC_2AL </term> </listheader> <item> <term>Y (*41)</term> <term>Y (*41)</term> <term>Y (*41)</term> <term>N </term> <term>Y (*41)</term> <term>Y (*41)</term> <term>Y (*41)</term> <term>N </term> <term>Y (*41)</term> <term>Y (*41)</term> <term>Y (*41)</term> <term>Y (*41)</term> <term>N </term> <term>N </term> <term>Y (*41)</term> </item> </list> </para> </SubSystem>
      <remarks>  <para> Compatible Chart of this function for different OSP controls: <list type="table"> <listheader> <term>OSP Control</term> <description>Compatible</description> </listheader> <item> <term>P100II</term> <description>No</description> </item> <item> <term>P200</term> <description>No</description> </item> <item> <term>P300L</term> <description>No</description> </item> <item> <term>P300S/TD Mode</term> <description>Yes</description> </item> <item> <term>P300S/TL Mode</term> <description>No</description> </item> </list> </para>  </remarks>
    </member>
    <member name="M:Okuma.CLDATAPI.DataAPI.CTools.SetToolWearOffset(System.Int32,Okuma.CLDATAPI.Enumerations.ToolWearOffsetAxisIndexEnum,Okuma.CLDATAPI.Enumerations.ToolEdgeEnum,Okuma.CLDATAPI.Enumerations.ToolCuttingPositionEnum,System.Double)">
      <summary>For OSP-P300: Sets tool wear offset value at the specified registered tool number, axis index, edge number, and cutting position for current sub system. </summary>
      <example> This sample shows how to call the SetToolWearOffset() method. <para>		Dim intToolNo As Integer	</para> <para>	    Dim enAxisIndex	as ToolWearOffsetAxisIndexEnum</para> <para>	    Dim enToolCuttingPosition	as ToolCuttingPositionEnum</para> <para>		Dim enEdgeNo As ToolEdgeEnum	</para> <para>	    Dim dblValue As Double	</para> <para>	    objTool.SetToolWearOffset(intToolNo, enAxisIndex, enEdgeNo, enToolCuttingPosition, dblValue)	</para> </example>
      <param name="intToolNo">Tool Number</param>
      <param name="enAxisIndex">Axis index</param>
      <param name="enEdgeNo">Edge Number. Using Edge No. 1 if tool is a non-multi edges tool.</param>
      <param name="enToolCuttingPosition">Tool Cutting Position</param>
      <param name="dblValue">setting value</param>
      <DataUnit> Default unit is in mm.  Other unit can be set by calling SetDataUnit method </DataUnit>
      <exception cref="System.ApplicationException">Thrown when function fails to perform the operation at current NC condition.</exception>
      <exception cref="System.NotSupportedException">Thrown when operation/input parameters are not supported for the current system.</exception>
      <Figure> <para> TOOL DATA SETTING - TOOL DATA (ALL) -  TOOL WEAR - X, Z <img src="Lathe.P300.TD.ToolDataSetting.XZ.jpg" /> </para> </Figure>
      <SubSystem> Please see <see href="SubSystemNoteTable.htm">Sub System Note Table</see> for more information if applicable. <para>Valid sub systems for this function (Y = Valid, N = Not valid)</para> <para> <list type="table"> <listheader> <term>NC_RUN </term> <term>NC_RUN_1 </term> <term>NC_RUN_2 </term> <term>NC_RUN_3 </term> <term>NC_PANEL </term> <term>NC_PANEL_1 </term> <term>NC_PANEL_2 </term> <term>NC_PANEL_3 </term> <term>NC_AL </term> <term>NC_AR </term> <term>NC_BL </term> <term>NC_BR </term> <term>NC_CL </term> <term>NC_CR </term> <term>NC_2AL </term> </listheader> <item> <term>Y (*41)</term> <term>Y (*41)</term> <term>Y (*41)</term> <term>N </term> <term>Y (*41)</term> <term>Y (*41)</term> <term>Y (*41)</term> <term>N </term> <term>Y (*41)</term> <term>Y (*41)</term> <term>Y (*41)</term> <term>Y (*41)</term> <term>N </term> <term>N </term> <term>Y (*41)</term> </item> </list> </para> </SubSystem>
      <remarks>  <para> Compatible Chart of this function for different OSP controls: <list type="table"> <listheader> <term>OSP Control</term> <description>Compatible</description> </listheader> <item> <term>P100II</term> <description>No</description> </item> <item> <term>P200</term> <description>No</description> </item> <item> <term>P300L</term> <description>No</description> </item> <item> <term>P300S/TD Mode</term> <description>Yes</description> </item> <item> <term>P300S/TL Mode</term> <description>No</description> </item> </list> </para>  </remarks>
    </member>
    <member name="M:Okuma.CLDATAPI.DataAPI.CTools.AddToolWearOffset(System.Int32,Okuma.CLDATAPI.Enumerations.ToolWearOffsetAxisIndexEnum,Okuma.CLDATAPI.Enumerations.ToolEdgeEnum,Okuma.CLDATAPI.Enumerations.ToolCuttingPositionEnum,System.Double)">
      <summary>For OSP-P300: Sets tool wear offset value by adding the input value to the existing data of offset given registered tool number, axis index, edge number, and cutting position for current sub system. </summary>
      <example> This sample shows how to call the AddToolWearOffset() method. <para>		Dim intToolNo As Integer	</para> <para>	    Dim enAxisIndex	as ToolWearOffsetAxisIndexEnum</para> <para>	    Dim enToolCuttingPosition	as ToolCuttingPositionEnum</para> <para>		Dim enEdgeNo As ToolEdgeEnum	</para> <para>	    Dim dblValue As Double	</para> <para>	    objTool.AddToolWearOffset(intToolNo, enAxisIndex, enEdgeNo, enToolCuttingPosition, dblValue)	</para> </example>
      <param name="intToolNo">Tool Number</param>
      <param name="enAxisIndex">Axis index</param>
      <param name="enEdgeNo">Edge Number. Using Edge No. 1 if tool is a non-multi edges tool.</param>
      <param name="enToolCuttingPosition">Tool Cutting Position</param>
      <param name="dblValue">adding value</param>
      <DataUnit> Default unit is in mm.  Other unit can be set by calling SetDataUnit method </DataUnit>
      <exception cref="System.ApplicationException">Thrown when function fails to perform the operation at current NC condition.</exception>
      <exception cref="System.NotSupportedException">Thrown when operation/input parameters are not supported for the current system.</exception>
      <Figure> <para> TOOL DATA SETTING - TOOL DATA (ALL) -  TOOL WEAR - X, Z <img src="Lathe.P300.TD.ToolDataSetting.XZ.jpg" /> </para> </Figure>
      <SubSystem> Please see <see href="SubSystemNoteTable.htm">Sub System Note Table</see> for more information if applicable. <para>Valid sub systems for this function (Y = Valid, N = Not valid)</para> <para> <list type="table"> <listheader> <term>NC_RUN </term> <term>NC_RUN_1 </term> <term>NC_RUN_2 </term> <term>NC_RUN_3 </term> <term>NC_PANEL </term> <term>NC_PANEL_1 </term> <term>NC_PANEL_2 </term> <term>NC_PANEL_3 </term> <term>NC_AL </term> <term>NC_AR </term> <term>NC_BL </term> <term>NC_BR </term> <term>NC_CL </term> <term>NC_CR </term> <term>NC_2AL </term> </listheader> <item> <term>Y (*41)</term> <term>Y (*41)</term> <term>Y (*41)</term> <term>N </term> <term>Y (*41)</term> <term>Y (*41)</term> <term>Y (*41)</term> <term>N </term> <term>Y (*41)</term> <term>Y (*41)</term> <term>Y (*41)</term> <term>Y (*41)</term> <term>N </term> <term>N </term> <term>Y (*41)</term> </item> </list> </para> </SubSystem>
      <remarks>  <para> Compatible Chart of this function for different OSP controls: <list type="table"> <listheader> <term>OSP Control</term> <description>Compatible</description> </listheader> <item> <term>P100II</term> <description>No</description> </item> <item> <term>P200</term> <description>No</description> </item> <item> <term>P300L</term> <description>No</description> </item> <item> <term>P300S/TD Mode</term> <description>Yes</description> </item> <item> <term>P300S/TL Mode</term> <description>No</description> </item> </list> </para>  </remarks>
    </member>
    <member name="M:Okuma.CLDATAPI.DataAPI.CTools.GetToolOffset(System.Int32,Okuma.CLDATAPI.Enumerations.ToolOffsetAxisIndexEnum,Okuma.CLDATAPI.Enumerations.ToolEdgeEnum,Okuma.CLDATAPI.Enumerations.ToolCuttingPositionEnum)">
      <summary>For OSP-P300: Gets tool offset value at the specified registered tool number, axis index, cutting position, and edge number for current sub system. </summary>
      <example> This sample shows how to call the GetToolOffset() method. <para>		Dim intToolNo As Integer	</para> <para>	    Dim enAxisIndex	as ToolOffsetAxisIndexEnum</para> <para>	    Dim enToolCuttingPosition	as ToolCuttingPositionEnum</para> <para>	    Dim enEdgeNo As ToolEdgeEnum	</para> <para>	    dblValue = objTool.GetToolOffset(intToolNo, enAxisIndex, enToolCuttingPosition, enEdgeNo)	</para> </example>
      <param name="intToolNo">Tool Number</param>
      <param name="enAxisIndex">Axis index</param>
      <param name="enToolCuttingPosition">Tool Cutting Position</param>
      <param name="enEdgeNo">Edge Number. Using Edge No. 1 if tool is a non-multi edges tool.</param>
      <returns>A System.Double value represents the offset value of the given tool number.</returns>
      <DataUnit> Default unit is in mm.  Other unit can be set by calling SetDataUnit method </DataUnit>
      <exception cref="System.ApplicationException">Thrown when function fails to perform the operation at current NC condition.</exception>
      <exception cref="System.NotSupportedException">Thrown when operation/input parameters are not supported for the current system.</exception>
      <Figure> TOOL DATA SETTING - TOOL DATA (ALL) -  TOOL OFFSET <para> <img src="Lathe.P300.TD.ToolDataSetting.jpg" /> </para> </Figure>
      <SubSystem> Please see <see href="SubSystemNoteTable.htm">Sub System Note Table</see> for more information if applicable. <para>Valid sub systems for this function (Y = Valid, N = Not valid)</para> <para> <list type="table"> <listheader> <term>NC_RUN </term> <term>NC_RUN_1 </term> <term>NC_RUN_2 </term> <term>NC_RUN_3 </term> <term>NC_PANEL </term> <term>NC_PANEL_1 </term> <term>NC_PANEL_2 </term> <term>NC_PANEL_3 </term> <term>NC_AL </term> <term>NC_AR </term> <term>NC_BL </term> <term>NC_BR </term> <term>NC_CL </term> <term>NC_CR </term> <term>NC_2AL </term> </listheader> <item> <term>Y (*39)</term> <term>Y (*39)</term> <term>Y (*39)</term> <term>N </term> <term>Y (*39)</term> <term>Y (*39)</term> <term>Y (*39)</term> <term>N </term> <term>Y (*39)</term> <term>Y (*39)</term> <term>Y (*39)</term> <term>Y (*39)</term> <term>N </term> <term>N </term> <term>N </term> </item> </list> </para> </SubSystem>
      <remarks>  <para> Compatible Chart of this function for different OSP controls: <list type="table"> <listheader> <term>OSP Control</term> <description>Compatible</description> </listheader> <item> <term>P100II</term> <description>No</description> </item> <item> <term>P200</term> <description>No</description> </item> <item> <term>P300L</term> <description>No</description> </item> <item> <term>P300S/TD Mode</term> <description>Yes</description> </item> <item> <term>P300S/TL Mode</term> <description>No</description> </item> </list> </para>  </remarks>
    </member>
    <member name="M:Okuma.CLDATAPI.DataAPI.CTools.SetToolOffset(System.Int32,Okuma.CLDATAPI.Enumerations.ToolOffsetAxisIndexEnum,Okuma.CLDATAPI.Enumerations.ToolEdgeEnum,Okuma.CLDATAPI.Enumerations.ToolCuttingPositionEnum,System.Double)">
      <summary> Set tool offset given tool number, edge number, tool cutting position, axis index </summary>
      <example> This sample shows how to call the SetToolOffset() method. <para>		Dim intToolNo As Integer	</para> <para>	    Dim enAxisIndex	as ToolOffsetAxisIndexEnum</para> <para>	    Dim enToolCuttingPosition	as ToolCuttingPositionEnum</para> <para>		Dim enEdgeNo As ToolEdgeEnum	</para> <para>	    Dim dblValue As Double	</para> <para>Dim objToolData As Okuma.CLDATAPI.DataAPi.CTools = new CTools</para> <para>objTool.SetToolOffset(intToolNo, enAxisIndex, enEdgeNo, enToolCuttingPosition, dblValue)	</para> </example>
      <DataUnit> Default unit is in mm.  Other unit can be set by calling SetDataUnit method </DataUnit>
      <exception cref="System.ApplicationException">Thrown when function fails to perform the operation at current NC condition.</exception>
      <exception cref="System.NotSupportedException">Thrown when operation/input parameters are not supported for the current system.</exception>
      <param name="intToolNo">Tool number</param>
      <param name="enAxisIndex">Axis Index</param>
      <param name="enEdgeNo">Edge No for multi-edges tool only</param>
      <param name="enToolCuttingPosition">Tool Cutting positions</param>
      <param name="dblValue">Offset value</param>
      <remarks> <para> Compatible Chart of this function for different OSP controls: <list type="table"> <listheader> <term>OSP Control</term> <description>Compatible</description> </listheader> <item> <term>P100II</term> <description>No</description> </item> <item> <term>P200</term> <description>No</description> </item> <item> <term>P300L</term> <description>No</description> </item> <item> <term>P300S/TD Mode</term> <description>Yes</description> </item> <item> <term>P300S/TL Mode</term> <description>No</description> </item> </list> </para> <para>For OSP-P300 control, this function is required to operate in an exclusive mode.</para> <para>It means it must be able to enter Edit Tool Data mode exclusively from other applications running on Windows including NC.</para> <para>At any point in time only one application can be in Edit Tool Data mode</para> <para>This function cannot be performed while NC is executing either in Auto or MDI mode</para> </remarks>
      <Figure> <para> TOOL DATA SETTING - TOOL DATA (ALL) -  TOOL OFFSET - X, Z, YI <img src="Lathe.P300.TD.ToolDataSetting.XZ.jpg" /> </para> </Figure>
      <history> [lhuynh]	6/17/2013	Created </history>
    </member>
    <member name="M:Okuma.CLDATAPI.DataAPI.CTools.AddToolOffset(System.Int32,Okuma.CLDATAPI.Enumerations.ToolOffsetAxisIndexEnum,Okuma.CLDATAPI.Enumerations.ToolEdgeEnum,Okuma.CLDATAPI.Enumerations.ToolCuttingPositionEnum,System.Double)">
      <summary> Sets Tool Offset value by adding the input value to the existing data at the specified tool number, edge number, tool cutting position, and axis index </summary>
      <example> This sample shows how to call the AddToolOffset() method. <para> Dim intToolNo As Integer	</para> <para> Dim enAxisIndex	as ToolOffsetAxisIndexEnum	</para> <para> Dim enToolCuttingPosition	as ToolCuttingPositionEnum	</para> <para> Dim enEdgeNo As ToolEdgeEnum		</para> <para> Dim dblValue As Double		</para> <para> Dim objToolData As Okuma.CLDATAPI.DataAPi.CTools = new CTools	</para> <para> objTool.AddToolOffset(intToolNo, enAxisIndex, enEdgeNo, enToolCuttingPosition, dblValue)	</para> </example>
      <DataUnit> Default unit is in mm.  Other unit can be set by calling SetDataUnit method </DataUnit>
      <exception cref="System.ApplicationException">Thrown when function fails to perform the operation at current NC condition.</exception>
      <exception cref="System.NotSupportedException">Thrown when operation/input parameters are not supported for the current system.</exception>
      <param name="intToolNo">Tool number</param>
      <param name="enAxisIndex">Axis Index</param>
      <param name="enEdgeNo">Edge No for multi-edges tool only</param>
      <param name="enToolCuttingPosition">Tool Cutting positions</param>
      <param name="dblValue">Offset value</param>
      <remarks> <para> Compatible Chart of this function for different OSP controls: <list type="table"> <listheader> <term>OSP Control</term> <description>Compatible</description> </listheader> <item> <term>P100II</term> <description>No</description> </item> <item> <term>P200</term> <description>No</description> </item> <item> <term>P300L</term> <description>No</description> </item> <item> <term>P300S/TD Mode</term> <description>Yes</description> </item> <item> <term>P300S/TL Mode</term> <description>No</description> </item> </list> </para> <para>For OSP-P300 control, this function is required to operate in an exclusive mode.</para> <para>It means it must be able to enter Edit Tool Data mode exclusively from other applications running on Windows including NC.</para> <para>At any point in time only one application can be in Edit Tool Data mode</para> <para>This function cannot be performed while NC is executing either in Auto or MDI mode</para> </remarks>
      <Figure> <para> TOOL DATA SETTING - TOOL DATA (ALL) -  TOOL OFFSET - X, Z, YI <img src="Lathe.P300.TD.ToolDataSetting.XZ.jpg" /> </para> </Figure>
      <history> [lhuynh]	6/17/2013	Created </history>
    </member>
    <member name="M:Okuma.CLDATAPI.DataAPI.CTools.CalToolOffset(System.Int32,Okuma.CLDATAPI.Enumerations.ToolOffsetAxisIndexEnum,Okuma.CLDATAPI.Enumerations.ToolEdgeEnum,Okuma.CLDATAPI.Enumerations.ToolCuttingPositionEnum,System.Double)">
      <summary> Determines tool offset value based on the calculation made for the input data and actual position </summary>
      <example> This sample shows how to call the CalToolOffset() method. <para>Dim intToolNo As Integer </para> <para>Dim enAxisIndex	as ToolOffsetAxisIndexEnum </para> <para>Dim enToolCuttingPosition	as ToolCuttingPositionEnum </para> <para>Dim enEdgeNo As ToolEdgeEnum	 </para> <para>Dim dblValue As Double	 </para> <para>Dim objToolData As Okuma.CLDATAPI.DataAPi.CTools = new CTools </para> <para>objTool.CalToolOffset(intToolNo, enAxisIndex, enEdgeNo, enToolCuttingPosition, dblValue)	 </para> </example>
      <DataUnit> Default unit is in mm.  Other unit can be set by calling SetDataUnit method </DataUnit>
      <exception cref="System.ApplicationException">Thrown when function fails to perform the operation at current NC condition.</exception>
      <exception cref="System.NotSupportedException">Thrown when operation/input parameters are not supported for the current system.</exception>
      <param name="intToolNo">Tool number</param>
      <param name="enAxisIndex">Axis Index</param>
      <param name="enEdgeNo">Edge No for multi-edges tool only</param>
      <param name="enToolCuttingPosition">Tool Cutting positions</param>
      <param name="dblValue">Offset value</param>
      <remarks> <para> Compatible Chart of this function for different OSP controls: <list type="table"> <listheader> <term>OSP Control</term> <description>Compatible</description> </listheader> <item> <term>P100II</term> <description>No</description> </item> <item> <term>P200</term> <description>No</description> </item> <item> <term>P300L</term> <description>No</description> </item> <item> <term>P300S/TD Mode</term> <description>Yes</description> </item> <item> <term>P300S/TL Mode</term> <description>No</description> </item> </list> </para> <para>For OSP-P300 control, this function is required to operate in an exclusive mode.</para> <para>It means it must be able to enter Edit Tool Data mode exclusively from other applications running on Windows including NC.</para> <para>At any point in time only one application can be in Edit Tool Data mode</para> </remarks>
      <Figure> <para> TOOL DATA SETTING - TOOL DATA (ALL) -  TOOL OFFSET - X, Z, YI <img src="Lathe.P300.TD.ToolDataSetting.XZ.jpg" /> </para> </Figure>
      <history> [lhuynh]	6/17/2013	Created </history>
    </member>
    <member name="M:Okuma.CLDATAPI.DataAPI.CTools.GetNoseRCompensation(System.Int32,Okuma.CLDATAPI.Enumerations.NoseRCompensationAxisIndexEnum,Okuma.CLDATAPI.Enumerations.ToolEdgeEnum,Okuma.CLDATAPI.Enumerations.ToolCuttingPositionEnum)">
      <summary>For OSP-P300: Gets Nose radius compensation value at the specified tool number, axis index, cutting position, and edge number for current sub system. </summary>
      <example> This sample shows how to call the GetNoseRCompensation() method. <para>		Dim intToolNo As Integer	</para> <para>	    Dim enAxisIndex	as NoseRCompensationAxisIndexEnum</para> <para>	    Dim enToolCuttingPosition	as ToolCuttingPositionEnum</para> <para>		Dim enEdgeNo As ToolEdgeEnum	</para> <para>	    Dim dblValue As Double	</para> <para>	    dblValue = objTool.GetNoseRCompensation(intToolNo, enAxisIndex, enToolCuttingPosition, enEdgeNo)	</para> </example>
      <param name="intToolNo">Tool Number</param>
      <param name="enAxisIndex">Axis index</param>
      <param name="enToolCuttingPosition">Tool Cutting Position</param>
      <param name="enEdgeNo">Edge Number. Using Edge No. 1 if tool is a non-multi edges tool.</param>
      <returns>A System.Double value</returns>
      <DataUnit> Default unit is in mm.  Other unit can be set by calling SetDataUnit method </DataUnit>
      <exception cref="System.ApplicationException">Thrown when function fails to perform the operation at current NC condition.</exception>
      <exception cref="System.NotSupportedException">Thrown when operation/input parameters are not supported for the current system.</exception>
      <Figure> <para> TOOL DATA SETTING - TOOL DATA (ALL) -  NOSE-R COMP - X, Z <img src="Lathe.P300.TD.ToolDataSetting.XZ.jpg" /> </para> <para> TOOL DATA SETTING - TOOL DATA (ALL) -  NOSE-R COMP - R, P <para> The value of R will be the value of Nose-R of X or Z which has a larger value. </para> <img src="Lathe.P300.TD.ToolDataSetting.RP.jpg" /> </para> </Figure>
      <SubSystem> Please see <see href="SubSystemNoteTable.htm">Sub System Note Table</see> for more information if applicable. <para>Valid sub systems for this function (Y = Valid, N = Not valid)</para> <para> <list type="table"> <listheader> <term>NC_RUN </term> <term>NC_RUN_1 </term> <term>NC_RUN_2 </term> <term>NC_RUN_3 </term> <term>NC_PANEL </term> <term>NC_PANEL_1 </term> <term>NC_PANEL_2 </term> <term>NC_PANEL_3 </term> <term>NC_AL </term> <term>NC_AR </term> <term>NC_BL </term> <term>NC_BR </term> <term>NC_CL </term> <term>NC_CR </term> <term>NC_2AL </term> </listheader> <item> <term>Y </term> <term>Y </term> <term>Y </term> <term>N </term> <term>Y </term> <term>Y </term> <term>Y </term> <term>N </term> <term>Y </term> <term>Y </term> <term>Y </term> <term>Y </term> <term>N </term> <term>N </term> <term>Y</term> </item> </list> </para> </SubSystem>
      <remarks>  <para> Compatible Chart of this function for different OSP controls: <list type="table"> <listheader> <term>OSP Control</term> <description>Compatible</description> </listheader> <item> <term>P100II</term> <description>No</description> </item> <item> <term>P200</term> <description>No</description> </item> <item> <term>P300L</term> <description>No</description> </item> <item> <term>P300S/TD Mode</term> <description>Yes</description> </item> <item> <term>P300S/TL Mode</term> <description>No</description> </item> </list> </para>  </remarks>
    </member>
    <member name="M:Okuma.CLDATAPI.DataAPI.CTools.SetNoseRCompensation(System.Int32,Okuma.CLDATAPI.Enumerations.NoseRCompensationAxisIndexEnum,Okuma.CLDATAPI.Enumerations.ToolEdgeEnum,Okuma.CLDATAPI.Enumerations.ToolCuttingPositionEnum,System.Double)">
      <summary>For OSP-P300: Sets Nose Radius Compensation value at the specified tool number, axis index, cutting position, and edge number for current sub system. </summary>
      <example> This sample shows how to call the SetNoseRCompensation() method. <para>		Dim intToolNo As Integer	</para> <para>	    Dim enAxisIndex	as NoseRCompensationAxisIndexEnum</para> <para>	    Dim enToolCuttingPosition	as ToolCuttingPositionEnum</para> <para>		Dim enEdgeNo As ToolEdgeEnum	</para> <para>	    Dim dblValue As Double	</para> <para>	    objTool.SetNoseRCompensation(intToolNo, enAxisIndex, enToolCuttingPosition, enEdgeNo, dblValue)	</para> </example>
      <param name="intToolNo">Tool Number</param>
      <param name="enAxisIndex">Axis index</param>
      <param name="enToolCuttingPosition">Tool Cutting Position</param>
      <param name="enEdgeNo">Edge Number. Using Edge No. 1 if tool is a non-multi edges tool.</param>
      <param name="dblValue">setting value</param>
      <DataUnit> Default unit is in mm.  Other unit can be set by calling SetDataUnit method </DataUnit>
      <exception cref="System.ApplicationException">Thrown when function fails to perform the operation at current NC condition.</exception>
      <exception cref="System.NotSupportedException">Thrown when operation/input parameters are not supported for the current system.</exception>
      <Figure> <para> TOOL DATA SETTING - TOOL DATA (ALL) -  NOSE-R COMP - X, Z <img src="Lathe.P300.TD.ToolDataSetting.XZ.jpg" /> </para> <para> TOOL DATA SETTING - TOOL DATA (ALL) -  NOSE-R COMP - R <para> The value of R will be the value of Nose-R of X or Z which has a larger value. </para> <img src="Lathe.P300.TD.ToolDataSetting.RP.jpg" /> </para> </Figure>
      <SubSystem> Please see <see href="SubSystemNoteTable.htm">Sub System Note Table</see> for more information if applicable. <para>Valid sub systems for this function (Y = Valid, N = Not valid)</para> <para> <list type="table"> <listheader> <term>NC_RUN </term> <term>NC_RUN_1 </term> <term>NC_RUN_2 </term> <term>NC_RUN_3 </term> <term>NC_PANEL </term> <term>NC_PANEL_1 </term> <term>NC_PANEL_2 </term> <term>NC_PANEL_3 </term> <term>NC_AL </term> <term>NC_AR </term> <term>NC_BL </term> <term>NC_BR </term> <term>NC_CL </term> <term>NC_CR </term> <term>NC_2AL </term> </listheader> <item> <term>Y </term> <term>Y </term> <term>Y </term> <term>N </term> <term>Y </term> <term>Y </term> <term>Y </term> <term>N </term> <term>Y </term> <term>Y </term> <term>Y </term> <term>Y </term> <term>N </term> <term>N </term> <term>Y</term> </item> </list> </para> </SubSystem>
      <remarks>  <para> Compatible Chart of this function for different OSP controls: <list type="table"> <listheader> <term>OSP Control</term> <description>Compatible</description> </listheader> <item> <term>P100II</term> <description>No</description> </item> <item> <term>P200</term> <description>No</description> </item> <item> <term>P300L</term> <description>No</description> </item> <item> <term>P300S/TD Mode</term> <description>Yes</description> </item> <item> <term>P300S/TL Mode</term> <description>No</description> </item> </list> </para>  </remarks>
    </member>
    <member name="M:Okuma.CLDATAPI.DataAPI.CTools.AddNoseRCompensation(System.Int32,Okuma.CLDATAPI.Enumerations.NoseRCompensationAxisIndexEnum,Okuma.CLDATAPI.Enumerations.ToolEdgeEnum,Okuma.CLDATAPI.Enumerations.ToolCuttingPositionEnum,System.Double)">
      <summary>For OSP-P300: Sets Nose-R compensation offset value by adding the input value to the existing data at the specified offset tool number, axis index, cutting position, and edge number for current sub system. </summary>
      <example> This sample shows how to call the AddNoseRCompensation() method. <para>		Dim intToolNo As Integer	</para> <para>	    Dim enAxisIndex	as NoseRCompensationAxisIndexEnum</para> <para>	    Dim enToolCuttingPosition	as ToolCuttingPositionEnum</para> <para>		Dim enEdgeNo As ToolEdgeEnum	</para> <para>	    Dim dblValue As Double	</para> <para>	    objTool.AddNoseRCompensation(intToolNo, enAxisIndex, enToolCuttingPosition, enEdgeNo, dblValue)	</para> </example>
      <param name="intToolNo">Tool Number</param>
      <param name="enAxisIndex">Axis index</param>
      <param name="enToolCuttingPosition">Tool Cutting Position</param>
      <param name="enEdgeNo">Edge Number. Using Edge No. 1 if tool is a non-multi edges tool.</param>
      <param name="dblValue">adding value</param>
      <DataUnit> Default unit is in mm.  Other unit can be set by calling SetDataUnit method </DataUnit>
      <exception cref="System.ApplicationException">Thrown when function fails to perform the operation at current NC condition.</exception>
      <exception cref="System.NotSupportedException">Thrown when operation/input parameters are not supported for the current system.</exception>
      <Figure> <para> TOOL DATA SETTING - TOOL DATA (ALL) -  NOSE-R COMP - X, Z <img src="Lathe.P300.TD.ToolDataSetting.XZ.jpg" /> </para> <para> TOOL DATA SETTING - TOOL DATA (ALL) -  NOSE-R COMP - R <para> The value of R will be the value of Nose-R of X or Z which has a larger value. </para> <img src="Lathe.P300.TD.ToolDataSetting.RP.jpg" /> </para> </Figure>
      <SubSystem> Please see <see href="SubSystemNoteTable.htm">Sub System Note Table</see> for more information if applicable. <para>Valid sub systems for this function (Y = Valid, N = Not valid)</para> <para> <list type="table"> <listheader> <term>NC_RUN </term> <term>NC_RUN_1 </term> <term>NC_RUN_2 </term> <term>NC_RUN_3 </term> <term>NC_PANEL </term> <term>NC_PANEL_1 </term> <term>NC_PANEL_2 </term> <term>NC_PANEL_3 </term> <term>NC_AL </term> <term>NC_AR </term> <term>NC_BL </term> <term>NC_BR </term> <term>NC_CL </term> <term>NC_CR </term> <term>NC_2AL </term> </listheader> <item> <term>Y </term> <term>Y </term> <term>Y </term> <term>N </term> <term>Y </term> <term>Y </term> <term>Y </term> <term>N </term> <term>Y </term> <term>Y </term> <term>Y </term> <term>Y </term> <term>N </term> <term>N </term> <term>Y</term> </item> </list> </para> </SubSystem>
      <remarks>  <para> Compatible Chart of this function for different OSP controls: <list type="table"> <listheader> <term>OSP Control</term> <description>Compatible</description> </listheader> <item> <term>P100II</term> <description>No</description> </item> <item> <term>P200</term> <description>No</description> </item> <item> <term>P300L</term> <description>No</description> </item> <item> <term>P300S/TD Mode</term> <description>Yes</description> </item> <item> <term>P300S/TL Mode</term> <description>No</description> </item> </list> </para>  </remarks>
    </member>
    <member name="M:Okuma.CLDATAPI.DataAPI.CTools.GetNoseRCompensationPattern(System.Int32,Okuma.CLDATAPI.Enumerations.ToolCuttingPositionEnum,Okuma.CLDATAPI.Enumerations.ToolEdgeEnum)">
      <summary>For OSP-P300: Gets Nose radius compensation pattern value at the specified tool number, cutting position, and edge number for current sub system. </summary>
      <example> This sample shows how to call the GetNoseRCompensationPattern() method. <para>		Dim intToolNo As Integer	</para> <para>	    Dim enToolCuttingPosition	as ToolCuttingPositionEnum</para> <para>		Dim enEdgeNo As ToolEdgeEnum	</para> <para>	    Dim intValue As Integer	</para> <para>	    intValue = objTool.GetNoseRCompensationPattern(intToolNo, enAxisIndex, enToolCuttingPosition, enEdgeNo)	</para> </example>
      <param name="intToolNo">Tool Number</param>
      <param name="enToolCuttingPosition">Tool Cutting Position</param>
      <param name="enEdgeNo">Edge Number. Using Edge No. 1 if tool is a non-multi edges tool.</param>
      <returns>A System.Int32 value</returns>
      <DataUnit> N/A </DataUnit>
      <exception cref="System.ApplicationException">Thrown when function fails to perform the operation at current NC condition.</exception>
      <exception cref="System.NotSupportedException">Thrown when operation/input parameters are not supported for the current system.</exception>
      <Figure> <para> TOOL DATA SETTING - TOOL DATA (ALL) -  NOSE-R COMP - R <para> The value of R will be the value of Nose-R of X or Z which has a larger value. </para> <img src="Lathe.P300.TD.ToolDataSetting.RP.jpg" /> </para> </Figure>
      <SubSystem> Please see <see href="SubSystemNoteTable.htm">Sub System Note Table</see> for more information if applicable. <para>Valid sub systems for this function (Y = Valid, N = Not valid)</para> <para> <list type="table"> <listheader> <term>NC_RUN </term> <term>NC_RUN_1 </term> <term>NC_RUN_2 </term> <term>NC_RUN_3 </term> <term>NC_PANEL </term> <term>NC_PANEL_1 </term> <term>NC_PANEL_2 </term> <term>NC_PANEL_3 </term> <term>NC_AL </term> <term>NC_AR </term> <term>NC_BL </term> <term>NC_BR </term> <term>NC_CL </term> <term>NC_CR </term> <term>NC_2AL </term> </listheader> <item> <term>Y </term> <term>Y </term> <term>Y </term> <term>N </term> <term>Y </term> <term>Y </term> <term>Y </term> <term>N </term> <term>Y </term> <term>Y </term> <term>Y </term> <term>Y </term> <term>N </term> <term>N </term> <term>Y</term> </item> </list> </para> </SubSystem>
      <remarks>  <para> Compatible Chart of this function for different OSP controls: <list type="table"> <listheader> <term>OSP Control</term> <description>Compatible</description> </listheader> <item> <term>P100II</term> <description>No</description> </item> <item> <term>P200</term> <description>No</description> </item> <item> <term>P300L</term> <description>No</description> </item> <item> <term>P300S/TD Mode</term> <description>Yes</description> </item> <item> <term>P300S/TL Mode</term> <description>No</description> </item> </list> </para>  </remarks>
    </member>
    <member name="M:Okuma.CLDATAPI.DataAPI.CTools.SetNoseRCompensationPattern(System.Int32,Okuma.CLDATAPI.Enumerations.ToolCuttingPositionEnum,Okuma.CLDATAPI.Enumerations.ToolEdgeEnum,System.Int32)">
      <summary>For OSP-P300: Sets Nose radius compensation pattern value at the specified tool number, cutting position, and edge number for current sub system. </summary>
      <example> This sample shows how to call the SetNoseRCompensationPattern() method. <para>		Dim intToolNo As Integer	</para> <para>	    Dim enToolCuttingPosition	as ToolCuttingPositionEnum</para> <para>		Dim enEdgeNo As ToolEdgeEnum	</para> <para>	    Dim intValue As Integer	</para> <para>	    objTool.SetNoseRCompensationPattern(intToolNo, enToolCuttingPosition, enEdgeNo, intValue)	</para> </example>
      <param name="intToolNo">Tool Number</param>
      <param name="enToolCuttingPosition">Tool Cutting Position</param>
      <param name="enEdgeNo">Edge Number. Using Edge No. 1 if tool is a non-multi edges tool.</param>
      <param name="intValue">setting value</param>
      <DataUnit> N/A </DataUnit>
      <exception cref="System.ApplicationException">Thrown when function fails to perform the operation at current NC condition.</exception>
      <exception cref="System.NotSupportedException">Thrown when operation/input parameters are not supported for the current system.</exception>
      <Figure> <para> TOOL DATA SETTING - TOOL DATA (ALL) -  NOSE-R COMP - P <img src="Lathe.P300.TD.ToolDataSetting.RP.jpg" /> </para> </Figure>
      <SubSystem> Please see <see href="SubSystemNoteTable.htm">Sub System Note Table</see> for more information if applicable. <para>Valid sub systems for this function (Y = Valid, N = Not valid)</para> <para> <list type="table"> <listheader> <term>NC_RUN </term> <term>NC_RUN_1 </term> <term>NC_RUN_2 </term> <term>NC_RUN_3 </term> <term>NC_PANEL </term> <term>NC_PANEL_1 </term> <term>NC_PANEL_2 </term> <term>NC_PANEL_3 </term> <term>NC_AL </term> <term>NC_AR </term> <term>NC_BL </term> <term>NC_BR </term> <term>NC_CL </term> <term>NC_CR </term> <term>NC_2AL </term> </listheader> <item> <term>Y </term> <term>Y </term> <term>Y </term> <term>N </term> <term>Y </term> <term>Y </term> <term>Y </term> <term>N </term> <term>Y </term> <term>Y </term> <term>Y </term> <term>Y </term> <term>N </term> <term>N </term> <term>Y</term> </item> </list> </para> </SubSystem>
      <remarks>  <para> Compatible Chart of this function for different OSP controls: <list type="table"> <listheader> <term>OSP Control</term> <description>Compatible</description> </listheader> <item> <term>P100II</term> <description>No</description> </item> <item> <term>P200</term> <description>No</description> </item> <item> <term>P300L</term> <description>No</description> </item> <item> <term>P300S/TD Mode</term> <description>Yes</description> </item> <item> <term>P300S/TL Mode</term> <description>No</description> </item> </list> </para>  </remarks>
    </member>
    <member name="M:Okuma.CLDATAPI.DataAPI.CTools.GetGroupNo(System.Int32,Okuma.CLDATAPI.Enumerations.ToolEdgeEnum)">
      <summary> <para>For OSP-P300S/L: Gets tool group at the specified tool number, edge number for current sub system.</para> <para>In TL mode: For tools registered with B turret, only tool edge number 1 can be supported</para> </summary>
      <example> This sample shows how to call the GetGroupNo() method. <para>		Dim intToolNo As Integer	</para> <para>		Dim enEdgeNo As ToolEdgeEnum	</para> <para>	    Dim intValue As Integer	</para> <para>	    intValue = objTool.GetGroupNo(intToolNo, enEdge)	</para> </example>
      <param name="intToolNo">Tool Number</param>
      <param name="enEdgeNo">Edge Number. Ignored for non multi-edges tools</param>
      <returns>A System.Int32 positive value of group number.  It returns 0 if no group assigned.</returns>
      <exception cref="System.ApplicationException">Thrown when function fails to perform the operation at current NC condition.</exception>
      <exception cref="System.NotSupportedException">Thrown when operation/input parameters are not supported for the current system.</exception>
      <Figure> <para> TOOL DATA SETTING - TOOL LIFE DATA -  GNo <img src="Lathe.P300.TD.ToolLife.jpg" /> </para> </Figure>
      <SubSystem> Please see <see href="SubSystemNoteTable.htm">Sub System Note Table</see> for more information if applicable. <para>Valid sub systems for this function (Y = Valid, N = Not valid)</para> <para> <list type="table"> <listheader> <term>NC_RUN </term> <term>NC_RUN_1 </term> <term>NC_RUN_2 </term> <term>NC_RUN_3 </term> <term>NC_PANEL </term> <term>NC_PANEL_1 </term> <term>NC_PANEL_2 </term> <term>NC_PANEL_3 </term> <term>NC_AL </term> <term>NC_AR </term> <term>NC_BL </term> <term>NC_BR </term> <term>NC_CL </term> <term>NC_CR </term> <term>NC_2AL </term> </listheader> <item> <term>Y (*42)</term> <term>Y (*42)</term> <term>Y (*42)</term> <term>N </term> <term>Y (*42)</term> <term>Y (*42)</term> <term>Y (*42)</term> <term>N </term> <term>Y (*42)</term> <term>Y (*42)</term> <term>Y (*42)</term> <term>Y (*42)</term> <term>N </term> <term>N </term> <term>N </term> </item> </list> </para> </SubSystem>
      <remarks>  <para> Compatible Chart of this function for different OSP controls: <list type="table"> <listheader> <term>OSP Control</term> <description>Compatible</description> </listheader> <item> <term>P100II</term> <description>No</description> </item> <item> <term>P200</term> <description>No</description> </item> <item> <term>P300L</term> <description>No</description> </item> <item> <term>P300S/TD Mode</term> <description>Yes</description> </item> <item> <term>P300S/TL Mode</term> <description>Yes</description> </item> </list> </para>  </remarks>
    </member>
    <member name="M:Okuma.CLDATAPI.DataAPI.CTools.SetGroupNo(System.Int32,Okuma.CLDATAPI.Enumerations.ToolEdgeEnum,System.Int32)">
      <summary> <para>For OSP-P300S/L: Sets tool group at the specified tool number , edge number for current sub system.</para> <para>In TL mode: For tools registered with B turret, only tool edge number 1 can be supported</para> </summary>
      <example> This sample shows how to call the SetGroupNo() method. <para>		Dim intToolNo As Integer	</para> <para>		Dim enEdgeNo As ToolEdgeEnum	</para> <para>	    Dim intGroupNo As Integer</para> <para>	    objTool.SetGroupNo(intToolNo, enEdgeNo, intGroupNo)	</para> </example>
      <param name="intToolNo">Tool Number</param>
      <param name="enEdgeNo">Edge Number. Ignored for non multi-edges tools</param>
      <param name="intGroupNo">setting value</param>
      <exception cref="System.ApplicationException">Thrown when function fails to perform the operation at current NC condition.</exception>
      <exception cref="System.NotSupportedException">Thrown when operation/input parameters are not supported for the current system.</exception>
      <Figure> <para> TOOL DATA SETTING - TOOL LIFE DATA - GNo <img src="Lathe.P300.TD.ToolLife.jpg" /> </para> </Figure>
      <SubSystem> Please see <see href="SubSystemNoteTable.htm">Sub System Note Table</see> for more information if applicable. <para>Valid sub systems for this function (Y = Valid, N = Not valid)</para> <para> <list type="table"> <listheader> <term>NC_RUN </term> <term>NC_RUN_1 </term> <term>NC_RUN_2 </term> <term>NC_RUN_3 </term> <term>NC_PANEL </term> <term>NC_PANEL_1 </term> <term>NC_PANEL_2 </term> <term>NC_PANEL_3 </term> <term>NC_AL </term> <term>NC_AR </term> <term>NC_BL </term> <term>NC_BR </term> <term>NC_CL </term> <term>NC_CR </term> <term>NC_2AL </term> </listheader> <item> <term>Y (*42)</term> <term>Y (*42)</term> <term>Y (*42)</term> <term>N </term> <term>Y (*42)</term> <term>Y (*42)</term> <term>Y (*42)</term> <term>N </term> <term>Y (*42)</term> <term>Y (*42)</term> <term>Y (*42)</term> <term>Y (*42)</term> <term>N </term> <term>N </term> <term>N </term> </item> </list> </para> </SubSystem>
      <remarks>  <para> Compatible Chart of this function for different OSP controls: <list type="table"> <listheader> <term>OSP Control</term> <description>Compatible</description> </listheader> <item> <term>P100II</term> <description>No</description> </item> <item> <term>P200</term> <description>No</description> </item> <item> <term>P300L</term> <description>No</description> </item> <item> <term>P300S/TD Mode</term> <description>Yes</description> </item> <item> <term>P300S/TL Mode</term> <description>Yes</description> </item> </list> </para>  </remarks>
    </member>
    <member name="M:Okuma.CLDATAPI.DataAPI.CTools.GetBAAngle(System.Int32,Okuma.CLDATAPI.Enumerations.ToolEdgeEnum,Okuma.CLDATAPI.Enumerations.ToolCuttingPositionEnum)">
      <summary> For OSP-P300: Get BA angle given tool number, edge number, and cutting position number for current sub system. </summary>
      <example> This sample shows how to call the GetBAAngle() method. <para>		Dim intToolNo As Integer	</para> <para>		Dim enToolCuttingPosition As ToolCuttingPositionEnum	</para> <para>		Dim enEdgeNo As ToolEdgeEnum	</para> <para>		Dim dblValue as Dobule	</para> <para>	    dblValue = objTool.GetBAAngle(intToolNo, enToolCuttingPosition, enEdgeNo)	</para> </example>
      <param name="intToolNo">Tool Number</param>
      <param name="enEdgeNo">Tool edge number</param>
      <param name="enToolCuttingPosition">Tool cutting position</param>
      <returns> A System.Double value. It will returns zero if Positive value if valid tool data otherwise it returns -1. </returns>
      <DataUnit> Degree </DataUnit>
      <exception cref="System.ApplicationException">Thrown when function fails to perform the operation at current NC condition.</exception>
      <exception cref="System.NotSupportedException">Thrown when operation/input parameters are not supported for the current system.</exception>
      <Figure> <para> TOOL DATA SETTING - TOOL DATA ALL - BASIC POS. - BA <img src="Lathe.P300.TD.ToolDataSetting.jpg" /> </para> </Figure>
      <SubSystem> Please see <see href="SubSystemNoteTable.htm">Sub System Note Table</see> for more information if applicable. <para>Valid sub systems for this function (Y = Valid, N = Not valid)</para> <para> <list type="table"> <listheader> <term>NC_RUN </term> <term>NC_RUN_1 </term> <term>NC_RUN_2 </term> <term>NC_RUN_3 </term> <term>NC_PANEL </term> <term>NC_PANEL_1 </term> <term>NC_PANEL_2 </term> <term>NC_PANEL_3 </term> <term>NC_AL </term> <term>NC_AR </term> <term>NC_BL </term> <term>NC_BR </term> <term>NC_CL </term> <term>NC_CR </term> <term>NC_2AL </term> </listheader> <item> <term>Y(*39)</term> <term>Y(*39)</term> <term>Y(*39)</term> <term>N </term> <term>Y(*39)</term> <term>Y(*39)</term> <term>Y(*39)</term> <term>N </term> <term>Y(*39)</term> <term>Y(*39)</term> <term>Y(*39)</term> <term>Y(*39)</term> <term>N </term> <term>N </term> <term>N </term> </item> </list> </para> </SubSystem>
      <remarks>  <para> Compatible Chart of this function for different OSP controls: <list type="table"> <listheader> <term>OSP Control</term> <description>Compatible</description> </listheader> <item> <term>P100II</term> <description>No</description> </item> <item> <term>P200</term> <description>No</description> </item> <item> <term>P300L</term> <description> <para> No </para> </description> </item> <item> <term>P300S/TD Mode</term> <description> <para> Yes </para> </description> </item> <item> <term>P300S/TL Mode</term> <description> <para> Yes </para> </description> </item> </list> </para>  </remarks>
    </member>
    <member name="M:Okuma.CLDATAPI.DataAPI.CTools.GetToolAdjustment(System.Int32,Okuma.CLDATAPI.Enumerations.ToolOffsetAxisIndexEnum,Okuma.CLDATAPI.Enumerations.ToolEdgeEnum,Okuma.CLDATAPI.Enumerations.ToolCuttingPositionEnum)">
      <summary>For OSP-P300S: Gets tool adjustment value at the specified tool number, axis index, cutting position, and edge number for current sub system. </summary>
      <example> This sample shows how to call the GetToolAdjustment() method. <para>		Dim intToolNo As Integer	</para> <para>	    Dim enAxisIndex	as ToolOffsetAxisIndexEnum</para> <para>	    Dim enToolCuttingPosition	as ToolCuttingPositionEnum</para> <para>	    Dim enEdgeNo As ToolEdgeEnum	</para> <para>	    dblValue = objTool.GetToolAdjustment(intToolNo, enAxisIndex, enToolCuttingPosition, enEdgeNo)	</para> </example>
      <param name="intToolNo">Tool Number</param>
      <param name="enAxisIndex">Axis index</param>
      <param name="enToolCuttingPosition">Tool Cutting Position</param>
      <param name="enEdgeNo">Edge Number. Using Edge No. 1 if tool is a non-multi edges tool.</param>
      <returns>A System.Double value represents adjustment offset</returns>
      <DataUnit> Default unit is in mm.  Other unit can be set by calling SetDataUnit method </DataUnit>
      <exception cref="System.ApplicationException">Thrown when function fails to perform the operation at current NC condition.</exception>
      <exception cref="System.NotSupportedException">Thrown when operation/input parameters are not supported for the current system.</exception>
      <Figure> TOOL DATA SETTING - TOOL DATA (ALL) - ADJUSTMENT <para> <img src="Lathe.P300.TD.ToolDataSetting.jpg" /> </para> </Figure>
      <SubSystem> Please see <see href="SubSystemNoteTable.htm">Sub System Note Table</see> for more information if applicable. <para>Valid sub systems for this function (Y = Valid, N = Not valid)</para> <para> <list type="table"> <listheader> <term>NC_RUN </term> <term>NC_RUN_1 </term> <term>NC_RUN_2 </term> <term>NC_RUN_3 </term> <term>NC_PANEL </term> <term>NC_PANEL_1 </term> <term>NC_PANEL_2 </term> <term>NC_PANEL_3 </term> <term>NC_AL </term> <term>NC_AR </term> <term>NC_BL </term> <term>NC_BR </term> <term>NC_CL </term> <term>NC_CR </term> <term>NC_2AL </term> </listheader> <item> <term>Y (*39 for X/Y axis) (*40 for YI axis)</term> <term>Y (*39 for X/Y axis) (*40 for YI axis)</term> <term>Y (*39 for X/Y axis) (*40 for YI axis)</term> <term>N </term> <term>Y (*39 for X/Y axis) (*40 for YI axis)</term> <term>Y (*39 for X/Y axis) (*40 for YI axis)</term> <term>Y (*39 for X/Y axis) (*40 for YI axis)</term> <term>N </term> <term>Y (*39 for X/Y axis) (*40 for YI axis)</term> <term>Y (*39 for X/Y axis) (*40 for YI axis)</term> <term>Y (*39 for X/Y axis) (*40 for YI axis)</term> <term>Y (*39 for X/Y axis) (*40 for YI axis)</term> <term>N </term> <term>N </term> <term>N </term> </item> </list> </para> </SubSystem>
      <remarks>  <para> Compatible Chart of this function for different OSP controls: <list type="table"> <listheader> <term>OSP Control</term> <description>Compatible</description> </listheader> <item> <term>P100II</term> <description>No</description> </item> <item> <term>P200</term> <description>No</description> </item> <item> <term>P300L</term> <description>No</description> </item> <item> <term>P300S/TD Mode</term> <description>Yes</description> </item> <item> <term>P300S/TL Mode</term> <description>No</description> </item> </list> </para>  </remarks>
    </member>
    <member name="M:Okuma.CLDATAPI.DataAPI.CTools.SetToolAdjustment(System.Int32,Okuma.CLDATAPI.Enumerations.ToolOffsetAxisIndexEnum,Okuma.CLDATAPI.Enumerations.ToolEdgeEnum,Okuma.CLDATAPI.Enumerations.ToolCuttingPositionEnum,System.Double)">
      <summary>For OSP-P300S: Sets tool adjustment value at the specified tool number, axis index, cutting position, and edge number for current sub system. </summary>
      <example> This sample shows how to call the SetToolAdjustment() method. <para>		Dim intToolNo As Integer	</para> <para>	    Dim enAxisIndex	as ToolOffsetAxisIndexEnum</para> <para>	    Dim enToolCuttingPosition	as ToolCuttingPositionEnum</para> <para>	    Dim enEdgeNo	as ToolEdgeEnum</para> <para>	    Dim dblValue As Double	</para> <para>	    objTool.SetToolAdjustment(intToolNo, enAxisIndex, enToolCuttingPosition, enEdgeNo, dblValue)	</para> </example>
      <param name="intToolNo">Tool Number</param>
      <param name="enAxisIndex">Axis index</param>
      <param name="enToolCuttingPosition">Tool Cutting Position. For tool in B turret, only cutting positions 1,7, and 13-20 are valid.</param>
      <param name="enEdgeNo">Edge Number. Using Edge No. 1 if tool is a non-multi edges tool.</param>
      <param name="dblValue">setting value</param>
      <DataUnit> Default unit is in mm.  Other unit can be set by calling SetDataUnit method </DataUnit>
      <exception cref="System.ApplicationException">Thrown when function fails to perform the operation at current NC condition.</exception>
      <exception cref="System.NotSupportedException">Thrown when operation/input parameters are not supported for the current system.</exception>
      <Figure> TOOL DATA SETTING - TOOL DATA (ALL) - ADJUSTMENT <para> <img src="Lathe.P300.TD.ToolDataSetting.jpg" /> </para> </Figure>
      <SubSystem> Please see <see href="SubSystemNoteTable.htm">Sub System Note Table</see> for more information if applicable. <para>Valid sub systems for this function (Y = Valid, N = Not valid)</para> <para> <list type="table"> <listheader> <term>NC_RUN </term> <term>NC_RUN_1 </term> <term>NC_RUN_2 </term> <term>NC_RUN_3 </term> <term>NC_PANEL </term> <term>NC_PANEL_1 </term> <term>NC_PANEL_2 </term> <term>NC_PANEL_3 </term> <term>NC_AL </term> <term>NC_AR </term> <term>NC_BL </term> <term>NC_BR </term> <term>NC_CL </term> <term>NC_CR </term> <term>NC_2AL </term> </listheader> <item> <term>Y (*39 for X/Y axis) (*40 for YI axis)</term> <term>Y (*39 for X/Y axis) (*40 for YI axis)</term> <term>Y (*39 for X/Y axis) (*40 for YI axis)</term> <term>N </term> <term>Y (*39 for X/Y axis) (*40 for YI axis)</term> <term>Y (*39 for X/Y axis) (*40 for YI axis)</term> <term>Y (*39 for X/Y axis) (*40 for YI axis)</term> <term>N </term> <term>Y (*39 for X/Y axis) (*40 for YI axis)</term> <term>Y (*39 for X/Y axis) (*40 for YI axis)</term> <term>Y (*39 for X/Y axis) (*40 for YI axis)</term> <term>Y (*39 for X/Y axis) (*40 for YI axis)</term> <term>N </term> <term>N </term> <term>N </term> </item> </list> </para> </SubSystem>
      <remarks>  <para> Compatible Chart of this function for different OSP controls: <list type="table"> <listheader> <term>OSP Control</term> <description>Compatible</description> </listheader> <item> <term>P100II</term> <description>No</description> </item> <item> <term>P200</term> <description>No</description> </item> <item> <term>P300L</term> <description>No</description> </item> <item> <term>P300S/TD Mode</term> <description>Yes</description> </item> <item> <term>P300S/TL Mode</term> <description>No</description> </item> </list> </para>  </remarks>
    </member>
    <member name="M:Okuma.CLDATAPI.DataAPI.CTools.AddToolAdjustment(System.Int32,Okuma.CLDATAPI.Enumerations.ToolOffsetAxisIndexEnum,Okuma.CLDATAPI.Enumerations.ToolEdgeEnum,Okuma.CLDATAPI.Enumerations.ToolCuttingPositionEnum,System.Double)">
      <summary>For OSP-P300S: Add tool adjustment value at the specified tool number, axis index, cutting position, and edge number for current sub system. </summary>
      <example> This sample shows how to call the AddToolAdjustment() method. <para>		Dim intToolNo As Integer	</para> <para>	    Dim enAxisIndex	as ToolOffsetAxisIndexEnum</para> <para>	    Dim enToolCuttingPosition	as ToolCuttingPositionEnum</para> <para>		Dim enEdgeNo As ToolEdgeEnum	</para> <para>	    Dim dblValue As Double	</para> <para>	    objTool.AddToolAdjustment(intToolNo, enAxisIndex, enToolCuttingPosition, enEdgeNo, dblValue)	</para> </example>
      <param name="intToolNo">Tool Number</param>
      <param name="enAxisIndex">Axis index</param>
      <param name="enToolCuttingPosition">Tool Cutting Position. For tool in B turret, only cutting positions 1,7, and 13-20 are valid.</param>
      <param name="enEdgeNo">Edge Number. Using Edge No. 1 if tool is a non-multi edges tool.</param>
      <param name="dblValue">adding value</param>
      <DataUnit> Default unit is in mm.  Other unit can be set by calling SetDataUnit method </DataUnit>
      <exception cref="System.ApplicationException">Thrown when function fails to perform the operation at current NC condition.</exception>
      <exception cref="System.NotSupportedException">Thrown when operation/input parameters are not supported for the current system.</exception>
      <Figure> TOOL DATA SETTING - TOOL DATA (ALL) -  ADJUSTMENT <para> <img src="Lathe.P300.TD.ToolDataSetting.jpg" /> </para> </Figure>
      <SubSystem> Please see <see href="SubSystemNoteTable.htm">Sub System Note Table</see> for more information if applicable. <para>Valid sub systems for this function (Y = Valid, N = Not valid)</para> <para> <list type="table"> <listheader> <term>NC_RUN </term> <term>NC_RUN_1 </term> <term>NC_RUN_2 </term> <term>NC_RUN_3 </term> <term>NC_PANEL </term> <term>NC_PANEL_1 </term> <term>NC_PANEL_2 </term> <term>NC_PANEL_3 </term> <term>NC_AL </term> <term>NC_AR </term> <term>NC_BL </term> <term>NC_BR </term> <term>NC_CL </term> <term>NC_CR </term> <term>NC_2AL </term> </listheader> <item> <term>Y (*39 for X/Y axis) (*40 for YI axis)</term> <term>Y (*39 for X/Y axis) (*40 for YI axis)</term> <term>Y (*39 for X/Y axis) (*40 for YI axis)</term> <term>N </term> <term>Y (*39 for X/Y axis) (*40 for YI axis)</term> <term>Y (*39 for X/Y axis) (*40 for YI axis)</term> <term>Y (*39 for X/Y axis) (*40 for YI axis)</term> <term>N </term> <term>Y (*39 for X/Y axis) (*40 for YI axis)</term> <term>Y (*39 for X/Y axis) (*40 for YI axis)</term> <term>Y (*39 for X/Y axis) (*40 for YI axis)</term> <term>Y (*39 for X/Y axis) (*40 for YI axis)</term> <term>N </term> <term>N </term> <term>N </term> </item> </list> </para> </SubSystem>
      <remarks>  <para> Compatible Chart of this function for different OSP controls: <list type="table"> <listheader> <term>OSP Control</term> <description>Compatible</description> </listheader> <item> <term>P100II</term> <description>No</description> </item> <item> <term>P200</term> <description>No</description> </item> <item> <term>P300L</term> <description>No</description> </item> <item> <term>P300S/TD Mode</term> <description>Yes</description> </item> <item> <term>P300S/TL Mode</term> <description>No</description> </item> </list> </para>  </remarks>
    </member>
    <member name="M:Okuma.CLDATAPI.DataAPI.CTools.CalToolAdjustment(System.Int32,Okuma.CLDATAPI.Enumerations.ToolOffsetAxisIndexEnum,Okuma.CLDATAPI.Enumerations.ToolEdgeEnum,Okuma.CLDATAPI.Enumerations.ToolCuttingPositionEnum,System.Double)">
      <summary>For OSP-P300S: Determines tool adjustment value based on the calculation made for the input data and actual position for current sub system. <para>Note: It is necessary to set the correct subsystem for tools registered for A (NC_AL) or B (NC_BL) turret before calling CalToolAdjustment() function. </para> </summary>
      <example> This sample shows how to call the CalToolAdjustment() method for tool number 10 that is registered with B turret. <para>		Dim intToolNo As Integer = 10	</para> <para>	    Dim enAxisIndex	as ToolOffsetAxisIndexEnum</para> <para>	    Dim enToolCuttingPosition As ToolCuttingPositionEnum</para> <para>		Dim enEdgeNo As ToolEdgeEnum	</para> <para>	    Dim dblValue As Double	</para> <para>	    objTool.SetSubSytem(SubSystemEnum.NC_BL)	</para> <para>	    objTool.CalToolAdjustment(intToolNo, enAxisIndex, enToolCuttingPosition, enEdgeNo, dblValue)	</para> </example>
      <param name="intToolNo">Tool Number</param>
      <param name="enAxisIndex">Axis index</param>
      <param name="enToolCuttingPosition">Tool Cutting Position</param>
      <param name="enEdgeNo">Edge Number. Using Edge No. 1 if tool is a non-multi edges tool.</param>
      <param name="dblValue">Input value to be calculated from</param>
      <DataUnit> Default unit is in mm.  Other unit can be set by calling SetDataUnit method </DataUnit>
      <exception cref="System.ApplicationException">Thrown when function fails to perform the operation at current NC condition.</exception>
      <exception cref="System.NotSupportedException">Thrown when operation/input parameters are not supported for the current system.</exception>
      <Figure> TOOL DATA SETTING - TOOL DATA (ALL) - ADJUSTMENT <para> <img src="Lathe.P300.TD.ToolDataSetting.jpg" /> </para> </Figure>
      <SubSystem> Please see <see href="SubSystemNoteTable.htm">Sub System Note Table</see> for more information if applicable. <para>Valid sub systems for this function (Y = Valid, N = Not valid)</para> <para> <list type="table"> <listheader> <term>NC_RUN </term> <term>NC_RUN_1 </term> <term>NC_RUN_2 </term> <term>NC_RUN_3 </term> <term>NC_PANEL </term> <term>NC_PANEL_1 </term> <term>NC_PANEL_2 </term> <term>NC_PANEL_3 </term> <term>NC_AL </term> <term>NC_AR </term> <term>NC_BL </term> <term>NC_BR </term> <term>NC_CL </term> <term>NC_CR </term> <term>NC_2AL </term> </listheader> <item> <term>N</term> <term>Y (*39 for X/Y axis) (*40 for YI axis)</term> <term>Y (*39 for X/Y axis) (*40 for YI axis)</term> <term>N </term> <term>Y (*39 for X/Y axis) (*40 for YI axis)</term> <term>Y (*39 for X/Y axis) (*40 for YI axis)</term> <term>Y (*39 for X/Y axis) (*40 for YI axis)</term> <term>N </term> <term>Y (*39 for X/Y axis) (*40 for YI axis)</term> <term>Y (*39 for X/Y axis) (*40 for YI axis)</term> <term>Y (*39 for X/Y axis) (*40 for YI axis)</term> <term>Y (*39 for X/Y axis) (*40 for YI axis)</term> <term>N </term> <term>N </term> <term>N </term> </item> </list> </para> </SubSystem>
      <remarks>  <para> Compatible Chart of this function for different OSP controls: <list type="table"> <listheader> <term>OSP Control</term> <description>Compatible</description> </listheader> <item> <term>P100II</term> <description>No</description> </item> <item> <term>P200</term> <description>No</description> </item> <item> <term>P300L</term> <description>No</description> </item> <item> <term>P300S/TD Mode</term> <description>Yes</description> </item> <item> <term>P300S/TL Mode</term> <description>No</description> </item> </list> </para>  </remarks>
    </member>
    <member name="M:Okuma.CLDATAPI.DataAPI.CTools.GetMaxToolOffset">
      <summary> Gets number of tool offset for current sub system. <para>For OSP-P300S: It will return 0 when the NC is in TD mode since Tool offset is part of a tool or there is no separate tool offset pages.</para> </summary>
      <example> This sample shows how to call the GetMaxToolOffset() method. <para>	Dim intCount as Integer</para> <para>	intCount = objTool.GetMaxToolOffset	</para> </example>
      <returns>A System.Int32 value</returns>
      <exception cref="System.ApplicationException">Thrown when function fails to perform the operation at current NC condition.</exception>
      <exception cref="System.NotSupportedException">Thrown when operation/input parameters are not supported for the current system.</exception>
      <SubSystem> Please see <see href="SubSystemNoteTable.htm">Sub System Note Table</see> for more information if applicable. <para>Valid sub systems for this function (Y = Valid, N = Not valid)</para> <para> <list type="table"> <listheader> <term>NC_RUN </term> <term>NC_RUN_1 </term> <term>NC_RUN_2 </term> <term>NC_RUN_3 </term> <term>NC_PANEL </term> <term>NC_PANEL_1 </term> <term>NC_PANEL_2 </term> <term>NC_PANEL_3 </term> <term>NC_AL </term> <term>NC_AR </term> <term>NC_BL </term> <term>NC_BR </term> <term>NC_CL </term> <term>NC_CR </term> <term>NC_2AL </term> </listheader> <item> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> </item> </list> </para>  </SubSystem>
    </member>
    <member name="M:Okuma.CLDATAPI.DataAPI.CTools.GetCurrentToolOffsetNumber">
      <summary>Get current tool offset number in use for current sub system. </summary>
      <example> This sample shows how to call the GetCurrentToolOffsetNumber() method. <para>	Me.tulCurrentToolOffsetNumber.Text = objTool.GetCurrentToolOffsetNumber	</para> </example>
      <returns>A System.Int32 value.  It returns 0 if there is no active tool offset number.</returns>
      <exception cref="System.ApplicationException">Thrown when function fails to perform the operation at current NC condition.</exception>
      <exception cref="System.NotSupportedException">Thrown when operation/input parameters are not supported for the current system.</exception>
      <Figure> TOOL DATA - TOOL OFFSET/NOSE R COMPENSATION - OFFSET NO. 0 <para> Current tool offset number is 0 <img src="Lathe.Multi.ToolData.ToolOffsetNoseR.jpg" /> </para> </Figure>
      <SubSystem> Please see <see href="SubSystemNoteTable.htm">Sub System Note Table</see> for more information if applicable. <para>Valid sub systems for this function (Y = Valid, N = Not valid)</para> <para> <list type="table"> <listheader> <term>NC_RUN </term> <term>NC_RUN_1 </term> <term>NC_RUN_2 </term> <term>NC_RUN_3 </term> <term>NC_PANEL </term> <term>NC_PANEL_1 </term> <term>NC_PANEL_2 </term> <term>NC_PANEL_3 </term> <term>NC_AL </term> <term>NC_AR </term> <term>NC_BL </term> <term>NC_BR </term> <term>NC_CL </term> <term>NC_CR </term> <term>NC_2AL </term> </listheader> <item> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> </item> </list> </para> </SubSystem>
      <remarks>  <para> Compatible Chart of this function for different OSP controls: <list type="table"> <listheader> <term>OSP Control</term> <description>Compatible</description> </listheader> <item> <term>P100II</term> <description>Yes</description> </item> <item> <term>P200</term> <description>Yes</description> </item> <item> <term>P300L</term> <description> <para> Yes </para> </description> </item> <item> <term>P300S/TD Mode</term> <description> <para> No </para> </description> </item> <item> <term>P300S/TL Mode</term> <description> <para> Yes </para> </description> </item> </list> </para>  </remarks>
    </member>
    <member name="M:Okuma.CLDATAPI.DataAPI.CTools.GetCurrentNoseRCompNumber">
      <summary>Gets current Nose-R compensation number in use for current sub system. </summary>
      <example> This sample shows how to call the GetCurrentNoseRCompNumber() method. <para> Me.tulCurrentNoseRCompNumber.Text = objTool.GetCurrentNoseRCompNumber	</para> </example>
      <returns>A System.Int32 value.  It returns 0 if there is no active Nose-R compensation number.</returns>
      <exception cref="System.ApplicationException">Thrown when function fails to perform the operation at current NC condition.</exception>
      <exception cref="System.NotSupportedException">Thrown when operation/input parameters are not supported for the current system.</exception>
      <Figure> TOOL DATA - TOOL OFFSET/NOSE R COMPENSATION - NOSE R NO. 0 <para> Current Nose-R compensation number is 0. <img src="Lathe.Multi.ToolData.ToolOffsetNoseR.jpg" /> </para> </Figure>
      <SubSystem> Please see <see href="SubSystemNoteTable.htm">Sub System Note Table</see> for more information if applicable. <para>Valid sub systems for this function (Y = Valid, N = Not valid)</para> <para> <list type="table"> <listheader> <term>NC_RUN </term> <term>NC_RUN_1 </term> <term>NC_RUN_2 </term> <term>NC_RUN_3 </term> <term>NC_PANEL </term> <term>NC_PANEL_1 </term> <term>NC_PANEL_2 </term> <term>NC_PANEL_3 </term> <term>NC_AL </term> <term>NC_AR </term> <term>NC_BL </term> <term>NC_BR </term> <term>NC_CL </term> <term>NC_CR </term> <term>NC_2AL </term> </listheader> <item> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> </item> </list> </para> </SubSystem>
      <remarks>  <para> Compatible Chart of this function for different OSP controls: <list type="table"> <listheader> <term>OSP Control</term> <description>Compatible</description> </listheader> <item> <term>P100II</term> <description>Yes</description> </item> <item> <term>P200</term> <description>Yes</description> </item> <item> <term>P300L</term> <description> <para> Yes </para> </description> </item> <item> <term>P300S/TD Mode</term> <description> <para> No </para> </description> </item> <item> <term>P300S/TL Mode</term> <description> <para> Yes </para> </description> </item> </list> </para>  </remarks>
    </member>
    <member name="M:Okuma.CLDATAPI.DataAPI.CTools.GetReferenceToolOffset1(System.Int32)">
      <overloads>The function GetReferenceToolOffset1 has 2 overloads methods for getting reference offset number of each tool in the tool life management table.</overloads>
      <summary> Gets reference tool offset 1 at the specified tool number for current sub system. </summary>
      <example> This sample shows how to call the GetReferenceToolOffset1() method. <para>	Me.tulReferenceToolOffset1.Text = objTool.GetReferenceToolOffset1(toolNum)	</para> </example>
      <param name="intToolNo"> <para>Tool number</para> <remarks> <para> The following specifications applied to tool number parameter: <list type="table"> <listheader> <term>Specification</term> <description>Number of Tool</description> </listheader> <item> <term>In case of A turret and Double Tooling specification NC spec [5,7] is active</term> <description>1 to 12 and 21 to 32</description> </item> <item> <term>In case of A turret and Double Tooling specification NC spec [5,7] is not active</term> <description>1 to max tool number</description> </item> <item> <term>In case of B turret and Double Tooling specification NC spec [5,7] is active</term> <description>1 to 12 and 21 to 32</description> </item> <item> <term>In case of B turret and Double Tooling specification NC spec [5,7] is not active</term> <description>1 to 12</description> </item> <item> <term> <para>In case of B turret and Double Tooling specification NC spec [5,7] is not active and the following specifcations are valid:</para> <para>Counter Turret Spec.</para> <para>Vertical Lathe Spec.</para> <para>Not Flat Bed Spec.</para> <para>Tool Base</para> </term> <description>1 to 24</description> </item> </list> </para> </remarks> </param>
      <returns>A System.Int32 that represents the offset number.</returns>
      <exception cref="System.ApplicationException">Thrown when function fails to perform the operation at current NC condition.</exception>
      <exception cref="System.NotSupportedException">Thrown when operation/input parameters are not supported for the current system.</exception>
      <remarks> <para> The following specifications must be met in order to function: <list type="table"> <listheader> <term>Specification</term> <description>Valid/Invalid</description> </listheader> <item> <term>Tool life management specification NC spec [21,3]</term> <description>Valid</description> </item> </list> </para> </remarks>
      <Figure>TOOL DATA - TOOL LIFE MANAGEMENT - A(NO. OF WORK) - OG1 <para> Reference offset 1 of tool number 1 is offset number 11. <img src="Lathe.ToolData.TLM.Work.jpg" /> </para> <para> OSP-P300S - TOOL DATA SETTING - TOOL EDIT - TOOL DATA DETAIL SETTING - OG1/2/3 <img src="Lathe.P300S.ToolData.ToolEdit.DetailSetting.jpg" /> </para> </Figure>
      <SubSystem> Please see <see href="SubSystemNoteTable.htm">Sub System Note Table</see> for more information if applicable. <para>Valid sub systems for this function (Y = Valid, N = Not valid)</para> <para> <list type="table"> <listheader> <term>NC_RUN </term> <term>NC_RUN_1 </term> <term>NC_RUN_2 </term> <term>NC_RUN_3 </term> <term>NC_PANEL </term> <term>NC_PANEL_1 </term> <term>NC_PANEL_2 </term> <term>NC_PANEL_3 </term> <term>NC_AL </term> <term>NC_AR </term> <term>NC_BL </term> <term>NC_BR </term> <term>NC_CL </term> <term>NC_CR </term> <term>NC_2AL </term> </listheader> <item> <term>Y (*21)</term> <term>Y (*22)</term> <term>Y (*16)</term> <term>Y (*4)</term> <term>Y (*21)</term> <term>Y (*22)</term> <term>Y (*16)</term> <term>Y (*4)</term> <term>Y (*22)</term> <term>Y (*22)</term> <term>Y (*16)</term> <term>Y (*16)</term> <term>Y (*4)</term> <term>Y (*4)</term> <term>Y (*22)</term> </item> </list> </para> </SubSystem>
      <remarks>  <para> Compatible Chart of this function for different OSP controls: <list type="table"> <listheader> <term>OSP Control</term> <description>Compatible</description> </listheader> <item> <term>P100II</term> <description>Yes</description> </item> <item> <term>P200</term> <description>Yes</description> </item> <item> <term>P300L</term> <description> <para> Yes </para> </description> </item> <item> <term>P300S/TD Mode</term> <description> <para> No </para> </description> </item> <item> <term>P300S/TL Mode</term> <description> <para> No </para> </description> </item> </list> </para>  </remarks>
    </member>
    <member name="M:Okuma.CLDATAPI.DataAPI.CTools.SetReferenceToolOffset1(System.Int32,System.Int32)">
      <overloads>The function has 2 overloads methods for setting reference offset number of each tool in the tool life management table.</overloads>
      <summary> Sets reference tool offset 1 at the specified tool number for current sub system. </summary>
      <example> This sample shows how to call the SetReferenceToolOffset1() method. <para>	objTool.SetReferenceToolOffset1(CInt(Me.tulToolNumber.Text), CInt(Me.tulUpdReferenceToolOffset1.Text))	</para> </example>
      <param name="intToolNo"> <para>Tool number</para> <remarks> <para> The following specifications applied to tool number parameter: <list type="table"> <listheader> <term>Specification</term> <description>Number of Tool</description> </listheader> <item> <term>In case of A turret and Double Tooling specification NC spec [5,7] is active</term> <description>1 to 12 and 21 to 32</description> </item> <item> <term>In case of A turret and Double Tooling specification NC spec [5,7] is not active</term> <description>1 to max tool number</description> </item> <item> <term>In case of B turret and Double Tooling specification NC spec [5,7] is active</term> <description>1 to 12 and 21 to 32</description> </item> <item> <term>In case of B turret and Double Tooling specification NC spec [5,7] is not active</term> <description>1 to 12</description> </item> <item> <term> <para>In case of B turret and Double Tooling specification NC spec [5,7] is not active and the following specifcations are valid:</para> <para>Counter Turret Spec.</para> <para>Vertical Lathe Spec.</para> <para>Not Flat Bed Spec.</para> <para>Tool Base</para> </term> <description>1 to 24</description> </item> </list> </para> </remarks> </param>
      <param name="intOffsetNo">Offset number</param>
      <returns>None</returns>
      <remarks> <para> The following specifications must be met in order to function: <list type="table"> <listheader> <term>Specification</term> <description>Valid/Invalid</description> </listheader> <item> <term>Tool life management specification NC spec [21,3]</term> <description>Valid</description> </item> </list> </para> </remarks>
      <exception cref="System.ApplicationException">Thrown when function fails to perform the operation at current NC condition.</exception>
      <exception cref="System.NotSupportedException">Thrown when operation/input parameters are not supported for the current system.</exception>
      <Figure>TOOL DATA - TOOL LIFE MANAGEMENT - A(NO. OF WORK) - OG1 <para> Reference offset 1 of tool number 1 is offset number 11. <img src="Lathe.ToolData.TLM.Work.jpg" /> </para> <para> OSP-P300S - TOOL DATA SETTING - TOOL EDIT - TOOL DATA DETAIL SETTING - OG1/2/3 <img src="Lathe.P300S.ToolData.ToolEdit.DetailSetting.jpg" /> </para> </Figure>
      <SubSystem> Please see <see href="SubSystemNoteTable.htm">Sub System Note Table</see> for more information if applicable. <para>Valid sub systems for this function (Y = Valid, N = Not valid)</para> <para> <list type="table"> <listheader> <term>NC_RUN </term> <term>NC_RUN_1 </term> <term>NC_RUN_2 </term> <term>NC_RUN_3 </term> <term>NC_PANEL </term> <term>NC_PANEL_1 </term> <term>NC_PANEL_2 </term> <term>NC_PANEL_3 </term> <term>NC_AL </term> <term>NC_AR </term> <term>NC_BL </term> <term>NC_BR </term> <term>NC_CL </term> <term>NC_CR </term> <term>NC_2AL </term> </listheader> <item> <term>Y (*21)</term> <term>Y (*22)</term> <term>Y (*16)</term> <term>Y (*4)</term> <term>Y (*21)</term> <term>Y (*22)</term> <term>Y (*16)</term> <term>Y (*4)</term> <term>Y (*22)</term> <term>Y (*22)</term> <term>Y (*16)</term> <term>Y (*16)</term> <term>Y (*4)</term> <term>Y (*4)</term> <term>Y (*22)</term> </item> </list> </para> </SubSystem>
      <remarks>  <para> Compatible Chart of this function for different OSP controls: <list type="table"> <listheader> <term>OSP Control</term> <description>Compatible</description> </listheader> <item> <term>P100II</term> <description>Yes</description> </item> <item> <term>P200</term> <description>Yes</description> </item> <item> <term>P300L</term> <description> <para> Yes </para> </description> </item> <item> <term>P300S/TD Mode</term> <description> <para> No </para> </description> </item> <item> <term>P300S/TL Mode</term> <description> <para> No </para> </description> </item> </list> </para>  </remarks>
    </member>
    <member name="M:Okuma.CLDATAPI.DataAPI.CTools.GetReferenceToolOffset2(System.Int32)">
      <overloads>The function GetReferenceToolOffset2 has 2 overloads methods for getting reference offset number of each tool in the tool life management table.</overloads>
      <summary> Gets reference tool offset 2 at the specified tool number for current sub system. </summary>
      <example> This sample shows how to call the GetReferenceToolOffset2() method. <para>	 Me.tulReferenceToolOffset2.Text = objTool.GetReferenceToolOffset2(toolNum)	</para> </example>
      <param name="intToolNo"> <para>Tool number</para> <remarks> <para> The following specifications applied to tool number parameter: <list type="table"> <listheader> <term>Specification</term> <description>Number of Tool</description> </listheader> <item> <term>In case of A turret and Double Tooling specification NC spec [5,7] is active</term> <description>1 to 12 and 21 to 32</description> </item> <item> <term>In case of A turret and Double Tooling specification NC spec [5,7] is not active</term> <description>1 to max tool number</description> </item> <item> <term>In case of B turret and Double Tooling specification NC spec [5,7] is active</term> <description>1 to 12 and 21 to 32</description> </item> <item> <term>In case of B turret and Double Tooling specification NC spec [5,7] is not active</term> <description>1 to 12</description> </item> <item> <term> <para>In case of B turret and Double Tooling specification NC spec [5,7] is not active and the following specifcations are valid:</para> <para>Counter Turret Spec.</para> <para>Vertical Lathe Spec.</para> <para>Not Flat Bed Spec.</para> <para>Tool Base</para> </term> <description>1 to 24</description> </item> </list> </para> </remarks> </param>
      <returns>A System.Int32 that represents the offset number.</returns>
      <remarks> <para> The following specifications must be met in order to function: <list type="table"> <listheader> <term>Specification</term> <description>Valid/Invalid</description> </listheader> <item> <term>Tool life management specification NC spec [21,3]</term> <description>Valid</description> </item> </list> </para> </remarks>
      <exception cref="System.ApplicationException">Thrown when function fails to perform the operation at current NC condition.</exception>
      <exception cref="System.NotSupportedException">Thrown when operation/input parameters are not supported for the current system.</exception>
      <Figure>TOOL DATA - TOOL LIFE MANAGEMENT - A(NO. OF WORK) - OG2 <para> Reference offset 2 of tool number 1 is offset number 22. <img src="Lathe.ToolData.TLM.Work.jpg" /> </para> <para> OSP-P300S - TOOL DATA SETTING - TOOL EDIT - TOOL DATA DETAIL SETTING - OG1/2/3 <img src="Lathe.P300S.ToolData.ToolEdit.DetailSetting.jpg" /> </para> </Figure>
      <SubSystem> Please see <see href="SubSystemNoteTable.htm">Sub System Note Table</see> for more information if applicable. <para>Valid sub systems for this function (Y = Valid, N = Not valid)</para> <para> <list type="table"> <listheader> <term>NC_RUN </term> <term>NC_RUN_1 </term> <term>NC_RUN_2 </term> <term>NC_RUN_3 </term> <term>NC_PANEL </term> <term>NC_PANEL_1 </term> <term>NC_PANEL_2 </term> <term>NC_PANEL_3 </term> <term>NC_AL </term> <term>NC_AR </term> <term>NC_BL </term> <term>NC_BR </term> <term>NC_CL </term> <term>NC_CR </term> <term>NC_2AL </term> </listheader> <item> <term>Y (*21)</term> <term>Y (*22)</term> <term>Y (*16)</term> <term>Y (*4)</term> <term>Y (*21)</term> <term>Y (*22)</term> <term>Y (*16)</term> <term>Y (*4)</term> <term>Y (*22)</term> <term>Y (*22)</term> <term>Y (*16)</term> <term>Y (*16)</term> <term>Y (*4)</term> <term>Y (*4)</term> <term>Y (*22)</term> </item> </list> </para> </SubSystem>
      <remarks>  <para> Compatible Chart of this function for different OSP controls: <list type="table"> <listheader> <term>OSP Control</term> <description>Compatible</description> </listheader> <item> <term>P100II</term> <description>Yes</description> </item> <item> <term>P200</term> <description>Yes</description> </item> <item> <term>P300L</term> <description> <para> Yes </para> </description> </item> <item> <term>P300S/TD Mode</term> <description> <para> No </para> </description> </item> <item> <term>P300S/TL Mode</term> <description> <para> No </para> </description> </item> </list> </para>  </remarks>
    </member>
    <member name="M:Okuma.CLDATAPI.DataAPI.CTools.SetReferenceToolOffset2(System.Int32,System.Int32)">
      <overloads>The function has 2 overloads methods for setting reference offset number of each tool in the tool life management table.</overloads>
      <summary> Sets reference tool offset 2 at the specified tool number for current sub system. </summary>
      <example> This sample shows how to call the SetReferenceToolOffset2() method. <para>	objTool.SetReferenceToolOffset2(CInt(Me.tul2pa3.SelectedValue), CInt(Me.tul2ba3.SelectedValue), CInt(Me.tul2tn.Text), CInt(Me.tul2set3.Text))	</para> </example>
      <param name="intToolNo"> <para>Tool number</para> <remarks> <para> The following specifications applied to tool number parameter: <list type="table"> <listheader> <term>Specification</term> <description>Number of Tool</description> </listheader> <item> <term>In case of A turret and Double Tooling specification NC spec [5,7] is active</term> <description>1 to 12 and 21 to 32</description> </item> <item> <term>In case of A turret and Double Tooling specification NC spec [5,7] is not active</term> <description>1 to max tool number</description> </item> <item> <term>In case of B turret and Double Tooling specification NC spec [5,7] is active</term> <description>1 to 12 and 21 to 32</description> </item> <item> <term>In case of B turret and Double Tooling specification NC spec [5,7] is not active</term> <description>1 to 12</description> </item> <item> <term> <para>In case of B turret and Double Tooling specification NC spec [5,7] is not active and the following specifcations are valid:</para> <para>Counter Turret Spec.</para> <para>Vertical Lathe Spec.</para> <para>Not Flat Bed Spec.</para> <para>Tool Base</para> </term> <description>1 to 24</description> </item> </list> </para> </remarks> </param>
      <param name="intOffsetNo">Offset number</param>
      <returns>None</returns>
      <remarks> <para> The following specifications must be met in order to function: <list type="table"> <listheader> <term>Specification</term> <description>Valid/Invalid</description> </listheader> <item> <term>Tool life management specification NC spec [21,3]</term> <description>Valid</description> </item> </list> </para> </remarks>
      <exception cref="System.ApplicationException">Thrown when function fails to perform the operation at current NC condition.</exception>
      <exception cref="System.NotSupportedException">Thrown when operation/input parameters are not supported for the current system.</exception>
      <Figure>TOOL DATA - TOOL LIFE MANAGEMENT - A(NO. OF WORK) - OG2 <para> Reference offset 2 of tool number 1 is offset number 22. <img src="Lathe.ToolData.TLM.Work.jpg" /> </para> <para> OSP-P300S - TOOL DATA SETTING - TOOL EDIT - TOOL DATA DETAIL SETTING - OG1/2/3 <img src="Lathe.P300S.ToolData.ToolEdit.DetailSetting.jpg" /> </para> </Figure>
      <SubSystem> Please see <see href="SubSystemNoteTable.htm">Sub System Note Table</see> for more information if applicable. <para>Valid sub systems for this function (Y = Valid, N = Not valid)</para> <para> <list type="table"> <listheader> <term>NC_RUN </term> <term>NC_RUN_1 </term> <term>NC_RUN_2 </term> <term>NC_RUN_3 </term> <term>NC_PANEL </term> <term>NC_PANEL_1 </term> <term>NC_PANEL_2 </term> <term>NC_PANEL_3 </term> <term>NC_AL </term> <term>NC_AR </term> <term>NC_BL </term> <term>NC_BR </term> <term>NC_CL </term> <term>NC_CR </term> <term>NC_2AL </term> </listheader> <item> <term>Y (*21)</term> <term>Y (*22)</term> <term>Y (*16)</term> <term>Y (*4)</term> <term>Y (*21)</term> <term>Y (*22)</term> <term>Y (*16)</term> <term>Y (*4)</term> <term>Y (*22)</term> <term>Y (*22)</term> <term>Y (*16)</term> <term>Y (*16)</term> <term>Y (*4)</term> <term>Y (*4)</term> <term>Y (*22)</term> </item> </list> </para> </SubSystem>
      <remarks>  <para> Compatible Chart of this function for different OSP controls: <list type="table"> <listheader> <term>OSP Control</term> <description>Compatible</description> </listheader> <item> <term>P100II</term> <description>Yes</description> </item> <item> <term>P200</term> <description>Yes</description> </item> <item> <term>P300L</term> <description> <para> Yes </para> </description> </item> <item> <term>P300S/TD Mode</term> <description> <para> No </para> </description> </item> <item> <term>P300S/TL Mode</term> <description> <para> No </para> </description> </item> </list> </para>  </remarks>
    </member>
    <member name="M:Okuma.CLDATAPI.DataAPI.CTools.GetReferenceToolOffset3(System.Int32)">
      <overloads>The function GetReferenceToolOffset3 has 2 overloads methods for getting reference offset number of each tool in the tool life management table.</overloads>
      <summary> Gets reference tool offset 3 at the specified tool number for current sub system. </summary>
      <example> This sample shows how to call the GetReferenceToolOffset3() method. <para>	Me.tulReferenceToolOffset3.Text = objTool.GetReferenceToolOffset3(toolNum)	</para> </example>
      <param name="intToolNo"> <para>Tool number</para> <remarks> <para> The following specifications applied to tool number parameter: <list type="table"> <listheader> <term>Specification</term> <description>Number of Tool</description> </listheader> <item> <term>In case of A turret and Double Tooling specification NC spec [5,7] is active</term> <description>1 to 12 and 21 to 32</description> </item> <item> <term>In case of A turret and Double Tooling specification NC spec [5,7] is not active</term> <description>1 to max tool number</description> </item> <item> <term>In case of B turret and Double Tooling specification NC spec [5,7] is active</term> <description>1 to 12 and 21 to 32</description> </item> <item> <term>In case of B turret and Double Tooling specification NC spec [5,7] is not active</term> <description>1 to 12</description> </item> <item> <term> <para>In case of B turret and Double Tooling specification NC spec [5,7] is not active and the following specifcations are valid:</para> <para>Counter Turret Spec.</para> <para>Vertical Lathe Spec.</para> <para>Not Flat Bed Spec.</para> <para>Tool Base</para> </term> <description>1 to 24</description> </item> </list> </para> </remarks> </param>
      <returns>A System.Int32 that represents the offset number.</returns>
      <remarks> <para> The following specifications must be met in order to function: <list type="table"> <listheader> <term>Specification</term> <description>Valid/Invalid</description> </listheader> <item> <term>Tool life management specification NC spec [21,3]</term> <description>Valid</description> </item> </list> </para> </remarks>
      <exception cref="System.ApplicationException">Thrown when function fails to perform the operation at current NC condition.</exception>
      <exception cref="System.NotSupportedException">Thrown when operation/input parameters are not supported for the current system.</exception>
      <Figure>TOOL DATA - TOOL LIFE MANAGEMENT - A(NO. OF WORK) - OG3 <para> Reference offset 3 of tool number 1 is offset number 33. <img src="Lathe.ToolData.TLM.Work.jpg" /> </para> <para> OSP-P300S - TOOL DATA SETTING - TOOL EDIT - TOOL DATA DETAIL SETTING - OG1/2/3 <img src="Lathe.P300S.ToolData.ToolEdit.DetailSetting.jpg" /> </para> </Figure>
      <SubSystem> Please see <see href="SubSystemNoteTable.htm">Sub System Note Table</see> for more information if applicable. <para>Valid sub systems for this function (Y = Valid, N = Not valid)</para> <para> <list type="table"> <listheader> <term>NC_RUN </term> <term>NC_RUN_1 </term> <term>NC_RUN_2 </term> <term>NC_RUN_3 </term> <term>NC_PANEL </term> <term>NC_PANEL_1 </term> <term>NC_PANEL_2 </term> <term>NC_PANEL_3 </term> <term>NC_AL </term> <term>NC_AR </term> <term>NC_BL </term> <term>NC_BR </term> <term>NC_CL </term> <term>NC_CR </term> <term>NC_2AL </term> </listheader> <item> <term>Y (*21)</term> <term>Y (*22)</term> <term>Y (*16)</term> <term>Y (*4)</term> <term>Y (*21)</term> <term>Y (*22)</term> <term>Y (*16)</term> <term>Y (*4)</term> <term>Y (*22)</term> <term>Y (*22)</term> <term>Y (*16)</term> <term>Y (*16)</term> <term>Y (*4)</term> <term>Y (*4)</term> <term>Y (*22)</term> </item> </list> </para> </SubSystem>
      <remarks>  <para> Compatible Chart of this function for different OSP controls: <list type="table"> <listheader> <term>OSP Control</term> <description>Compatible</description> </listheader> <item> <term>P100II</term> <description>Yes</description> </item> <item> <term>P200</term> <description>Yes</description> </item> <item> <term>P300L</term> <description> <para> Yes </para> </description> </item> <item> <term>P300S/TD Mode</term> <description> <para> No </para> </description> </item> <item> <term>P300S/TL Mode</term> <description> <para> No </para> </description> </item> </list> </para>  </remarks>
    </member>
    <member name="M:Okuma.CLDATAPI.DataAPI.CTools.SetReferenceToolOffset3(System.Int32,System.Int32)">
      <overloads>The function has 2 overloads methods for setting reference offset number of each tool in the tool life management table.</overloads>
      <summary> Sets reference tool offset 3 at the specified tool number for current sub system. </summary>
      <example> This sample shows how to call the SetReferenceToolOffset3() method. <para>	objTool.SetReferenceToolOffset3(CInt(Me.tul2pa3.SelectedValue), CInt(Me.tul2ba3.SelectedValue), CInt(Me.tul2tn.Text), CInt(Me.tul2set3.Text))	</para> </example>
      <param name="intToolNo"> <para>Tool number</para> <remarks> <para> The following specifications applied to tool number parameter: <list type="table"> <listheader> <term>Specification</term> <description>Number of Tool</description> </listheader> <item> <term>In case of A turret and Double Tooling specification NC spec [5,7] is active</term> <description>1 to 12 and 21 to 32</description> </item> <item> <term>In case of A turret and Double Tooling specification NC spec [5,7] is not active</term> <description>1 to max tool number</description> </item> <item> <term>In case of B turret and Double Tooling specification NC spec [5,7] is active</term> <description>1 to 12 and 21 to 32</description> </item> <item> <term>In case of B turret and Double Tooling specification NC spec [5,7] is not active</term> <description>1 to 12</description> </item> <item> <term> <para>In case of B turret and Double Tooling specification NC spec [5,7] is not active and the following specifcations are valid:</para> <para>Counter Turret Spec.</para> <para>Vertical Lathe Spec.</para> <para>Not Flat Bed Spec.</para> <para>Tool Base</para> </term> <description>1 to 24</description> </item> </list> </para> </remarks> </param>
      <param name="intOffsetNo">Offset number</param>
      <returns>None</returns>
      <remarks> <para> The following specifications must be met in order to function: <list type="table"> <listheader> <term>Specification</term> <description>Valid/Invalid</description> </listheader> <item> <term>Tool life management specification NC spec [21,3]</term> <description>Valid</description> </item> </list> </para> </remarks>
      <exception cref="System.ApplicationException">Thrown when function fails to perform the operation at current NC condition.</exception>
      <exception cref="System.NotSupportedException">Thrown when operation/input parameters are not supported for the current system.</exception>
      <Figure>TOOL DATA - TOOL LIFE MANAGEMENT - A(NO. OF WORK) - OG3 <para> Reference offset 3 of tool number 1 is offset number 33. <img src="Lathe.ToolData.TLM.Work.jpg" /> </para> <para> OSP-P300S - TOOL DATA SETTING - TOOL EDIT - TOOL DATA DETAIL SETTING - OG1/2/3 <img src="Lathe.P300S.ToolData.ToolEdit.DetailSetting.jpg" /> </para> </Figure>
      <SubSystem> Please see <see href="SubSystemNoteTable.htm">Sub System Note Table</see> for more information if applicable. <para>Valid sub systems for this function (Y = Valid, N = Not valid)</para> <para> <list type="table"> <listheader> <term>NC_RUN </term> <term>NC_RUN_1 </term> <term>NC_RUN_2 </term> <term>NC_RUN_3 </term> <term>NC_PANEL </term> <term>NC_PANEL_1 </term> <term>NC_PANEL_2 </term> <term>NC_PANEL_3 </term> <term>NC_AL </term> <term>NC_AR </term> <term>NC_BL </term> <term>NC_BR </term> <term>NC_CL </term> <term>NC_CR </term> <term>NC_2AL </term> </listheader> <item> <term>Y (*21)</term> <term>Y (*22)</term> <term>Y (*16)</term> <term>Y (*4)</term> <term>Y (*21)</term> <term>Y (*22)</term> <term>Y (*16)</term> <term>Y (*4)</term> <term>Y (*22)</term> <term>Y (*22)</term> <term>Y (*16)</term> <term>Y (*16)</term> <term>Y (*4)</term> <term>Y (*4)</term> <term>Y (*22)</term> </item> </list> </para> </SubSystem>
      <remarks>  <para> Compatible Chart of this function for different OSP controls: <list type="table"> <listheader> <term>OSP Control</term> <description>Compatible</description> </listheader> <item> <term>P100II</term> <description>Yes</description> </item> <item> <term>P200</term> <description>Yes</description> </item> <item> <term>P300L</term> <description> <para> Yes </para> </description> </item> <item> <term>P300S/TD Mode</term> <description> <para> No </para> </description> </item> <item> <term>P300S/TL Mode</term> <description> <para> Yes </para> </description> </item> </list> </para>  </remarks>
    </member>
    <member name="M:Okuma.CLDATAPI.DataAPI.CTools.GetToolNumberInGroup(System.Int32)">
      <summary> Get current tool number of each group for current sub system. <para>For OSP-P300S: Multi-edges tool registered with ATC table can only be supported in TD mode.</para> </summary>
      <example> This sample shows how to call the GetToolNumberInGroup() method. <para> Dim intToolNo As Integer </para> <para> Dim intGroupNo As Integer </para> <para> intToolNo = objTool.GetToolNumberInGroup(intGroupNo)	</para> </example>
      <param name="intGroupNo">A tool group number</param>
      <returns>A System.Int32 value</returns>
      <exception cref="System.ApplicationException">Thrown when function fails to perform the operation at current NC condition.</exception>
      <exception cref="System.NotSupportedException">Thrown when operation/input parameters are not supported for the current system.</exception>
      <remarks> <para> The following specifications must be met in order to function: <list type="table"> <listheader> <term>Specification</term> <description>Valid/Invalid</description> </listheader> <item> <term>Tool life management specification NC spec [21,3]</term> <description>Valid</description> </item> </list> </para> <para> Compatible Chart of this function for different OSP controls: <list type="table"> <listheader> <term>OSP Control</term> <description>Compatible</description> </listheader> <item> <term>P100II</term> <description>Yes</description> </item> <item> <term>P200</term> <description>Yes</description> </item> <item> <term>P300L</term> <description> <para> Yes </para> </description> </item> <item> <term>P300S/TD Mode</term> <description> <para> No </para> </description> </item> <item> <term>P300S/TL Mode</term> <description> <para> No </para> </description> </item> </list> </para> </remarks>
      <Figure> TOOL DATA - TOOL LIFE MANAGEMENT - GROUP TABLE <para> Current tool number in group 1 is tool number 2. <img src="Lathe.ToolData.TLM.GroupTable.jpg" /> </para> </Figure>
      <SubSystem> Please see <see href="SubSystemNoteTable.htm">Sub System Note Table</see> for more information if applicable. <para>Valid sub systems for this function (Y = Valid, N = Not valid)</para> <para> <list type="table"> <listheader> <term>NC_RUN </term> <term>NC_RUN_1 </term> <term>NC_RUN_2 </term> <term>NC_RUN_3 </term> <term>NC_PANEL </term> <term>NC_PANEL_1 </term> <term>NC_PANEL_2 </term> <term>NC_PANEL_3 </term> <term>NC_AL </term> <term>NC_AR </term> <term>NC_BL </term> <term>NC_BR </term> <term>NC_CL </term> <term>NC_CR </term> <term>NC_2AL </term> </listheader> <item> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y (for non multi-edges tool only)</term> </item> </list> </para>  </SubSystem>
    </member>
    <member name="M:Okuma.CLDATAPI.DataAPI.CTools.SetToolNumberInGroup(System.Int32,System.Int32)">
      <summary>Sets active tool number in a tool group for current sub system. </summary>
      <example> This sample shows how to call the SetToolNumberInGroup() method. <para>	objTool.SetToolNumberInGroup(CInt(Me.tulUpdToolNumberInGroup.Text), CInt(Me.tulToolNumber.Text))	</para> </example>
      <param name="intGroupNo">Tool group number</param>
      <param name="intToolNo">A tool number becomes active tool number in this tool group number.  Tool number must be exist in this group.</param>
      <exception cref="System.ApplicationException">Thrown when function fails to perform the operation at current NC condition.</exception>
      <exception cref="System.NotSupportedException">Thrown when operation/input parameters are not supported for the current system.</exception>
      <remarks> <para> The following specifications must be met in order to function: <list type="table"> <listheader> <term>Specification</term> <description>Valid/Invalid</description> </listheader> <item> <term>Tool life management specification NC spec [21,3]</term> <description>Valid</description> </item> </list> </para> <para> Compatible Chart of this function for different OSP controls: <list type="table"> <listheader> <term>OSP Control</term> <description>Compatible</description> </listheader> <item> <term>P100II</term> <description>Yes</description> </item> <item> <term>P200</term> <description>Yes</description> </item> <item> <term>P300L</term> <description> <para> Yes </para> </description> </item> <item> <term>P300S/TD Mode</term> <description> <para> No </para> </description> </item> <item> <term>P300S/TL Mode</term> <description> <para> No </para> </description> </item> </list> </para> </remarks>
      <Figure> TOOL DATA - TOOL LIFE MANAGEMENT - GROUP TABLE - SET-TOOL <para> Tool number 2 (under SET-TOOL column) in group 1 is an active tool in this group. <img src="Lathe.ToolData.TLM.GroupTable.jpg" /> </para> </Figure>
      <SubSystem> Please see <see href="SubSystemNoteTable.htm">Sub System Note Table</see> for more information if applicable. <para>Valid sub systems for this function (Y = Valid, N = Not valid)</para> <para> <list type="table"> <listheader> <term>NC_RUN </term> <term>NC_RUN_1 </term> <term>NC_RUN_2 </term> <term>NC_RUN_3 </term> <term>NC_PANEL </term> <term>NC_PANEL_1 </term> <term>NC_PANEL_2 </term> <term>NC_PANEL_3 </term> <term>NC_AL </term> <term>NC_AR </term> <term>NC_BL </term> <term>NC_BR </term> <term>NC_CL </term> <term>NC_CR </term> <term>NC_2AL </term> </listheader> <item> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> </item> </list> </para>  </SubSystem>
    </member>
    <member name="M:Okuma.CLDATAPI.DataAPI.CTools.GetGroupNo(System.Int32)">
      <summary>Gets group number assigned to each tool number for current sub system. <para>For OSP-P300S(LP) TL mode: Group number can only be obtained on attached tool and edge 1 if applicable</para> </summary>
      <example> This sample shows how to call the GetGroupNo() method. <para>	Dim intToolNo As Integer</para> <para>	Dim intGroupNo As Integer</para> <para>	intGroupNo = objTool.GetGroupNo(intToolNo)	</para> </example>
      <param name="intToolNo">A tool number</param>
      <returns>A System.Int32 value.  It returns 0 if no group number assigned to a tool number.</returns>
      <exception cref="System.ApplicationException">Thrown when function fails to perform the operation at current NC condition.</exception>
      <exception cref="System.NotSupportedException">Thrown when operation/input parameters are not supported for the current system.</exception>
      <remarks> <para> The following specifications must be met in order to function: <list type="table"> <listheader> <term>Specification</term> <description>Valid/Invalid</description> </listheader> <item> <term>Tool life management specification NC spec [21,3]</term> <description>Valid</description> </item> </list> </para> <para> Compatible Chart of this function for different OSP controls: <list type="table"> <listheader> <term>OSP Control</term> <description>Compatible</description> </listheader> <item> <term>P100II</term> <description>Yes</description> </item> <item> <term>P200</term> <description>Yes</description> </item> <item> <term>P300L</term> <description> <para> Yes </para> </description> </item> <item> <term>P300S/TD Mode</term> <description> <para> Yes </para> </description> </item> <item> <term>P300S/TL Mode</term> <description> <para> Yes </para> </description> </item> </list> </para> </remarks>
      <Figure>OSP-P200O/OSP-P300L: TOOL DATA - TOOL LIFE MANAGEMENT - GRP <para> Group number (GRP) 1 is assigned to Tool 1,2,3, and 4. <img src="Lathe.ToolData.TLM.Work.jpg" /> </para> <para> OSP-P300S(LP) - TL Mode - TOOL DATA SETTING - TOOL DATA (ALL) - GROUP NUMBER <img src="Lathe.P300S.TL.ToolDataAll.jpg" /> </para> </Figure>
      <SubSystem> Please see <see href="SubSystemNoteTable.htm">Sub System Note Table</see> for more information if applicable. <para>Valid sub systems for this function (Y = Valid, N = Not valid)</para> <para> <list type="table"> <listheader> <term>NC_RUN </term> <term>NC_RUN_1 </term> <term>NC_RUN_2 </term> <term>NC_RUN_3 </term> <term>NC_PANEL </term> <term>NC_PANEL_1 </term> <term>NC_PANEL_2 </term> <term>NC_PANEL_3 </term> <term>NC_AL </term> <term>NC_AR </term> <term>NC_BL </term> <term>NC_BR </term> <term>NC_CL </term> <term>NC_CR </term> <term>NC_2AL </term> </listheader> <item> <term>Y (*15)</term> <term>Y</term> <term>Y (*16)</term> <term>Y (*4)</term> <term>Y (*15)</term> <term>Y</term> <term>Y (*16)</term> <term>Y (*4)</term> <term>Y</term> <term>Y</term> <term>Y (*16)</term> <term>Y (*16)</term> <term>Y (*4)</term> <term>Y (*4)</term> <term>Y</term> </item> </list> </para>  </SubSystem>
    </member>
    <member name="M:Okuma.CLDATAPI.DataAPI.CTools.SetGroupNo(System.Int32,System.Int32)">
      <summary>Assigns a tool group number to a tool for current sub system. <para>For OSP-P300S(LP) TL mode: Group number can only be set on attached tool and edge 1 if applicable</para> </summary>
      <example> This sample shows how to call the SetGroupNo() method. <para>	Dim intToolNo As Integer</para> <para>	Dim intGroupNo As Integer</para> <para>	objTool.SetGroupNo(intToolNo, intGroupNo)	</para> </example>
      <param name="intToolNo">Tool number</param>
      <param name="intGroupNo">Group number to be assigned to a tool number</param>
      <exception cref="System.ApplicationException">Thrown when function fails to perform the operation at current NC condition.</exception>
      <exception cref="System.NotSupportedException">Thrown when operation/input parameters are not supported for the current system.</exception>
      <remarks> <para> The following specifications must be met in order to function: <list type="table"> <listheader> <term>Specification</term> <description>Valid/Invalid</description> </listheader> <item> <term>Tool life management specification NC spec [21,3]</term> <description>Valid</description> </item> </list> </para> <para> Compatible Chart of this function for different OSP controls: <list type="table"> <listheader> <term>OSP Control</term> <description>Compatible</description> </listheader> <item> <term>P100II</term> <description>Yes</description> </item> <item> <term>P200</term> <description>Yes</description> </item> <item> <term>P300L</term> <description> <para> Yes </para> </description> </item> <item> <term>P300S/TD Mode</term> <description> <para> Yes </para> </description> </item> <item> <term>P300S/TL Mode</term> <description> <para> Yes </para> </description> </item> </list> </para> </remarks>
      <Figure>OSP-P200O/OSP-P300L: TOOL DATA - TOOL LIFE MANAGEMENT - GRP <para> Group number (GRP) 1 is assigned to Tool 1,2,3, and 4. <img src="Lathe.ToolData.TLM.Work.jpg" /> </para> <para> OSP-P300S(LP) - TL Mode - TOOL DATA SETTING - TOOL DATA (ALL) - GROUP NUMBER <img src="Lathe.P300S.TL.ToolDataAll.jpg" /> </para> </Figure>
      <SubSystem> Please see <see href="SubSystemNoteTable.htm">Sub System Note Table</see> for more information if applicable. <para>Valid sub systems for this function (Y = Valid, N = Not valid)</para> <para> <list type="table"> <listheader> <term>NC_RUN </term> <term>NC_RUN_1 </term> <term>NC_RUN_2 </term> <term>NC_RUN_3 </term> <term>NC_PANEL </term> <term>NC_PANEL_1 </term> <term>NC_PANEL_2 </term> <term>NC_PANEL_3 </term> <term>NC_AL </term> <term>NC_AR </term> <term>NC_BL </term> <term>NC_BR </term> <term>NC_CL </term> <term>NC_CR </term> <term>NC_2AL </term> </listheader> <item> <term>Y (*15)</term> <term>Y</term> <term>Y (*16)</term> <term>Y (*4)</term> <term>Y (*15)</term> <term>Y</term> <term>Y (*16)</term> <term>Y (*4)</term> <term>Y</term> <term>Y</term> <term>Y (*16)</term> <term>Y (*16)</term> <term>Y (*4)</term> <term>Y (*4)</term> <term>Y</term> </item> </list> </para>  </SubSystem>
    </member>
    <member name="M:Okuma.CLDATAPI.DataAPI.CTools.GetToolLife(Okuma.CLDATAPI.Enumerations.ToolLifeConditionEnum,System.Int32)">
      <overloads>This function has these overload methods for getting tool life value.</overloads>
      <summary>Gets setting value of tool life at the specified tool life condition, and tool number for current sub system. <para>Notes: On OSP-P300S it can only refer to registered and mounted tool and edge number # 1 if it is a multi-edges tool. In order to refer to other edges of a multi-edges tool in OSP-P300S, the function GetToolLife(ToolLifeConditionEnum enToolLifeCondition, Int32 intToolNo, ToolEdgeEnum enEdgeNo) must be used. </para> <para>Notes: On OSP-P300L, tool life of tool number is referred to TNO. but not REG. NO. </para> </summary>
      <example> This sample shows how to call the GetToolLife() method. <para> Dim intToolNo as Integer </para> <para> Dim enToolLifeCondition as ToolLifeConditionEnum </para> <para> Dim objSpec as CSpec = new CSpec </para> <para> Dim objTool as CTools = new CTools </para> <para> Dim dblValue as Double</para> <para> if ( objSpec.GetControlType() = ControlTypeEnum.P300S) then</para> <para>		if ( objTools.IsMountedTool(intToolNo) then </para> <para>			dblValue = objTools.GetToolLife(enToolLifeCondition, intToolNo)</para> <para>		End If</para> <para> else</para> <para>		dblValue = objTools.GetToolLife(enToolLifeCondition, intToolNo)</para> <para> End If</para> </example>
      <param name="enToolLifeCondition">Toollife condition</param>
      <param name="intToolNo">Tool number</param>
      <returns>A System.Double value</returns>
      <DataUnit> <para> The unit depends on the specified tool life condition: </para> <list type="table"> <listheader> <term>Tool Life Condition</term> <description>Unit</description> </listheader> <item> <term>Cutting Time</term> <description>Second</description> </item> <item> <term>Wear</term> <description>By default, unit of wear amount is in millimeter.  Other units can be set by calling SetDataUnit.</description> </item> <item> <term>Workpiece</term> <description>A unit(machined workpiece)</description> </item> </list> </DataUnit>
      <param name="enToolLifeCondition">A tool life condition for setting tool life value</param>
      <param name="intToolNo">A tool number where tool life value is added to</param>
      <param name="dblValue">Tool life to be added to</param>
      <exception cref="System.ApplicationException">Thrown when function fails to perform the operation at current NC condition.</exception>
      <exception cref="System.NotSupportedException">Thrown when operation/input parameters are not supported for the current system.</exception>
      <remarks> <para> The following specifications must be met in order to function: <list type="table"> <listheader> <term>Specification</term> <description>Valid/Invalid</description> </listheader> <item> <term>Tool life management specification NC spec [21,3]</term> <description>Valid</description> </item> </list> </para> </remarks>
      <Figure> <para> TOOL DATA - TOOL LIFE MANAGEMENT - A(NO. OF WORK) - SET <img src="Lathe.ToolData.TLM.Work.jpg" /> </para> <para> TOOL DATA SETTING - TOOL DATA (ALL) -  TOOL LIFE MANAGE -  X.SET <para>X = N for number of workpiece</para> <para>X = T for cutting time</para> <para>X = W for tool wear amount</para> <img src="Lathe.P300.TD.ToolDataSetting.XZ.jpg" /> </para> <para> TOOL DATA SETTING - TURRET INFO -  X.SET <para>X = N for number of workpiece</para> <para>X = T for cutting time</para> <para>X = W for tool wear amount</para> <img src="Lathe.P300S.TurretInfo.jpg" /> </para> <para> OSP-P300L - TOOL LIFE MANAGEMENT - A(NO. OF WORK) - SET <img src="Lathe.P300L.ToolLife.jpg" /> </para> </Figure>
      <SubSystem> Please see <see href="SubSystemNoteTable.htm">Sub System Note Table</see> for more information if applicable. <para>Valid sub systems for this function (Y = Valid, N = Not valid)</para> <para> <list type="table"> <listheader> <term>NC_RUN </term> <term>NC_RUN_1 </term> <term>NC_RUN_2 </term> <term>NC_RUN_3 </term> <term>NC_PANEL </term> <term>NC_PANEL_1 </term> <term>NC_PANEL_2 </term> <term>NC_PANEL_3 </term> <term>NC_AL </term> <term>NC_AR </term> <term>NC_BL </term> <term>NC_BR </term> <term>NC_CL </term> <term>NC_CR </term> <term>NC_2AL </term> </listheader> <item> <term>Y (*15)</term> <term>Y</term> <term>Y (*16)</term> <term>Y (*4)</term> <term>Y (*15)</term> <term>Y</term> <term>Y (*16)</term> <term>Y (*4)</term> <term>Y</term> <term>Y</term> <term>Y (*16)</term> <term>Y (*16)</term> <term>Y (*4)</term> <term>Y (*4)</term> <term>Y</term> </item> </list> </para> </SubSystem>
      <SubSystem> Please see <see href="SubSystemNoteTable.htm">Sub System Note Table for OSP-P300S</see> for more information if applicable. <para>Valid sub systems for this function (Y = Valid, N = Not valid)</para> <para> <list type="table"> <listheader> <term>NC_RUN </term> <term>NC_RUN_1 </term> <term>NC_RUN_2 </term> <term>NC_RUN_3 </term> <term>NC_PANEL </term> <term>NC_PANEL_1 </term> <term>NC_PANEL_2 </term> <term>NC_PANEL_3 </term> <term>NC_AL </term> <term>NC_AR </term> <term>NC_BL </term> <term>NC_BR </term> <term>NC_CL </term> <term>NC_CR </term> <term>NC_2AL </term> </listheader> <item> <term>Y (*35)</term> <term>Y (*35)</term> <term>Y (*35)</term> <term>Y (*35)</term> <term>Y (*35)</term> <term>Y (*35)</term> <term>Y (*35)</term> <term>Y (*35)</term> <term>Y (*35)</term> <term>Y (*35)</term> <term>Y (*35)</term> <term>Y (*35)</term> <term>Y (*35)</term> <term>Y (*35)</term> <term>Y (*35)</term> </item> </list> </para> </SubSystem>
      <remarks>  <para> Compatible Chart of this function for different OSP controls: <list type="table"> <listheader> <term>OSP Control</term> <description>Compatible</description> </listheader> <item> <term>P100II</term> <description>Yes</description> </item> <item> <term>P200</term> <description>Yes</description> </item> <item> <term>P300L</term> <description>Yes</description> </item> <item> <term>P300S/TD Mode</term> <description>Yes</description> </item> <item> <term>P300S/TL Mode</term> <description>Yes</description> </item> </list> </para>  </remarks>
    </member>
    <member name="M:Okuma.CLDATAPI.DataAPI.CTools.SetToolLife(Okuma.CLDATAPI.Enumerations.ToolLifeConditionEnum,System.Int32,System.Double)">
      <overloads>This function has these overload methods for setting tool life value.</overloads>
      <summary> Sets the tool life value at the specified tool life condition, and tool number for current sub system. <para>Notes: On OSP-P300S it can only refer to registered and mounted tool and edge number # 1 if it is a multi-edges tool. In order to refer to other edges of a multi-edges tool in OSP-P300S, the function SetToolLife(ToolLifeConditionEnum enToolLifeCondition, Int32 intToolNo, ToolEdgeEnum enEdgeNo, Double dlbValue) must be used. </para> <para>Notes: On OSP-P300L, tool life of tool number is referred to TNO. but not REG. NO. </para> </summary>
      <example> This sample shows how to call the SetToolLife() method. <para> Dim intToolNo as Integer </para> <para> Dim enToolLifeCondition as ToolLifeConditionEnum </para> <para> Dim objSpec as CSpec = new CSpec </para> <para> Dim objTool as CTools = new CTools </para> <para> Dim dblValue as Double</para> <para> if ( objSpec.GetControlType() = ControlTypeEnum.P300S) then</para> <para>		if ( objTools.IsMountedTool(intToolNo) then </para> <para>			objTools.SetToolLife(enToolLifeCondition, intToolNo, dblValue)</para> <para>		End If</para> <para> else</para> <para>		objTools.SetToolLife(enToolLifeCondition, intToolNo, dblValue)</para> <para> End If</para> </example>
      <param name="enToolLifeCondition">Tool life condition</param>
      <param name="intToolNo">Tool number</param>
      <param name="dblValue">Tool life value to be set</param>
      <returns>None</returns>
      <DataUnit> <para> The unit depends on the specified tool life condition: </para> <list type="table"> <listheader> <term>Tool Life Condition</term> <description>Unit</description> </listheader> <item> <term>Cutting Time</term> <description>Second</description> </item> <item> <term>Wear</term> <description>By default, unit of wear amount is in millimeter.  Other units can be set by calling SetDataUnit.</description> </item> <item> <term>Workpiece</term> <description>A unit(machined workpiece)</description> </item> </list> </DataUnit>
      <exception cref="System.ApplicationException">Thrown when function fails to perform the operation at current NC condition.</exception>
      <exception cref="System.NotSupportedException">Thrown when operation/input parameters are not supported for the current system.</exception>
      <remarks> <para> The following specifications must be met in order to function: <list type="table"> <listheader> <term>Specification</term> <description>Valid/Invalid</description> </listheader> <item> <term>Tool life management specification NC spec [21,3]</term> <description>Valid</description> </item> </list> </para> </remarks>
      <Figure> <para> TOOL DATA - TOOL LIFE MANAGEMENT - A(NO. OF WORK) - SET <img src="Lathe.ToolData.TLM.Work.jpg" /> </para> <para> TOOL DATA SETTING - TOOL DATA (ALL) -  TOOL LIFE MANAGE -  X.SET <para>X = N for number of workpiece</para> <para>X = T for cutting time</para> <para>X = W for tool wear amount</para> <img src="Lathe.P300.TD.ToolDataSetting.XZ.jpg" /> </para> <para> TOOL DATA SETTING - TURRET INFO -  X.SET <para>X = N for number of workpiece</para> <para>X = T for cutting time</para> <para>X = W for tool wear amount</para> <img src="Lathe.P300S.TurretInfo.jpg" /> </para> <para> OSP-P300L - TOOL LIFE MANAGEMENT - A(NO. OF WORK) - SET <img src="Lathe.P300L.ToolLife.jpg" /> </para> </Figure>
      <SubSystem> Please see <see href="SubSystemNoteTable.htm">Sub System Note Table</see> for more information if applicable. <para>Valid sub systems for this function (Y = Valid, N = Not valid)</para> <para> <list type="table"> <listheader> <term>NC_RUN </term> <term>NC_RUN_1 </term> <term>NC_RUN_2 </term> <term>NC_RUN_3 </term> <term>NC_PANEL </term> <term>NC_PANEL_1 </term> <term>NC_PANEL_2 </term> <term>NC_PANEL_3 </term> <term>NC_AL </term> <term>NC_AR </term> <term>NC_BL </term> <term>NC_BR </term> <term>NC_CL </term> <term>NC_CR </term> <term>NC_2AL </term> </listheader> <item> <term>Y (*15)</term> <term>Y</term> <term>Y (*16)</term> <term>Y (*4)</term> <term>Y (*15)</term> <term>Y</term> <term>Y (*16)</term> <term>Y (*4)</term> <term>Y</term> <term>Y</term> <term>Y (*16)</term> <term>Y (*16)</term> <term>Y (*4)</term> <term>Y (*4)</term> <term>Y</term> </item> </list> </para> </SubSystem>
      <SubSystem> Please see <see href="SubSystemNoteTable.htm">Sub System Note Table for OSP-P300S</see> for more information if applicable. <para>Valid sub systems for this function (Y = Valid, N = Not valid)</para> <para> <list type="table"> <listheader> <term>NC_RUN </term> <term>NC_RUN_1 </term> <term>NC_RUN_2 </term> <term>NC_RUN_3 </term> <term>NC_PANEL </term> <term>NC_PANEL_1 </term> <term>NC_PANEL_2 </term> <term>NC_PANEL_3 </term> <term>NC_AL </term> <term>NC_AR </term> <term>NC_BL </term> <term>NC_BR </term> <term>NC_CL </term> <term>NC_CR </term> <term>NC_2AL </term> </listheader> <item> <term>Y (*35)</term> <term>Y (*35)</term> <term>Y (*35)</term> <term>Y (*35)</term> <term>Y (*35)</term> <term>Y (*35)</term> <term>Y (*35)</term> <term>Y (*35)</term> <term>Y (*35)</term> <term>Y (*35)</term> <term>Y (*35)</term> <term>Y (*35)</term> <term>Y (*35)</term> <term>Y (*35)</term> <term>Y (*35)</term> </item> </list> </para> </SubSystem>
      <remarks>  <para> Compatible Chart of this function for different OSP controls: <list type="table"> <listheader> <term>OSP Control</term> <description>Compatible</description> </listheader> <item> <term>P100II</term> <description>Yes</description> </item> <item> <term>P200</term> <description>Yes</description> </item> <item> <term>P300L</term> <description>Yes</description> </item> <item> <term>P300S/TD Mode</term> <description>Yes</description> </item> <item> <term>P300S/TL Mode</term> <description>Yes</description> </item> </list> </para>  </remarks>
    </member>
    <member name="M:Okuma.CLDATAPI.DataAPI.CTools.AddToolLife(Okuma.CLDATAPI.Enumerations.ToolLifeConditionEnum,System.Int32,System.Double)">
      <overloads>This function has these overload methods for adding tool life value.</overloads>
      <summary> Sets the tool life by adding the input value to the existing data at the specified tool number and tool life condition for current sub system. <para>Notes: On OSP-P300S it can only refer to registered and mounted tool and edge number # 1 if it is a multi-edges tool. In order to refer to other edges of a multi-edges tool in OSP-P300S, the function AddToolLife(ToolLifeConditionEnum enToolLifeCondition, Int32 intToolNo, ToolEdgeEnum enEdgeNo, Double dlbValue) must be used. </para> <para>Notes: On OSP-P300L, tool life of tool number is referred to TNO. but not REG. NO. </para> </summary>
      <example> This sample shows how to call the AddToolLife() method. <para> Dim intToolNo as Integer </para> <para> Dim enToolLifeCondition as ToolLifeConditionEnum </para> <para> Dim objSpec as CSpec = new CSpec </para> <para> Dim objTool as CTools = new CTools </para> <para> Dim dblValue as Double</para> <para> if ( objSpec.GetControlType() = ControlTypeEnum.P300S) then</para> <para>		if ( objTools.IsMountedTool(intToolNo) then </para> <para>			objTools.AddToolLife(enToolLifeCondition, intToolNo, dblValue)</para> <para>		End If</para> <para> else</para> <para>		objTools.AddToolLife(enToolLifeCondition, intToolNo, dblValue)</para> <para> End If</para> </example>
      <returns>None</returns>
      <DataUnit> <para> The unit depends on the specified tool life condition: </para> <list type="table"> <listheader> <term>Tool Life Condition</term> <description>Unit</description> </listheader> <item> <term>Cutting Time</term> <description>Second</description> </item> <item> <term>Wear</term> <description>By default, unit of wear amount is in millimeter.  Other units can be set by calling SetDataUnit.</description> </item> <item> <term>Workpiece</term> <description>A unit(machined workpiece)</description> </item> </list> </DataUnit>
      <param name="enToolLifeCondition">A tool life condition for setting tool life value</param>
      <param name="intToolNo">A tool number where tool life value is added to</param>
      <param name="dblValue">Tool life to be added to</param>
      <exception cref="System.ApplicationException">Thrown when function fails to perform the operation at current NC condition.</exception>
      <exception cref="System.NotSupportedException">Thrown when operation/input parameters are not supported for the current system.</exception>
      <remarks> <para> The following specifications must be met in order to function: <list type="table"> <listheader> <term>Specification</term> <description>Valid/Invalid</description> </listheader> <item> <term>Tool life management specification NC spec [21,3]</term> <description>Valid</description> </item> </list> </para> </remarks>
      <Figure> <para> TOOL DATA - TOOL LIFE MANAGEMENT - A(NO. OF WORK) - SET <img src="Lathe.ToolData.TLM.Work.jpg" /> </para> <para> TOOL DATA SETTING - TOOL DATA (ALL) -  TOOL LIFE MANAGE -  X.SET <para>X = N for number of workpiece</para> <para>X = T for cutting time</para> <para>X = W for tool wear amount</para> <img src="Lathe.P300.TD.ToolDataSetting.XZ.jpg" /> </para> <para> TOOL DATA SETTING - TURRET INFO -  X.SET <para>X = N for number of workpiece</para> <para>X = T for cutting time</para> <para>X = W for tool wear amount</para> <img src="Lathe.P300S.TurretInfo.jpg" /> </para> <para> OSP-P300L - TOOL LIFE MANAGEMENT - A(NO. OF WORK) - SET <img src="Lathe.P300L.ToolLife.jpg" /> </para> </Figure>
      <SubSystem> Please see <see href="SubSystemNoteTable.htm">Sub System Note Table</see> for more information if applicable. <para>Valid sub systems for this function (Y = Valid, N = Not valid)</para> <para> <list type="table"> <listheader> <term>NC_RUN </term> <term>NC_RUN_1 </term> <term>NC_RUN_2 </term> <term>NC_RUN_3 </term> <term>NC_PANEL </term> <term>NC_PANEL_1 </term> <term>NC_PANEL_2 </term> <term>NC_PANEL_3 </term> <term>NC_AL </term> <term>NC_AR </term> <term>NC_BL </term> <term>NC_BR </term> <term>NC_CL </term> <term>NC_CR </term> <term>NC_2AL </term> </listheader> <item> <term>Y (*15)</term> <term>Y</term> <term>Y (*16)</term> <term>Y (*4)</term> <term>Y (*15)</term> <term>Y</term> <term>Y (*16)</term> <term>Y (*4)</term> <term>Y</term> <term>Y</term> <term>Y (*16)</term> <term>Y (*16)</term> <term>Y (*4)</term> <term>Y (*4)</term> <term>Y</term> </item> </list> </para> </SubSystem>
      <SubSystem> Please see <see href="SubSystemNoteTable.htm">Sub System Note Table for OSP-P300S</see> for more information if applicable. <para>Valid sub systems for this function (Y = Valid, N = Not valid)</para> <para> <list type="table"> <listheader> <term>NC_RUN </term> <term>NC_RUN_1 </term> <term>NC_RUN_2 </term> <term>NC_RUN_3 </term> <term>NC_PANEL </term> <term>NC_PANEL_1 </term> <term>NC_PANEL_2 </term> <term>NC_PANEL_3 </term> <term>NC_AL </term> <term>NC_AR </term> <term>NC_BL </term> <term>NC_BR </term> <term>NC_CL </term> <term>NC_CR </term> <term>NC_2AL </term> </listheader> <item> <term>Y (*35)</term> <term>Y (*35)</term> <term>Y (*35)</term> <term>Y (*35)</term> <term>Y (*35)</term> <term>Y (*35)</term> <term>Y (*35)</term> <term>Y (*35)</term> <term>Y (*35)</term> <term>Y (*35)</term> <term>Y (*35)</term> <term>Y (*35)</term> <term>Y (*35)</term> <term>Y (*35)</term> <term>Y (*35)</term> </item> </list> </para> </SubSystem>
      <remarks>  <para> Compatible Chart of this function for different OSP controls: <list type="table"> <listheader> <term>OSP Control</term> <description>Compatible</description> </listheader> <item> <term>P100II</term> <description>Yes</description> </item> <item> <term>P200</term> <description>Yes</description> </item> <item> <term>P300L</term> <description>Yes</description> </item> <item> <term>P300S/TD Mode</term> <description>Yes</description> </item> <item> <term>P300S/TL Mode</term> <description>Yes</description> </item> </list> </para>  </remarks>
    </member>
    <member name="M:Okuma.CLDATAPI.DataAPI.CTools.GetActualToolLife(Okuma.CLDATAPI.Enumerations.ToolLifeConditionEnum,System.Int32)">
      <overloads> This function has these overload methods for getting actual tool life value.</overloads>
      <summary>Gets actual value of tool life at the specified tool life condition, and tool number for current sub system. <para>Notes: On OSP-P300S it can only refer to registered and mounted tool and edge number # 1 if it is a multi-edges tool. In order to refer to other edges of a multi-edges tool in OSP-P300S, the function GetActualToolLife(ToolLifeConditionEnum enToolLifeCondition, Int32 intToolNo, ToolEdgeEnum enEdgeNo) must be used. </para> <para>Notes: On OSP-P300L, tool life of tool number is referred to TNO. but not REG. NO. </para> </summary>
      <example> This sample shows how to call the GetActualToolLife() method. <para> Dim intToolNo as Integer </para> <para> Dim enToolLifeCondition as ToolLifeConditionEnum </para> <para> Dim objSpec as CSpec = new CSpec </para> <para> Dim objTool as CTools = new CTools </para> <para> Dim dblValue as Double</para> <para> if ( objSpec.GetControlType() = ControlTypeEnum.P300S) then</para> <para>		if ( objTools.IsMountedTool(intToolNo) then </para> <para>			dblValue = objTools.GetActualToolLife(enToolLifeCondition, intToolNo)</para> <para>		End If</para> <para> else</para> <para>		dblValue = objTools.GetActualToolLife(enToolLifeCondition, intToolNo)</para> <para> End If</para> </example>
      <param name="enToolLifeCondition">Tool life condition</param>
      <param name="intToolNo">Tool number</param>
      <returns>A System.Double value</returns>
      <DataUnit> <para> The unit depends on the specified tool life condition: </para> <list type="table"> <listheader> <term>Tool Life Condition</term> <description>Unit</description> </listheader> <item> <term>Cutting Time</term> <description>Second</description> </item> <item> <term>Wear</term> <description>By default, unit of wear amount is in millimeter.  Other units can be set by calling SetDataUnit.</description> </item> <item> <term>Workpiece</term> <description>A unit(machined workpiece)</description> </item> </list> </DataUnit>
      <exception cref="System.ApplicationException">Thrown when function fails to perform the operation at current NC condition.</exception>
      <exception cref="System.NotSupportedException">Thrown when operation/input parameters are not supported for the current system.</exception>
      <remarks> <para> The following specifications must be met in order to function: <list type="table"> <listheader> <term>Specification</term> <description>Valid/Invalid</description> </listheader> <item> <term>Tool life management specification NC spec [21,3]</term> <description>Valid</description> </item> </list> </para> </remarks>
      <Figure> <para> TOOL DATA - TOOL LIFE MANAGEMENT - A(NO. OF WORK) - ACTUAL <img src="Lathe.ToolData.TLM.Work.jpg" /> </para> <para> TOOL DATA SETTING - TOOL DATA (ALL) -  TOOL LIFE MANAGE -  X.ACTUAL <para>X = N for number of workpiece</para> <para>X = T for cutting time</para> <para>X = W for tool wear amount</para> <img src="Lathe.P300.TD.ToolDataSetting.XZ.jpg" /> </para> <para> TOOL DATA SETTING - TURRET INFO -  X.ACTUAL <para>X = N for number of workpiece</para> <para>X = T for cutting time</para> <para>X = W for tool wear amount</para> <img src="Lathe.P300S.TurretInfo.jpg" /> </para> <para> OSP-P300L - TOOL LIFE MANAGEMENT - A(NO. OF WORK) - ACTUAL <img src="Lathe.P300L.ToolLife.jpg" /> </para> </Figure>
      <SubSystem> Please see <see href="SubSystemNoteTable.htm">Sub System Note Table</see> for more information if applicable. <para>Valid sub systems for this function (Y = Valid, N = Not valid)</para> <para> <list type="table"> <listheader> <term>NC_RUN </term> <term>NC_RUN_1 </term> <term>NC_RUN_2 </term> <term>NC_RUN_3 </term> <term>NC_PANEL </term> <term>NC_PANEL_1 </term> <term>NC_PANEL_2 </term> <term>NC_PANEL_3 </term> <term>NC_AL </term> <term>NC_AR </term> <term>NC_BL </term> <term>NC_BR </term> <term>NC_CL </term> <term>NC_CR </term> <term>NC_2AL </term> </listheader> <item> <term>Y (*15)</term> <term>Y</term> <term>Y (*16)</term> <term>Y (*4)</term> <term>Y (*15)</term> <term>Y</term> <term>Y (*16)</term> <term>Y (*4)</term> <term>Y</term> <term>Y</term> <term>Y (*16)</term> <term>Y (*16)</term> <term>Y (*4)</term> <term>Y (*4)</term> <term>Y</term> </item> </list> </para> </SubSystem>
      <SubSystem> Please see <see href="SubSystemNoteTable.htm">Sub System Note Table for OSP-P300S</see> for more information if applicable. <para>Valid sub systems for this function (Y = Valid, N = Not valid)</para> <para> <list type="table"> <listheader> <term>NC_RUN </term> <term>NC_RUN_1 </term> <term>NC_RUN_2 </term> <term>NC_RUN_3 </term> <term>NC_PANEL </term> <term>NC_PANEL_1 </term> <term>NC_PANEL_2 </term> <term>NC_PANEL_3 </term> <term>NC_AL </term> <term>NC_AR </term> <term>NC_BL </term> <term>NC_BR </term> <term>NC_CL </term> <term>NC_CR </term> <term>NC_2AL </term> </listheader> <item> <term>Y (*35)</term> <term>Y (*35)</term> <term>Y (*35)</term> <term>Y (*35)</term> <term>Y (*35)</term> <term>Y (*35)</term> <term>Y (*35)</term> <term>Y (*35)</term> <term>Y (*35)</term> <term>Y (*35)</term> <term>Y (*35)</term> <term>Y (*35)</term> <term>Y (*35)</term> <term>Y (*35)</term> <term>Y (*35)</term> </item> </list> </para> </SubSystem>
      <remarks>  <para> Compatible Chart of this function for different OSP controls: <list type="table"> <listheader> <term>OSP Control</term> <description>Compatible</description> </listheader> <item> <term>P100II</term> <description>Yes</description> </item> <item> <term>P200</term> <description>Yes</description> </item> <item> <term>P300L</term> <description>Yes</description> </item> <item> <term>P300S/TD Mode</term> <description>Yes</description> </item> <item> <term>P300S/TL Mode</term> <description>Yes</description> </item> </list> </para>  </remarks>
    </member>
    <member name="M:Okuma.CLDATAPI.DataAPI.CTools.SetActualToolLife(Okuma.CLDATAPI.Enumerations.ToolLifeConditionEnum,System.Int32,System.Double)">
      <overloads>This function has these overload methods for setting actual tool life value.</overloads>
      <summary> Sets the actual tool life value at the specified tool life condition, and tool number for current sub system. <para>Notes: On OSP-P300S it can only refer to registered and mounted tool and edge number # 1 if it is a multi-edges tool. In order to refer to other edges of a multi-edges tool in OSP-P300S, the function SetActualToolLife(ToolLifeConditionEnum enToolLifeCondition, Int32 intToolNo, ToolEdgeEnum enEdgeNo, Double dlbValue) must be used. </para> <para>Notes: On OSP-P300L, tool life of tool number is referred to TNO. but not REG. NO. </para> </summary>
      <example> This sample shows how to call the SetActualToolLife() method. <para> Dim intToolNo as Integer </para> <para> Dim enToolLifeCondition as ToolLifeConditionEnum </para> <para> Dim objSpec as CSpec = new CSpec </para> <para> Dim objTool as CTools = new CTools </para> <para> Dim dblValue as Double</para> <para> if ( objSpec.GetControlType() = ControlTypeEnum.P300S) then</para> <para>		if ( objTools.IsMountedTool(intToolNo) then </para> <para>			objTools.SetActualToolLife(enToolLifeCondition, intToolNo, dblValue)</para> <para>		End If</para> <para> else</para> <para>		objTools.SetActualToolLife(enToolLifeCondition, intToolNo, dblValue)</para> <para> End If</para> </example>
      <param name="enToolLifeCondition">Tool life condition</param>
      <param name="intToolNo">Tool number</param>
      <param name="dblValue">Actual tool life value to be set</param>
      <returns>None</returns>
      <DataUnit> <para> The unit depends on the specified tool life condition: </para> <list type="table"> <listheader> <term>Tool Life Condition</term> <description>Unit</description> </listheader> <item> <term>Cutting Time</term> <description>Second</description> </item> <item> <term>Wear</term> <description>By default, unit of wear amount is in millimeter.  Other units can be set by calling SetDataUnit.</description> </item> <item> <term>Workpiece</term> <description>A unit(machined workpiece)</description> </item> </list> </DataUnit>
      <exception cref="System.ApplicationException">Thrown when function fails to perform the operation at current NC condition.</exception>
      <exception cref="System.NotSupportedException">Thrown when operation/input parameters are not supported for the current system.</exception>
      <remarks> <para> The following specifications must be met in order to function: <list type="table"> <listheader> <term>Specification</term> <description>Valid/Invalid</description> </listheader> <item> <term>Tool life management specification NC spec [21,3]</term> <description>Valid</description> </item> </list> </para> </remarks>
      <Figure> <para> TOOL DATA - TOOL LIFE MANAGEMENT - A(NO. OF WORK) - ACTUAL <img src="Lathe.ToolData.TLM.Work.jpg" /> </para> <para> TOOL DATA SETTING - TOOL DATA (ALL) -  TOOL LIFE MANAGE -  X.ACTUAL <para>X = N for number of workpiece</para> <para>X = T for cutting time</para> <para>X = W for tool wear amount</para> <img src="Lathe.P300.TD.ToolDataSetting.XZ.jpg" /> </para> <para> TOOL DATA SETTING - TURRET INFO -  X.ACTUAL <para>X = N for number of workpiece</para> <para>X = T for cutting time</para> <para>X = W for tool wear amount</para> <img src="Lathe.P300S.TurretInfo.jpg" /> </para> <para> OSP-P300L - TOOL LIFE MANAGEMENT - A(NO. OF WORK) - ACTUAL <img src="Lathe.P300L.ToolLife.jpg" /> </para> </Figure>
      <SubSystem> Please see <see href="SubSystemNoteTable.htm">Sub System Note Table</see> for more information if applicable. <para>Valid sub systems for this function (Y = Valid, N = Not valid)</para> <para> <list type="table"> <listheader> <term>NC_RUN </term> <term>NC_RUN_1 </term> <term>NC_RUN_2 </term> <term>NC_RUN_3 </term> <term>NC_PANEL </term> <term>NC_PANEL_1 </term> <term>NC_PANEL_2 </term> <term>NC_PANEL_3 </term> <term>NC_AL </term> <term>NC_AR </term> <term>NC_BL </term> <term>NC_BR </term> <term>NC_CL </term> <term>NC_CR </term> <term>NC_2AL </term> </listheader> <item> <term>Y (*15)</term> <term>Y</term> <term>Y (*16)</term> <term>Y (*4)</term> <term>Y (*15)</term> <term>Y</term> <term>Y (*16)</term> <term>Y (*4)</term> <term>Y</term> <term>Y</term> <term>Y (*16)</term> <term>Y (*16)</term> <term>Y (*4)</term> <term>Y (*4)</term> <term>Y</term> </item> </list> </para> </SubSystem>
      <SubSystem> Please see <see href="SubSystemNoteTable.htm">Sub System Note Table for OSP-P300S</see> for more information if applicable. <para>Valid sub systems for this function (Y = Valid, N = Not valid)</para> <para> <list type="table"> <listheader> <term>NC_RUN </term> <term>NC_RUN_1 </term> <term>NC_RUN_2 </term> <term>NC_RUN_3 </term> <term>NC_PANEL </term> <term>NC_PANEL_1 </term> <term>NC_PANEL_2 </term> <term>NC_PANEL_3 </term> <term>NC_AL </term> <term>NC_AR </term> <term>NC_BL </term> <term>NC_BR </term> <term>NC_CL </term> <term>NC_CR </term> <term>NC_2AL </term> </listheader> <item> <term>Y (*35)</term> <term>Y (*35)</term> <term>Y (*35)</term> <term>Y (*35)</term> <term>Y (*35)</term> <term>Y (*35)</term> <term>Y (*35)</term> <term>Y (*35)</term> <term>Y (*35)</term> <term>Y (*35)</term> <term>Y (*35)</term> <term>Y (*35)</term> <term>Y (*35)</term> <term>Y (*35)</term> <term>Y (*35)</term> </item> </list> </para> </SubSystem>
      <remarks>  <para> Compatible Chart of this function for different OSP controls: <list type="table"> <listheader> <term>OSP Control</term> <description>Compatible</description> </listheader> <item> <term>P100II</term> <description>Yes</description> </item> <item> <term>P200</term> <description>Yes</description> </item> <item> <term>P300L</term> <description>Yes</description> </item> <item> <term>P300S/TD Mode</term> <description>Yes</description> </item> <item> <term>P300S/TL Mode</term> <description>Yes</description> </item> </list> </para>  </remarks>
    </member>
    <member name="M:Okuma.CLDATAPI.DataAPI.CTools.AddActualToolLife(Okuma.CLDATAPI.Enumerations.ToolLifeConditionEnum,System.Int32,System.Double)">
      <overloads>This function has these overload methods for adding actual tool life value.</overloads>
      <summary> Sets the actual tool life by adding the input value to the existing data at the specified tool number and tool life condition for current sub system. <para>Notes: On OSP-P300S it can only refer to registered and mounted tool and edge number # 1 if it is a multi-edges tool. In order to refer to other edges of a multi-edges tool in OSP-P300S, the function AddActualToolLife(ToolLifeConditionEnum enToolLifeCondition, Int32 intToolNo, ToolEdgeEnum enEdgeNo, Double dlbValue) must be used. </para> <para>Notes: On OSP-P300L, tool life of tool number is referred to TNO. but not REG. NO. </para> </summary>
      <example> This sample shows how to call the AddActualToolLife() method. <para> Dim intToolNo as Integer </para> <para> Dim enToolLifeCondition as ToolLifeConditionEnum </para> <para> Dim objSpec as CSpec = new CSpec </para> <para> Dim objTool as CTools = new CTools </para> <para> Dim dblValue as Double</para> <para> if ( objSpec.GetControlType() = ControlTypeEnum.P300S) then</para> <para>		if ( objTools.IsMountedTool(intToolNo) then </para> <para>			objTools.AddActualToolLife(enToolLifeCondition, intToolNo, dblValue)</para> <para>		End If</para> <para> else</para> <para>		objTools.AddActualToolLife(enToolLifeCondition, intToolNo, dblValue)</para> <para> End If</para> </example>
      <returns>None</returns>
      <DataUnit> <para> The unit depends on the specified tool life condition: </para> <list type="table"> <listheader> <term>Tool Life Condition</term> <description>Unit</description> </listheader> <item> <term>Cutting Time</term> <description>Second</description> </item> <item> <term>Wear</term> <description>By default, unit of wear amount is in millimeter.  Other units can be set by calling SetDataUnit.</description> </item> <item> <term>Workpiece</term> <description>A unit(machined workpiece)</description> </item> </list> </DataUnit>
      <param name="enToolLifeCondition">A tool life condition for setting actual tool life value</param>
      <param name="intToolNo">A tool number where actual tool life value is added to</param>
      <param name="dblValue">Actual Tool life to be added to</param>
      <exception cref="System.ApplicationException">Thrown when function fails to perform the operation at current NC condition.</exception>
      <exception cref="System.NotSupportedException">Thrown when operation/input parameters are not supported for the current system.</exception>
      <remarks> <para> The following specifications must be met in order to function: <list type="table"> <listheader> <term>Specification</term> <description>Valid/Invalid</description> </listheader> <item> <term>Tool life management specification NC spec [21,3]</term> <description>Valid</description> </item> </list> </para> </remarks>
      <Figure> <para> TOOL DATA - TOOL LIFE MANAGEMENT - A(NO. OF WORK) - ACTUAL <img src="Lathe.ToolData.TLM.Work.jpg" /> </para> <para> TOOL DATA SETTING - TOOL DATA (ALL) -  TOOL LIFE MANAGE -  X.ACTUAL <para>X = N for number of workpiece</para> <para>X = T for cutting time</para> <para>X = W for tool wear amount</para> <img src="Lathe.P300.TD.ToolDataSetting.XZ.jpg" /> </para> <para> TOOL DATA SETTING - TURRET INFO -  X.ACTUAL <para>X = N for number of workpiece</para> <para>X = T for cutting time</para> <para>X = W for tool wear amount</para> <img src="Lathe.P300S.TurretInfo.jpg" /> </para> <para> OSP-P300L - TOOL LIFE MANAGEMENT - A(NO. OF WORK) - ACTUAL <img src="Lathe.P300L.ToolLife.jpg" /> </para> </Figure>
      <SubSystem> Please see <see href="SubSystemNoteTable.htm">Sub System Note Table</see> for more information if applicable. <para>Valid sub systems for this function (Y = Valid, N = Not valid)</para> <para> <list type="table"> <listheader> <term>NC_RUN </term> <term>NC_RUN_1 </term> <term>NC_RUN_2 </term> <term>NC_RUN_3 </term> <term>NC_PANEL </term> <term>NC_PANEL_1 </term> <term>NC_PANEL_2 </term> <term>NC_PANEL_3 </term> <term>NC_AL </term> <term>NC_AR </term> <term>NC_BL </term> <term>NC_BR </term> <term>NC_CL </term> <term>NC_CR </term> <term>NC_2AL </term> </listheader> <item> <term>Y (*15)</term> <term>Y</term> <term>Y (*16)</term> <term>Y (*4)</term> <term>Y (*15)</term> <term>Y</term> <term>Y (*16)</term> <term>Y (*4)</term> <term>Y</term> <term>Y</term> <term>Y (*16)</term> <term>Y (*16)</term> <term>Y (*4)</term> <term>Y (*4)</term> <term>Y</term> </item> </list> </para> </SubSystem>
      <SubSystem> Please see <see href="SubSystemNoteTable.htm">Sub System Note Table for OSP-P300S</see> for more information if applicable. <para>Valid sub systems for this function (Y = Valid, N = Not valid)</para> <para> <list type="table"> <listheader> <term>NC_RUN </term> <term>NC_RUN_1 </term> <term>NC_RUN_2 </term> <term>NC_RUN_3 </term> <term>NC_PANEL </term> <term>NC_PANEL_1 </term> <term>NC_PANEL_2 </term> <term>NC_PANEL_3 </term> <term>NC_AL </term> <term>NC_AR </term> <term>NC_BL </term> <term>NC_BR </term> <term>NC_CL </term> <term>NC_CR </term> <term>NC_2AL </term> </listheader> <item> <term>Y (*35)</term> <term>Y (*35)</term> <term>Y (*35)</term> <term>Y (*35)</term> <term>Y (*35)</term> <term>Y (*35)</term> <term>Y (*35)</term> <term>Y (*35)</term> <term>Y (*35)</term> <term>Y (*35)</term> <term>Y (*35)</term> <term>Y (*35)</term> <term>Y (*35)</term> <term>Y (*35)</term> <term>Y (*35)</term> </item> </list> </para> </SubSystem>
      <remarks>  <para> Compatible Chart of this function for different OSP controls: <list type="table"> <listheader> <term>OSP Control</term> <description>Compatible</description> </listheader> <item> <term>P100II</term> <description>Yes</description> </item> <item> <term>P200</term> <description>Yes</description> </item> <item> <term>P300L</term> <description>Yes</description> </item> <item> <term>P300S/TD Mode</term> <description>Yes</description> </item> <item> <term>P300S/TL Mode</term> <description>Yes</description> </item> </list> </para>  </remarks>
    </member>
    <member name="M:Okuma.CLDATAPI.DataAPI.CTools.GetToolOffset(System.Int32,System.Int32,Okuma.CLDATAPI.Enumerations.ToolOffsetAxisIndexEnum)">
      <overloads>This function has these overload methods for getting tool offset value.</overloads>
      <summary>Gets tool offset value at the specified offset indexes, and axis index  for current sub system. </summary>
      <example> This sample shows how to call the GetToolOffset() method. <para>	Dim vNosePattern As Double()	</para> <para>	Try	</para> <para>	    vNosePattern = objTool.GetToolOffset(CInt(Me.TulNoseRCompensationPatternFrom.Text), CInt(Me.TulNoseRCompensationPatternTo.Text), Me.tul1ComboToolOffset.SelectedValue)	</para> <para>	Catch ae As ApplicationException	</para> <para>	    doError("Ctool", ae.Message)	</para> <para>	Catch ex As Exception	</para> <para>	    doError("CTool", ex.Message)	</para> <para>	End Try	</para> </example>
      <param name="intFromOffsetIndex">Starting offset Index.</param>
      <param name="intToOffsetIndex">Ending offset Index.</param>
      <param name="enAxisIndex">Axis index</param>
      <returns>An array of System.Double value</returns>
      <DataUnit> Default unit is in mm.  Other unit can be set by calling SetDataUnit method </DataUnit>
      <exception cref="System.ApplicationException">Thrown when function fails to perform the operation at current NC condition.</exception>
      <exception cref="System.NotSupportedException">Thrown when operation/input parameters are not supported for the current system.</exception>
      <Figure> TOOL DATA - TOOL OFFSET/NOSE R COMPENSATION <para> <img src="Lathe.ToolData.ToolOffsetNoseR.jpg" /> </para> </Figure>
      <SubSystem> Please see <see href="SubSystemNoteTable.htm">Sub System Note Table</see> for more information if applicable. <para>Valid sub systems for this function (Y = Valid, N = Not valid)</para> <para> <list type="table"> <listheader> <term>NC_RUN </term> <term>NC_RUN_1 </term> <term>NC_RUN_2 </term> <term>NC_RUN_3 </term> <term>NC_PANEL </term> <term>NC_PANEL_1 </term> <term>NC_PANEL_2 </term> <term>NC_PANEL_3 </term> <term>NC_AL </term> <term>NC_AR </term> <term>NC_BL </term> <term>NC_BR </term> <term>NC_CL </term> <term>NC_CR </term> <term>NC_2AL </term> </listheader> <item> <term>Y (*17)</term> <term>Y (*19)</term> <term>Y (*46)</term> <term>Y (*46)</term> <term>Y (*17)</term> <term>Y (*19)</term> <term>Y (*46)</term> <term>Y (*46)</term> <term>Y (*19)</term> <term>Y (*19)</term> <term>Y (*46)</term> <term>Y (*46)</term> <term>Y (*46)</term> <term>Y (*46)</term> <term>Y</term> </item> </list> </para> </SubSystem>
      <remarks>  <para> Compatible Chart of this function for different OSP controls: <list type="table"> <listheader> <term>OSP Control</term> <description>Compatible</description> </listheader> <item> <term>P100II</term> <description>Yes</description> </item> <item> <term>P200</term> <description>Yes</description> </item> <item> <term>P300L</term> <description>Yes</description> </item> <item> <term>P300S/TD Mode</term> <description>No</description> </item> <item> <term>P300S/TL Mode</term> <description>Yes</description> </item> </list> </para>  </remarks>
    </member>
    <member name="M:Okuma.CLDATAPI.DataAPI.CTools.GetToolOffset(System.Int32,Okuma.CLDATAPI.Enumerations.ToolOffsetAxisIndexEnum)">
      <summary>Gets tool offset value at the specified offset index, and axis index for current sub system. </summary>
      <example> This sample shows how to call the GetToolOffset() method. <para> Dim intOffsetIndex As Integer </para> <para> Dim dblValue As Double </para> <para> Dim enAxisIndex As ToolOffsetAxisIndexEnum </para> <para> dblValue = objTool.GetToolOffset(intOffsetIndex, enAxisIndex)	</para> </example>
      <param name="intOffsetIndex">Offset index</param>
      <param name="enAxisIndex">Axis index</param>
      <returns>A System.Double value</returns>
      <DataUnit> Default unit is in mm.  Other unit can be set by calling SetDataUnit method </DataUnit>
      <exception cref="System.ApplicationException">Thrown when function fails to perform the operation at current NC condition.</exception>
      <exception cref="System.NotSupportedException">Thrown when operation/input parameters are not supported for the current system.</exception>
      <Figure> TOOL DATA - TOOL OFFSET/NOSE R COMPENSATION <para> <img src="Lathe.ToolData.ToolOffsetNoseR.jpg" /> </para> </Figure>
      <SubSystem> Please see <see href="SubSystemNoteTable.htm">Sub System Note Table</see> for more information if applicable. <para>Valid sub systems for this function (Y = Valid, N = Not valid)</para> <para> <list type="table"> <listheader> <term>NC_RUN </term> <term>NC_RUN_1 </term> <term>NC_RUN_2 </term> <term>NC_RUN_3 </term> <term>NC_PANEL </term> <term>NC_PANEL_1 </term> <term>NC_PANEL_2 </term> <term>NC_PANEL_3 </term> <term>NC_AL </term> <term>NC_AR </term> <term>NC_BL </term> <term>NC_BR </term> <term>NC_CL </term> <term>NC_CR </term> <term>NC_2AL </term> </listheader> <item> <term>Y (*17)</term> <term>Y (*19)</term> <term>Y (*46)</term> <term>Y (*46)</term> <term>Y (*17)</term> <term>Y (*19)</term> <term>Y (*46)</term> <term>Y (*46)</term> <term>Y (*19)</term> <term>Y (*19)</term> <term>Y (*46)</term> <term>Y (*46)</term> <term>Y (*46)</term> <term>Y (*46)</term> <term>Y</term> </item> </list> </para> </SubSystem>
      <remarks>  <para> Compatible Chart of this function for different OSP controls: <list type="table"> <listheader> <term>OSP Control</term> <description>Compatible</description> </listheader> <item> <term>P100II</term> <description>Yes</description> </item> <item> <term>P200</term> <description>Yes</description> </item> <item> <term>P300L</term> <description>Yes</description> </item> <item> <term>P300S/TD Mode</term> <description>No</description> </item> <item> <term>P300S/TL Mode</term> <description>Yes</description> </item> </list> </para>  </remarks>
    </member>
    <member name="M:Okuma.CLDATAPI.DataAPI.CTools.SetToolOffset(System.Int32,Okuma.CLDATAPI.Enumerations.ToolOffsetAxisIndexEnum,System.Double)">
      <overloads>This function has these overload methods for setting Tool Offset value.</overloads>
      <summary> Sets tool offset value at the specified offset index, and axis index for current sub system. </summary>
      <example> This sample shows how to call the SetToolOffset() method. <para>	objTool.SetToolOffset(CInt(Me.tulToolNumber.Text), Me.tulComboToolOffset.SelectedValue, CDbl(Me.tulUpdToolOffset.Text))	</para> </example>
      <param name="intOffsetIndex">Offset index</param>
      <param name="enAxisIndex">Axis index</param>
      <param name="dblValue">Offset value to be set</param>
      <returns>None</returns>
      <DataUnit> Default unit is in mm.  Other unit can be set by calling SetDataUnit method </DataUnit>
      <exception cref="System.ApplicationException">Thrown when function fails to perform the operation at current NC condition.</exception>
      <exception cref="System.NotSupportedException">Thrown when operation/input parameters are not supported for the current system.</exception>
      <Figure>TOOL DATA - TOOL OFFSET/NOSE R COMPENSATION <para> <img src="Lathe.ToolData.ToolOffsetNoseR.jpg" /> </para> </Figure>
      <SubSystem> Please see <see href="SubSystemNoteTable.htm">Sub System Note Table</see> for more information if applicable. <para>Valid sub systems for this function (Y = Valid, N = Not valid)</para> <para> <list type="table"> <listheader> <term>NC_RUN </term> <term>NC_RUN_1 </term> <term>NC_RUN_2 </term> <term>NC_RUN_3 </term> <term>NC_PANEL </term> <term>NC_PANEL_1 </term> <term>NC_PANEL_2 </term> <term>NC_PANEL_3 </term> <term>NC_AL </term> <term>NC_AR </term> <term>NC_BL </term> <term>NC_BR </term> <term>NC_CL </term> <term>NC_CR </term> <term>NC_2AL </term> </listheader> <item> <term>Y (*17)</term> <term>Y (*19)</term> <term>Y (*46)</term> <term>Y (*46)</term> <term>Y (*17)</term> <term>Y (*19)</term> <term>Y (*46)</term> <term>Y (*46)</term> <term>Y (*19)</term> <term>Y (*19)</term> <term>Y (*46)</term> <term>Y (*46)</term> <term>Y (*46)</term> <term>Y (*46)</term> <term>Y</term> </item> </list> </para> </SubSystem>
      <remarks>  <para> Compatible Chart of this function for different OSP controls: <list type="table"> <listheader> <term>OSP Control</term> <description>Compatible</description> </listheader> <item> <term>P100II</term> <description>Yes</description> </item> <item> <term>P200</term> <description>Yes</description> </item> <item> <term>P300L</term> <description>Yes</description> </item> <item> <term>P300S/TD Mode</term> <description>No</description> </item> <item> <term>P300S/TL Mode</term> <description>Yes</description> </item> </list> </para>  </remarks>
    </member>
    <member name="M:Okuma.CLDATAPI.DataAPI.CTools.AddToolOffset(System.Int32,Okuma.CLDATAPI.Enumerations.ToolOffsetAxisIndexEnum,System.Double)">
      <overloads>This function has these overload methods for adding Tool Offset value.</overloads>
      <summary> Sets the Tool Offset value by adding the input value to the existing data at the specified offset index, and axis index for current sub system. </summary>
      <example> This sample shows how to call the AddToolOffset() method. <para>	objTool.AddToolOffset(CInt(Me.tulToolNumber.Text), Me.tulComboToolOffset.SelectedValue, CDbl(Me.tulUpdToolOffset.Text))	</para> </example>
      <returns>None</returns>
      <DataUnit> Default unit is in mm.  Other unit can be set by calling SetDataUnit method </DataUnit>
      <param name="intOffsetIndex">Offset index</param>
      <param name="enAxisIndex">Axis Index</param>
      <param name="dblValue">Offset value to be added to the existing data</param>
      <exception cref="System.ApplicationException">Thrown when function fails to perform the operation at current NC condition.</exception>
      <exception cref="System.NotSupportedException">Thrown when operation/input parameters are not supported for the current system.</exception>
      <Figure> TOOL DATA - TOOL OFFSET/NOSE R COMPENSATION <para> <img src="Lathe.ToolData.ToolOffsetNoseR.jpg" /> </para> </Figure>
      <SubSystem> Please see <see href="SubSystemNoteTable.htm">Sub System Note Table</see> for more information if applicable. <para>Valid sub systems for this function (Y = Valid, N = Not valid)</para> <para> <list type="table"> <listheader> <term>NC_RUN </term> <term>NC_RUN_1 </term> <term>NC_RUN_2 </term> <term>NC_RUN_3 </term> <term>NC_PANEL </term> <term>NC_PANEL_1 </term> <term>NC_PANEL_2 </term> <term>NC_PANEL_3 </term> <term>NC_AL </term> <term>NC_AR </term> <term>NC_BL </term> <term>NC_BR </term> <term>NC_CL </term> <term>NC_CR </term> <term>NC_2AL </term> </listheader> <item> <term>Y (*17)</term> <term>Y (*19)</term> <term>Y (*46)</term> <term>Y (*46)</term> <term>Y (*17)</term> <term>Y (*19)</term> <term>Y (*46)</term> <term>Y (*46)</term> <term>Y (*19)</term> <term>Y (*19)</term> <term>Y (*46)</term> <term>Y (*46)</term> <term>Y (*46)</term> <term>Y (*46)</term> <term>Y</term> </item> </list> </para> </SubSystem>
      <remarks>  <para> Compatible Chart of this function for different OSP controls: <list type="table"> <listheader> <term>OSP Control</term> <description>Compatible</description> </listheader> <item> <term>P100II</term> <description>Yes</description> </item> <item> <term>P200</term> <description>Yes</description> </item> <item> <term>P300L</term> <description>Yes</description> </item> <item> <term>P300S/TD Mode</term> <description>No</description> </item> <item> <term>P300S/TL Mode</term> <description>Yes</description> </item> </list> </para>  </remarks>
    </member>
    <member name="M:Okuma.CLDATAPI.DataAPI.CTools.CalToolOffset(System.Int32,Okuma.CLDATAPI.Enumerations.ToolOffsetAxisIndexEnum,System.Double)">
      <summary> Determines tool offset value based on the calculation made for the input data and actual position. </summary>
      <example> This sample shows how to call the CalToolOffset() method. <para>	objTools.CalToolOffset(CInt(txt_FromIndex.Text), int_wearoffsetindex, int_principleaxisbase)	</para> </example>
      <param name="intOffsetIndex">Offset index</param>
      <param name="enAxisIndex">Axis Index</param>
      <param name="dblValue">Input value to be calculated from</param>
      <returns>None</returns>
      <DataUnit> Default unit is in mm.  Other unit can be set by calling SetDataUnit method </DataUnit>
      <exception cref="System.ApplicationException">Thrown when function fails to perform the operation at current NC condition.</exception>
      <exception cref="System.NotSupportedException">Thrown when operation/input parameters are not supported for the current system.</exception>
      <remarks> <para> The following specifications must be met in order to function: <list type="table"> <listheader> <term>Specification</term> <description>Valid/Invalid</description> </listheader> <item> <term>Tool Offset multi-system specification NC spec [21,6]</term> <description>Invalid</description> </item> </list> </para>  <para> Compatible Chart of this function for different OSP controls: <list type="table"> <listheader> <term>OSP Control</term> <description>Compatible</description> </listheader> <item> <term>P100II</term> <description>Yes</description> </item> <item> <term>P200</term> <description>Yes</description> </item> <item> <term>P300L</term> <description>Yes</description> </item> <item> <term>P300S/TD Mode</term> <description>No</description> </item> <item> <term>P300S/TL Mode</term> <description>Yes</description> </item> </list> </para> </remarks>
      <Figure> TOOL DATA - TOOL OFFSET/NOSE R COMPENSATION - Offset table for A Turret <para> <img src="Lathe.ToolOffset.Cal.ATurret.jpg" /> </para> </Figure>
      <SubSystem> Please see <see href="SubSystemNoteTable.htm">Sub System Note Table</see> for more information if applicable. <para>Valid sub systems for this function (Y = Valid, N = Not valid)</para> <para> <list type="table"> <listheader> <term>NC_RUN </term> <term>NC_RUN_1 </term> <term>NC_RUN_2 </term> <term>NC_RUN_3 </term> <term>NC_PANEL </term> <term>NC_PANEL_1 </term> <term>NC_PANEL_2 </term> <term>NC_PANEL_3 </term> <term>NC_AL </term> <term>NC_AR </term> <term>NC_BL </term> <term>NC_BR </term> <term>NC_CL </term> <term>NC_CR </term> <term>NC_2AL </term> </listheader> <item> <term>Y (*17)</term> <term>Y (*19)</term> <term>Y (*46)</term> <term>Y (*46)</term> <term>Y (*17)</term> <term>Y (*19)</term> <term>Y (*46)</term> <term>Y (*46)</term> <term>Y (*19)</term> <term>Y (*19)</term> <term>Y (*46)</term> <term>Y (*46)</term> <term>Y (*46)</term> <term>Y (*46)</term> <term>Y</term> </item> </list> </para>  </SubSystem>
    </member>
    <member name="M:Okuma.CLDATAPI.DataAPI.CTools.GetNoseRCompensation(System.Int32,System.Int32,Okuma.CLDATAPI.Enumerations.NoseRCompensationAxisIndexEnum)">
      <overloads>This function has these overload methods for getting nose radius compensation value.</overloads>
      <summary> Gets nose radius compensation at the specified offset indexes, and axis index for current sub system. </summary>
      <example> This sample shows how to call the GetNoseRCompensation() method. <para>	Dim nose_db As Double	</para> <para>	nose_db = objTool.GetNoseRCompensation(Convert.ToInt32(cbo_Ctools2_offindex.SelectedItem), Cmb_Compensation.SelectedItem, cbo_Ctools2_Cutpos.SelectedItem)	</para> </example>
      <param name="intFromOffsetIndex">Starting offset index</param>
      <param name="intToOffsetIndex">Ending offset index</param>
      <param name="enAxisIndex">Axis index</param>
      <param name="enCuttingPosition">Cutting position</param>
      <returns>An array of System.Double Value</returns>
      <DataUnit> Default unit is in mm.  Other unit can be set by calling SetDataUnit method </DataUnit>
      <exception cref="System.ApplicationException">Thrown when function fails to perform the operation at current NC condition.</exception>
      <exception cref="System.NotSupportedException">Thrown when operation/input parameters are not supported for the current system.</exception>
      <Figure> TOOL DATA - TOOL OFFSET/NOSE R COMPENSATION <para> <img src="Lathe.ToolData.ToolOffsetNoseR.jpg" /> </para> </Figure>
      <SubSystem> Please see <see href="SubSystemNoteTable.htm">Sub System Note Table</see> for more information if applicable. <para>Valid sub systems for this function (Y = Valid, N = Not valid)</para> <para> <list type="table"> <listheader> <term>NC_RUN </term> <term>NC_RUN_1 </term> <term>NC_RUN_2 </term> <term>NC_RUN_3 </term> <term>NC_PANEL </term> <term>NC_PANEL_1 </term> <term>NC_PANEL_2 </term> <term>NC_PANEL_3 </term> <term>NC_AL </term> <term>NC_AR </term> <term>NC_BL </term> <term>NC_BR </term> <term>NC_CL </term> <term>NC_CR </term> <term>NC_2AL </term> </listheader> <item> <term>Y (*20)</term> <term>Y (*19)</term> <term>Y</term> <term>Y</term> <term>Y (*20)</term> <term>Y (*19)</term> <term>Y</term> <term>Y</term> <term>Y (*19)</term> <term>Y (*19)</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> </item> </list> </para> </SubSystem>
      <remarks>  <para> Compatible Chart of this function for different OSP controls: <list type="table"> <listheader> <term>OSP Control</term> <description>Compatible</description> </listheader> <item> <term>P100II</term> <description>Yes</description> </item> <item> <term>P200</term> <description>Yes</description> </item> <item> <term>P300L</term> <description>Yes</description> </item> <item> <term>P300S/TD Mode</term> <description>No</description> </item> <item> <term>P300S/TL Mode</term> <description>Yes</description> </item> </list> </para>  </remarks>
    </member>
    <member name="M:Okuma.CLDATAPI.DataAPI.CTools.GetNoseRCompensation(System.Int32,Okuma.CLDATAPI.Enumerations.NoseRCompensationAxisIndexEnum)">
      <summary>Gets nose radius compensation at the specified offset index, and axis index for current sub system. </summary>
      <example> This sample shows how to call the GetNoseRCompensation() method. <para>	Me.TulNoseRCompensation.Text = objTool.GetNoseRCompensation(toolNum, Me.TulComboNoseRCompensation.SelectedValue)	</para> </example>
      <param name="intOffsetIndex">Offset index</param>
      <param name="enAxisIndex">Axis index</param>
      <returns>A System.Double value</returns>
      <DataUnit> Default unit is in mm.  Other unit can be set by calling SetDataUnit method </DataUnit>
      <exception cref="System.ApplicationException">Thrown when function fails to perform the operation at current NC condition.</exception>
      <exception cref="System.NotSupportedException">Thrown when operation/input parameters are not supported for the current system.</exception>
      <Figure> TOOL DATA - TOOL OFFSET/NOSE R COMPENSATION <para> <img src="Lathe.ToolData.ToolOffsetNoseR.jpg" /> </para> </Figure>
      <SubSystem> Please see <see href="SubSystemNoteTable.htm">Sub System Note Table</see> for more information if applicable. <para>Valid sub systems for this function (Y = Valid, N = Not valid)</para> <para> <list type="table"> <listheader> <term>NC_RUN </term> <term>NC_RUN_1 </term> <term>NC_RUN_2 </term> <term>NC_RUN_3 </term> <term>NC_PANEL </term> <term>NC_PANEL_1 </term> <term>NC_PANEL_2 </term> <term>NC_PANEL_3 </term> <term>NC_AL </term> <term>NC_AR </term> <term>NC_BL </term> <term>NC_BR </term> <term>NC_CL </term> <term>NC_CR </term> <term>NC_2AL </term> </listheader> <item> <term>Y (*20)</term> <term>Y (*19)</term> <term>Y</term> <term>Y</term> <term>Y (*20)</term> <term>Y (*19)</term> <term>Y</term> <term>Y</term> <term>Y (*19)</term> <term>Y (*19)</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> </item> </list> </para> </SubSystem>
      <remarks>  <para> Compatible Chart of this function for different OSP controls: <list type="table"> <listheader> <term>OSP Control</term> <description>Compatible</description> </listheader> <item> <term>P100II</term> <description>Yes</description> </item> <item> <term>P200</term> <description>Yes</description> </item> <item> <term>P300L</term> <description>Yes</description> </item> <item> <term>P300S/TD Mode</term> <description>No</description> </item> <item> <term>P300S/TL Mode</term> <description>Yes</description> </item> </list> </para>  </remarks>
    </member>
    <member name="M:Okuma.CLDATAPI.DataAPI.CTools.SetNoseRCompensation(System.Int32,Okuma.CLDATAPI.Enumerations.NoseRCompensationAxisIndexEnum,System.Double)">
      <overloads>This function has these overload methods for setting nose radius compensation value.</overloads>
      <summary> Sets  nose radius compensation value at the specified offset index, and axis index for current sub system. </summary>
      <example> This sample shows how to call the SetNoseRCompensation() method. <para>	objTool.SetNoseRCompensation(CInt(Me.tulToolNumber.Text), Me.TulComboNoseRCompensation.SelectedValue, CInt(Me.TulUpdNoseRCompensation.Text))	</para> </example>
      <param name="intOffsetIndex">Tool number value</param>
      <param name="enAxisIndex">Axis index</param>
      <param name="dblValue">Offset value to be set</param>
      <returns>None</returns>
      <DataUnit> Default unit is in mm.  Other unit can be set by calling SetDataUnit method </DataUnit>
      <exception cref="System.ApplicationException">Thrown when function fails to perform the operation at current NC condition.</exception>
      <exception cref="System.NotSupportedException">Thrown when operation/input parameters are not supported for the current system.</exception>
      <Figure> TOOL DATA - TOOL OFFSET/NOSE R COMPENSATION <para> <img src="Lathe.ToolData.ToolOffsetNoseR.jpg" /> </para> </Figure>
      <SubSystem> Please see <see href="SubSystemNoteTable.htm">Sub System Note Table</see> for more information if applicable. <para>Valid sub systems for this function (Y = Valid, N = Not valid)</para> <para> <list type="table"> <listheader> <term>NC_RUN </term> <term>NC_RUN_1 </term> <term>NC_RUN_2 </term> <term>NC_RUN_3 </term> <term>NC_PANEL </term> <term>NC_PANEL_1 </term> <term>NC_PANEL_2 </term> <term>NC_PANEL_3 </term> <term>NC_AL </term> <term>NC_AR </term> <term>NC_BL </term> <term>NC_BR </term> <term>NC_CL </term> <term>NC_CR </term> <term>NC_2AL </term> </listheader> <item> <term>Y (*20)</term> <term>Y (*19)</term> <term>Y</term> <term>Y</term> <term>Y (*20)</term> <term>Y (*19)</term> <term>Y</term> <term>Y</term> <term>Y (*19)</term> <term>Y (*19)</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> </item> </list> </para> </SubSystem>
      <remarks>  <para> Compatible Chart of this function for different OSP controls: <list type="table"> <listheader> <term>OSP Control</term> <description>Compatible</description> </listheader> <item> <term>P100II</term> <description>Yes</description> </item> <item> <term>P200</term> <description>Yes</description> </item> <item> <term>P300L</term> <description>Yes</description> </item> <item> <term>P300S/TD Mode</term> <description>No</description> </item> <item> <term>P300S/TL Mode</term> <description>Yes</description> </item> </list> </para>  </remarks>
    </member>
    <member name="M:Okuma.CLDATAPI.DataAPI.CTools.AddNoseRCompensation(System.Int32,Okuma.CLDATAPI.Enumerations.NoseRCompensationAxisIndexEnum,System.Double)">
      <overloads>This function has these overload methods for adding nose radius compensation value.</overloads>
      <summary> Sets the nose radius compensation value by adding the input value to the existing data at the specified offset index, and axis index for current sub system. </summary>
      <example> This sample shows how to call the AddNoseRCompensation() method. <para>	objTool.AddNoseRCompensation(CInt(Me.tulToolNumber.Text), Me.TulComboNoseRCompensation.SelectedValue, CDbl(Me.TulUpdNoseRCompensation.Text))	</para> </example>
      <param name="intOffsetIndex">Offset index</param>
      <param name="enAxisIndex">Axis Index</param>
      <param name="dblValue">Offset value to be added to the existing data</param>
      <exception cref="System.ApplicationException">Thrown when function fails to perform the operation at current NC condition.</exception>
      <exception cref="System.NotSupportedException">Thrown when operation/input parameters are not supported for the current system.</exception>
      <returns>None</returns>
      <DataUnit> Default unit is in mm.  Other unit can be set by calling SetDataUnit method </DataUnit>
      <Figure> TOOL DATA - TOOL OFFSET/NOSE R COMPENSATION <para> <img src="Lathe.ToolData.ToolOffsetNoseR.jpg" /> </para> </Figure>
      <SubSystem> Please see <see href="SubSystemNoteTable.htm">Sub System Note Table</see> for more information if applicable. <para>Valid sub systems for this function (Y = Valid, N = Not valid)</para> <para> <list type="table"> <listheader> <term>NC_RUN </term> <term>NC_RUN_1 </term> <term>NC_RUN_2 </term> <term>NC_RUN_3 </term> <term>NC_PANEL </term> <term>NC_PANEL_1 </term> <term>NC_PANEL_2 </term> <term>NC_PANEL_3 </term> <term>NC_AL </term> <term>NC_AR </term> <term>NC_BL </term> <term>NC_BR </term> <term>NC_CL </term> <term>NC_CR </term> <term>NC_2AL </term> </listheader> <item> <term>Y (*20)</term> <term>Y (*19)</term> <term>Y</term> <term>Y</term> <term>Y (*20)</term> <term>Y (*19)</term> <term>Y</term> <term>Y</term> <term>Y (*19)</term> <term>Y (*19)</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> </item> </list> </para> </SubSystem>
      <remarks>  <para> Compatible Chart of this function for different OSP controls: <list type="table"> <listheader> <term>OSP Control</term> <description>Compatible</description> </listheader> <item> <term>P100II</term> <description>Yes</description> </item> <item> <term>P200</term> <description>Yes</description> </item> <item> <term>P300L</term> <description>Yes</description> </item> <item> <term>P300S/TD Mode</term> <description>No</description> </item> <item> <term>P300S/TL Mode</term> <description>Yes</description> </item> </list> </para>  </remarks>
    </member>
    <member name="M:Okuma.CLDATAPI.DataAPI.CTools.GetToolWearOffset(System.Int32,System.Int32,Okuma.CLDATAPI.Enumerations.ToolWearOffsetAxisIndexEnum)">
      <overloads>This function has these overload methods for getting tool wear offset value.</overloads>
      <summary>Gets tool wear offset at the specified offset indexes, and axis index for current sub system </summary>
      <example> This sample shows how to call the GetToolWearOffset() method. <para>	vNosePattern = objTool.GetToolWearOffset(CInt(Me.TulNoseRCompensationPatternFrom.Text), CInt(Me.TulNoseRCompensationPatternTo.Text), Me.tulComboToolWearOffset.SelectedValue)	</para> </example>
      <param name="intFromOffsetIndex">Starting offset index</param>
      <param name="intToOffsetIndex">Ending offset index</param>
      <param name="enAxisIndex">Axis index</param>
      <returns>An array of System.Double value</returns>
      <DataUnit> Default unit is in mm.  Other unit can be set by calling SetDataUnit method </DataUnit>
      <exception cref="System.ApplicationException">Thrown when function fails to perform the operation at current NC condition.</exception>
      <exception cref="System.NotSupportedException">Thrown when operation/input parameters are not supported for the current system.</exception>
      <remarks> <para> The following specifications must be met in order to function: <list type="table"> <listheader> <term>Specification</term> <description>Valid/Invalid</description> </listheader> <item> <term>Tool wear compensation specification NC spec [21,5]</term> <description>Valid</description> </item> <item> <term>Tool Offset multi-system specification NC spec [21,6]</term> <description>Invalid</description> </item> </list> </para>  <para> Compatible Chart of this function for different OSP controls: <list type="table"> <listheader> <term>OSP Control</term> <description>Compatible</description> </listheader> <item> <term>P100II</term> <description>Yes</description> </item> <item> <term>P200</term> <description>Yes</description> </item> <item> <term>P300L</term> <description>Yes</description> </item> <item> <term>P300S/TD Mode</term> <description>No</description> </item> <item> <term>P300S/TL Mode</term> <description>Yes</description> </item> </list> </para>  <para> Compatible Chart of this function for different OSP controls: <list type="table"> <listheader> <term>OSP Control</term> <description>Compatible</description> </listheader> <item> <term>P100II</term> <description>Yes</description> </item> <item> <term>P200</term> <description>Yes</description> </item> <item> <term>P300L</term> <description>Yes</description> </item> <item> <term>P300S/TD Mode</term> <description>No</description> </item> <item> <term>P300S/TL Mode</term> <description>Yes</description> </item> </list> </para> </remarks>
      <Figure> TOOL DATA - TOOL WEAR OFFSET <para> <img src="Lathe.ToolData.ToolWearOffset.jpg" /> </para> </Figure>
      <SubSystem> Please see <see href="SubSystemNoteTable.htm">Sub System Note Table</see> for more information if applicable. <para>Valid sub systems for this function (Y = Valid, N = Not valid)</para> <para> <list type="table"> <listheader> <term>NC_RUN </term> <term>NC_RUN_1 </term> <term>NC_RUN_2 </term> <term>NC_RUN_3 </term> <term>NC_PANEL </term> <term>NC_PANEL_1 </term> <term>NC_PANEL_2 </term> <term>NC_PANEL_3 </term> <term>NC_AL </term> <term>NC_AR </term> <term>NC_BL </term> <term>NC_BR </term> <term>NC_CL </term> <term>NC_CR </term> <term>NC_2AL </term> </listheader> <item> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> </item> </list> </para>  </SubSystem>
    </member>
    <member name="M:Okuma.CLDATAPI.DataAPI.CTools.GetToolWearOffset(System.Int32,Okuma.CLDATAPI.Enumerations.ToolWearOffsetAxisIndexEnum)">
      <summary>Gets tool wear offset at the specified offset index, and axis index for current sub system </summary>
      <example> This sample shows how to call the GetToolWearOffset() method. <para>	vNosePattern = objTool.GetToolWearOffset(CInt(Me.TulNoseRCompensationPatternFrom.Text), CInt(Me.TulNoseRCompensationPatternTo.Text), Me.tulComboToolWearOffset.SelectedValue)	</para> </example>
      <param name="intOffsetIndex">Offset index</param>
      <param name="enAxisIndex">Axis index</param>
      <returns>A System.Double value</returns>
      <DataUnit> Default unit is in mm.  Other unit can be set by calling SetDataUnit method </DataUnit>
      <exception cref="System.ApplicationException">Thrown when function fails to perform the operation at current NC condition.</exception>
      <exception cref="System.NotSupportedException">Thrown when operation/input parameters are not supported for the current system.</exception>
      <remarks> <para> The following specifications must be met in order to function: <list type="table"> <listheader> <term>Specification</term> <description>Valid/Invalid</description> </listheader> <item> <term>Tool wear compensation specification NC spec [21,5]</term> <description>Valid</description> </item> <item> <term>Tool Offset multi-system specification NC spec [21,6]</term> <description>Invalid</description> </item> </list> </para>  <para> Compatible Chart of this function for different OSP controls: <list type="table"> <listheader> <term>OSP Control</term> <description>Compatible</description> </listheader> <item> <term>P100II</term> <description>Yes</description> </item> <item> <term>P200</term> <description>Yes</description> </item> <item> <term>P300L</term> <description>Yes</description> </item> <item> <term>P300S/TD Mode</term> <description>No</description> </item> <item> <term>P300S/TL Mode</term> <description>Yes</description> </item> </list> </para> </remarks>
      <Figure> TOOL DATA - TOOL WEAR OFFSET <para> <img src="Lathe.ToolData.ToolWearOffset.jpg" /> </para> </Figure>
      <SubSystem> Please see <see href="SubSystemNoteTable.htm">Sub System Note Table</see> for more information if applicable. <para>Valid sub systems for this function (Y = Valid, N = Not valid)</para> <para> <list type="table"> <listheader> <term>NC_RUN </term> <term>NC_RUN_1 </term> <term>NC_RUN_2 </term> <term>NC_RUN_3 </term> <term>NC_PANEL </term> <term>NC_PANEL_1 </term> <term>NC_PANEL_2 </term> <term>NC_PANEL_3 </term> <term>NC_AL </term> <term>NC_AR </term> <term>NC_BL </term> <term>NC_BR </term> <term>NC_CL </term> <term>NC_CR </term> <term>NC_2AL </term> </listheader> <item> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> </item> </list> </para>  </SubSystem>
    </member>
    <member name="M:Okuma.CLDATAPI.DataAPI.CTools.SetToolWearOffset(System.Int32,Okuma.CLDATAPI.Enumerations.ToolWearOffsetAxisIndexEnum,System.Double)">
      <overloads>This function has these overload methods for setting tool wear offset value.</overloads>
      <summary> Sets tool wear offset value at the specified offset index, and axis index for current sub system. </summary>
      <example> This sample shows how to call the SetToolWearOffset() method. <para>	objTool.SetToolWearOffset(CInt(tulToolNumber.Text), Me.tulComboToolWearOffset.SelectedValue, CDbl(tulUpdToolWearOffset.Text))	</para> </example>
      <param name="intOffsetIndex">Offset index</param>
      <param name="enAxisIndex">Axis index</param>
      <param name="dblValue">Offset value to be set</param>
      <exception cref="System.ApplicationException">Thrown when function fails to perform the operation at current NC condition.</exception>
      <exception cref="System.NotSupportedException">Thrown when operation/input parameters are not supported for the current system.</exception>
      <returns>None</returns>
      <DataUnit> Default unit is in mm.  Other unit can be set by calling SetDataUnit method </DataUnit>
      <remarks> <para> The following specifications must be met in order to function: <list type="table"> <listheader> <term>Specification</term> <description>Valid/Invalid</description> </listheader> <item> <term>Tool wear compensation specification NC spec [21,5]</term> <description>Valid</description> </item> </list> </para>  <para> Compatible Chart of this function for different OSP controls: <list type="table"> <listheader> <term>OSP Control</term> <description>Compatible</description> </listheader> <item> <term>P100II</term> <description>Yes</description> </item> <item> <term>P200</term> <description>Yes</description> </item> <item> <term>P300L</term> <description>Yes</description> </item> <item> <term>P300S/TD Mode</term> <description>No</description> </item> <item> <term>P300S/TL Mode</term> <description>Yes</description> </item> </list> </para> </remarks>
      <Figure> TOOL DATA - TOOL WEAR OFFSET <para> <img src="Lathe.ToolData.ToolWearOffset.jpg" /> </para> </Figure>
      <SubSystem> Please see <see href="SubSystemNoteTable.htm">Sub System Note Table</see> for more information if applicable. <para>Valid sub systems for this function (Y = Valid, N = Not valid)</para> <para> <list type="table"> <listheader> <term>NC_RUN </term> <term>NC_RUN_1 </term> <term>NC_RUN_2 </term> <term>NC_RUN_3 </term> <term>NC_PANEL </term> <term>NC_PANEL_1 </term> <term>NC_PANEL_2 </term> <term>NC_PANEL_3 </term> <term>NC_AL </term> <term>NC_AR </term> <term>NC_BL </term> <term>NC_BR </term> <term>NC_CL </term> <term>NC_CR </term> <term>NC_2AL </term> </listheader> <item> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> </item> </list> </para>  </SubSystem>
    </member>
    <member name="M:Okuma.CLDATAPI.DataAPI.CTools.AddToolWearOffset(System.Int32,Okuma.CLDATAPI.Enumerations.ToolWearOffsetAxisIndexEnum,System.Double)">
      <overloads>This function has these overload methods for adding tool wear offset value.</overloads>
      <summary> Sets the tool wear offset value by adding the input value to the existing data at the specified offset index, and axis index for current sub system. </summary>
      <example> This sample shows how to call the AddToolWearOffset() method. <para>	objTool.AddToolWearOffset(CInt(Me.tulToolNumber.Text), Me.tulComboToolWearOffset.SelectedValue, CDbl(Me.tulUpdToolWearOffset.Text))	</para> </example>
      <returns>None</returns>
      <DataUnit> Default unit is in mm.  Other unit can be set by calling SetDataUnit method </DataUnit>
      <param name="intOffsetIndex">Offset index</param>
      <param name="enAxisIndex">Axis Index</param>
      <param name="dblValue">Offset value to be added to the existing data</param>
      <exception cref="System.ApplicationException">Thrown when function fails to perform the operation at current NC condition.</exception>
      <exception cref="System.NotSupportedException">Thrown when operation/input parameters are not supported for the current system.</exception>
      <remarks> <para> The following specifications must be met in order to function: <list type="table"> <listheader> <term>Specification</term> <description>Valid/Invalid</description> </listheader> <item> <term>Tool Offset multi-system specification NC spec [21,6]</term> <description>Invalid</description> </item> <item> <term>Tool wear compensation specification NC spec [21,5]</term> <description>Valid</description> </item> </list> </para>  <para> Compatible Chart of this function for different OSP controls: <list type="table"> <listheader> <term>OSP Control</term> <description>Compatible</description> </listheader> <item> <term>P100II</term> <description>Yes</description> </item> <item> <term>P200</term> <description>Yes</description> </item> <item> <term>P300L</term> <description>Yes</description> </item> <item> <term>P300S/TD Mode</term> <description>No</description> </item> <item> <term>P300S/TL Mode</term> <description>Yes</description> </item> </list> </para> </remarks>
      <Figure> TOOL DATA - TOOL WEAR OFFSET <para> <img src="Lathe.ToolData.ToolWearOffset.jpg" /> </para> </Figure>
      <SubSystem> Please see <see href="SubSystemNoteTable.htm">Sub System Note Table</see> for more information if applicable. <para>Valid sub systems for this function (Y = Valid, N = Not valid)</para> <para> <list type="table"> <listheader> <term>NC_RUN </term> <term>NC_RUN_1 </term> <term>NC_RUN_2 </term> <term>NC_RUN_3 </term> <term>NC_PANEL </term> <term>NC_PANEL_1 </term> <term>NC_PANEL_2 </term> <term>NC_PANEL_3 </term> <term>NC_AL </term> <term>NC_AR </term> <term>NC_BL </term> <term>NC_BR </term> <term>NC_CL </term> <term>NC_CR </term> <term>NC_2AL </term> </listheader> <item> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> </item> </list> </para>  </SubSystem>
    </member>
    <member name="M:Okuma.CLDATAPI.DataAPI.CTools.GetNoseRCompensationPattern(System.Int32)">
      <summary>Gets nose radius compensation pattern at the specified offset index for current sub system. </summary>
      <example> This sample shows how to call the GetNoseRCompensationPattern() method. <para>	objdbValue = objTool.GetNoseRCompensationPattern(CInt(tul2tn.Text))	</para> </example>
      <param name="intOffsetIndex">offset index</param>
      <returns>A System.Int32 value</returns>
      <DataUnit> N/A </DataUnit>
      <exception cref="System.ApplicationException">Thrown when function fails to perform the operation at current NC condition.</exception>
      <exception cref="System.NotSupportedException">Thrown when operation/input parameters are not supported for the current system.</exception>
      <Figure> TOOL DATA - TOOL OFFSET/NOSE R COMPENSATION - P <para> P is nose radius compensation pattern. <img src="Lathe.ToolData.ToolOffsetNoseR.jpg" /> </para> </Figure>
      <SubSystem> Please see <see href="SubSystemNoteTable.htm">Sub System Note Table</see> for more information if applicable. <para>Valid sub systems for this function (Y = Valid, N = Not valid)</para> <para> <list type="table"> <listheader> <term>NC_RUN </term> <term>NC_RUN_1 </term> <term>NC_RUN_2 </term> <term>NC_RUN_3 </term> <term>NC_PANEL </term> <term>NC_PANEL_1 </term> <term>NC_PANEL_2 </term> <term>NC_PANEL_3 </term> <term>NC_AL </term> <term>NC_AR </term> <term>NC_BL </term> <term>NC_BR </term> <term>NC_CL </term> <term>NC_CR </term> <term>NC_2AL </term> </listheader> <item> <term>Y (*20)</term> <term>Y (*19)</term> <term>Y</term> <term>Y</term> <term>Y (*20)</term> <term>Y (*19)</term> <term>Y</term> <term>Y</term> <term>Y (*19)</term> <term>Y (*19)</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> </item> </list> </para> </SubSystem>
      <remarks>  <para> Compatible Chart of this function for different OSP controls: <list type="table"> <listheader> <term>OSP Control</term> <description>Compatible</description> </listheader> <item> <term>P100II</term> <description>Yes</description> </item> <item> <term>P200</term> <description>Yes</description> </item> <item> <term>P300L</term> <description>No</description> </item> <item> <term>P300S/TD Mode</term> <description>No</description> </item> <item> <term>P300S/TL Mode</term> <description>No</description> </item> </list> </para>  </remarks>
    </member>
    <member name="M:Okuma.CLDATAPI.DataAPI.CTools.GetNoseRCompensationPattern(System.Int32,System.Int32)">
      <overloads>This function has these overload methods for getting nose radius compensation pattern value.</overloads>
      <summary>Gets nose radius compensation pattern at the specified offset indexes for current sub system. </summary>
      <example> This sample shows how to call the GetNoseRCompensationPattern() method. <para>	vNosePattern = objTool.GetNoseRCompensationPattern(CInt(Me.TulNoseRCompensationPatternFrom.Text), CInt(Me.TulNoseRCompensationPatternTo.Text))	</para> </example>
      <param name="intFromOffsetIndex">Starting offset index</param>
      <param name="intToOffsetIndex">Ending offset index</param>
      <returns>An array of System.Int32 value</returns>
      <DataUnit> N/A </DataUnit>
      <exception cref="System.ApplicationException">Thrown when function fails to perform the operation at current NC condition.</exception>
      <exception cref="System.NotSupportedException">Thrown when operation/input parameters are not supported for the current system.</exception>
      <Figure> TOOL DATA - TOOL OFFSET/NOSE R COMPENSATION - P <para> P is nose radius compensation pattern. <img src="Lathe.ToolData.ToolOffsetNoseR.jpg" /> </para> </Figure>
      <SubSystem> Please see <see href="SubSystemNoteTable.htm">Sub System Note Table</see> for more information if applicable. <para>Valid sub systems for this function (Y = Valid, N = Not valid)</para> <para> <list type="table"> <listheader> <term>NC_RUN </term> <term>NC_RUN_1 </term> <term>NC_RUN_2 </term> <term>NC_RUN_3 </term> <term>NC_PANEL </term> <term>NC_PANEL_1 </term> <term>NC_PANEL_2 </term> <term>NC_PANEL_3 </term> <term>NC_AL </term> <term>NC_AR </term> <term>NC_BL </term> <term>NC_BR </term> <term>NC_CL </term> <term>NC_CR </term> <term>NC_2AL </term> </listheader> <item> <term>Y (*20)</term> <term>Y (*19)</term> <term>Y</term> <term>Y</term> <term>Y (*20)</term> <term>Y (*19)</term> <term>Y</term> <term>Y</term> <term>Y (*19)</term> <term>Y (*19)</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> </item> </list> </para> </SubSystem>
      <remarks>  <para> Compatible Chart of this function for different OSP controls: <list type="table"> <listheader> <term>OSP Control</term> <description>Compatible</description> </listheader> <item> <term>P100II</term> <description>Yes</description> </item> <item> <term>P200</term> <description>Yes</description> </item> <item> <term>P300L</term> <description>No</description> </item> <item> <term>P300S/TD Mode</term> <description>No</description> </item> <item> <term>P300S/TL Mode</term> <description>No</description> </item> </list> </para>  </remarks>
    </member>
    <member name="M:Okuma.CLDATAPI.DataAPI.CTools.SetNoseRCompensationPattern(System.Int32,System.Int32)">
      <overloads>This function has these overload methods for getting nose radius compensation pattern value.</overloads>
      <summary>Sets nose radius compensation pattern value at the specified offset index, and axis index for the current sub system. </summary>
      <example> This sample shows how to call the SetNoseRCompensationPattern() method. <para>	objTool.SetNoseRCompensationPattern(CInt(Me.tulToolNumber.Text), CInt(Me.TulUpdNoseRCompensationPattern.Text))	</para> </example>
      <param name="intOffsetIndex">Tool number value</param>
      <param name="intValue">Nose radius compensation pattern value</param>
      <exception cref="System.ApplicationException">Thrown when function fails to perform the operation at current NC condition.</exception>
      <exception cref="System.NotSupportedException">Thrown when operation/input parameters are not supported for the current system.</exception>
      <returns>None</returns>
      <DataUnit> N/A </DataUnit>
      <Figure> TOOL DATA - NOSE R COMPENSATION - P <para> <img src="Lathe.ToolData.ToolOffsetNoseR.jpg" /> </para> </Figure>
      <SubSystem> Please see <see href="SubSystemNoteTable.htm">Sub System Note Table</see> for more information if applicable. <para>Valid sub systems for this function (Y = Valid, N = Not valid)</para> <para> <list type="table"> <listheader> <term>NC_RUN </term> <term>NC_RUN_1 </term> <term>NC_RUN_2 </term> <term>NC_RUN_3 </term> <term>NC_PANEL </term> <term>NC_PANEL_1 </term> <term>NC_PANEL_2 </term> <term>NC_PANEL_3 </term> <term>NC_AL </term> <term>NC_AR </term> <term>NC_BL </term> <term>NC_BR </term> <term>NC_CL </term> <term>NC_CR </term> <term>NC_2AL </term> </listheader> <item> <term>Y (*20)</term> <term>Y (*19)</term> <term>Y</term> <term>Y</term> <term>Y (*20)</term> <term>Y (*19)</term> <term>Y</term> <term>Y</term> <term>Y (*19)</term> <term>Y (*19)</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> </item> </list> </para> </SubSystem>
      <remarks>  <para> Compatible Chart of this function for different OSP controls: <list type="table"> <listheader> <term>OSP Control</term> <description>Compatible</description> </listheader> <item> <term>P100II</term> <description>Yes</description> </item> <item> <term>P200</term> <description>Yes</description> </item> <item> <term>P300L</term> <description>Yes</description> </item> <item> <term>P300S/TD Mode</term> <description>No</description> </item> <item> <term>P300S/TL Mode</term> <description>Yes</description> </item> </list> </para>  </remarks>
    </member>
    <member name="M:Okuma.CLDATAPI.DataAPI.CTools.GetGroupToolLifeStatus(System.Int32)">
      <summary> gets group tool life status at the specified group number for current sub system. </summary>
      <example> This sample shows how to call the GetGroupToolLifeStatus() method. <para>	dim enValue as GroupToolLifeStatusEnum </para> <para>	enValue = objTool.GetGroupToolLifeStatus(intGroupNo)	</para> </example>
      <param name="intGroupNo">group number which is starting from 1.</param>
      <returns>An Okuma.CLDATAPI.Enumerations.GroupToolLifeStatusEnum value</returns>
      <exception cref="System.ApplicationException">Thrown when function fails to perform the operation at current NC condition.</exception>
      <exception cref="System.NotSupportedException">Thrown when operation/input parameters are not supported for the current system.</exception>
      <remarks> <para> The following specifications must be met in order to function: <list type="table"> <listheader> <term>Specification</term> <description>Valid/Invalid</description> </listheader> <item> <term>Tool life management specification NC spec [21,3]</term> <description>Valid</description> </item> </list> </para> </remarks>
      <Figure> TOOL DATA - TOOL LIFE MANAGEMENT - GROUP TABLE - LIFE <para> <img src="Lathe.ToolData.TLM.GroupTable1.jpg" /> </para> </Figure>
      <SubSystem> Please see <see href="SubSystemNoteTable.htm">Sub System Note Table</see> for more information if applicable. <para>Valid sub systems for this function (Y = Valid, N = Not valid)</para> <para> <list type="table"> <listheader> <term>NC_RUN </term> <term>NC_RUN_1 </term> <term>NC_RUN_2 </term> <term>NC_RUN_3 </term> <term>NC_PANEL </term> <term>NC_PANEL_1 </term> <term>NC_PANEL_2 </term> <term>NC_PANEL_3 </term> <term>NC_AL </term> <term>NC_AR </term> <term>NC_BL </term> <term>NC_BR </term> <term>NC_CL </term> <term>NC_CR </term> <term>NC_2AL </term> </listheader> <item> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> </item> </list> </para> </SubSystem>
      <remarks>  <para> Compatible Chart of this function for different OSP controls: <list type="table"> <listheader> <term>OSP Control</term> <description>Compatible</description> </listheader> <item> <term>P100II</term> <description>Yes</description> </item> <item> <term>P200</term> <description>Yes</description> </item> <item> <term>P300L</term> <description>No</description> </item> <item> <term>P300S/TD Mode</term> <description>No</description> </item> <item> <term>P300S/TL Mode</term> <description>No</description> </item> </list> </para>  </remarks>
    </member>
    <member name="M:Okuma.CLDATAPI.DataAPI.CTools.SetGroupToolLifeStatus(System.Int32,Okuma.CLDATAPI.Enumerations.GroupToolLifeStatusEnum)">
      <summary> Sets the tool life status at the specified group number for current sub system. </summary>
      <example> This sample shows how to call the SetGroupToolLifeStatus() method. <para>	dim enValue as GroupToolLifeStatusEnum </para> <para>	objTool.SetGroupToolLifeStatus(intGroupNo, enValue)	</para> </example>
      <param name="intGroupNo">group number which is starting from 1.</param>
      <param name="enValue">group status to be set</param>
      <exception cref="System.ApplicationException">Thrown when function fails to perform the operation at current NC condition.</exception>
      <exception cref="System.NotSupportedException">Thrown when operation/input parameters are not supported for the current system.</exception>
      <remarks> <para> The following specifications must be met in order to function: <list type="table"> <listheader> <term>Specification</term> <description>Valid/Invalid</description> </listheader> <item> <term>Tool life management specification NC spec [21,3]</term> <description>Valid</description> </item> </list> </para> </remarks>
      <Figure> TOOL DATA - TOOL LIFE MANAGEMENT - GROUP TABLE - LIFE <para> <img src="Lathe.ToolData.TLM.GroupTable1.jpg" /> </para> </Figure>
      <SubSystem> Please see <see href="SubSystemNoteTable.htm">Sub System Note Table</see> for more information if applicable. <para>Valid sub systems for this function (Y = Valid, N = Not valid)</para> <para> <list type="table"> <listheader> <term>NC_RUN </term> <term>NC_RUN_1 </term> <term>NC_RUN_2 </term> <term>NC_RUN_3 </term> <term>NC_PANEL </term> <term>NC_PANEL_1 </term> <term>NC_PANEL_2 </term> <term>NC_PANEL_3 </term> <term>NC_AL </term> <term>NC_AR </term> <term>NC_BL </term> <term>NC_BR </term> <term>NC_CL </term> <term>NC_CR </term> <term>NC_2AL </term> </listheader> <item> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> </item> </list> </para>  </SubSystem>
    </member>
    <member name="M:Okuma.CLDATAPI.DataAPI.CTools.GetToolGroupEntry(System.Int32,System.Int32)">
      <summary> Gets tool number assigned in group given group number and tool entry number for current sub system. </summary>
      <example> This sample shows how to call the GetToolGroupEntry() method. <para>	dim intEntryToolNo as Integer </para> <para>	dim intGroupNo as Integer </para> <para>	dim intToolNo as Integer </para> <para>	intToolNo = objTool.GetToolGroupEntry(intGroupNo, intEntryToolNo)	</para> </example>
      <param name="intGroupNo">Tool group number</param>
      <param name="intEntryToolNo">Entry tool number starting from 1 to 12</param>
      <returns>A System.Integer value </returns>
      <exception cref="System.ApplicationException">Thrown when function fails to perform the operation at current NC condition.</exception>
      <exception cref="System.NotSupportedException">Thrown when operation/input parameters are not supported for the current system.</exception>
      <remarks> <para> The following specifications must be met in order to function: <list type="table"> <listheader> <term>Specification</term> <description>Valid/Invalid</description> </listheader> <item> <term>Tool life management specification NC spec [21,3]</term> <description>Valid</description> </item> </list> </para>  <para> Compatible Chart of this function for different OSP controls: <list type="table"> <listheader> <term>OSP Control</term> <description>Compatible</description> </listheader> <item> <term>P100II</term> <description>Yes</description> </item> <item> <term>P200</term> <description>Yes</description> </item> <item> <term>P300L</term> <description>Yes</description> </item> <item> <term>P300S/TD Mode</term> <description>No</description> </item> <item> <term>P300S/TL Mode</term> <description>No</description> </item> </list> </para> </remarks>
      <Figure> TOOL DATA - TOOL LIFE MANAGEMENT - A(NO. OF WORK) - GROUP TABLE - ENTRY TOOL NO. <para> <img src="Lathe.ToolData.TLM.GroupTable1.jpg" /> </para> <para> OSP-P300 - TOOL DATA SETTING - TOOL LIFE DATA -  ENTRY TOOL (1/4-4/4) <img src="Lathe.P300.TD.ToolLife.jpg" /> </para> </Figure>
      <SubSystem> Please see <see href="SubSystemNoteTable.htm">Sub System Note Table</see> for more information if applicable. <para>Valid sub systems for this function (Y = Valid, N = Not valid)</para> <para> <list type="table"> <listheader> <term>NC_RUN </term> <term>NC_RUN_1 </term> <term>NC_RUN_2 </term> <term>NC_RUN_3 </term> <term>NC_PANEL </term> <term>NC_PANEL_1 </term> <term>NC_PANEL_2 </term> <term>NC_PANEL_3 </term> <term>NC_AL </term> <term>NC_AR </term> <term>NC_BL </term> <term>NC_BR </term> <term>NC_CL </term> <term>NC_CR </term> <term>NC_2AL </term> </listheader> <item> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> </item> </list> </para>  </SubSystem>
    </member>
    <member name="M:Okuma.CLDATAPI.DataAPI.CTools.GetToolGroupEntry2(System.Int32,System.Int32)">
      <summary> For multi-insert tool specification NC spec [5,3] , it gets tool number assigned in group at the specified tool holder for current sub system. </summary>
      <example> This sample shows how to call the GetToolGroupEntry2() method. <para>	Dim strToolGroupEntry As Integer </para> <para>	Dim intGroupNo As Integer </para> <para>	Dim intEntryToolNo As Integer </para> <para>	strToolGroupEntry = objTool.GetToolGroupEntry2(intGroupNo, intEntryToolNo)	</para> </example>
      <param name="intGroupNo"> <para>A tool group number</para> <para>Group number ranging from 201 to 320 if Multi-Edge Angle Tool specification is 12.</para> <para>Group number ranging from 201 to 280 if Multi-Edge Angle Tool of 12 and 4 specification is not valid.</para> <para>Group number ranging from 201 to 240 if Multi-Edge Angle Tool of 12 is not valid and and Multi-Edge Angle Tool of 4 specification is valid.</para> </param>
      <param name="intEntryToolNo">Entry tool number starting from 1 to 12</param>
      <returns> <para> A System.String value contains the tool registered for the group per edge and tool holder location. For example in group 205 there are 3 tools registered for this group. First tool entry is '201-3'.  201 is the tool holder. 3 is the edge number Second tool entry is '201-7'.  201 is the tool holder. 7 is the edge number Third tool entry is '202-5'.  202 is the tool holder. 5 is the edge number </para> </returns>
      <exception cref="System.ApplicationException">Thrown when function fails to perform the operation at current NC condition.</exception>
      <exception cref="System.NotSupportedException">Thrown when operation/input parameters are not supported for the current system.</exception>
      <remarks> <para> The following specifications must be met in order to function: <list type="table"> <listheader> <term>Specification</term> <description>Valid/Invalid</description> </listheader> <item> <term>Tool life management specification NC spec [21,3]</term> <description>Valid</description> </item> <item> <term>H1 Turret specification NC spec [2,6]</term> <description>Valid</description> </item> <item> <term>L Tool index specification NC spec [3,4]</term> <description>Valid</description> </item> <item> <term>Tool Offset multi-system specification NC spec [21,6]</term> <description>Valid</description> </item> <item> <term>Multi-insert tool specification NC spec [5,3]</term> <description>Valid</description> </item> <item> <term>Tool compensation 500 sets NC spec [6,6] or Tool offset 200 sets NC spec [21,4] specification</term> <description>Valid</description> </item> </list> </para> <para> Compatible Chart of this function for different OSP controls: <list type="table"> <listheader> <term>OSP Control</term> <description>Compatible</description> </listheader> <item> <term>P100II</term> <description>Yes</description> </item> <item> <term>P200</term> <description>Yes</description> </item> <item> <term>P300L</term> <description>No</description> </item> <item> <term>P300S/TD Mode</term> <description>No</description> </item> <item> <term>P300S/TL Mode</term> <description>No</description> </item> </list> </para> </remarks>
      <Figure> <para>  OSP-P200 - TOOL DATA - TOOL LIFE MANAGEMENT 2 - A(NO. OF WORK) HOLDER.201 - GROUP TABLE 2 - ENTRY TOOL NO. <img src="Lathe.Multi.ToolData.TLM.GroupTable2.jpg" /> </para> <para> OSP-P300 - TOOL DATA SETTING - TOOL LIFE DATA -  ENTRY TOOL (1/4-4/4) <img src="Lathe.P300.TD.ToolLife.jpg" /> </para> </Figure>
      <SubSystem> Please see <see href="SubSystemNoteTable.htm">Sub System Note Table</see> for more information if applicable. <para>Valid sub systems for this function (Y = Valid, N = Not valid)</para> <para> <list type="table"> <listheader> <term>NC_RUN </term> <term>NC_RUN_1 </term> <term>NC_RUN_2 </term> <term>NC_RUN_3 </term> <term>NC_PANEL </term> <term>NC_PANEL_1 </term> <term>NC_PANEL_2 </term> <term>NC_PANEL_3 </term> <term>NC_AL </term> <term>NC_AR </term> <term>NC_BL </term> <term>NC_BR </term> <term>NC_CL </term> <term>NC_CR </term> <term>NC_2AL </term> </listheader> <item> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>N</term> </item> </list> </para>  </SubSystem>
    </member>
    <member name="M:Okuma.CLDATAPI.DataAPI.CTools.GetReferenceToolOffset1(Okuma.CLDATAPI.Enumerations.PrincipalAxisEnum,Okuma.CLDATAPI.Enumerations.BAxisCuttingPositionEnum,System.Int32)">
      <summary>For B-Axis control specification, it gets reference offset 1  at the specified spindle axis index, cutting position index, and tool number for current sub system. </summary>
      <example> This sample shows how to call the GetReferenceToolOffset1() method. Dim enAxis As PrincipalAxisEnum Dim enCuttingPosition As BAxisCuttingPositionEnum Dim intToolNo As Integer Dim intValue As Integer <para>	intValue = objTool.GetReferenceToolOffset1(enAxis, enCuttingPosition, intToolNo)	</para> </example>
      <param name="enAxis">Spindle axis index</param>
      <param name="enCuttingPosition">Cutting position at B-Axis</param>
      <param name="intToolNo">Tool number</param>
      <returns>A System.Int32</returns>
      <exception cref="System.ApplicationException">Thrown when function fails to perform the operation at current NC condition.</exception>
      <exception cref="System.NotSupportedException">Thrown when operation/input parameters are not supported for the current system.</exception>
      <remarks> <para> The following specifications for first spindle and base cutting position must be met in order to function: <list type="table"> <listheader> <term>Specification</term> <description>Valid/Invalid</description> </listheader> <item> <term>Tool life management specification NC spec [21,3]</term> <description>Valid</description> </item> <item> <term>B Axial control specification NC spec [8,7]</term> <description>Valid</description> </item> </list> </para>  <para> The following specifications for first spindle and vertical cutting position must be met in order to function: <list type="table"> <listheader> <term>Specification</term> <description>Valid/Invalid</description> </listheader> <item> <term>Tool life management specification NC spec [21,3]</term> <description>Valid</description> </item> <item> <term>B Axial control specification NC spec [8,7]</term> <description>Valid</description> </item> <item> <term>Tool Offset multi-system specification NC spec [21,6]</term> <description>Invalid</description> </item> </list> </para>  <para> The following specifications for second spindle and base/vertical cutting position must be met in order to function: <list type="table"> <listheader> <term>Specification</term> <description>Valid/Invalid</description> </listheader> <item> <term>Tool life management specification NC spec [21,3]</term> <description>Valid</description> </item> <item> <term>B Axial control specification NC spec [8,7]</term> <description>Valid</description> </item> <item> <term>Tool Offset multi-system specification NC spec [21,6]</term> <description>Invalid</description> </item> <item> <term>Sub spindle specification NC spec [4,1]</term> <description>Valid</description> </item> </list> </para> </remarks>
      <Figure> TOOL DATA - TOOL LIFE MANAGEMENT - A(NO. OF WORK) - OG1 <para> The reference offset number 1 for tool 1 is offset number 11 under OG1 column. <img src="Lathe.ToolData.TLM.Work.jpg" /> </para> </Figure>
      <SubSystem> Please see <see href="SubSystemNoteTable.htm">Sub System Note Table</see> for more information if applicable. <para>Valid sub systems for this function (Y = Valid, N = Not valid)</para> <para> <list type="table"> <listheader> <term>NC_RUN </term> <term>NC_RUN_1 </term> <term>NC_RUN_2 </term> <term>NC_RUN_3 </term> <term>NC_PANEL </term> <term>NC_PANEL_1 </term> <term>NC_PANEL_2 </term> <term>NC_PANEL_3 </term> <term>NC_AL </term> <term>NC_AR </term> <term>NC_BL </term> <term>NC_BR </term> <term>NC_CL </term> <term>NC_CR </term> <term>NC_2AL </term> </listheader> <item> <term>Y (*5)</term> <term>Y     </term> <term>N     </term> <term>N     </term> <term>Y (*5)</term> <term>Y     </term> <term>N     </term> <term>N     </term> <term>Y     </term> <term>Y     </term> <term>N     </term> <term>N     </term> <term>N     </term> <term>N     </term> <term>N     </term> </item> </list> </para> </SubSystem>
      <remarks>  <para> Compatible Chart of this function for different OSP controls: <list type="table"> <listheader> <term>OSP Control</term> <description>Compatible</description> </listheader> <item> <term>P100II</term> <description>Yes</description> </item> <item> <term>P200</term> <description>Yes</description> </item> <item> <term>P300L</term> <description>No</description> </item> <item> <term>P300S/TD Mode</term> <description>No</description> </item> <item> <term>P300S/TL Mode</term> <description>No</description> </item> </list> </para>  </remarks>
    </member>
    <member name="M:Okuma.CLDATAPI.DataAPI.CTools.SetReferenceToolOffset1(Okuma.CLDATAPI.Enumerations.PrincipalAxisEnum,Okuma.CLDATAPI.Enumerations.BAxisCuttingPositionEnum,System.Int32,System.Int32)">
      <summary> For B-Axis control specification, it sets reference tool offset 1 at the specified spindle axis index, B-Axis cutting position index, and tool number for current sub system. </summary>
      <example> This sample shows how to call the SetReferenceToolOffset1() method. Dim enAxis As PrincipalAxisEnum Dim enCuttingPosition As BAxisCuttingPositionEnum Dim intToolNo As Integer Dim intValue As Integer <para>	objTool.SetReferenceToolOffset1(enAxis, enCuttingPosition, intToolNo, intValue)	</para> </example>
      <param name="enAxis">Spindle axis value</param>
      <param name="enCuttingPosition">B-Axis cutting position value</param>
      <param name="intToolNo">Tool Number</param>
      <param name="intValue">Offset number</param>
      <exception cref="System.ApplicationException">Thrown when function fails to perform the operation at current NC condition.</exception>
      <exception cref="System.NotSupportedException">Thrown when operation/input parameters are not supported for the current system.</exception>
      <remarks> <para> The following specifications for first spindle and base cutting position must be met in order to function: <list type="table"> <listheader> <term>Specification</term> <description>Valid/Invalid</description> </listheader> <item> <term>Tool life management specification NC spec [21,3]</term> <description>Valid</description> </item> <item> <term>B Axial control specification NC spec [8,7]</term> <description>Valid</description> </item> </list> </para>  <para> The following specifications for first spindle and vertical cutting position must be met in order to function: <list type="table"> <listheader> <term>Specification</term> <description>Valid/Invalid</description> </listheader> <item> <term>Tool life management specification NC spec [21,3]</term> <description>Valid</description> </item> <item> <term>B Axial control specification NC spec [8,7]</term> <description>Valid</description> </item> <item> <term>Tool Offset multi-system specification NC spec [21,6]</term> <description>Invalid</description> </item> </list> </para>  <para> The following specifications for second spindle and base/vertical cutting position must be met in order to function: <list type="table"> <listheader> <term>Specification</term> <description>Valid/Invalid</description> </listheader> <item> <term>Tool life management specification NC spec [21,3]</term> <description>Valid</description> </item> <item> <term>B Axial control specification NC spec [8,7]</term> <description>Valid</description> </item> <item> <term>Tool Offset multi-system specification NC spec [21,6]</term> <description>Invalid</description> </item> <item> <term>Sub spindle specification NC spec [4,1]</term> <description>Valid</description> </item> </list> </para> </remarks>
      <Figure> TOOL DATA - TOOL LIFE MANAGEMENT - A(NO. OF WORK) - OG1 <para> <img src="Lathe.ToolData.TLM.Work.jpg" /> </para> </Figure>
      <SubSystem> Please see <see href="SubSystemNoteTable.htm">Sub System Note Table</see> for more information if applicable. <para>Valid sub systems for this function (Y = Valid, N = Not valid)</para> <para> <list type="table"> <listheader> <term>NC_RUN </term> <term>NC_RUN_1 </term> <term>NC_RUN_2 </term> <term>NC_RUN_3 </term> <term>NC_PANEL </term> <term>NC_PANEL_1 </term> <term>NC_PANEL_2 </term> <term>NC_PANEL_3 </term> <term>NC_AL </term> <term>NC_AR </term> <term>NC_BL </term> <term>NC_BR </term> <term>NC_CL </term> <term>NC_CR </term> <term>NC_2AL </term> </listheader> <item> <term>Y (*5)</term> <term>Y     </term> <term>N     </term> <term>N     </term> <term>Y (*5)</term> <term>Y     </term> <term>N     </term> <term>N     </term> <term>Y     </term> <term>Y     </term> <term>N     </term> <term>N     </term> <term>N     </term> <term>N     </term> <term>N     </term> </item> </list> </para>  </SubSystem>
    </member>
    <member name="M:Okuma.CLDATAPI.DataAPI.CTools.GetReferenceToolOffset2(Okuma.CLDATAPI.Enumerations.PrincipalAxisEnum,Okuma.CLDATAPI.Enumerations.BAxisCuttingPositionEnum,System.Int32)">
      <summary>For B-Axis control specification, it gets reference offset 1  at the specified spindle axis index, cutting position index, and tool number for current sub system. </summary>
      <example> This sample shows how to call the GetReferenceToolOffset2() method. Dim enAxis As PrincipalAxisEnum Dim enCuttingPosition As BAxisCuttingPositionEnum Dim intToolNo As Integer Dim intValue As Integer <para>	intValue = objTool.GetReferenceToolOffset2(enAxis, enCuttingPosition, intToolNo)	</para> </example>
      <param name="enAxis">Spindle axis index</param>
      <param name="enCuttingPosition">Cutting position at B-Axis</param>
      <param name="intToolNo">Tool number</param>
      <returns>A System.Int32</returns>
      <exception cref="System.ApplicationException">Thrown when function fails to perform the operation at current NC condition.</exception>
      <exception cref="System.NotSupportedException">Thrown when operation/input parameters are not supported for the current system.</exception>
      <remarks> <para> The following specifications for first spindle and base cutting position must be met in order to function: <list type="table"> <listheader> <term>Specification</term> <description>Valid/Invalid</description> </listheader> <item> <term>Tool life management specification NC spec [21,3]</term> <description>Valid</description> </item> <item> <term>B Axial control specification NC spec [8,7]</term> <description>Valid</description> </item> </list> </para>  <para> The following specifications for first spindle and vertical cutting position must be met in order to function: <list type="table"> <listheader> <term>Specification</term> <description>Valid/Invalid</description> </listheader> <item> <term>Tool life management specification NC spec [21,3]</term> <description>Valid</description> </item> <item> <term>B Axial control specification NC spec [8,7]</term> <description>Valid</description> </item> <item> <term>Tool Offset multi-system specification NC spec [21,6]</term> <description>Invalid</description> </item> </list> </para>  <para> The following specifications for second spindle and base/vertical cutting position must be met in order to function: <list type="table"> <listheader> <term>Specification</term> <description>Valid/Invalid</description> </listheader> <item> <term>Tool life management specification NC spec [21,3]</term> <description>Valid</description> </item> <item> <term>B Axial control specification NC spec [8,7]</term> <description>Valid</description> </item> <item> <term>Tool Offset multi-system specification NC spec [21,6]</term> <description>Invalid</description> </item> <item> <term>Sub spindle specification NC spec [4,1]</term> <description>Valid</description> </item> </list> </para> </remarks>
      <Figure> TOOL DATA - TOOL LIFE MANAGEMENT - A(NO. OF WORK) - OG1 <para> The reference offset number 1 for tool 1 is offset number 11 under OG1 column. <img src="Lathe.ToolData.TLM.Work.jpg" /> </para> </Figure>
      <SubSystem> Please see <see href="SubSystemNoteTable.htm">Sub System Note Table</see> for more information if applicable. <para>Valid sub systems for this function (Y = Valid, N = Not valid)</para> <para> <list type="table"> <listheader> <term>NC_RUN </term> <term>NC_RUN_1 </term> <term>NC_RUN_2 </term> <term>NC_RUN_3 </term> <term>NC_PANEL </term> <term>NC_PANEL_1 </term> <term>NC_PANEL_2 </term> <term>NC_PANEL_3 </term> <term>NC_AL </term> <term>NC_AR </term> <term>NC_BL </term> <term>NC_BR </term> <term>NC_CL </term> <term>NC_CR </term> <term>NC_2AL </term> </listheader> <item> <term>Y (*5)</term> <term>Y     </term> <term>N     </term> <term>N     </term> <term>Y (*5)</term> <term>Y     </term> <term>N     </term> <term>N     </term> <term>Y     </term> <term>Y     </term> <term>N     </term> <term>N     </term> <term>N     </term> <term>N     </term> <term>N     </term> </item> </list> </para> </SubSystem>
      <remarks>  <para> Compatible Chart of this function for different OSP controls: <list type="table"> <listheader> <term>OSP Control</term> <description>Compatible</description> </listheader> <item> <term>P100II</term> <description>Yes</description> </item> <item> <term>P200</term> <description>Yes</description> </item> <item> <term>P300L</term> <description>No</description> </item> <item> <term>P300S/TD Mode</term> <description>No</description> </item> <item> <term>P300S/TL Mode</term> <description>No</description> </item> </list> </para>  </remarks>
    </member>
    <member name="M:Okuma.CLDATAPI.DataAPI.CTools.SetReferenceToolOffset2(Okuma.CLDATAPI.Enumerations.PrincipalAxisEnum,Okuma.CLDATAPI.Enumerations.BAxisCuttingPositionEnum,System.Int32,System.Int32)">
      <summary> For B-Axis control specification, it sets reference tool offset 2 at the specified spindle axis index, B-Axis cutting position index, and tool number for current sub system. </summary>
      <example> This sample shows how to call the SetReferenceToolOffset2() method. Dim enAxis As PrincipalAxisEnum Dim enCuttingPosition As BAxisCuttingPositionEnum Dim intToolNo As Integer Dim intValue As Integer <para>	objTool.SetReferenceToolOffset2(enAxis, enCuttingPosition, intToolNo, intValue)	</para> </example>
      <param name="enAxis">Spindle axis value</param>
      <param name="enCuttingPosition">B-Axis cutting position value</param>
      <param name="intToolNo">Tool Number</param>
      <param name="intValue">Offset number</param>
      <exception cref="System.ApplicationException">Thrown when function fails to perform the operation at current NC condition.</exception>
      <exception cref="System.NotSupportedException">Thrown when operation/input parameters are not supported for the current system.</exception>
      <remarks> <para> The following specifications for first spindle and base cutting position must be met in order to function: <list type="table"> <listheader> <term>Specification</term> <description>Valid/Invalid</description> </listheader> <item> <term>Tool life management specification NC spec [21,3]</term> <description>Valid</description> </item> <item> <term>B Axial control specification NC spec [8,7]</term> <description>Valid</description> </item> </list> </para>  <para> The following specifications for first spindle and vertical cutting position must be met in order to function: <list type="table"> <listheader> <term>Specification</term> <description>Valid/Invalid</description> </listheader> <item> <term>Tool life management specification NC spec [21,3]</term> <description>Valid</description> </item> <item> <term>B Axial control specification NC spec [8,7]</term> <description>Valid</description> </item> <item> <term>Tool Offset multi-system specification NC spec [21,6]</term> <description>Invalid</description> </item> </list> </para>  <para> The following specifications for second spindle and base/vertical cutting position must be met in order to function: <list type="table"> <listheader> <term>Specification</term> <description>Valid/Invalid</description> </listheader> <item> <term>Tool life management specification NC spec [21,3]</term> <description>Valid</description> </item> <item> <term>B Axial control specification NC spec [8,7]</term> <description>Valid</description> </item> <item> <term>Tool Offset multi-system specification NC spec [21,6]</term> <description>Invalid</description> </item> <item> <term>Sub spindle specification NC spec [4,1]</term> <description>Valid</description> </item> </list> </para> </remarks>
      <Figure> TOOL DATA - TOOL LIFE MANAGEMENT - A(NO. OF WORK) - OG2 <para> <img src="Lathe.ToolData.TLM.Work.jpg" /> </para> </Figure>
      <SubSystem> Please see <see href="SubSystemNoteTable.htm">Sub System Note Table</see> for more information if applicable. <para>Valid sub systems for this function (Y = Valid, N = Not valid)</para> <para> <list type="table"> <listheader> <term>NC_RUN </term> <term>NC_RUN_1 </term> <term>NC_RUN_2 </term> <term>NC_RUN_3 </term> <term>NC_PANEL </term> <term>NC_PANEL_1 </term> <term>NC_PANEL_2 </term> <term>NC_PANEL_3 </term> <term>NC_AL </term> <term>NC_AR </term> <term>NC_BL </term> <term>NC_BR </term> <term>NC_CL </term> <term>NC_CR </term> <term>NC_2AL </term> </listheader> <item> <term>Y (*5)</term> <term>Y     </term> <term>N     </term> <term>N     </term> <term>Y (*5)</term> <term>Y     </term> <term>N     </term> <term>N     </term> <term>Y     </term> <term>Y     </term> <term>N     </term> <term>N     </term> <term>N     </term> <term>N     </term> <term>N     </term> </item> </list> </para>  </SubSystem>
    </member>
    <member name="M:Okuma.CLDATAPI.DataAPI.CTools.GetReferenceToolOffset3(Okuma.CLDATAPI.Enumerations.PrincipalAxisEnum,Okuma.CLDATAPI.Enumerations.BAxisCuttingPositionEnum,System.Int32)">
      <summary>For B-Axis control specification, it gets reference offset 1  at the specified spindle axis index, cutting position index, and tool number for current sub system. </summary>
      <example> This sample shows how to call the GetReferenceToolOffset3() method. Dim enAxis As PrincipalAxisEnum Dim enCuttingPosition As BAxisCuttingPositionEnum Dim intToolNo As Integer Dim intValue As Integer <para>	intValue = objTool.GetReferenceToolOffset3(enAxis, enCuttingPosition, intToolNo)	</para> </example>
      <param name="enAxis">Spindle axis index</param>
      <param name="enCuttingPosition">Cutting position at B-Axis</param>
      <param name="intToolNo">Tool number</param>
      <returns>A System.Int32</returns>
      <exception cref="System.ApplicationException">Thrown when function fails to perform the operation at current NC condition.</exception>
      <exception cref="System.NotSupportedException">Thrown when operation/input parameters are not supported for the current system.</exception>
      <remarks> <para> The following specifications for first spindle and base cutting position must be met in order to function: <list type="table"> <listheader> <term>Specification</term> <description>Valid/Invalid</description> </listheader> <item> <term>Tool life management specification NC spec [21,3]</term> <description>Valid</description> </item> <item> <term>B Axial control specification NC spec [8,7]</term> <description>Valid</description> </item> </list> </para>  <para> The following specifications for first spindle and vertical cutting position must be met in order to function: <list type="table"> <listheader> <term>Specification</term> <description>Valid/Invalid</description> </listheader> <item> <term>Tool life management specification NC spec [21,3]</term> <description>Valid</description> </item> <item> <term>B Axial control specification NC spec [8,7]</term> <description>Valid</description> </item> <item> <term>Tool Offset multi-system specification NC spec [21,6]</term> <description>Invalid</description> </item> </list> </para>  <para> The following specifications for second spindle and base/vertical cutting position must be met in order to function: <list type="table"> <listheader> <term>Specification</term> <description>Valid/Invalid</description> </listheader> <item> <term>Tool life management specification NC spec [21,3]</term> <description>Valid</description> </item> <item> <term>B Axial control specification NC spec [8,7]</term> <description>Valid</description> </item> <item> <term>Tool Offset multi-system specification NC spec [21,6]</term> <description>Invalid</description> </item> <item> <term>Sub spindle specification NC spec [4,1]</term> <description>Valid</description> </item> </list> </para> </remarks>
      <Figure> TOOL DATA - TOOL LIFE MANAGEMENT - A(NO. OF WORK) - OG1 <para> The reference offset number 1 for tool 1 is offset number 11 under OG1 column. <img src="Lathe.ToolData.TLM.Work.jpg" /> </para> </Figure>
      <SubSystem> Please see <see href="SubSystemNoteTable.htm">Sub System Note Table</see> for more information if applicable. <para>Valid sub systems for this function (Y = Valid, N = Not valid)</para> <para> <list type="table"> <listheader> <term>NC_RUN </term> <term>NC_RUN_1 </term> <term>NC_RUN_2 </term> <term>NC_RUN_3 </term> <term>NC_PANEL </term> <term>NC_PANEL_1 </term> <term>NC_PANEL_2 </term> <term>NC_PANEL_3 </term> <term>NC_AL </term> <term>NC_AR </term> <term>NC_BL </term> <term>NC_BR </term> <term>NC_CL </term> <term>NC_CR </term> <term>NC_2AL </term> </listheader> <item> <term>Y (*5)</term> <term>Y     </term> <term>N     </term> <term>N     </term> <term>Y (*5)</term> <term>Y     </term> <term>N     </term> <term>N     </term> <term>Y     </term> <term>Y     </term> <term>N     </term> <term>N     </term> <term>N     </term> <term>N     </term> <term>N     </term> </item> </list> </para> </SubSystem>
      <remarks>  <para> Compatible Chart of this function for different OSP controls: <list type="table"> <listheader> <term>OSP Control</term> <description>Compatible</description> </listheader> <item> <term>P100II</term> <description>Yes</description> </item> <item> <term>P200</term> <description>Yes</description> </item> <item> <term>P300L</term> <description>No</description> </item> <item> <term>P300S/TD Mode</term> <description>No</description> </item> <item> <term>P300S/TL Mode</term> <description>No</description> </item> </list> </para>  </remarks>
    </member>
    <member name="M:Okuma.CLDATAPI.DataAPI.CTools.SetReferenceToolOffset3(Okuma.CLDATAPI.Enumerations.PrincipalAxisEnum,Okuma.CLDATAPI.Enumerations.BAxisCuttingPositionEnum,System.Int32,System.Int32)">
      <summary> For B-Axis control specification, it sets reference tool offset 3 at the specified spindle axis index, B-Axis cutting position index, and tool number for current sub system. </summary>
      <example> This sample shows how to call the SetReferenceToolOffset3() method. Dim enAxis As PrincipalAxisEnum Dim enCuttingPosition As BAxisCuttingPositionEnum Dim intToolNo As Integer Dim intValue As Integer <para>	objTool.SetReferenceToolOffset3(enAxis, enCuttingPosition, intToolNo, intValue)	</para> </example>
      <param name="enAxis">Spindle axis value</param>
      <param name="enCuttingPosition">B-Axis cutting position value</param>
      <param name="intToolNo">Tool Number</param>
      <param name="intValue">Offset number</param>
      <exception cref="System.ApplicationException">Thrown when function fails to perform the operation at current NC condition.</exception>
      <exception cref="System.NotSupportedException">Thrown when operation/input parameters are not supported for the current system.</exception>
      <remarks> <para> The following specifications for first spindle and base cutting position must be met in order to function: <list type="table"> <listheader> <term>Specification</term> <description>Valid/Invalid</description> </listheader> <item> <term>Tool life management specification NC spec [21,3]</term> <description>Valid</description> </item> <item> <term>B Axial control specification NC spec [8,7]</term> <description>Valid</description> </item> </list> </para>  <para> The following specifications for first spindle and vertical cutting position must be met in order to function: <list type="table"> <listheader> <term>Specification</term> <description>Valid/Invalid</description> </listheader> <item> <term>Tool life management specification NC spec [21,3]</term> <description>Valid</description> </item> <item> <term>B Axial control specification NC spec [8,7]</term> <description>Valid</description> </item> <item> <term>Tool Offset multi-system specification NC spec [21,6]</term> <description>Invalid</description> </item> </list> </para>  <para> The following specifications for second spindle and base/vertical cutting position must be met in order to function: <list type="table"> <listheader> <term>Specification</term> <description>Valid/Invalid</description> </listheader> <item> <term>Tool life management specification NC spec [21,3]</term> <description>Valid</description> </item> <item> <term>B Axial control specification NC spec [8,7]</term> <description>Valid</description> </item> <item> <term>Tool Offset multi-system specification NC spec [21,6]</term> <description>Invalid</description> </item> <item> <term>Sub spindle specification NC spec [4,1]</term> <description>Valid</description> </item> </list> </para> </remarks>
      <Figure> TOOL DATA - TOOL LIFE MANAGEMENT - A(NO. OF WORK) - OG3 <para> <img src="Lathe.ToolData.TLM.Work.jpg" /> </para> </Figure>
      <SubSystem> Please see <see href="SubSystemNoteTable.htm">Sub System Note Table</see> for more information if applicable. <para>Valid sub systems for this function (Y = Valid, N = Not valid)</para> <para> <list type="table"> <listheader> <term>NC_RUN </term> <term>NC_RUN_1 </term> <term>NC_RUN_2 </term> <term>NC_RUN_3 </term> <term>NC_PANEL </term> <term>NC_PANEL_1 </term> <term>NC_PANEL_2 </term> <term>NC_PANEL_3 </term> <term>NC_AL </term> <term>NC_AR </term> <term>NC_BL </term> <term>NC_BR </term> <term>NC_CL </term> <term>NC_CR </term> <term>NC_2AL </term> </listheader> <item> <term>Y (*5)</term> <term>Y     </term> <term>N     </term> <term>N     </term> <term>Y (*5)</term> <term>Y     </term> <term>N     </term> <term>N     </term> <term>Y     </term> <term>Y     </term> <term>N     </term> <term>N     </term> <term>N     </term> <term>N     </term> <term>N     </term> </item> </list> </para>  </SubSystem>
    </member>
    <member name="M:Okuma.CLDATAPI.DataAPI.CTools.GetToolLife(Okuma.CLDATAPI.Enumerations.ToolLifeConditionEnum,Okuma.CLDATAPI.Enumerations.MultiEdgesAngleToolHolderEnum,Okuma.CLDATAPI.Enumerations.MultiEdgesAngleToolEnum,System.Int32)">
      <summary> For multi-insert tool specification NC spec [5,3] , it gets the tool life value at the specified tool life condition, tool holder, and tool edge for current sub system. </summary>
      <example> This sample shows how to call the GetToolLife() method. <para>	Me.tulToolLife.Text = objTool.GetToolLife(int_condition, int_holder, int_edges, CInt(txt_edgenumber.Text))	</para> </example>
      <param name="enToolLifeCondition">A tool life condition for getting tool life</param>
      <param name="enToolHolder">Tool holder number</param>
      <param name="enMultiEdgesTool">set of multi-edge tools per tool holder.  An 8 edges tool set cannot be used in 12 edges tool set and vice versa.</param>
      <param name="intEdgeNo">Edge number where tool life value is obtained from</param>
      <returns>A System.Double value</returns>
      <DataUnit> <para> The unit depends on the specified tool life condition: </para> <list type="table"> <listheader> <term>Tool Life Condition</term> <description>Unit</description> </listheader> <item> <term>Cutting Time</term> <description>Second</description> </item> <item> <term>Wear</term> <description>By default, unit of wear amount is in millimeter.  Other units can be set by calling SetDataUnit.</description> </item> <item> <term>Workpiece</term> <description>A unit(machined workpiece)</description> </item> </list> </DataUnit>
      <exception cref="System.ApplicationException">Thrown when function fails to perform the operation at current NC condition.</exception>
      <exception cref="System.NotSupportedException">Thrown when operation/input parameters are not supported for the current system.</exception>
      <remarks> <para> The following specifications must be met in order to function: <list type="table"> <listheader> <term>Specification</term> <description>Valid/Invalid</description> </listheader> <item> <term>Tool life management specification NC spec [21,3]</term> <description>Valid</description> </item> <item> <term>H1 Turret specification NC spec [2,6]</term> <description>Valid</description> </item> <item> <term>L Tool index specification NC spec [3,4]</term> <description>Valid</description> </item> <item> <term>Tool Offset multi-system specification NC spec [21,6]</term> <description>Valid</description> </item> <item> <term>Multi-insert tool specification NC spec [5,3]</term> <description>Valid</description> </item> <item> <term>Tool compensation 500 sets NC spec [6,6] or Tool offset 200 sets NC spec [21,4] specification</term> <description>Valid</description> </item> </list> </para>  <para> Compatible Chart of this function for different OSP controls: <list type="table"> <listheader> <term>OSP Control</term> <description>Compatible</description> </listheader> <item> <term>P100II</term> <description>Yes</description> </item> <item> <term>P200</term> <description>Yes</description> </item> <item> <term>P300L</term> <description>No</description> </item> <item> <term>P300S/TD Mode</term> <description>No</description> </item> <item> <term>P300S/TL Mode</term> <description>No</description> </item> </list> </para> </remarks>
      <Figure> TOOL DATA - TOOL LIFE MANAGEMENT 2 - A(NO. OF WORK) HOLDER.201 - SET <para> <img src="Lathe.Multi.ToolData.TLM.Work.jpg" /> </para> </Figure>
      <SubSystem> Please see <see href="SubSystemNoteTable.htm">Sub System Note Table</see> for more information if applicable. <para>Valid sub systems for this function (Y = Valid, N = Not valid)</para> <para> <list type="table"> <listheader> <term>NC_RUN </term> <term>NC_RUN_1 </term> <term>NC_RUN_2 </term> <term>NC_RUN_3 </term> <term>NC_PANEL </term> <term>NC_PANEL_1 </term> <term>NC_PANEL_2 </term> <term>NC_PANEL_3 </term> <term>NC_AL </term> <term>NC_AR </term> <term>NC_BL </term> <term>NC_BR </term> <term>NC_CL </term> <term>NC_CR </term> <term>NC_2AL </term> </listheader> <item> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>N</term> </item> </list> </para>  </SubSystem>
    </member>
    <member name="M:Okuma.CLDATAPI.DataAPI.CTools.SetToolLife(Okuma.CLDATAPI.Enumerations.ToolLifeConditionEnum,Okuma.CLDATAPI.Enumerations.MultiEdgesAngleToolHolderEnum,Okuma.CLDATAPI.Enumerations.MultiEdgesAngleToolEnum,System.Int32,System.Double)">
      <summary> For multi-insert tool specification NC spec [5,3] , it sets the tool life value at the specified tool life condition, tool holder, and tool edge for current sub system. </summary>
      <example> This sample shows how to call the SetToolLife() method. <para>	objTool.SetToolLife(int_condition, int_holder, int_edges, CInt(txt_edgenumber.Text), Convert.ToDouble(txt_toolupdatelife2.Text))	</para> </example>
      <param name="enToolLifeCondition">A tool life condition</param>
      <param name="enToolHolder">Tool holder number</param>
      <param name="enMultiEdgesTool">set of multi-edge tools per tool holder.  An 8 edges tool set cannot be used in 12 edges tool set and vice versa.</param>
      <param name="intEdgeNo">Edge number where tool life value is set to</param>
      <param name="dblValue">Tool live value to be set</param>
      <returns>None</returns>
      <DataUnit> <para> The unit depends on the specified tool life condition: </para> <list type="table"> <listheader> <term>Tool Life Condition</term> <description>Unit</description> </listheader> <item> <term>Cutting Time</term> <description>Second</description> </item> <item> <term>Wear</term> <description>By default, unit of wear amount is in millimeter.  Other units can be set by calling SetDataUnit.</description> </item> <item> <term>Workpiece</term> <description>A unit(machined workpiece)</description> </item> </list> </DataUnit>
      <exception cref="System.ApplicationException">Thrown when function fails to perform the operation at current NC condition.</exception>
      <exception cref="System.NotSupportedException">Thrown when operation/input parameters are not supported for the current system.</exception>
      <remarks> <para> The following specifications must be met in order to function: <list type="table"> <listheader> <term>Specification</term> <description>Valid/Invalid</description> </listheader> <item> <term>Tool life management specification NC spec [21,3]</term> <description>Valid</description> </item> <item> <term>H1 Turret specification NC spec [2,6]</term> <description>Valid</description> </item> <item> <term>L Tool index specification NC spec [3,4]</term> <description>Valid</description> </item> <item> <term>Tool Offset multi-system specification NC spec [21,6]</term> <description>Valid</description> </item> <item> <term>Multi-insert tool specification NC spec [5,3]</term> <description>Valid</description> </item> <item> <term>Tool compensation 500 sets NC spec [6,6] or Tool offset 200 sets NC spec [21,4] specification</term> <description>Valid</description> </item> </list> </para>  <para> Compatible Chart of this function for different OSP controls: <list type="table"> <listheader> <term>OSP Control</term> <description>Compatible</description> </listheader> <item> <term>P100II</term> <description>Yes</description> </item> <item> <term>P200</term> <description>Yes</description> </item> <item> <term>P300L</term> <description>No</description> </item> <item> <term>P300S/TD Mode</term> <description>No</description> </item> <item> <term>P300S/TL Mode</term> <description>No</description> </item> </list> </para> </remarks>
      <Figure> TOOL DATA - TOOL LIFE MANAGEMENT 2 - A(NO. OF WORK) HOLDER.201 - SET <para> SET is setting value of tool life. The unit of tool life value depends on tool life condition. <img src="Lathe.Multi.ToolData.TLM.Work.jpg" /> </para> </Figure>
      <SubSystem> Please see <see href="SubSystemNoteTable.htm">Sub System Note Table</see> for more information if applicable. <para>Valid sub systems for this function (Y = Valid, N = Not valid)</para> <para> <list type="table"> <listheader> <term>NC_RUN </term> <term>NC_RUN_1 </term> <term>NC_RUN_2 </term> <term>NC_RUN_3 </term> <term>NC_PANEL </term> <term>NC_PANEL_1 </term> <term>NC_PANEL_2 </term> <term>NC_PANEL_3 </term> <term>NC_AL </term> <term>NC_AR </term> <term>NC_BL </term> <term>NC_BR </term> <term>NC_CL </term> <term>NC_CR </term> <term>NC_2AL </term> </listheader> <item> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>N</term> </item> </list> </para>  </SubSystem>
    </member>
    <member name="M:Okuma.CLDATAPI.DataAPI.CTools.AddToolLife(Okuma.CLDATAPI.Enumerations.ToolLifeConditionEnum,Okuma.CLDATAPI.Enumerations.MultiEdgesAngleToolHolderEnum,Okuma.CLDATAPI.Enumerations.MultiEdgesAngleToolEnum,System.Int32,System.Double)">
      <summary> For multi-insert tool specification NC spec [5,3] , it adds the tool life value at the specified tool life condition, tool holder, and tool edge for current sub system. </summary>
      <example> This sample shows how to call the AddToolLife() method. <para>	Me.txt_getactualtoollife.Text = objTool.AddToolLife(int_condition, int_holder, int_edges, CInt(txt_edgenumber.Text))	</para> </example>
      <param name="enToolLifeCondition">A tool life condition for getting tool life</param>
      <param name="enToolHolder">Tool holder number</param>
      <param name="enMultiEdgesTool">set of multi-edge tools per tool holder.  An 8 edges tool set cannot be used in 12 edges tool set and vice versa.</param>
      <param name="intEdgeNo">Edge number where tool life value is obtained from</param>
      <param name="dblValue">value to be added</param>
      <DataUnit> <para> The unit depends on the specified tool life condition: </para> <list type="table"> <listheader> <term>Tool Life Condition</term> <description>Unit</description> </listheader> <item> <term>Cutting Time</term> <description>Second</description> </item> <item> <term>Wear</term> <description>By default, unit of wear amount is in millimeter.  Other units can be set by calling SetDataUnit.</description> </item> <item> <term>Workpiece</term> <description>A unit(machined workpiece)</description> </item> </list> </DataUnit>
      <exception cref="System.ApplicationException">Thrown when function fails to perform the operation at current NC condition.</exception>
      <exception cref="System.NotSupportedException">Thrown when operation/input parameters are not supported for the current system.</exception>
      <remarks> <para> The following specifications must be met in order to function: <list type="table"> <listheader> <term>Specification</term> <description>Valid/Invalid</description> </listheader> <item> <term>Tool life management specification NC spec [21,3]</term> <description>Valid</description> </item> <item> <term>H1 Turret specification NC spec [2,6]</term> <description>Valid</description> </item> <item> <term>L Tool index specification NC spec [3,4]</term> <description>Valid</description> </item> <item> <term>Tool Offset multi-system specification NC spec [21,6]</term> <description>Valid</description> </item> <item> <term>Multi-insert tool specification NC spec [5,3]</term> <description>Valid</description> </item> <item> <term>Tool compensation 500 sets NC spec [6,6] or Tool offset 200 sets NC spec [21,4] specification</term> <description>Valid</description> </item> </list> </para>  <para> Compatible Chart of this function for different OSP controls: <list type="table"> <listheader> <term>OSP Control</term> <description>Compatible</description> </listheader> <item> <term>P100II</term> <description>Yes</description> </item> <item> <term>P200</term> <description>Yes</description> </item> <item> <term>P300L</term> <description>No</description> </item> <item> <term>P300S/TD Mode</term> <description>No</description> </item> <item> <term>P300S/TL Mode</term> <description>No</description> </item> </list> </para> </remarks>
      <Figure> TOOL DATA - TOOL LIFE MANAGEMENT 2 - A(NO. OF WORK) HOLDER.201 - SET <para> <img src="Lathe.Multi.ToolData.TLM.Work.jpg" /> </para> </Figure>
      <SubSystem> Please see <see href="SubSystemNoteTable.htm">Sub System Note Table</see> for more information if applicable. <para>Valid sub systems for this function (Y = Valid, N = Not valid)</para> <para> <list type="table"> <listheader> <term>NC_RUN </term> <term>NC_RUN_1 </term> <term>NC_RUN_2 </term> <term>NC_RUN_3 </term> <term>NC_PANEL </term> <term>NC_PANEL_1 </term> <term>NC_PANEL_2 </term> <term>NC_PANEL_3 </term> <term>NC_AL </term> <term>NC_AR </term> <term>NC_BL </term> <term>NC_BR </term> <term>NC_CL </term> <term>NC_CR </term> <term>NC_2AL </term> </listheader> <item> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>N</term> </item> </list> </para>  </SubSystem>
    </member>
    <member name="M:Okuma.CLDATAPI.DataAPI.CTools.GetActualToolLife(Okuma.CLDATAPI.Enumerations.ToolLifeConditionEnum,Okuma.CLDATAPI.Enumerations.MultiEdgesAngleToolHolderEnum,Okuma.CLDATAPI.Enumerations.MultiEdgesAngleToolEnum,System.Int32)">
      <summary> For multi-insert tool specification NC spec [5,3] , it gets the actual tool life value at the specified tool life condition, tool holder, and tool edge for current sub system. </summary>
      <example> This sample shows how to call the GetActualToolLife() method. <para>	Me.txt_getactualtoollife.Text = objTool.GetActualToolLife(int_condition, int_holder, int_edges, CInt(txt_edgenumber.Text))	</para> </example>
      <param name="enToolLifeCondition">A tool life condition for getting tool life</param>
      <param name="enToolHolder">Tool holder number</param>
      <param name="enMultiEdgesTool">set of multi-edge tools per tool holder.  An 8 edges tool set cannot be used in 12 edges tool set and vice versa.</param>
      <param name="intEdgeNo">Edge number where tool life value is obtained from</param>
      <returns>A System.Double value</returns>
      <DataUnit> <para> The unit depends on the specified tool life condition: </para> <list type="table"> <listheader> <term>Tool Life Condition</term> <description>Unit</description> </listheader> <item> <term>Cutting Time</term> <description>Second</description> </item> <item> <term>Wear</term> <description>By default, unit of wear amount is in millimeter.  Other units can be set by calling SetDataUnit.</description> </item> <item> <term>Workpiece</term> <description>A unit(machined workpiece)</description> </item> </list> </DataUnit>
      <exception cref="System.ApplicationException">Thrown when function fails to perform the operation at current NC condition.</exception>
      <exception cref="System.NotSupportedException">Thrown when operation/input parameters are not supported for the current system.</exception>
      <remarks> <para> The following specifications must be met in order to function: <list type="table"> <listheader> <term>Specification</term> <description>Valid/Invalid</description> </listheader> <item> <term>Tool life management specification NC spec [21,3]</term> <description>Valid</description> </item> <item> <term>H1 Turret specification NC spec [2,6]</term> <description>Valid</description> </item> <item> <term>L Tool index specification NC spec [3,4]</term> <description>Valid</description> </item> <item> <term>Tool Offset multi-system specification NC spec [21,6]</term> <description>Valid</description> </item> <item> <term>Multi-insert tool specification NC spec [5,3]</term> <description>Valid</description> </item> <item> <term>Tool compensation 500 sets NC spec [6,6] or Tool offset 200 sets NC spec [21,4] specification</term> <description>Valid</description> </item> </list> </para>  <para> Compatible Chart of this function for different OSP controls: <list type="table"> <listheader> <term>OSP Control</term> <description>Compatible</description> </listheader> <item> <term>P100II</term> <description>Yes</description> </item> <item> <term>P200</term> <description>Yes</description> </item> <item> <term>P300L</term> <description>No</description> </item> <item> <term>P300S/TD Mode</term> <description>No</description> </item> <item> <term>P300S/TL Mode</term> <description>No</description> </item> </list> </para> </remarks>
      <Figure> TOOL DATA - TOOL LIFE MANAGEMENT 2 - A(NO. OF WORK) HOLDER.201 - ACTUAL <para> ACTUAL is current tool life's value. The unit of actual tool life value depends on tool life condition. <img src="Lathe.Multi.ToolData.TLM.Work.jpg" /> </para> </Figure>
      <SubSystem> Please see <see href="SubSystemNoteTable.htm">Sub System Note Table</see> for more information if applicable. <para>Valid sub systems for this function (Y = Valid, N = Not valid)</para> <para> <list type="table"> <listheader> <term>NC_RUN </term> <term>NC_RUN_1 </term> <term>NC_RUN_2 </term> <term>NC_RUN_3 </term> <term>NC_PANEL </term> <term>NC_PANEL_1 </term> <term>NC_PANEL_2 </term> <term>NC_PANEL_3 </term> <term>NC_AL </term> <term>NC_AR </term> <term>NC_BL </term> <term>NC_BR </term> <term>NC_CL </term> <term>NC_CR </term> <term>NC_2AL </term> </listheader> <item> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>N</term> </item> </list> </para>  </SubSystem>
    </member>
    <member name="M:Okuma.CLDATAPI.DataAPI.CTools.SetActualToolLife(Okuma.CLDATAPI.Enumerations.ToolLifeConditionEnum,Okuma.CLDATAPI.Enumerations.MultiEdgesAngleToolHolderEnum,Okuma.CLDATAPI.Enumerations.MultiEdgesAngleToolEnum,System.Int32,System.Double)">
      <summary> For multi-insert tool specification NC spec [5,3] , it sets the actual tool life value at the specified tool life condition, tool holder, and tool edge for current sub system. </summary>
      <example> This sample shows how to call the SetActualToolLife() method. <para>	Me.txt_getactualtoollife.Text = objTool.SetActualToolLife(int_condition, int_holder, int_edges, CInt(txt_edgenumber.Text))	</para> </example>
      <param name="enToolLifeCondition">A tool life condition for getting tool life</param>
      <param name="enToolHolder">Tool holder number</param>
      <param name="enMultiEdgesTool">set of multi-edge tools per tool holder.  An 8 edges tool set cannot be used in 12 edges tool set and vice versa.</param>
      <param name="intEdgeNo">Edge number where tool life value is obtained from</param>
      <param name="dblValue">value to be set</param>
      <DataUnit> <para> The unit depends on the specified tool life condition: </para> <list type="table"> <listheader> <term>Tool Life Condition</term> <description>Unit</description> </listheader> <item> <term>Cutting Time</term> <description>Second</description> </item> <item> <term>Wear</term> <description>By default, unit of wear amount is in millimeter.  Other units can be set by calling SetDataUnit.</description> </item> <item> <term>Workpiece</term> <description>A unit(machined workpiece)</description> </item> </list> </DataUnit>
      <exception cref="System.ApplicationException">Thrown when function fails to perform the operation at current NC condition.</exception>
      <exception cref="System.NotSupportedException">Thrown when operation/input parameters are not supported for the current system.</exception>
      <remarks> <para> The following specifications must be met in order to function: <list type="table"> <listheader> <term>Specification</term> <description>Valid/Invalid</description> </listheader> <item> <term>Tool life management specification NC spec [21,3]</term> <description>Valid</description> </item> <item> <term>H1 Turret specification NC spec [2,6]</term> <description>Valid</description> </item> <item> <term>L Tool index specification NC spec [3,4]</term> <description>Valid</description> </item> <item> <term>Tool Offset multi-system specification NC spec [21,6]</term> <description>Valid</description> </item> <item> <term>Multi-insert tool specification NC spec [5,3]</term> <description>Valid</description> </item> <item> <term>Tool compensation 500 sets NC spec [6,6] or Tool offset 200 sets NC spec [21,4] specification</term> <description>Valid</description> </item> </list> </para>  <para> Compatible Chart of this function for different OSP controls: <list type="table"> <listheader> <term>OSP Control</term> <description>Compatible</description> </listheader> <item> <term>P100II</term> <description>Yes</description> </item> <item> <term>P200</term> <description>Yes</description> </item> <item> <term>P300L</term> <description>No</description> </item> <item> <term>P300S/TD Mode</term> <description>No</description> </item> <item> <term>P300S/TL Mode</term> <description>No</description> </item> </list> </para> </remarks>
      <Figure> TOOL DATA - TOOL LIFE MANAGEMENT 2 - A(NO. OF WORK) HOLDER.201 - ACTUAL <para> ACTUAL is current tool life's value. The unit of actual tool life value depends on tool life condition. <img src="Lathe.Multi.ToolData.TLM.Work.jpg" /> </para> </Figure>
      <SubSystem> Please see <see href="SubSystemNoteTable.htm">Sub System Note Table</see> for more information if applicable. <para>Valid sub systems for this function (Y = Valid, N = Not valid)</para> <para> <list type="table"> <listheader> <term>NC_RUN </term> <term>NC_RUN_1 </term> <term>NC_RUN_2 </term> <term>NC_RUN_3 </term> <term>NC_PANEL </term> <term>NC_PANEL_1 </term> <term>NC_PANEL_2 </term> <term>NC_PANEL_3 </term> <term>NC_AL </term> <term>NC_AR </term> <term>NC_BL </term> <term>NC_BR </term> <term>NC_CL </term> <term>NC_CR </term> <term>NC_2AL </term> </listheader> <item> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>N</term> </item> </list> </para>  </SubSystem>
    </member>
    <member name="M:Okuma.CLDATAPI.DataAPI.CTools.AddActualToolLife(Okuma.CLDATAPI.Enumerations.ToolLifeConditionEnum,Okuma.CLDATAPI.Enumerations.MultiEdgesAngleToolHolderEnum,Okuma.CLDATAPI.Enumerations.MultiEdgesAngleToolEnum,System.Int32,System.Double)">
      <summary> For multi-insert tool specification NC spec [5,3] , it adds the actual tool life value at the specified tool life condition, tool holder, and tool edge for current sub system. </summary>
      <example> This sample shows how to call the AddActualToolLife() method. <para>	Me.txt_getactualtoollife.Text = objTool.AddActualToolLife(int_condition, int_holder, int_edges, CInt(txt_edgenumber.Text))	</para> </example>
      <param name="enToolLifeCondition">A tool life condition for getting tool life</param>
      <param name="enToolHolder">Tool holder number</param>
      <param name="enMultiEdgesTool">set of multi-edge tools per tool holder.  An 8 edges tool set cannot be used in 12 edges tool set and vice versa.</param>
      <param name="intEdgeNo">Edge number where tool life value is obtained from</param>
      <param name="dblValue">value to be added</param>
      <DataUnit> <para> The unit depends on the specified tool life condition: </para> <list type="table"> <listheader> <term>Tool Life Condition</term> <description>Unit</description> </listheader> <item> <term>Cutting Time</term> <description>Second</description> </item> <item> <term>Wear</term> <description>By default, unit of wear amount is in millimeter.  Other units can be set by calling SetDataUnit.</description> </item> <item> <term>Workpiece</term> <description>A unit(machined workpiece)</description> </item> </list> </DataUnit>
      <exception cref="System.ApplicationException">Thrown when function fails to perform the operation at current NC condition.</exception>
      <exception cref="System.NotSupportedException">Thrown when operation/input parameters are not supported for the current system.</exception>
      <remarks> <para> The following specifications must be met in order to function: <list type="table"> <listheader> <term>Specification</term> <description>Valid/Invalid</description> </listheader> <item> <term>Tool life management specification NC spec [21,3]</term> <description>Valid</description> </item> <item> <term>H1 Turret specification NC spec [2,6]</term> <description>Valid</description> </item> <item> <term>L Tool index specification NC spec [3,4]</term> <description>Valid</description> </item> <item> <term>Tool Offset multi-system specification NC spec [21,6]</term> <description>Valid</description> </item> <item> <term>Multi-insert tool specification NC spec [5,3]</term> <description>Valid</description> </item> <item> <term>Tool compensation 500 sets NC spec [6,6] or Tool offset 200 sets NC spec [21,4] specification</term> <description>Valid</description> </item> </list> </para>  <para> Compatible Chart of this function for different OSP controls: <list type="table"> <listheader> <term>OSP Control</term> <description>Compatible</description> </listheader> <item> <term>P100II</term> <description>Yes</description> </item> <item> <term>P200</term> <description>Yes</description> </item> <item> <term>P300L</term> <description>No</description> </item> <item> <term>P300S/TD Mode</term> <description>No</description> </item> <item> <term>P300S/TL Mode</term> <description>No</description> </item> </list> </para> </remarks>
      <Figure> TOOL DATA - TOOL LIFE MANAGEMENT 2 - A(NO. OF WORK) HOLDER.201 - ACTUAL <para> ACTUAL is current tool life's value. The unit of actual tool life value depends on tool life condition. <img src="Lathe.Multi.ToolData.TLM.Work.jpg" /> </para> </Figure>
      <SubSystem> Please see <see href="SubSystemNoteTable.htm">Sub System Note Table</see> for more information if applicable. <para>Valid sub systems for this function (Y = Valid, N = Not valid)</para> <para> <list type="table"> <listheader> <term>NC_RUN </term> <term>NC_RUN_1 </term> <term>NC_RUN_2 </term> <term>NC_RUN_3 </term> <term>NC_PANEL </term> <term>NC_PANEL_1 </term> <term>NC_PANEL_2 </term> <term>NC_PANEL_3 </term> <term>NC_AL </term> <term>NC_AR </term> <term>NC_BL </term> <term>NC_BR </term> <term>NC_CL </term> <term>NC_CR </term> <term>NC_2AL </term> </listheader> <item> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>N</term> </item> </list> </para>  </SubSystem>
    </member>
    <member name="M:Okuma.CLDATAPI.DataAPI.CTools.GetGaugeStatus(Okuma.CLDATAPI.Enumerations.MultiEdgesAngleToolHolderEnum,Okuma.CLDATAPI.Enumerations.MultiEdgesAngleToolEnum,System.Int32)">
      <summary> For multi-insert tool specification NC spec [5,3] , it gets tool life gauge value at the specified tool holder, and tool edge for current sub system. </summary>
      <example> This sample shows how to call the GetGaugeStatus() method. <para>	dim enValue As ToolGaugeStatusEnum </para> <para>	dim enToolHolder As ToolGaugeStatusEnum </para> <para>	dim enMultiEdgesTool As MultiEdgesAngleToolEnum </para> <para>	dim intEdgeNo As Integer </para> <para>	enValue= objTool.GetGaugeStatus(enToolHolder, enMultiEdgesTool, intEdgeNo)	</para> </example>
      <param name="enToolHolder">Tool holder number</param>
      <param name="enMultiEdgesTool">set of multi-edge tools per tool holder.  An 8 edges tool set cannot be used in 12 edges tool set and vice versa.</param>
      <param name="intEdgeNo">Edge number where tool life value is obtained from</param>
      <returns>An Okuma.CLDATAPI.Enumerations.ToolGaugeStatusEnum value</returns>
      <exception cref="System.ApplicationException">Thrown when function fails to perform the operation at current NC condition.</exception>
      <exception cref="System.NotSupportedException">Thrown when operation/input parameters are not supported for the current system.</exception>
      <remarks> <para> The following specifications must be met in order to function: <list type="table"> <listheader> <term>Specification</term> <description>Valid/Invalid</description> </listheader> <item> <term>Tool life management specification NC spec [21,3]</term> <description>Valid</description> </item> <item> <term>H1 Turret specification NC spec [2,6]</term> <description>Valid</description> </item> <item> <term>L Tool index specification NC spec [3,4]</term> <description>Valid</description> </item> <item> <term>Tool Offset multi-system specification NC spec [21,6]</term> <description>Valid</description> </item> <item> <term>Multi-insert tool specification NC spec [5,3]</term> <description>Valid</description> </item> <item> <term>Tool compensation 500 sets NC spec [6,6] or Tool offset 200 sets NC spec [21,4] specification</term> <description>Valid</description> </item> </list> </para>  <para> Compatible Chart of this function for different OSP controls: <list type="table"> <listheader> <term>OSP Control</term> <description>Compatible</description> </listheader> <item> <term>P100II</term> <description>Yes</description> </item> <item> <term>P200</term> <description>Yes</description> </item> <item> <term>P300L</term> <description>No</description> </item> <item> <term>P300S/TD Mode</term> <description>No</description> </item> <item> <term>P300S/TL Mode</term> <description>No</description> </item> </list> </para> </remarks>
      <Figure> TOOL DATA - TOOL LIFE MANAGEMENT 2 - A(NO. OF WORK) HOLDER.201 - GAUGE <para> <img src="Lathe.Multi.ToolData.TLM.Work.jpg" /> </para> </Figure>
      <SubSystem> Please see <see href="SubSystemNoteTable.htm">Sub System Note Table</see> for more information if applicable. <para>Valid sub systems for this function (Y = Valid, N = Not valid)</para> <para> <list type="table"> <listheader> <term>NC_RUN </term> <term>NC_RUN_1 </term> <term>NC_RUN_2 </term> <term>NC_RUN_3 </term> <term>NC_PANEL </term> <term>NC_PANEL_1 </term> <term>NC_PANEL_2 </term> <term>NC_PANEL_3 </term> <term>NC_AL </term> <term>NC_AR </term> <term>NC_BL </term> <term>NC_BR </term> <term>NC_CL </term> <term>NC_CR </term> <term>NC_2AL </term> </listheader> <item> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>N</term> </item> </list> </para>  </SubSystem>
    </member>
    <member name="M:Okuma.CLDATAPI.DataAPI.CTools.SetGaugeStatus(Okuma.CLDATAPI.Enumerations.MultiEdgesAngleToolHolderEnum,Okuma.CLDATAPI.Enumerations.MultiEdgesAngleToolEnum,System.Int32,Okuma.CLDATAPI.Enumerations.ToolGaugeStatusEnum)">
      <summary> For multi-insert tool specification NC spec [5,3] , it sets tool life gauge value at the specified tool holder, and tool edge for current sub system. </summary>
      <example> This sample shows how to call the SetGaugeStatus() method. <para>	dim enValue As ToolGaugeStatusEnum </para> <para>	dim enToolHolder As ToolGaugeStatusEnum </para> <para>	dim enMultiEdgesTool As MultiEdgesAngleToolEnum </para> <para>	dim intEdgeNo As Integer </para> <para>	objTool.SetGaugeStatus(enToolHolder, enMultiEdgesTool, intEdgeNo, enValue)	</para> </example>
      <param name="enToolHolder">Tool holder number </param>
      <param name="enMultiEdgesTool">set of multi-edge tools per tool holder. An 8 edges tool set cannot be used in 12 edges tool set and vice versa. </param>
      <param name="intEdgeNo">Edge number where tool group value is obtained from </param>
      <param name="enValue">gauge status value to be set</param>
      <exception cref="System.ApplicationException">Thrown when function fails to perform the operation at current NC condition.</exception>
      <exception cref="System.NotSupportedException">Thrown when operation/input parameters are not supported for the current system.</exception>
      <remarks> <para> The following specifications must be met in order to function: <list type="table"> <listheader> <term>Specification</term> <description>Valid/Invalid</description> </listheader> <item> <term>Tool life management specification NC spec [21,3]</term> <description>Valid</description> </item> <item> <term>H1 Turret specification NC spec [2,6]</term> <description>Valid</description> </item> <item> <term>L Tool index specification NC spec [3,4]</term> <description>Valid</description> </item> <item> <term>Tool Offset multi-system specification NC spec [21,6]</term> <description>Valid</description> </item> <item> <term>Multi-insert tool specification NC spec [5,3]</term> <description>Valid</description> </item> <item> <term>Tool compensation 500 sets NC spec [6,6] or Tool offset 200 sets NC spec [21,4] specification</term> <description>Valid</description> </item> </list> </para>  <para> Compatible Chart of this function for different OSP controls: <list type="table"> <listheader> <term>OSP Control</term> <description>Compatible</description> </listheader> <item> <term>P100II</term> <description>Yes</description> </item> <item> <term>P200</term> <description>Yes</description> </item> <item> <term>P300L</term> <description>No</description> </item> <item> <term>P300S/TD Mode</term> <description>No</description> </item> <item> <term>P300S/TL Mode</term> <description>No</description> </item> </list> </para> </remarks>
      <Figure> TOOL DATA - TOOL LIFE MANAGEMENT 2 - A(NO. OF WORK) HOLDER.201 - GAUGE <para> <img src="Lathe.Multi.ToolData.TLM.Work.jpg" /> </para> </Figure>
      <SubSystem> Please see <see href="SubSystemNoteTable.htm">Sub System Note Table</see> for more information if applicable. <para>Valid sub systems for this function (Y = Valid, N = Not valid)</para> <para> <list type="table"> <listheader> <term>NC_RUN </term> <term>NC_RUN_1 </term> <term>NC_RUN_2 </term> <term>NC_RUN_3 </term> <term>NC_PANEL </term> <term>NC_PANEL_1 </term> <term>NC_PANEL_2 </term> <term>NC_PANEL_3 </term> <term>NC_AL </term> <term>NC_AR </term> <term>NC_BL </term> <term>NC_BR </term> <term>NC_CL </term> <term>NC_CR </term> <term>NC_2AL </term> </listheader> <item> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>N</term> </item> </list> </para>  </SubSystem>
    </member>
    <member name="M:Okuma.CLDATAPI.DataAPI.CTools.GetLifeStatus(Okuma.CLDATAPI.Enumerations.MultiEdgesAngleToolHolderEnum,Okuma.CLDATAPI.Enumerations.MultiEdgesAngleToolEnum,System.Int32)">
      <summary> For multi-insert tool specification NC spec [5,3] , it gets the tool life status at the specified tool holder, and tool edge for current sub system. </summary>
      <example> This sample shows how to call the GetLifeStatus() method. <para>	dim enValue as ToolLifeStatusEnum </para> <para>	dim enToolHolder As ToolGaugeStatusEnum </para> <para>	dim enMultiEdgesTool As MultiEdgesAngleToolEnum </para> <para>	dim intEdgeNo As Integer </para> <para>	enValue = objTool.GetLifeStatus(enToolHolder, enMultiEdgesTool, intEdgeNo)	</para> </example>
      <param name="enToolHolder">Tool holder number</param>
      <param name="enMultiEdgesTool">set of multi-edge tools per tool holder.  An 8 edges tool set cannot be used in 12 edges tool set and vice versa.</param>
      <param name="intEdgeNo">Edge number where tool life value is obtained from</param>
      <returns>An Okuma.CLDATAPI.Enumerations.ToolLifeStatusEnum value</returns>
      <exception cref="System.ApplicationException">Thrown when function fails to perform the operation at current NC condition.</exception>
      <exception cref="System.NotSupportedException">Thrown when operation/input parameters are not supported for the current system.</exception>
      <remarks> <para> The following specifications must be met in order to function: <list type="table"> <listheader> <term>Specification</term> <description>Valid/Invalid</description> </listheader> <item> <term>Tool life management specification NC spec [21,3]</term> <description>Valid</description> </item> <item> <term>H1 Turret specification NC spec [2,6]</term> <description>Valid</description> </item> <item> <term>L Tool index specification NC spec [3,4]</term> <description>Valid</description> </item> <item> <term>Tool Offset multi-system specification NC spec [21,6]</term> <description>Valid</description> </item> <item> <term>Multi-insert tool specification NC spec [5,3]</term> <description>Valid</description> </item> <item> <term>Tool compensation 500 sets NC spec [6,6] or Tool offset 200 sets NC spec [21,4] specification</term> <description>Valid</description> </item> </list> </para>  <para> Compatible Chart of this function for different OSP controls: <list type="table"> <listheader> <term>OSP Control</term> <description>Compatible</description> </listheader> <item> <term>P100II</term> <description>Yes</description> </item> <item> <term>P200</term> <description>Yes</description> </item> <item> <term>P300L</term> <description>No</description> </item> <item> <term>P300S/TD Mode</term> <description>No</description> </item> <item> <term>P300S/TL Mode</term> <description>No</description> </item> </list> </para> </remarks>
      <Figure> TOOL DATA - TOOL LIFE MANAGEMENT 2 - A(NO. OF WORK) HOLDER.201 - GAUGE <para> <img src="Lathe.Multi.ToolData.TLM.Work.jpg" /> </para> </Figure>
      <SubSystem> Please see <see href="SubSystemNoteTable.htm">Sub System Note Table</see> for more information if applicable. <para>Valid sub systems for this function (Y = Valid, N = Not valid)</para> <para> <list type="table"> <listheader> <term>NC_RUN </term> <term>NC_RUN_1 </term> <term>NC_RUN_2 </term> <term>NC_RUN_3 </term> <term>NC_PANEL </term> <term>NC_PANEL_1 </term> <term>NC_PANEL_2 </term> <term>NC_PANEL_3 </term> <term>NC_AL </term> <term>NC_AR </term> <term>NC_BL </term> <term>NC_BR </term> <term>NC_CL </term> <term>NC_CR </term> <term>NC_2AL </term> </listheader> <item> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>N</term> </item> </list> </para>  </SubSystem>
    </member>
    <member name="M:Okuma.CLDATAPI.DataAPI.CTools.SetLifeStatus(Okuma.CLDATAPI.Enumerations.MultiEdgesAngleToolHolderEnum,Okuma.CLDATAPI.Enumerations.MultiEdgesAngleToolEnum,System.Int32,Okuma.CLDATAPI.Enumerations.ToolLifeStatusEnum)">
      <summary> For multi-insert tool specification NC spec [5,3] , it sets the tool life status at the specified tool life condition, tool holder, and tool edge for current sub system. </summary>
      <example> This sample shows how to call the SetLifeStatus() method. <para>	dim enValue as ToolLifeStatusEnum </para> <para>	objTool.SetLifeStatus(int_condition, int_holder, int_edges, CInt(txt_edgenumber.Text), enValue)	</para> </example>
      <param name="enToolHolder">Tool holder number</param>
      <param name="enMultiEdgesTool">set of multi-edge tools per tool holder.  An 8 edges tool set cannot be used in 12 edges tool set and vice versa.</param>
      <param name="intEdgeNo">Edge number where tool life value is obtained from</param>
      <param name="enValue">Tool Life status to be set</param>
      <exception cref="System.ApplicationException">Thrown when function fails to perform the operation at current NC condition.</exception>
      <exception cref="System.NotSupportedException">Thrown when operation/input parameters are not supported for the current system.</exception>
      <remarks> <para> The following specifications must be met in order to function: <list type="table"> <listheader> <term>Specification</term> <description>Valid/Invalid</description> </listheader> <item> <term>Tool life management specification NC spec [21,3]</term> <description>Valid</description> </item> <item> <term>H1 Turret specification NC spec [2,6]</term> <description>Valid</description> </item> <item> <term>L Tool index specification NC spec [3,4]</term> <description>Valid</description> </item> <item> <term>Tool Offset multi-system specification NC spec [21,6]</term> <description>Valid</description> </item> <item> <term>Multi-insert tool specification NC spec [5,3]</term> <description>Valid</description> </item> <item> <term>Tool compensation 500 sets NC spec [6,6] or Tool offset 200 sets NC spec [21,4] specification</term> <description>Valid</description> </item> </list> </para>  <para> Compatible Chart of this function for different OSP controls: <list type="table"> <listheader> <term>OSP Control</term> <description>Compatible</description> </listheader> <item> <term>P100II</term> <description>Yes</description> </item> <item> <term>P200</term> <description>Yes</description> </item> <item> <term>P300L</term> <description>No</description> </item> <item> <term>P300S/TD Mode</term> <description>No</description> </item> <item> <term>P300S/TL Mode</term> <description>No</description> </item> </list> </para> </remarks>
      <Figure> TOOL DATA - TOOL LIFE MANAGEMENT 2 - A(NO. OF WORK) HOLDER.201 - GAUGE <para> <img src="Lathe.Multi.ToolData.TLM.Work.jpg" /> </para> </Figure>
      <SubSystem> Please see <see href="SubSystemNoteTable.htm">Sub System Note Table</see> for more information if applicable. <para>Valid sub systems for this function (Y = Valid, N = Not valid)</para> <para> <list type="table"> <listheader> <term>NC_RUN </term> <term>NC_RUN_1 </term> <term>NC_RUN_2 </term> <term>NC_RUN_3 </term> <term>NC_PANEL </term> <term>NC_PANEL_1 </term> <term>NC_PANEL_2 </term> <term>NC_PANEL_3 </term> <term>NC_AL </term> <term>NC_AR </term> <term>NC_BL </term> <term>NC_BR </term> <term>NC_CL </term> <term>NC_CR </term> <term>NC_2AL </term> </listheader> <item> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>N</term> </item> </list> </para>  </SubSystem>
    </member>
    <member name="M:Okuma.CLDATAPI.DataAPI.CTools.GetGroupToolLifeStatus2(System.Int32)">
      <summary> For multi-insert tool specification NC spec [5,3] , it gets the tool life group status at the specified group number for current sub system. </summary>
      <example> This sample shows how to call the GetGroupToolLifeStatus2() method. <para>	dim enValue as GroupToolLifeStatusEnum </para> <para>	enValue = objTool.GetGroupToolLifeStatus2(intGroupNo)	</para> </example>
      <param name="intGroupNo"> <para>A tool group number</para> <para>Group number ranging from 201 to 320 if Multi-Edge Angle Tool specification is 12.</para> <para>Group number ranging from 201 to 280 if Multi-Edge Angle Tool of 12 and 4 specification is not valid.</para> <para>Group number ranging from 201 to 240 if Multi-Edge Angle Tool of 12 is not valid and and Multi-Edge Angle Tool of 4 specification is valid.</para> </param>
      <returns>An Okuma.CLDATAPI.Enumerations.GroupToolLifeStatusEnum value</returns>
      <exception cref="System.ApplicationException">Thrown when function fails to perform the operation at current NC condition.</exception>
      <exception cref="System.NotSupportedException">Thrown when operation/input parameters are not supported for the current system.</exception>
      <remarks> <para> The following specifications must be met in order to function: <list type="table"> <listheader> <term>Specification</term> <description>Valid/Invalid</description> </listheader> <item> <term>Tool life management specification NC spec [21,3]</term> <description>Valid</description> </item> <item> <term>H1 Turret specification NC spec [2,6]</term> <description>Valid</description> </item> <item> <term>L Tool index specification NC spec [3,4]</term> <description>Valid</description> </item> <item> <term>Tool Offset multi-system specification NC spec [21,6]</term> <description>Valid</description> </item> <item> <term>Multi-insert tool specification NC spec [5,3]</term> <description>Valid</description> </item> <item> <term>Tool compensation 500 sets NC spec [6,6] or Tool offset 200 sets NC spec [21,4] specification</term> <description>Valid</description> </item> </list> </para> </remarks>
      <Figure> TOOL DATA - TOOL LIFE MANAGEMENT 2 - GROUP TABLE 2 - LIFE <para> <img src="Lathe.Multi.ToolData.TLM.GroupTable2.jpg" /> </para> </Figure>
      <SubSystem> Please see <see href="SubSystemNoteTable.htm">Sub System Note Table</see> for more information if applicable. <para>Valid sub systems for this function (Y = Valid, N = Not valid)</para> <para> <list type="table"> <listheader> <term>NC_RUN </term> <term>NC_RUN_1 </term> <term>NC_RUN_2 </term> <term>NC_RUN_3 </term> <term>NC_PANEL </term> <term>NC_PANEL_1 </term> <term>NC_PANEL_2 </term> <term>NC_PANEL_3 </term> <term>NC_AL </term> <term>NC_AR </term> <term>NC_BL </term> <term>NC_BR </term> <term>NC_CL </term> <term>NC_CR </term> <term>NC_2AL </term> </listheader> <item> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>N</term> </item> </list> </para> </SubSystem>
      <remarks>  <para> Compatible Chart of this function for different OSP controls: <list type="table"> <listheader> <term>OSP Control</term> <description>Compatible</description> </listheader> <item> <term>P100II</term> <description>Yes</description> </item> <item> <term>P200</term> <description>Yes</description> </item> <item> <term>P300L</term> <description>No</description> </item> <item> <term>P300S/TD Mode</term> <description>No</description> </item> <item> <term>P300S/TL Mode</term> <description>No</description> </item> </list> </para>  </remarks>
    </member>
    <member name="M:Okuma.CLDATAPI.DataAPI.CTools.SetGroupToolLifeStatus2(System.Int32,Okuma.CLDATAPI.Enumerations.GroupToolLifeStatusEnum)">
      <summary> For multi-insert tool specification NC spec [5,3] , it sets the tool life group status at the specified group number for current sub system. </summary>
      <example> This sample shows how to call the SetGroupToolLifeStatus2() method. <para>	dim enValue as GroupToolLifeStatusEnum </para> <para>	objTool.SetGroupToolLifeStatus2(intGroupNo, enValue)	</para> </example>
      <param name="intGroupNo"> <para>A tool group number</para> <para>Group number ranging from 201 to 320 if Multi-Edge Angle Tool specification is 12.</para> <para>Group number ranging from 201 to 280 if Multi-Edge Angle Tool of 12 and 4 specification is not valid.</para> <para>Group number ranging from 201 to 240 if Multi-Edge Angle Tool of 12 is not valid and and Multi-Edge Angle Tool of 4 specification is valid.</para> </param>
      <exception cref="System.ApplicationException">Thrown when function fails to perform the operation at current NC condition.</exception>
      <exception cref="System.NotSupportedException">Thrown when operation/input parameters are not supported for the current system.</exception>
      <remarks> <para> The following specifications must be met in order to function: <list type="table"> <listheader> <term>Specification</term> <description>Valid/Invalid</description> </listheader> <item> <term>Tool life management specification NC spec [21,3]</term> <description>Valid</description> </item> <item> <term>H1 Turret specification NC spec [2,6]</term> <description>Valid</description> </item> <item> <term>L Tool index specification NC spec [3,4]</term> <description>Valid</description> </item> <item> <term>Tool Offset multi-system specification NC spec [21,6]</term> <description>Valid</description> </item> <item> <term>Multi-insert tool specification NC spec [5,3]</term> <description>Valid</description> </item> <item> <term>Tool compensation 500 sets NC spec [6,6] or Tool offset 200 sets NC spec [21,4] specification</term> <description>Valid</description> </item> </list> </para> </remarks>
      <Figure> TOOL DATA - TOOL LIFE MANAGEMENT 2 - GROUP TABLE 2 - LIFE <para> <img src="Lathe.Multi.ToolData.TLM.GroupTable2.jpg" /> </para> </Figure>
      <SubSystem> Please see <see href="SubSystemNoteTable.htm">Sub System Note Table</see> for more information if applicable. <para>Valid sub systems for this function (Y = Valid, N = Not valid)</para> <para> <list type="table"> <listheader> <term>NC_RUN </term> <term>NC_RUN_1 </term> <term>NC_RUN_2 </term> <term>NC_RUN_3 </term> <term>NC_PANEL </term> <term>NC_PANEL_1 </term> <term>NC_PANEL_2 </term> <term>NC_PANEL_3 </term> <term>NC_AL </term> <term>NC_AR </term> <term>NC_BL </term> <term>NC_BR </term> <term>NC_CL </term> <term>NC_CR </term> <term>NC_2AL </term> </listheader> <item> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>N</term> </item> </list> </para>  </SubSystem>
    </member>
    <member name="M:Okuma.CLDATAPI.DataAPI.CTools.GetGroupNo(Okuma.CLDATAPI.Enumerations.MultiEdgesAngleToolHolderEnum,Okuma.CLDATAPI.Enumerations.MultiEdgesAngleToolEnum,System.Int32)">
      <summary> For multi-insert tool specification NC spec [5,3] , it gets the tool group at the specified tool holder, and tool edge for current sub system. </summary>
      <example> This sample shows how to call the GetGroupNo() method. <para>	dim intGroupNo as Integer </para> <para>	dim enMultiEdges as MultiEdgesAngleToolEnum </para> <para>	dim enToolHolder as MultiEdgesAngleToolHolderEnum </para> <para>	dim intEdgeNo as Integer </para> <para>	intGroupNo = objTool.GetGroupNo(enToolHolder, enMultiEdges, intEdgeNo)	</para> </example>
      <param name="enToolHolder">Tool holder number</param>
      <param name="enMultiEdgesTool">set of multi-edge tools per tool holder.  An 8 edges tool set cannot be used in 12 edges tool set and vice versa.</param>
      <param name="intEdgeNo">Edge number where tool group value is obtained from</param>
      <returns>A System.Integer value</returns>
      <exception cref="System.ApplicationException">Thrown when function fails to perform the operation at current NC condition.</exception>
      <exception cref="System.NotSupportedException">Thrown when operation/input parameters are not supported for the current system.</exception>
      <remarks> <para> The following specifications must be met in order to function: <list type="table"> <listheader> <term>Specification</term> <description>Valid/Invalid</description> </listheader> <item> <term>Tool life management specification NC spec [21,3]</term> <description>Valid</description> </item> <item> <term>H1 Turret specification NC spec [2,6]</term> <description>Valid</description> </item> <item> <term>L Tool index specification NC spec [3,4]</term> <description>Valid</description> </item> <item> <term>Tool Offset multi-system specification NC spec [21,6]</term> <description>Valid</description> </item> <item> <term>Multi-insert tool specification NC spec [5,3]</term> <description>Valid</description> </item> <item> <term>Tool compensation 500 sets NC spec [6,6] or Tool offset 200 sets NC spec [21,4] specification</term> <description>Valid</description> </item> </list> </para>  <para> Compatible Chart of this function for different OSP controls: <list type="table"> <listheader> <term>OSP Control</term> <description>Compatible</description> </listheader> <item> <term>P100II</term> <description>Yes</description> </item> <item> <term>P200</term> <description>Yes</description> </item> <item> <term>P300L</term> <description>No</description> </item> <item> <term>P300S/TD Mode</term> <description>No</description> </item> <item> <term>P300S/TL Mode</term> <description>No</description> </item> </list> </para> </remarks>
      <Figure> TOOL DATA - TOOL LIFE MANAGEMENT 2 - A(NO. OF WORK) HOLDER.201 - GRP <para> <img src="Lathe.Multi.ToolData.TLM.Work.jpg" /> </para> </Figure>
      <SubSystem> Please see <see href="SubSystemNoteTable.htm">Sub System Note Table</see> for more information if applicable. <para>Valid sub systems for this function (Y = Valid, N = Not valid)</para> <para> <list type="table"> <listheader> <term>NC_RUN </term> <term>NC_RUN_1 </term> <term>NC_RUN_2 </term> <term>NC_RUN_3 </term> <term>NC_PANEL </term> <term>NC_PANEL_1 </term> <term>NC_PANEL_2 </term> <term>NC_PANEL_3 </term> <term>NC_AL </term> <term>NC_AR </term> <term>NC_BL </term> <term>NC_BR </term> <term>NC_CL </term> <term>NC_CR </term> <term>NC_2AL </term> </listheader> <item> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>N</term> </item> </list> </para>  </SubSystem>
    </member>
    <member name="M:Okuma.CLDATAPI.DataAPI.CTools.SetGroupNo(Okuma.CLDATAPI.Enumerations.MultiEdgesAngleToolHolderEnum,Okuma.CLDATAPI.Enumerations.MultiEdgesAngleToolEnum,System.Int32,System.Int32)">
      <summary> For multi-insert tool specification NC spec [5,3] , it sets the tool group at the specified tool holder, and tool edge for current sub system. </summary>
      <example> This sample shows how to call the SetGroupNo() method. <para>	dim intGroupNo as Integer </para> <para>	dim enMultiEdges as MultiEdgesAngleToolEnum </para> <para>	dim enToolHolder as MultiEdgesAngleToolHolderEnum </para> <para>	dim intEdgeNo as Integer </para> <para>	objTool.SetGroupNo(enToolHolder, enMultiEdges, intEdgeNo, intGroupNo)	</para> </example>
      <param name="enToolHolder">Tool holder number</param>
      <param name="enMultiEdgesTool">set of multi-edge tools per tool holder.  An 8 edges tool set cannot be used in 12 edges tool set and vice versa.</param>
      <param name="intEdgeNo">Edge number where tool group value is obtained from</param>
      <param name="intGroupNo">Tool group number to be set</param>
      <exception cref="System.ApplicationException">Thrown when function fails to perform the operation at current NC condition.</exception>
      <exception cref="System.NotSupportedException">Thrown when operation/input parameters are not supported for the current system.</exception>
      <remarks> <para> The following specifications must be met in order to function: <list type="table"> <listheader> <term>Specification</term> <description>Valid/Invalid</description> </listheader> <item> <term>Tool life management specification NC spec [21,3]</term> <description>Valid</description> </item> <item> <term>H1 Turret specification NC spec [2,6]</term> <description>Valid</description> </item> <item> <term>L Tool index specification NC spec [3,4]</term> <description>Valid</description> </item> <item> <term>Tool Offset multi-system specification NC spec [21,6]</term> <description>Valid</description> </item> <item> <term>Multi-insert tool specification NC spec [5,3]</term> <description>Valid</description> </item> <item> <term>Tool compensation 500 sets NC spec [6,6] or Tool offset 200 sets NC spec [21,4] specification</term> <description>Valid</description> </item> </list> </para>  <para> Compatible Chart of this function for different OSP controls: <list type="table"> <listheader> <term>OSP Control</term> <description>Compatible</description> </listheader> <item> <term>P100II</term> <description>Yes</description> </item> <item> <term>P200</term> <description>Yes</description> </item> <item> <term>P300L</term> <description>No</description> </item> <item> <term>P300S/TD Mode</term> <description>No</description> </item> <item> <term>P300S/TL Mode</term> <description>No</description> </item> </list> </para> </remarks>
      <Figure> TOOL DATA - TOOL LIFE MANAGEMENT 2 - A(NO. OF WORK) HOLDER.201 - GRP <para> <img src="Lathe.Multi.ToolData.TLM.Work.jpg" /> </para> </Figure>
      <SubSystem> Please see <see href="SubSystemNoteTable.htm">Sub System Note Table</see> for more information if applicable. <para>Valid sub systems for this function (Y = Valid, N = Not valid)</para> <para> <list type="table"> <listheader> <term>NC_RUN </term> <term>NC_RUN_1 </term> <term>NC_RUN_2 </term> <term>NC_RUN_3 </term> <term>NC_PANEL </term> <term>NC_PANEL_1 </term> <term>NC_PANEL_2 </term> <term>NC_PANEL_3 </term> <term>NC_AL </term> <term>NC_AR </term> <term>NC_BL </term> <term>NC_BR </term> <term>NC_CL </term> <term>NC_CR </term> <term>NC_2AL </term> </listheader> <item> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>N</term> </item> </list> </para>  </SubSystem>
    </member>
    <member name="M:Okuma.CLDATAPI.DataAPI.CTools.GetReferenceToolOffset1(Okuma.CLDATAPI.Enumerations.MultiEdgesAngleToolHolderEnum,Okuma.CLDATAPI.Enumerations.MultiEdgesAngleToolEnum,System.Int32)">
      <summary> For multi-insert tool specification NC spec [5,3] , it gets reference tool offset 1 at the specified tool holder, and tool edge for current sub system. </summary>
      <example> This sample shows how to call the GetReferenceToolOffset1() method. <para>	dim intReferenceOffset as Integer </para> <para>	dim enMultiEdges as MultiEdgesAngleToolEnum </para> <para>	dim enToolHolder as MultiEdgesAngleToolHolderEnum </para> <para>	dim intEdgeNo as Integer </para> <para>	intReferenceOffset = objTool.GetReferenceToolOffset1(enToolHolder, enMultiEdges, intEdgeNo)	</para> </example>
      <param name="enToolHolder">Tool holder number</param>
      <param name="enMultiEdgesTool">set of multi-edge tools per tool holder.  An 8 edges tool set cannot be used in 12 edges tool set and vice versa.</param>
      <param name="intEdgeNo">Edge number where tool group value is obtained from</param>
      <returns>A System.Integer value</returns>
      <exception cref="System.ApplicationException">Thrown when function fails to perform the operation at current NC condition.</exception>
      <exception cref="System.NotSupportedException">Thrown when operation/input parameters are not supported for the current system.</exception>
      <remarks> <para> The following specifications must be met in order to function: <list type="table"> <listheader> <term>Specification</term> <description>Valid/Invalid</description> </listheader> <item> <term>Tool life management specification NC spec [21,3]</term> <description>Valid</description> </item> <item> <term>H1 Turret specification NC spec [2,6]</term> <description>Valid</description> </item> <item> <term>L Tool index specification NC spec [3,4]</term> <description>Valid</description> </item> <item> <term>Tool Offset multi-system specification NC spec [21,6]</term> <description>Valid</description> </item> <item> <term>Multi-insert tool specification NC spec [5,3]</term> <description>Valid</description> </item> <item> <term>Tool compensation 500 sets NC spec [6,6] or Tool offset 200 sets NC spec [21,4] specification</term> <description>Valid</description> </item> </list> </para> </remarks>
      <Figure> TOOL DATA - TOOL LIFE MANAGEMENT 2 - A(NO. OF WORK) HOLDER.201 - OG1 <para> <img src="Lathe.Multi.ToolData.TLM.Work.jpg" /> </para> </Figure>
      <SubSystem> Please see <see href="SubSystemNoteTable.htm">Sub System Note Table</see> for more information if applicable. <para>Valid sub systems for this function (Y = Valid, N = Not valid)</para> <para> <list type="table"> <listheader> <term>NC_RUN </term> <term>NC_RUN_1 </term> <term>NC_RUN_2 </term> <term>NC_RUN_3 </term> <term>NC_PANEL </term> <term>NC_PANEL_1 </term> <term>NC_PANEL_2 </term> <term>NC_PANEL_3 </term> <term>NC_AL </term> <term>NC_AR </term> <term>NC_BL </term> <term>NC_BR </term> <term>NC_CL </term> <term>NC_CR </term> <term>NC_2AL </term> </listheader> <item> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>N</term> </item> </list> </para> </SubSystem>
      <remarks>  <para> Compatible Chart of this function for different OSP controls: <list type="table"> <listheader> <term>OSP Control</term> <description>Compatible</description> </listheader> <item> <term>P100II</term> <description>Yes</description> </item> <item> <term>P200</term> <description>Yes</description> </item> <item> <term>P300L</term> <description>No</description> </item> <item> <term>P300S/TD Mode</term> <description>No</description> </item> <item> <term>P300S/TL Mode</term> <description>No</description> </item> </list> </para>  </remarks>
    </member>
    <member name="M:Okuma.CLDATAPI.DataAPI.CTools.SetReferenceToolOffset1(Okuma.CLDATAPI.Enumerations.MultiEdgesAngleToolHolderEnum,Okuma.CLDATAPI.Enumerations.MultiEdgesAngleToolEnum,System.Int32,System.Int32)">
      <summary> For multi-insert tool specification NC spec [5,3] , it sets reference tool offset 1 at the specified tool holder, and tool edge for current sub system. </summary>
      <example> This sample shows how to call the SetReferenceToolOffset1() method. <para>	dim intReferenceOffset as Integer </para> <para>	dim enMultiEdges as MultiEdgesAngleToolEnum </para> <para>	dim enToolHolder as MultiEdgesAngleToolHolderEnum </para> <para>	dim intEdgeNo as Integer </para> <para>	objTool.SetReferenceToolOffset1(enToolHolder, enMultiEdges, intEdgeNo, intReferenceOffset)	</para> </example>
      <param name="enToolHolder">Tool holder number</param>
      <param name="enMultiEdgesTool">set of multi-edge tools per tool holder.  An 8 edges tool set cannot be used in 12 edges tool set and vice versa.</param>
      <param name="intEdgeNo">Edge number where tool group value is obtained from</param>
      <param name="intReferenceOffset">Reference Tool Offset value to be set</param>
      <exception cref="System.ApplicationException">Thrown when function fails to perform the operation at current NC condition.</exception>
      <exception cref="System.NotSupportedException">Thrown when operation/input parameters are not supported for the current system.</exception>
      <remarks> <para> The following specifications must be met in order to function: <list type="table"> <listheader> <term>Specification</term> <description>Valid/Invalid</description> </listheader> <item> <term>Tool life management specification NC spec [21,3]</term> <description>Valid</description> </item> <item> <term>H1 Turret specification NC spec [2,6]</term> <description>Valid</description> </item> <item> <term>L Tool index specification NC spec [3,4]</term> <description>Valid</description> </item> <item> <term>Tool Offset multi-system specification NC spec [21,6]</term> <description>Valid</description> </item> <item> <term>Multi-insert tool specification NC spec [5,3]</term> <description>Valid</description> </item> <item> <term>Tool compensation 500 sets NC spec [6,6] or Tool offset 200 sets NC spec [21,4] specification</term> <description>Valid</description> </item> </list> </para> </remarks>
      <Figure> TOOL DATA - TOOL LIFE MANAGEMENT 2 - A(NO. OF WORK) HOLDER.201 - OG1 <para> <img src="Lathe.Multi.ToolData.TLM.Work.jpg" /> </para> </Figure>
      <SubSystem> Please see <see href="SubSystemNoteTable.htm">Sub System Note Table</see> for more information if applicable. <para>Valid sub systems for this function (Y = Valid, N = Not valid)</para> <para> <list type="table"> <listheader> <term>NC_RUN </term> <term>NC_RUN_1 </term> <term>NC_RUN_2 </term> <term>NC_RUN_3 </term> <term>NC_PANEL </term> <term>NC_PANEL_1 </term> <term>NC_PANEL_2 </term> <term>NC_PANEL_3 </term> <term>NC_AL </term> <term>NC_AR </term> <term>NC_BL </term> <term>NC_BR </term> <term>NC_CL </term> <term>NC_CR </term> <term>NC_2AL </term> </listheader> <item> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>N</term> </item> </list> </para>  </SubSystem>
    </member>
    <member name="M:Okuma.CLDATAPI.DataAPI.CTools.GetReferenceToolOffset2(Okuma.CLDATAPI.Enumerations.MultiEdgesAngleToolHolderEnum,Okuma.CLDATAPI.Enumerations.MultiEdgesAngleToolEnum,System.Int32)">
      <summary> For multi-insert tool specification NC spec [5,3] , it gets reference tool offset 2 at the specified tool holder, and tool edge for current sub system. </summary>
      <example> This sample shows how to call the GetReferenceToolOffset2() method. <para>	dim intReferenceOffset as Integer </para> <para>	dim enMultiEdges as MultiEdgesAngleToolEnum </para> <para>	dim enToolHolder as MultiEdgesAngleToolHolderEnum </para> <para>	dim intEdgeNo as Integer </para> <para>	intReferenceOffset = objTool.GetReferenceToolOffset2(enToolHolder, enMultiEdges, intEdgeNo)	</para> </example>
      <param name="enToolHolder">Tool holder number</param>
      <param name="enMultiEdgesTool">set of multi-edge tools per tool holder.  An 8 edges tool set cannot be used in 12 edges tool set and vice versa.</param>
      <param name="intEdgeNo">Edge number where tool group value is obtained from</param>
      <returns>A System.Integer value</returns>
      <exception cref="System.ApplicationException">Thrown when function fails to perform the operation at current NC condition.</exception>
      <exception cref="System.NotSupportedException">Thrown when operation/input parameters are not supported for the current system.</exception>
      <remarks> <para> The following specifications must be met in order to function: <list type="table"> <listheader> <term>Specification</term> <description>Valid/Invalid</description> </listheader> <item> <term>Tool life management specification NC spec [21,3]</term> <description>Valid</description> </item> <item> <term>H1 Turret specification NC spec [2,6]</term> <description>Valid</description> </item> <item> <term>L Tool index specification NC spec [3,4]</term> <description>Valid</description> </item> <item> <term>Tool Offset multi-system specification NC spec [21,6]</term> <description>Valid</description> </item> <item> <term>Multi-insert tool specification NC spec [5,3]</term> <description>Valid</description> </item> <item> <term>Tool compensation 500 sets NC spec [6,6] or Tool offset 200 sets NC spec [21,4] specification</term> <description>Valid</description> </item> </list> </para> </remarks>
      <Figure> TOOL DATA - TOOL LIFE MANAGEMENT 2 - A(NO. OF WORK) HOLDER.201 - OG2 <para> <img src="Lathe.Multi.ToolData.TLM.Work.jpg" /> </para> </Figure>
      <SubSystem> Please see <see href="SubSystemNoteTable.htm">Sub System Note Table</see> for more information if applicable. <para>Valid sub systems for this function (Y = Valid, N = Not valid)</para> <para> <list type="table"> <listheader> <term>NC_RUN </term> <term>NC_RUN_1 </term> <term>NC_RUN_2 </term> <term>NC_RUN_3 </term> <term>NC_PANEL </term> <term>NC_PANEL_1 </term> <term>NC_PANEL_2 </term> <term>NC_PANEL_3 </term> <term>NC_AL </term> <term>NC_AR </term> <term>NC_BL </term> <term>NC_BR </term> <term>NC_CL </term> <term>NC_CR </term> <term>NC_2AL </term> </listheader> <item> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>N</term> </item> </list> </para> </SubSystem>
      <remarks>  <para> Compatible Chart of this function for different OSP controls: <list type="table"> <listheader> <term>OSP Control</term> <description>Compatible</description> </listheader> <item> <term>P100II</term> <description>Yes</description> </item> <item> <term>P200</term> <description>Yes</description> </item> <item> <term>P300L</term> <description>No</description> </item> <item> <term>P300S/TD Mode</term> <description>No</description> </item> <item> <term>P300S/TL Mode</term> <description>No</description> </item> </list> </para>  </remarks>
    </member>
    <member name="M:Okuma.CLDATAPI.DataAPI.CTools.SetReferenceToolOffset2(Okuma.CLDATAPI.Enumerations.MultiEdgesAngleToolHolderEnum,Okuma.CLDATAPI.Enumerations.MultiEdgesAngleToolEnum,System.Int32,System.Int32)">
      <summary> For multi-insert tool specification NC spec [5,3] , it sets reference tool offset 2 at the specified tool holder, and tool edge for current sub system. </summary>
      <example> This sample shows how to call the SetReferenceToolOffset2() method. <para>	dim intReferenceOffset as Integer </para> <para>	dim enMultiEdges as MultiEdgesAngleToolEnum </para> <para>	dim enToolHolder as MultiEdgesAngleToolHolderEnum </para> <para>	dim intEdgeNo as Integer </para> <para>	objTool.SetReferenceToolOffset2(enToolHolder, enMultiEdges, intEdgeNo, intReferenceOffset)	</para> </example>
      <param name="enToolHolder">Tool holder number</param>
      <param name="enMultiEdgesTool">set of multi-edge tools per tool holder.  An 8 edges tool set cannot be used in 12 edges tool set and vice versa.</param>
      <param name="intEdgeNo">Edge number where tool group value is obtained from</param>
      <param name="intReferenceOffset">Reference Tool Offset 1 value to be set</param>
      <exception cref="System.ApplicationException">Thrown when function fails to perform the operation at current NC condition.</exception>
      <exception cref="System.NotSupportedException">Thrown when operation/input parameters are not supported for the current system.</exception>
      <remarks> <para> The following specifications must be met in order to function: <list type="table"> <listheader> <term>Specification</term> <description>Valid/Invalid</description> </listheader> <item> <term>Tool life management specification NC spec [21,3]</term> <description>Valid</description> </item> <item> <term>H1 Turret specification NC spec [2,6]</term> <description>Valid</description> </item> <item> <term>L Tool index specification NC spec [3,4]</term> <description>Valid</description> </item> <item> <term>Tool Offset multi-system specification NC spec [21,6]</term> <description>Valid</description> </item> <item> <term>Multi-insert tool specification NC spec [5,3]</term> <description>Valid</description> </item> <item> <term>Tool compensation 500 sets NC spec [6,6] or Tool offset 200 sets NC spec [21,4] specification</term> <description>Valid</description> </item> </list> </para> </remarks>
      <Figure> TOOL DATA - TOOL LIFE MANAGEMENT 2 - A(NO. OF WORK) HOLDER.201 - OG2 <para> <img src="Lathe.Multi.ToolData.TLM.Work.jpg" /> </para> </Figure>
      <SubSystem> Please see <see href="SubSystemNoteTable.htm">Sub System Note Table</see> for more information if applicable. <para>Valid sub systems for this function (Y = Valid, N = Not valid)</para> <para> <list type="table"> <listheader> <term>NC_RUN </term> <term>NC_RUN_1 </term> <term>NC_RUN_2 </term> <term>NC_RUN_3 </term> <term>NC_PANEL </term> <term>NC_PANEL_1 </term> <term>NC_PANEL_2 </term> <term>NC_PANEL_3 </term> <term>NC_AL </term> <term>NC_AR </term> <term>NC_BL </term> <term>NC_BR </term> <term>NC_CL </term> <term>NC_CR </term> <term>NC_2AL </term> </listheader> <item> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>N</term> </item> </list> </para>  </SubSystem>
    </member>
    <member name="M:Okuma.CLDATAPI.DataAPI.CTools.GetReferenceToolOffset3(Okuma.CLDATAPI.Enumerations.MultiEdgesAngleToolHolderEnum,Okuma.CLDATAPI.Enumerations.MultiEdgesAngleToolEnum,System.Int32)">
      <summary> For multi-insert tool specification NC spec [5,3] , it gets reference tool offset 3 at the specified tool holder, and tool edge for current sub system. </summary>
      <example> This sample shows how to call the GetReferenceToolOffset3() method. <para>	dim intReferenceOffset as Integer </para> <para>	dim enMultiEdges as MultiEdgesAngleToolEnum </para> <para>	dim enToolHolder as MultiEdgesAngleToolHolderEnum </para> <para>	dim intEdgeNo as Integer </para> <para>	intReferenceOffset = objTool.GetReferenceToolOffset3(enToolHolder, enMultiEdges, intEdgeNo)	</para> </example>
      <param name="enToolHolder">Tool holder number</param>
      <param name="enMultiEdgesTool">set of multi-edge tools per tool holder.  An 8 edges tool set cannot be used in 12 edges tool set and vice versa.</param>
      <param name="intEdgeNo">Edge number where tool group value is obtained from</param>
      <returns>A System.Integer value</returns>
      <exception cref="System.ApplicationException">Thrown when function fails to perform the operation at current NC condition.</exception>
      <exception cref="System.NotSupportedException">Thrown when operation/input parameters are not supported for the current system.</exception>
      <remarks> <para> The following specifications must be met in order to function: <list type="table"> <listheader> <term>Specification</term> <description>Valid/Invalid</description> </listheader> <item> <term>Tool life management specification NC spec [21,3]</term> <description>Valid</description> </item> <item> <term>H1 Turret specification NC spec [2,6]</term> <description>Valid</description> </item> <item> <term>L Tool index specification NC spec [3,4]</term> <description>Valid</description> </item> <item> <term>Tool Offset multi-system specification NC spec [21,6]</term> <description>Valid</description> </item> <item> <term>Multi-insert tool specification NC spec [5,3]</term> <description>Valid</description> </item> <item> <term>Tool compensation 500 sets NC spec [6,6] or Tool offset 200 sets NC spec [21,4] specification</term> <description>Valid</description> </item> </list> </para> </remarks>
      <Figure> TOOL DATA - TOOL LIFE MANAGEMENT 2 - A(NO. OF WORK) HOLDER.201 - OG3 <para> <img src="Lathe.Multi.ToolData.TLM.Work.jpg" /> </para> </Figure>
      <SubSystem> Please see <see href="SubSystemNoteTable.htm">Sub System Note Table</see> for more information if applicable. <para>Valid sub systems for this function (Y = Valid, N = Not valid)</para> <para> <list type="table"> <listheader> <term>NC_RUN </term> <term>NC_RUN_1 </term> <term>NC_RUN_2 </term> <term>NC_RUN_3 </term> <term>NC_PANEL </term> <term>NC_PANEL_1 </term> <term>NC_PANEL_2 </term> <term>NC_PANEL_3 </term> <term>NC_AL </term> <term>NC_AR </term> <term>NC_BL </term> <term>NC_BR </term> <term>NC_CL </term> <term>NC_CR </term> <term>NC_2AL </term> </listheader> <item> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>N</term> </item> </list> </para> </SubSystem>
      <remarks>  <para> Compatible Chart of this function for different OSP controls: <list type="table"> <listheader> <term>OSP Control</term> <description>Compatible</description> </listheader> <item> <term>P100II</term> <description>Yes</description> </item> <item> <term>P200</term> <description>Yes</description> </item> <item> <term>P300L</term> <description>No</description> </item> <item> <term>P300S/TD Mode</term> <description>No</description> </item> <item> <term>P300S/TL Mode</term> <description>No</description> </item> </list> </para>  </remarks>
    </member>
    <member name="M:Okuma.CLDATAPI.DataAPI.CTools.SetReferenceToolOffset3(Okuma.CLDATAPI.Enumerations.MultiEdgesAngleToolHolderEnum,Okuma.CLDATAPI.Enumerations.MultiEdgesAngleToolEnum,System.Int32,System.Int32)">
      <summary> For multi-insert tool specification NC spec [5,3] , it sets reference tool offset 3 at the specified tool holder, and tool edge for current sub system. </summary>
      <example> This sample shows how to call the SetReferenceToolOffset3() method. <para>	dim intReferenceOffset as Integer </para> <para>	dim enMultiEdges as MultiEdgesAngleToolEnum </para> <para>	dim enToolHolder as MultiEdgesAngleToolHolderEnum </para> <para>	dim intEdgeNo as Integer </para> <para>	objTool.SetReferenceToolOffset3(enToolHolder, enMultiEdges, intEdgeNo, intReferenceOffset)	</para> </example>
      <param name="enToolHolder">Tool holder number</param>
      <param name="enMultiEdgesTool">set of multi-edge tools per tool holder.  An 8 edges tool set cannot be used in 12 edges tool set and vice versa.</param>
      <param name="intEdgeNo">Edge number where tool group value is obtained from</param>
      <param name="intReferenceOffset">Reference Tool Offset 1 value to be set</param>
      <exception cref="System.ApplicationException">Thrown when function fails to perform the operation at current NC condition.</exception>
      <exception cref="System.NotSupportedException">Thrown when operation/input parameters are not supported for the current system.</exception>
      <remarks> <para> The following specifications must be met in order to function: <list type="table"> <listheader> <term>Specification</term> <description>Valid/Invalid</description> </listheader> <item> <term>Tool life management specification NC spec [21,3]</term> <description>Valid</description> </item> <item> <term>H1 Turret specification NC spec [2,6]</term> <description>Valid</description> </item> <item> <term>L Tool index specification NC spec [3,4]</term> <description>Valid</description> </item> <item> <term>Tool Offset multi-system specification NC spec [21,6]</term> <description>Valid</description> </item> <item> <term>Multi-insert tool specification NC spec [5,3]</term> <description>Valid</description> </item> <item> <term>Tool compensation 500 sets NC spec [6,6] or Tool offset 200 sets NC spec [21,4] specification</term> <description>Valid</description> </item> </list> </para> </remarks>
      <Figure> TOOL DATA - TOOL LIFE MANAGEMENT 2 - A(NO. OF WORK) HOLDER.201 - OG3 <para> <img src="Lathe.Multi.ToolData.TLM.Work.jpg" /> </para> </Figure>
      <SubSystem> Please see <see href="SubSystemNoteTable.htm">Sub System Note Table</see> for more information if applicable. <para>Valid sub systems for this function (Y = Valid, N = Not valid)</para> <para> <list type="table"> <listheader> <term>NC_RUN </term> <term>NC_RUN_1 </term> <term>NC_RUN_2 </term> <term>NC_RUN_3 </term> <term>NC_PANEL </term> <term>NC_PANEL_1 </term> <term>NC_PANEL_2 </term> <term>NC_PANEL_3 </term> <term>NC_AL </term> <term>NC_AR </term> <term>NC_BL </term> <term>NC_BR </term> <term>NC_CL </term> <term>NC_CR </term> <term>NC_2AL </term> </listheader> <item> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>N</term> </item> </list> </para>  </SubSystem>
    </member>
    <member name="M:Okuma.CLDATAPI.DataAPI.CTools.GetToolNumberInGroup2(System.Int32)">
      <summary> For multi-insert tool specification NC spec [5,3] , it gets current tool number of each group for current sub system. <para>For OSP-P300S: Multi-edges tool registered with ATC table can only be supported in TD mode.</para> </summary>
      <example> This sample shows how to call the GetToolNumberInGroup2() method. <para> intToolNo = objTool.GetToolNumberInGroup2(intGroupNo)	</para> </example>
      <param name="intGroupNo"> <para>A tool group number</para> <para>Group number ranging from 201 to 320 if Multi-Edge Angle Tool specification is 12.</para> <para>Group number ranging from 201 to 280 if Multi-Edge Angle Tool of 12 and 4 specification is not valid.</para> <para>Group number ranging from 201 to 240 if Multi-Edge Angle Tool of 12 is not valid and and Multi-Edge Angle Tool of 4 specification is valid.</para> </param>
      <returns>A System.Int32 value</returns>
      <exception cref="System.ApplicationException">Thrown when function fails to perform the operation at current NC condition.</exception>
      <exception cref="System.NotSupportedException">Thrown when operation/input parameters are not supported for the current system.</exception>
      <remarks> <para> The following specifications must be met in order to function: <list type="table"> <listheader> <term>Specification</term> <description>Valid/Invalid</description> </listheader> <item> <term>Tool life management specification NC spec [21,3]</term> <description>Valid</description> </item> <item> <term>H1 Turret specification NC spec [2,6]</term> <description>Valid</description> </item> <item> <term>L Tool index specification NC spec [3,4]</term> <description>Valid</description> </item> <item> <term>Tool Offset multi-system specification NC spec [21,6]</term> <description>Valid</description> </item> <item> <term>Multi-insert tool specification NC spec [5,3]</term> <description>Valid</description> </item> <item> <term>Tool compensation 500 sets NC spec [6,6] or Tool offset 200 sets NC spec [21,4] specification</term> <description>Valid</description> </item> </list> </para> <para> Compatible Chart of this function for different OSP controls: <list type="table"> <listheader> <term>OSP Control</term> <description>Compatible</description> </listheader> <item> <term>P100II</term> <description>Yes</description> </item> <item> <term>P200</term> <description>Yes</description> </item> <item> <term>P300L</term> <description> <para> No </para> </description> </item> <item> <term>P300S/TD Mode</term> <description> <para> No </para> </description> </item> <item> <term>P300S/TL Mode</term> <description> <para> No </para> </description> </item> </list> </para> </remarks>
      <Figure> TOOL DATA - TOOL LIFE MANAGEMENT 2 - GROUP TABLE 2 - SET-TOOL <para> <img src="Lathe.Multi.ToolData.TLM.GroupTable2.jpg" /> </para> </Figure>
      <SubSystem> Please see <see href="SubSystemNoteTable.htm">Sub System Note Table</see> for more information if applicable. <para>Valid sub systems for this function (Y = Valid, N = Not valid)</para> <para> <list type="table"> <listheader> <term>NC_RUN </term> <term>NC_RUN_1 </term> <term>NC_RUN_2 </term> <term>NC_RUN_3 </term> <term>NC_PANEL </term> <term>NC_PANEL_1 </term> <term>NC_PANEL_2 </term> <term>NC_PANEL_3 </term> <term>NC_AL </term> <term>NC_AR </term> <term>NC_BL </term> <term>NC_BR </term> <term>NC_CL </term> <term>NC_CR </term> <term>NC_2AL </term> </listheader> <item> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>N</term> </item> </list> </para>  </SubSystem>
    </member>
    <member name="M:Okuma.CLDATAPI.DataAPI.CTools.SetToolNumberInGroup2(System.Int32,System.Int32)">
      <summary> For multi-insert tool specification NC spec [5,3] , it sets current tool number of each group for current sub system. </summary>
      <example> This sample shows how to call the SetToolNumberInGroup2() method. <para> intToolNo = objTool.SetToolNumberInGroup2(intGroupNo, intToolNo)	</para> </example>
      <param name="intGroupNo"> <para>A tool group number</para> <para>Group number ranging from 201 to 320 if Multi-Edge Angle Tool specification is 12.</para> <para>Group number ranging from 201 to 280 if Multi-Edge Angle Tool of 12 and 4 specification is not valid.</para> <para>Group number ranging from 201 to 240 if Multi-Edge Angle Tool of 12 is not valid and and Multi-Edge Angle Tool of 4 specification is valid.</para> </param>
      <param name="intToolNo">A tool number becomes active tool number in this tool group number.  Tool number must be exist in this group.</param>
      <exception cref="System.ApplicationException">Thrown when function fails to perform the operation at current NC condition.</exception>
      <exception cref="System.NotSupportedException">Thrown when operation/input parameters are not supported for the current system.</exception>
      <remarks> <para> The following specifications must be met in order to function: <list type="table"> <listheader> <term>Specification</term> <description>Valid/Invalid</description> </listheader> <item> <term>Tool life management specification NC spec [21,3]</term> <description>Valid</description> </item> <item> <term>H1 Turret specification NC spec [2,6]</term> <description>Valid</description> </item> <item> <term>L Tool index specification NC spec [3,4]</term> <description>Valid</description> </item> <item> <term>Tool Offset multi-system specification NC spec [21,6]</term> <description>Valid</description> </item> <item> <term>Multi-insert tool specification NC spec [5,3]</term> <description>Valid</description> </item> <item> <term>Tool compensation 500 sets NC spec [6,6] or Tool offset 200 sets NC spec [21,4] specification</term> <description>Valid</description> </item> </list> </para> <para> Compatible Chart of this function for different OSP controls: <list type="table"> <listheader> <term>OSP Control</term> <description>Compatible</description> </listheader> <item> <term>P100II</term> <description>Yes</description> </item> <item> <term>P200</term> <description>Yes</description> </item> <item> <term>P300L</term> <description> <para> No </para> </description> </item> <item> <term>P300S/TD Mode</term> <description> <para> No </para> </description> </item> <item> <term>P300S/TL Mode</term> <description> <para> No </para> </description> </item> </list> </para> </remarks>
      <Figure> TOOL DATA - TOOL LIFE MANAGEMENT 2 - GROUP TABLE 2 - SET-TOOL <para> <img src="Lathe.Multi.ToolData.TLM.GroupTable2.jpg" /> </para> </Figure>
      <SubSystem> Please see <see href="SubSystemNoteTable.htm">Sub System Note Table</see> for more information if applicable. <para>Valid sub systems for this function (Y = Valid, N = Not valid)</para> <para> <list type="table"> <listheader> <term>NC_RUN </term> <term>NC_RUN_1 </term> <term>NC_RUN_2 </term> <term>NC_RUN_3 </term> <term>NC_PANEL </term> <term>NC_PANEL_1 </term> <term>NC_PANEL_2 </term> <term>NC_PANEL_3 </term> <term>NC_AL </term> <term>NC_AR </term> <term>NC_BL </term> <term>NC_BR </term> <term>NC_CL </term> <term>NC_CR </term> <term>NC_2AL </term> </listheader> <item> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>N</term> </item> </list> </para>  </SubSystem>
    </member>
    <member name="M:Okuma.CLDATAPI.DataAPI.CTools.GetCurrentEdge(System.Int32)">
      <summary> For multi-insert tool specification NC spec [5,3] , it gets current selected edge number given tool group number for current sub system. </summary>
      <example> This sample shows how to call the GetCurrentEdge() method. <para> Dim intEdgeNo As Integer	</para> <para> intEdgeNo = objTool.GetCurrentEdge(intGroupNo)	</para> </example>
      <param name="intGroupNo"> <para>A tool group number</para> <para>Group number ranging from 201 to 320 if Multi-Edge Angle Tool specification is 12.</para> <para>Group number ranging from 201 to 280 if Multi-Edge Angle Tool of 12 and 4 specification is not valid.</para> <para>Group number ranging from 201 to 240 if Multi-Edge Angle Tool of 12 is not valid and and Multi-Edge Angle Tool of 4 specification is valid.</para> </param>
      <returns>A System.Int32 value represents thhe current selected edge number of the specified group number.  It returns 0 if no current selected edge number for the given group number.</returns>
      <exception cref="System.ApplicationException">Thrown when function fails to perform the operation at current NC condition.</exception>
      <exception cref="System.NotSupportedException">Thrown when operation/input parameters are not supported for the current system.</exception>
      <remarks> <para> The following specifications must be met in order to function: <list type="table"> <listheader> <term>Specification</term> <description>Valid/Invalid</description> </listheader> <item> <term>Tool life management specification NC spec [21,3]</term> <description>Valid</description> </item> <item> <term>H1 Turret specification NC spec [2,6]</term> <description>Valid</description> </item> <item> <term>L Tool index specification NC spec [3,4]</term> <description>Valid</description> </item> <item> <term>Tool Offset multi-system specification NC spec [21,6]</term> <description>Valid</description> </item> <item> <term>Multi-insert tool specification NC spec [5,3]</term> <description>Valid</description> </item> <item> <term>Tool compensation 500 sets NC spec [6,6] or Tool offset 200 sets NC spec [21,4] specification</term> <description>Valid</description> </item> </list> </para> </remarks>
      <Figure> TOOL DATA - TOOL LIFE MANAGEMENT 2 - GROUP TABLE 2 - EDGE <para> <img src="Lathe.Multi.ToolData.TLM.GroupTable2.jpg" /> </para> </Figure>
      <SubSystem> Please see <see href="SubSystemNoteTable.htm">Sub System Note Table</see> for more information if applicable. <para>Valid sub systems for this function (Y = Valid, N = Not valid)</para> <para> <list type="table"> <listheader> <term>NC_RUN </term> <term>NC_RUN_1 </term> <term>NC_RUN_2 </term> <term>NC_RUN_3 </term> <term>NC_PANEL </term> <term>NC_PANEL_1 </term> <term>NC_PANEL_2 </term> <term>NC_PANEL_3 </term> <term>NC_AL </term> <term>NC_AR </term> <term>NC_BL </term> <term>NC_BR </term> <term>NC_CL </term> <term>NC_CR </term> <term>NC_2AL </term> </listheader> <item> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>N</term> </item> </list> </para> </SubSystem>
      <remarks>  <para> Compatible Chart of this function for different OSP controls: <list type="table"> <listheader> <term>OSP Control</term> <description>Compatible</description> </listheader> <item> <term>P100II</term> <description>Yes</description> </item> <item> <term>P200</term> <description>Yes</description> </item> <item> <term>P300L</term> <description>No</description> </item> <item> <term>P300S/TD Mode</term> <description>No</description> </item> <item> <term>P300S/TL Mode</term> <description>No</description> </item> </list> </para>  </remarks>
    </member>
    <member name="M:Okuma.CLDATAPI.DataAPI.CTools.SetCurrentEdge(System.Int32,System.Int32)">
      <summary> For multi-insert tool specification NC spec [5,3] , it sets current selected edge number of each tool group for current sub system. </summary>
      <example> This sample shows how to call the SetCurrentEdge() method. <para> Dim intEdgeNo As Integer	</para> <para>  objTool.SetCurrentEdge(intGroupNo, intEdgeNo)	</para> </example>
      <param name="intGroupNo"> <para>A tool group number</para> <para>Group number ranging from 201 to 320 if Multi-Edge Angle Tool specification is 12.</para> <para>Group number ranging from 201 to 280 if Multi-Edge Angle Tool of 12 and 4 specification is not valid.</para> <para>Group number ranging from 201 to 240 if Multi-Edge Angle Tool of 12 is not valid and and Multi-Edge Angle Tool of 4 specification is valid.</para> </param>
      <param name="intEdgeNo"> Edge number to be set at the specified tool group number. Edge number must be in the entry tool list to be valid. For example: if entry tool number has 3 tools which are 201-3, 201-7, and 202-5 then valid edge number for setting in this tool group is 3, 7 if current tool of this group is 201, and 5 if current tool of this group is 202. </param>
      <exception cref="System.ApplicationException">Thrown when function fails to perform the operation at current NC condition.</exception>
      <exception cref="System.NotSupportedException">Thrown when operation/input parameters are not supported for the current system.</exception>
      <remarks> <para> The following specifications must be met in order to function: <list type="table"> <listheader> <term>Specification</term> <description>Valid/Invalid</description> </listheader> <item> <term>Tool life management specification NC spec [21,3]</term> <description>Valid</description> </item> <item> <term>H1 Turret specification NC spec [2,6]</term> <description>Valid</description> </item> <item> <term>L Tool index specification NC spec [3,4]</term> <description>Valid</description> </item> <item> <term>Tool Offset multi-system specification NC spec [21,6]</term> <description>Valid</description> </item> <item> <term>Multi-insert tool specification NC spec [5,3]</term> <description>Valid</description> </item> <item> <term>Tool compensation 500 sets NC spec [6,6] or Tool offset 200 sets NC spec [21,4] specification</term> <description>Valid</description> </item> </list> </para> </remarks>
      <Figure> TOOL DATA - TOOL LIFE MANAGEMENT 2 - GROUP TABLE 2 - EDGE <para> <img src="Lathe.Multi.ToolData.TLM.GroupTable2.jpg" /> </para> </Figure>
      <SubSystem> Please see <see href="SubSystemNoteTable.htm">Sub System Note Table</see> for more information if applicable. <para>Valid sub systems for this function (Y = Valid, N = Not valid)</para> <para> <list type="table"> <listheader> <term>NC_RUN </term> <term>NC_RUN_1 </term> <term>NC_RUN_2 </term> <term>NC_RUN_3 </term> <term>NC_PANEL </term> <term>NC_PANEL_1 </term> <term>NC_PANEL_2 </term> <term>NC_PANEL_3 </term> <term>NC_AL </term> <term>NC_AR </term> <term>NC_BL </term> <term>NC_BR </term> <term>NC_CL </term> <term>NC_CR </term> <term>NC_2AL </term> </listheader> <item> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>N</term> </item> </list> </para>  </SubSystem>
    </member>
    <member name="M:Okuma.CLDATAPI.DataAPI.CTools.GetToolOffset(System.Int32,System.Int32,Okuma.CLDATAPI.Enumerations.ToolOffsetAxisIndexEnum,Okuma.CLDATAPI.Enumerations.CuttingPositionEnum)">
      <param name="intFromOffsetIndex">Starting offset index</param>
      <param name="intToOffsetIndex">Ending offset index</param>
      <param name="enAxisIndex">Axis index</param>
      <param name="enCuttingPosition">Cutting position</param>
      <returns>An array of System.Double value</returns>
      <DataUnit> Default unit is in mm.  Other unit can be set by calling SetDataUnit method </DataUnit>
      <exception cref="System.ApplicationException">Thrown when function fails to perform the operation at current NC condition.</exception>
      <exception cref="System.NotSupportedException">Thrown when operation/input parameters are not supported for the current system.</exception>
      <remarks>  <para> The following specifications for cutting position PrincipalAxis1_BaseA must be met in order to function: <list type="table"> <listheader> <term>Specification</term> <description>Valid/Invalid</description> </listheader> <item> <term>Tool Offset multi-system specification NC spec [21,6]</term> <description>Valid</description> </item> </list> </para>  <para> The following specifications for cutting position PrincipalAxis1_BaseB must be met in order to function: <list type="table"> <listheader> <term>Specification</term> <description>Valid/Invalid</description> </listheader> <item> <term>Tool Offset multi-system specification NC spec [21,6]</term> <description>Valid</description> </item> <item> <term>L Tool index specification NC spec [3,4]</term> <description>Valid</description> </item> </list> </para>  <para> The following specifications for cutting position PrincipalAxis1_VerticalA must be met in order to function: <list type="table"> <listheader> <term>Specification</term> <description>Valid/Invalid</description> </listheader> <item> <term>Tool Offset multi-system specification NC spec [21,6]</term> <description>Valid</description> </item> </list> </para>  <para> The following specifications for cutting position PrincipalAxis1_VerticalB must be met in order to function: <list type="table"> <listheader> <term>Specification</term> <description>Valid/Invalid</description> </listheader> <item> <term>Tool Offset multi-system specification NC spec [21,6]</term> <description>Valid</description> </item> <item> <term>L Tool index specification NC spec [3,4]</term> <description>Valid</description> </item> </list> </para>  <para> The following specifications for cutting position PrincipalAxis2_BaseA must be met in order to function: <list type="table"> <listheader> <term>Specification</term> <description>Valid/Invalid</description> </listheader> <item> <term>Tool Offset multi-system specification NC spec [21,6]</term> <description>Valid</description> </item> <item> <term>Sub spindle specification NC spec [4,1]</term> <description>Valid</description> </item> </list> </para>  <para> The following specifications for cutting position PrincipalAxis2_BaseB must be met in order to function: <list type="table"> <listheader> <term>Specification</term> <description>Valid/Invalid</description> </listheader> <item> <term>Tool Offset multi-system specification NC spec [21,6]</term> <description>Valid</description> </item> <item> <term>L Tool index specification NC spec [3,4]</term> <description>Valid</description> </item> <item> <term>Sub spindle specification NC spec [4,1]</term> <description>Valid</description> </item> </list> </para>  <para> The following specifications for cutting position PrincipalAxis2_VerticalA must be met in order to function: <list type="table"> <listheader> <term>Specification</term> <description>Valid/Invalid</description> </listheader> <item> <term>Tool Offset multi-system specification NC spec [21,6]</term> <description>Valid</description> </item> <item> <term>Sub spindle specification NC spec [4,1]</term> <description>Valid</description> </item> </list> </para>  <para> The following specifications for cutting position PrincipalAxis2_VerticalB must be met in order to function: <list type="table"> <listheader> <term>Specification</term> <description>Valid/Invalid</description> </listheader> <item> <term>Tool Offset multi-system specification NC spec [21,6]</term> <description>Valid</description> </item> <item> <term>L Tool index specification NC spec [3,4]</term> <description>Valid</description> </item> <item> <term>Sub spindle specification NC spec [4,1]</term> <description>Valid</description> </item> </list> </para> </remarks>
      <Figure> TOOL DATA - TOOL OFFSET/NOSE R COMPENSATION - BASE A <para>Tool offset/Nose R compensation table at base A cutting position.  Cutting position at different base can be changed by toggling Cutting Position menu. <img src="Lathe.Multi.Tooldata.ToolOffsetNoseR.jpg" /> </para> </Figure>
      <SubSystem> Please see <see href="SubSystemNoteTable.htm">Sub System Note Table</see> for more information if applicable. <para>Valid sub systems for this function (Y = Valid, N = Not valid)</para> <para> <list type="table"> <listheader> <term>NC_RUN </term> <term>NC_RUN_1 </term> <term>NC_RUN_2 </term> <term>NC_RUN_3 </term> <term>NC_PANEL </term> <term>NC_PANEL_1 </term> <term>NC_PANEL_2 </term> <term>NC_PANEL_3 </term> <term>NC_AL </term> <term>NC_AR </term> <term>NC_BL </term> <term>NC_BR </term> <term>NC_CL </term> <term>NC_CR </term> <term>NC_2AL </term> </listheader> <item> <term>Y (*5)</term> <term>Y     </term> <term>N     </term> <term>N     </term> <term>Y (*5)</term> <term>Y     </term> <term>N     </term> <term>N     </term> <term>Y     </term> <term>Y     </term> <term>N     </term> <term>N     </term> <term>N     </term> <term>N     </term> <term>N     </term> </item> </list> </para> </SubSystem>
      <remarks>  <para> Compatible Chart of this function for different OSP controls: <list type="table"> <listheader> <term>OSP Control</term> <description>Compatible</description> </listheader> <item> <term>P100II</term> <description>Yes</description> </item> <item> <term>P200</term> <description>Yes</description> </item> <item> <term>P300L</term> <description>No</description> </item> <item> <term>P300S/TD Mode</term> <description>No</description> </item> <item> <term>P300S/TL Mode</term> <description>Yes</description> </item> </list> </para>  </remarks>
    </member>
    <member name="M:Okuma.CLDATAPI.DataAPI.CTools.GetToolOffset(System.Int32,Okuma.CLDATAPI.Enumerations.ToolOffsetAxisIndexEnum,Okuma.CLDATAPI.Enumerations.CuttingPositionEnum)">
      <summary>For tool offset multi-system specification NC spec [21,6], it gets tool offset at the specified offset index, axis index, and cutting position index for current sub system. </summary>
      <example> This sample shows how to call the GetToolOffset() method. <para>	vNosePattern = objTool.GetToolOffset(CInt(Me.TulNoseRCompensationPatternFrom.Text), CInt(Me.TulNoseRCompensationPatternTo.Text), Me.tul1ComboToolOffset.SelectedValue)	</para> </example>
      <param name="intOffsetIndex">Offset index</param>
      <param name="enAxisIndex">Axis index</param>
      <param name="enCuttingPosition">Cutting position</param>
      <returns>A System.Double value</returns>
      <DataUnit> Default unit is in mm.  Other unit can be set by calling SetDataUnit method </DataUnit>
      <exception cref="System.ApplicationException">Thrown when function fails to perform the operation at current NC condition.</exception>
      <exception cref="System.NotSupportedException">Thrown when operation/input parameters are not supported for the current system.</exception>
      <remarks>  <para> The following specifications for cutting position PrincipalAxis1_BaseA must be met in order to function: <list type="table"> <listheader> <term>Specification</term> <description>Valid/Invalid</description> </listheader> <item> <term>Tool Offset multi-system specification NC spec [21,6]</term> <description>Valid</description> </item> </list> </para>  <para> The following specifications for cutting position PrincipalAxis1_BaseB must be met in order to function: <list type="table"> <listheader> <term>Specification</term> <description>Valid/Invalid</description> </listheader> <item> <term>Tool Offset multi-system specification NC spec [21,6]</term> <description>Valid</description> </item> <item> <term>L Tool index specification NC spec [3,4]</term> <description>Valid</description> </item> </list> </para>  <para> The following specifications for cutting position PrincipalAxis1_VerticalA must be met in order to function: <list type="table"> <listheader> <term>Specification</term> <description>Valid/Invalid</description> </listheader> <item> <term>Tool Offset multi-system specification NC spec [21,6]</term> <description>Valid</description> </item> </list> </para>  <para> The following specifications for cutting position PrincipalAxis1_VerticalB must be met in order to function: <list type="table"> <listheader> <term>Specification</term> <description>Valid/Invalid</description> </listheader> <item> <term>Tool Offset multi-system specification NC spec [21,6]</term> <description>Valid</description> </item> <item> <term>L Tool index specification NC spec [3,4]</term> <description>Valid</description> </item> </list> </para>  <para> The following specifications for cutting position PrincipalAxis2_BaseA must be met in order to function: <list type="table"> <listheader> <term>Specification</term> <description>Valid/Invalid</description> </listheader> <item> <term>Tool Offset multi-system specification NC spec [21,6]</term> <description>Valid</description> </item> <item> <term>Sub spindle specification NC spec [4,1]</term> <description>Valid</description> </item> </list> </para>  <para> The following specifications for cutting position PrincipalAxis2_BaseB must be met in order to function: <list type="table"> <listheader> <term>Specification</term> <description>Valid/Invalid</description> </listheader> <item> <term>Tool Offset multi-system specification NC spec [21,6]</term> <description>Valid</description> </item> <item> <term>L Tool index specification NC spec [3,4]</term> <description>Valid</description> </item> <item> <term>Sub spindle specification NC spec [4,1]</term> <description>Valid</description> </item> </list> </para>  <para> The following specifications for cutting position PrincipalAxis2_VerticalA must be met in order to function: <list type="table"> <listheader> <term>Specification</term> <description>Valid/Invalid</description> </listheader> <item> <term>Tool Offset multi-system specification NC spec [21,6]</term> <description>Valid</description> </item> <item> <term>Sub spindle specification NC spec [4,1]</term> <description>Valid</description> </item> </list> </para>  <para> The following specifications for cutting position PrincipalAxis2_VerticalB must be met in order to function: <list type="table"> <listheader> <term>Specification</term> <description>Valid/Invalid</description> </listheader> <item> <term>Tool Offset multi-system specification NC spec [21,6]</term> <description>Valid</description> </item> <item> <term>L Tool index specification NC spec [3,4]</term> <description>Valid</description> </item> <item> <term>Sub spindle specification NC spec [4,1]</term> <description>Valid</description> </item> </list> </para> </remarks>
      <Figure> TOOL DATA - TOOL OFFSET/NOSE R COMPENSATION - BASE A <para>Tool offset/Nose R compensation table at base A cutting position.  Cutting position at different base can be changed by toggling Cutting Position menu. <img src="Lathe.Multi.Tooldata.ToolOffsetNoseR.jpg" /> </para> </Figure>
      <SubSystem> Please see <see href="SubSystemNoteTable.htm">Sub System Note Table</see> for more information if applicable. <para>Valid sub systems for this function (Y = Valid, N = Not valid)</para> <para> <list type="table"> <listheader> <term>NC_RUN </term> <term>NC_RUN_1 </term> <term>NC_RUN_2 </term> <term>NC_RUN_3 </term> <term>NC_PANEL </term> <term>NC_PANEL_1 </term> <term>NC_PANEL_2 </term> <term>NC_PANEL_3 </term> <term>NC_AL </term> <term>NC_AR </term> <term>NC_BL </term> <term>NC_BR </term> <term>NC_CL </term> <term>NC_CR </term> <term>NC_2AL </term> </listheader> <item> <term>Y (*5)</term> <term>Y     </term> <term>N     </term> <term>N     </term> <term>Y (*5)</term> <term>Y     </term> <term>N     </term> <term>N     </term> <term>Y     </term> <term>Y     </term> <term>N     </term> <term>N     </term> <term>N     </term> <term>N     </term> <term>N     </term> </item> </list> </para> </SubSystem>
      <remarks>  <para> Compatible Chart of this function for different OSP controls: <list type="table"> <listheader> <term>OSP Control</term> <description>Compatible</description> </listheader> <item> <term>P100II</term> <description>Yes</description> </item> <item> <term>P200</term> <description>Yes</description> </item> <item> <term>P300L</term> <description>No</description> </item> <item> <term>P300S/TD Mode</term> <description>No</description> </item> <item> <term>P300S/TL Mode</term> <description>Yes</description> </item> </list> </para>  </remarks>
    </member>
    <member name="M:Okuma.CLDATAPI.DataAPI.CTools.SetToolOffset(System.Int32,Okuma.CLDATAPI.Enumerations.ToolOffsetAxisIndexEnum,Okuma.CLDATAPI.Enumerations.CuttingPositionEnum,System.Double)">
      <summary>For tool offset multi-system specification NC spec [21,6], it sets tool offset value at the specified offset index, axis index, and cutting position index for current sub system. </summary>
      <example> This sample shows how to call the SetToolOffset() method. <para>	objTool.SetToolOffset(Convert.ToInt32(txt_CTools2_fromindx.Text), cbo_Ctools2_offindex.SelectedItem, cbo_Ctools2_Cutpos.SelectedItem, Convert.ToDouble(Txt_dblValue.Text))	</para> </example>
      <param name="intOffsetIndex">Offset Index value</param>
      <param name="enAxisIndex">Axis index</param>
      <param name="enCuttingPosition">Cutting position</param>
      <param name="dblValue">Offset value</param>
      <returns>None</returns>
      <DataUnit> Default unit is in mm.  Other unit can be set by calling SetDataUnit method </DataUnit>
      <exception cref="System.ApplicationException">Thrown when function fails to perform the operation at current NC condition.</exception>
      <exception cref="System.NotSupportedException">Thrown when operation/input parameters are not supported for the current system.</exception>
      <remarks>  <para> The following specifications for cutting position PrincipalAxis1_BaseA must be met in order to function: <list type="table"> <listheader> <term>Specification</term> <description>Valid/Invalid</description> </listheader> <item> <term>Tool Offset multi-system specification NC spec [21,6]</term> <description>Valid</description> </item> </list> </para>  <para> The following specifications for cutting position PrincipalAxis1_BaseB must be met in order to function: <list type="table"> <listheader> <term>Specification</term> <description>Valid/Invalid</description> </listheader> <item> <term>Tool Offset multi-system specification NC spec [21,6]</term> <description>Valid</description> </item> <item> <term>L Tool index specification NC spec [3,4]</term> <description>Valid</description> </item> </list> </para>  <para> The following specifications for cutting position PrincipalAxis1_VerticalA must be met in order to function: <list type="table"> <listheader> <term>Specification</term> <description>Valid/Invalid</description> </listheader> <item> <term>Tool Offset multi-system specification NC spec [21,6]</term> <description>Valid</description> </item> </list> </para>  <para> The following specifications for cutting position PrincipalAxis1_VerticalB must be met in order to function: <list type="table"> <listheader> <term>Specification</term> <description>Valid/Invalid</description> </listheader> <item> <term>Tool Offset multi-system specification NC spec [21,6]</term> <description>Valid</description> </item> <item> <term>L Tool index specification NC spec [3,4]</term> <description>Valid</description> </item> </list> </para>  <para> The following specifications for cutting position PrincipalAxis2_BaseA must be met in order to function: <list type="table"> <listheader> <term>Specification</term> <description>Valid/Invalid</description> </listheader> <item> <term>Tool Offset multi-system specification NC spec [21,6]</term> <description>Valid</description> </item> <item> <term>Sub spindle specification NC spec [4,1]</term> <description>Valid</description> </item> </list> </para>  <para> The following specifications for cutting position PrincipalAxis2_BaseB must be met in order to function: <list type="table"> <listheader> <term>Specification</term> <description>Valid/Invalid</description> </listheader> <item> <term>Tool Offset multi-system specification NC spec [21,6]</term> <description>Valid</description> </item> <item> <term>L Tool index specification NC spec [3,4]</term> <description>Valid</description> </item> <item> <term>Sub spindle specification NC spec [4,1]</term> <description>Valid</description> </item> </list> </para>  <para> The following specifications for cutting position PrincipalAxis2_VerticalA must be met in order to function: <list type="table"> <listheader> <term>Specification</term> <description>Valid/Invalid</description> </listheader> <item> <term>Tool Offset multi-system specification NC spec [21,6]</term> <description>Valid</description> </item> <item> <term>Sub spindle specification NC spec [4,1]</term> <description>Valid</description> </item> </list> </para>  <para> The following specifications for cutting position PrincipalAxis2_VerticalB must be met in order to function: <list type="table"> <listheader> <term>Specification</term> <description>Valid/Invalid</description> </listheader> <item> <term>Tool Offset multi-system specification NC spec [21,6]</term> <description>Valid</description> </item> <item> <term>L Tool index specification NC spec [3,4]</term> <description>Valid</description> </item> <item> <term>Sub spindle specification NC spec [4,1]</term> <description>Valid</description> </item> </list> </para> </remarks>
      <Figure> TOOL DATA - TOOL OFFSET/NOSE R COMPENSATION - BASE A <para>Tool offset/Nose R compensation table at base A cutting position.  Cutting position at different base can be changed by toggling Cutting Position menu. <img src="Lathe.Multi.Tooldata.ToolOffsetNoseR.jpg" /> </para> </Figure>
      <SubSystem> Please see <see href="SubSystemNoteTable.htm">Sub System Note Table</see> for more information if applicable. <para>Valid sub systems for this function (Y = Valid, N = Not valid)</para> <para> <list type="table"> <listheader> <term>NC_RUN </term> <term>NC_RUN_1 </term> <term>NC_RUN_2 </term> <term>NC_RUN_3 </term> <term>NC_PANEL </term> <term>NC_PANEL_1 </term> <term>NC_PANEL_2 </term> <term>NC_PANEL_3 </term> <term>NC_AL </term> <term>NC_AR </term> <term>NC_BL </term> <term>NC_BR </term> <term>NC_CL </term> <term>NC_CR </term> <term>NC_2AL </term> </listheader> <item> <term>Y (*5)</term> <term>Y     </term> <term>N     </term> <term>N     </term> <term>Y (*5)</term> <term>Y     </term> <term>N     </term> <term>N     </term> <term>Y     </term> <term>Y     </term> <term>N     </term> <term>N     </term> <term>N     </term> <term>N     </term> <term>N     </term> </item> </list> </para> </SubSystem>
      <remarks>  <para> Compatible Chart of this function for different OSP controls: <list type="table"> <listheader> <term>OSP Control</term> <description>Compatible</description> </listheader> <item> <term>P100II</term> <description>Yes</description> </item> <item> <term>P200</term> <description>Yes</description> </item> <item> <term>P300L</term> <description>No</description> </item> <item> <term>P300S/TD Mode</term> <description>No</description> </item> <item> <term>P300S/TL Mode</term> <description>Yes</description> </item> </list> </para>  </remarks>
    </member>
    <member name="M:Okuma.CLDATAPI.DataAPI.CTools.AddToolOffset(System.Int32,Okuma.CLDATAPI.Enumerations.ToolOffsetAxisIndexEnum,Okuma.CLDATAPI.Enumerations.CuttingPositionEnum,System.Double)">
      <summary> For tool offset multi-system specification NC spec [21,6], It sets the tool offset value by adding the input value to the existing data at the specified offset index, axis index, and cutting position for current sub system. </summary>
      <example> This sample shows how to call the AddToolOffset() method. <para>	objTool.AddToolOffset(Convert.ToInt32(txt_CTools2_fromindx.Text), cbo_Ctools2_offindex.SelectedItem, cbo_Ctools2_Cutpos.SelectedItem, Convert.ToDouble(Txt_dblValue.Text))	</para> </example>
      <returns>None</returns>
      <DataUnit> Default unit is in mm.  Other unit can be set by calling SetDataUnit method </DataUnit>
      <param name="intOffsetIndex">Offset Index value</param>
      <param name="enAxisIndex">Axis index</param>
      <param name="enCuttingPosition">Cutting position</param>
      <param name="dblValue">Offset value to be added to the existing data</param>
      <exception cref="System.ApplicationException">Thrown when function fails to perform the operation at current NC condition.</exception>
      <exception cref="System.NotSupportedException">Thrown when operation/input parameters are not supported for the current system.</exception>
      <remarks>  <para> The following specifications for cutting position PrincipalAxis1_BaseA must be met in order to function: <list type="table"> <listheader> <term>Specification</term> <description>Valid/Invalid</description> </listheader> <item> <term>Tool Offset multi-system specification NC spec [21,6]</term> <description>Valid</description> </item> </list> </para>  <para> The following specifications for cutting position PrincipalAxis1_BaseB must be met in order to function: <list type="table"> <listheader> <term>Specification</term> <description>Valid/Invalid</description> </listheader> <item> <term>Tool Offset multi-system specification NC spec [21,6]</term> <description>Valid</description> </item> <item> <term>L Tool index specification NC spec [3,4]</term> <description>Valid</description> </item> </list> </para>  <para> The following specifications for cutting position PrincipalAxis1_VerticalA must be met in order to function: <list type="table"> <listheader> <term>Specification</term> <description>Valid/Invalid</description> </listheader> <item> <term>Tool Offset multi-system specification NC spec [21,6]</term> <description>Valid</description> </item> </list> </para>  <para> The following specifications for cutting position PrincipalAxis1_VerticalB must be met in order to function: <list type="table"> <listheader> <term>Specification</term> <description>Valid/Invalid</description> </listheader> <item> <term>Tool Offset multi-system specification NC spec [21,6]</term> <description>Valid</description> </item> <item> <term>L Tool index specification NC spec [3,4]</term> <description>Valid</description> </item> </list> </para>  <para> The following specifications for cutting position PrincipalAxis2_BaseA must be met in order to function: <list type="table"> <listheader> <term>Specification</term> <description>Valid/Invalid</description> </listheader> <item> <term>Tool Offset multi-system specification NC spec [21,6]</term> <description>Valid</description> </item> <item> <term>Sub spindle specification NC spec [4,1]</term> <description>Valid</description> </item> </list> </para>  <para> The following specifications for cutting position PrincipalAxis2_BaseB must be met in order to function: <list type="table"> <listheader> <term>Specification</term> <description>Valid/Invalid</description> </listheader> <item> <term>Tool Offset multi-system specification NC spec [21,6]</term> <description>Valid</description> </item> <item> <term>L Tool index specification NC spec [3,4]</term> <description>Valid</description> </item> <item> <term>Sub spindle specification NC spec [4,1]</term> <description>Valid</description> </item> </list> </para>  <para> The following specifications for cutting position PrincipalAxis2_VerticalA must be met in order to function: <list type="table"> <listheader> <term>Specification</term> <description>Valid/Invalid</description> </listheader> <item> <term>Tool Offset multi-system specification NC spec [21,6]</term> <description>Valid</description> </item> <item> <term>Sub spindle specification NC spec [4,1]</term> <description>Valid</description> </item> </list> </para>  <para> The following specifications for cutting position PrincipalAxis2_VerticalB must be met in order to function: <list type="table"> <listheader> <term>Specification</term> <description>Valid/Invalid</description> </listheader> <item> <term>Tool Offset multi-system specification NC spec [21,6]</term> <description>Valid</description> </item> <item> <term>L Tool index specification NC spec [3,4]</term> <description>Valid</description> </item> <item> <term>Sub spindle specification NC spec [4,1]</term> <description>Valid</description> </item> </list> </para> </remarks>
      <Figure> TOOL DATA - TOOL OFFSET/NOSE R COMPENSATION - BASE A <para>Tool offset/Nose R compensation table at base A cutting position.  Cutting position at different base can be changed by toggling Cutting Position menu. <img src="Lathe.Multi.Tooldata.ToolOffsetNoseR.jpg" /> </para> </Figure>
      <SubSystem> Please see <see href="SubSystemNoteTable.htm">Sub System Note Table</see> for more information if applicable. <para>Valid sub systems for this function (Y = Valid, N = Not valid)</para> <para> <list type="table"> <listheader> <term>NC_RUN </term> <term>NC_RUN_1 </term> <term>NC_RUN_2 </term> <term>NC_RUN_3 </term> <term>NC_PANEL </term> <term>NC_PANEL_1 </term> <term>NC_PANEL_2 </term> <term>NC_PANEL_3 </term> <term>NC_AL </term> <term>NC_AR </term> <term>NC_BL </term> <term>NC_BR </term> <term>NC_CL </term> <term>NC_CR </term> <term>NC_2AL </term> </listheader> <item> <term>Y (*5)</term> <term>Y     </term> <term>N     </term> <term>N     </term> <term>Y (*5)</term> <term>Y     </term> <term>N     </term> <term>N     </term> <term>Y     </term> <term>Y     </term> <term>N     </term> <term>N     </term> <term>N     </term> <term>N     </term> <term>N     </term> </item> </list> </para> </SubSystem>
      <remarks>  <para> Compatible Chart of this function for different OSP controls: <list type="table"> <listheader> <term>OSP Control</term> <description>Compatible</description> </listheader> <item> <term>P100II</term> <description>Yes</description> </item> <item> <term>P200</term> <description>Yes</description> </item> <item> <term>P300L</term> <description>No</description> </item> <item> <term>P300S/TD Mode</term> <description>No</description> </item> <item> <term>P300S/TL Mode</term> <description>Yes</description> </item> </list> </para>  </remarks>
    </member>
    <member name="M:Okuma.CLDATAPI.DataAPI.CTools.CalToolOffset(System.Int32,Okuma.CLDATAPI.Enumerations.ToolOffsetAxisIndexEnum,Okuma.CLDATAPI.Enumerations.CuttingPositionEnum,System.Double)">
      <summary> For tool offset multi-system specification NC spec [21,6], determines tool offset value based on the calculation made for the input data and actual position at the specified offset index, axis index, and cutting position index for current sub system. </summary>
      <example> This sample shows how to call the SetToolOffset() method. <para>	objTool.SetToolOffset(Convert.ToInt32(txt_CTools2_fromindx.Text), cbo_Ctools2_offindex.SelectedItem, cbo_Ctools2_Cutpos.SelectedItem, Convert.ToDouble(Txt_dblValue.Text))	</para> </example>
      <param name="intOffsetIndex">Offset Index value</param>
      <param name="enAxisIndex">Axis index</param>
      <param name="enCuttingPosition">Cutting position</param>
      <param name="dblValue">Input value to be calculated from</param>
      <returns>None</returns>
      <DataUnit> Default unit is in mm.  Other unit can be set by calling SetDataUnit method </DataUnit>
      <exception cref="System.ApplicationException">Thrown when function fails to perform the operation at current NC condition.</exception>
      <exception cref="System.NotSupportedException">Thrown when operation/input parameters are not supported for the current system.</exception>
      <remarks>  <para> The following specifications for cutting position PrincipalAxis1_BaseA must be met in order to function: <list type="table"> <listheader> <term>Specification</term> <description>Valid/Invalid</description> </listheader> <item> <term>Tool Offset multi-system specification NC spec [21,6]</term> <description>Valid</description> </item> </list> </para>  <para> The following specifications for cutting position PrincipalAxis1_BaseB must be met in order to function: <list type="table"> <listheader> <term>Specification</term> <description>Valid/Invalid</description> </listheader> <item> <term>Tool Offset multi-system specification NC spec [21,6]</term> <description>Valid</description> </item> <item> <term>L Tool index specification NC spec [3,4]</term> <description>Valid</description> </item> </list> </para>  <para> The following specifications for cutting position PrincipalAxis1_VerticalA must be met in order to function: <list type="table"> <listheader> <term>Specification</term> <description>Valid/Invalid</description> </listheader> <item> <term>Tool Offset multi-system specification NC spec [21,6]</term> <description>Valid</description> </item> </list> </para>  <para> The following specifications for cutting position PrincipalAxis1_VerticalB must be met in order to function: <list type="table"> <listheader> <term>Specification</term> <description>Valid/Invalid</description> </listheader> <item> <term>Tool Offset multi-system specification NC spec [21,6]</term> <description>Valid</description> </item> <item> <term>L Tool index specification NC spec [3,4]</term> <description>Valid</description> </item> </list> </para>  <para> The following specifications for cutting position PrincipalAxis2_BaseA must be met in order to function: <list type="table"> <listheader> <term>Specification</term> <description>Valid/Invalid</description> </listheader> <item> <term>Tool Offset multi-system specification NC spec [21,6]</term> <description>Valid</description> </item> <item> <term>Sub spindle specification NC spec [4,1]</term> <description>Valid</description> </item> </list> </para>  <para> The following specifications for cutting position PrincipalAxis2_BaseB must be met in order to function: <list type="table"> <listheader> <term>Specification</term> <description>Valid/Invalid</description> </listheader> <item> <term>Tool Offset multi-system specification NC spec [21,6]</term> <description>Valid</description> </item> <item> <term>L Tool index specification NC spec [3,4]</term> <description>Valid</description> </item> <item> <term>Sub spindle specification NC spec [4,1]</term> <description>Valid</description> </item> </list> </para>  <para> The following specifications for cutting position PrincipalAxis2_VerticalA must be met in order to function: <list type="table"> <listheader> <term>Specification</term> <description>Valid/Invalid</description> </listheader> <item> <term>Tool Offset multi-system specification NC spec [21,6]</term> <description>Valid</description> </item> <item> <term>Sub spindle specification NC spec [4,1]</term> <description>Valid</description> </item> </list> </para>  <para> The following specifications for cutting position PrincipalAxis2_VerticalB must be met in order to function: <list type="table"> <listheader> <term>Specification</term> <description>Valid/Invalid</description> </listheader> <item> <term>Tool Offset multi-system specification NC spec [21,6]</term> <description>Valid</description> </item> <item> <term>L Tool index specification NC spec [3,4]</term> <description>Valid</description> </item> <item> <term>Sub spindle specification NC spec [4,1]</term> <description>Valid</description> </item> </list> </para>  <para> Compatible Chart of this function for different OSP controls: <list type="table"> <listheader> <term>OSP Control</term> <description>Compatible</description> </listheader> <item> <term>P100II</term> <description>Yes</description> </item> <item> <term>P200</term> <description>Yes</description> </item> <item> <term>P300L</term> <description>No</description> </item> <item> <term>P300S/TD Mode</term> <description>No</description> </item> <item> <term>P300S/TL Mode</term> <description>Yes</description> </item> </list> </para> </remarks>
      <Figure> TOOL DATA - TOOL OFFSET/NOSE R COMPENSATION - BASE A <para>Tool offset/Nose R compensation table at base A cutting position.  Cutting position at different base can be changed by toggling Cutting Position menu. <img src="Lathe.Multi.Tooldata.ToolOffsetNoseR.jpg" /> </para> </Figure>
      <SubSystem> Please see <see href="SubSystemNoteTable.htm">Sub System Note Table</see> for more information if applicable. <para>Valid sub systems for this function (Y = Valid, N = Not valid)</para> <para> <list type="table"> <listheader> <term>NC_RUN </term> <term>NC_RUN_1 </term> <term>NC_RUN_2 </term> <term>NC_RUN_3 </term> <term>NC_PANEL </term> <term>NC_PANEL_1 </term> <term>NC_PANEL_2 </term> <term>NC_PANEL_3 </term> <term>NC_AL </term> <term>NC_AR </term> <term>NC_BL </term> <term>NC_BR </term> <term>NC_CL </term> <term>NC_CR </term> <term>NC_2AL </term> </listheader> <item> <term>Y (*5)</term> <term>Y     </term> <term>N     </term> <term>N     </term> <term>Y (*5)</term> <term>Y     </term> <term>N     </term> <term>N     </term> <term>Y     </term> <term>Y     </term> <term>N     </term> <term>N     </term> <term>N     </term> <term>N     </term> <term>N     </term> </item> </list> </para>  </SubSystem>
    </member>
    <member name="M:Okuma.CLDATAPI.DataAPI.CTools.GetNoseRCompensation(System.Int32,System.Int32,Okuma.CLDATAPI.Enumerations.NoseRCompensationAxisIndexEnum,Okuma.CLDATAPI.Enumerations.CuttingPositionEnum)">
      <summary>For tool offset multi-system specification NC spec [21,6], it gets nose radius compensation at the specified offset indexes, axis index, and cutting position index for current sub system. </summary>
      <example> This sample shows how to call the GetNoseRCompensation() method. <para>	nose_arr = objTool.GetNoseRCompensation(Convert.ToInt32(txt_CTools2_fromindx.Text), Convert.ToInt32(txt_CTools2_toindx.Text), cbo_Ctools2_offindex.SelectedItem, cbo_Ctools2_Cutpos.SelectedItem)	</para> </example>
      <param name="intFromOffsetIndex">Starting offset index</param>
      <param name="intToOffsetIndex">Ending offset index value</param>
      <param name="enAxisIndex">Axis index</param>
      <param name="enCuttingPosition">Cutting position</param>
      <returns>An array of System.Double value</returns>
      <DataUnit> Default unit is in mm.  Other unit can be set by calling SetDataUnit method </DataUnit>
      <exception cref="System.ApplicationException">Thrown when function fails to perform the operation at current NC condition.</exception>
      <exception cref="System.NotSupportedException">Thrown when operation/input parameters are not supported for the current system.</exception>
      <remarks>  <para> The following specifications for cutting position PrincipalAxis1_BaseA must be met in order to function: <list type="table"> <listheader> <term>Specification</term> <description>Valid/Invalid</description> </listheader> <item> <term>Tool Offset multi-system specification NC spec [21,6]</term> <description>Valid</description> </item> </list> </para>  <para> The following specifications for cutting position PrincipalAxis1_BaseB must be met in order to function: <list type="table"> <listheader> <term>Specification</term> <description>Valid/Invalid</description> </listheader> <item> <term>Tool Offset multi-system specification NC spec [21,6]</term> <description>Valid</description> </item> <item> <term>L Tool index specification NC spec [3,4]</term> <description>Valid</description> </item> </list> </para>  <para> The following specifications for cutting position PrincipalAxis1_VerticalA must be met in order to function: <list type="table"> <listheader> <term>Specification</term> <description>Valid/Invalid</description> </listheader> <item> <term>Tool Offset multi-system specification NC spec [21,6]</term> <description>Valid</description> </item> </list> </para>  <para> The following specifications for cutting position PrincipalAxis1_VerticalB must be met in order to function: <list type="table"> <listheader> <term>Specification</term> <description>Valid/Invalid</description> </listheader> <item> <term>Tool Offset multi-system specification NC spec [21,6]</term> <description>Valid</description> </item> <item> <term>L Tool index specification NC spec [3,4]</term> <description>Valid</description> </item> </list> </para>  <para> The following specifications for cutting position PrincipalAxis2_BaseA must be met in order to function: <list type="table"> <listheader> <term>Specification</term> <description>Valid/Invalid</description> </listheader> <item> <term>Tool Offset multi-system specification NC spec [21,6]</term> <description>Valid</description> </item> <item> <term>Sub spindle specification NC spec [4,1]</term> <description>Valid</description> </item> </list> </para>  <para> The following specifications for cutting position PrincipalAxis2_BaseB must be met in order to function: <list type="table"> <listheader> <term>Specification</term> <description>Valid/Invalid</description> </listheader> <item> <term>Tool Offset multi-system specification NC spec [21,6]</term> <description>Valid</description> </item> <item> <term>L Tool index specification NC spec [3,4]</term> <description>Valid</description> </item> <item> <term>Sub spindle specification NC spec [4,1]</term> <description>Valid</description> </item> </list> </para>  <para> The following specifications for cutting position PrincipalAxis2_VerticalA must be met in order to function: <list type="table"> <listheader> <term>Specification</term> <description>Valid/Invalid</description> </listheader> <item> <term>Tool Offset multi-system specification NC spec [21,6]</term> <description>Valid</description> </item> <item> <term>Sub spindle specification NC spec [4,1]</term> <description>Valid</description> </item> </list> </para>  <para> The following specifications for cutting position PrincipalAxis2_VerticalB must be met in order to function: <list type="table"> <listheader> <term>Specification</term> <description>Valid/Invalid</description> </listheader> <item> <term>Tool Offset multi-system specification NC spec [21,6]</term> <description>Valid</description> </item> <item> <term>L Tool index specification NC spec [3,4]</term> <description>Valid</description> </item> <item> <term>Sub spindle specification NC spec [4,1]</term> <description>Valid</description> </item> </list> </para> </remarks>
      <Figure> TOOL DATA - TOOL OFFSET/NOSE R COMPENSATION - BASE A <para>Tool offset/Nose R compensation table at base A cutting position.  Cutting position at different base can be changed by toggling Cutting Position menu. <img src="Lathe.Multi.ToolData.ToolOffsetNoseR.jpg" /> </para> </Figure>
      <SubSystem> Please see <see href="SubSystemNoteTable.htm">Sub System Note Table</see> for more information if applicable. <para>Valid sub systems for this function (Y = Valid, N = Not valid)</para> <para> <list type="table"> <listheader> <term>NC_RUN </term> <term>NC_RUN_1 </term> <term>NC_RUN_2 </term> <term>NC_RUN_3 </term> <term>NC_PANEL </term> <term>NC_PANEL_1 </term> <term>NC_PANEL_2 </term> <term>NC_PANEL_3 </term> <term>NC_AL </term> <term>NC_AR </term> <term>NC_BL </term> <term>NC_BR </term> <term>NC_CL </term> <term>NC_CR </term> <term>NC_2AL </term> </listheader> <item> <term>Y (*5)</term> <term>Y     </term> <term>N     </term> <term>N     </term> <term>Y (*5)</term> <term>Y     </term> <term>N     </term> <term>N     </term> <term>Y     </term> <term>Y     </term> <term>N     </term> <term>N     </term> <term>N     </term> <term>N     </term> <term>N     </term> </item> </list> </para> </SubSystem>
      <remarks>  <para> Compatible Chart of this function for different OSP controls: <list type="table"> <listheader> <term>OSP Control</term> <description>Compatible</description> </listheader> <item> <term>P100II</term> <description>Yes</description> </item> <item> <term>P200</term> <description>Yes</description> </item> <item> <term>P300L</term> <description>Yes</description> </item> <item> <term>P300S/TD Mode</term> <description>No</description> </item> <item> <term>P300S/TL Mode</term> <description>Yes</description> </item> </list> </para>  </remarks>
    </member>
    <member name="M:Okuma.CLDATAPI.DataAPI.CTools.GetNoseRCompensation(System.Int32,Okuma.CLDATAPI.Enumerations.NoseRCompensationAxisIndexEnum,Okuma.CLDATAPI.Enumerations.CuttingPositionEnum)">
      <summary>For tool offset multi-system specification NC spec [21,6], it gets nose radius compensation at the specified offset index, axis index, and cutting position index for current sub system. </summary>
      <example> This sample shows how to call the GetNoseRCompensation() method. <para>	nose_db = objTool.GetNoseRCompensation(Convert.ToInt32(cbo_Ctools2_offindex.SelectedItem), Cmb_Compensation.SelectedItem, cbo_Ctools2_Cutpos.SelectedItem)	</para> </example>
      <param name="intOffsetIndex">Offset index value</param>
      <param name="enAxisIndex">Axis index</param>
      <param name="enCuttingPosition">Cutting position</param>
      <returns>A System.Double value</returns>
      <DataUnit> Default unit is in mm.  Other unit can be set by calling SetDataUnit method </DataUnit>
      <exception cref="System.ApplicationException">Thrown when function fails to perform the operation at current NC condition.</exception>
      <exception cref="System.NotSupportedException">Thrown when operation/input parameters are not supported for the current system.</exception>
      <remarks>  <para> The following specifications for cutting position PrincipalAxis1_BaseA must be met in order to function: <list type="table"> <listheader> <term>Specification</term> <description>Valid/Invalid</description> </listheader> <item> <term>Tool Offset multi-system specification NC spec [21,6]</term> <description>Valid</description> </item> </list> </para>  <para> The following specifications for cutting position PrincipalAxis1_BaseB must be met in order to function: <list type="table"> <listheader> <term>Specification</term> <description>Valid/Invalid</description> </listheader> <item> <term>Tool Offset multi-system specification NC spec [21,6]</term> <description>Valid</description> </item> <item> <term>L Tool index specification NC spec [3,4]</term> <description>Valid</description> </item> </list> </para>  <para> The following specifications for cutting position PrincipalAxis1_VerticalA must be met in order to function: <list type="table"> <listheader> <term>Specification</term> <description>Valid/Invalid</description> </listheader> <item> <term>Tool Offset multi-system specification NC spec [21,6]</term> <description>Valid</description> </item> </list> </para>  <para> The following specifications for cutting position PrincipalAxis1_VerticalB must be met in order to function: <list type="table"> <listheader> <term>Specification</term> <description>Valid/Invalid</description> </listheader> <item> <term>Tool Offset multi-system specification NC spec [21,6]</term> <description>Valid</description> </item> <item> <term>L Tool index specification NC spec [3,4]</term> <description>Valid</description> </item> </list> </para>  <para> The following specifications for cutting position PrincipalAxis2_BaseA must be met in order to function: <list type="table"> <listheader> <term>Specification</term> <description>Valid/Invalid</description> </listheader> <item> <term>Tool Offset multi-system specification NC spec [21,6]</term> <description>Valid</description> </item> <item> <term>Sub spindle specification NC spec [4,1]</term> <description>Valid</description> </item> </list> </para>  <para> The following specifications for cutting position PrincipalAxis2_BaseB must be met in order to function: <list type="table"> <listheader> <term>Specification</term> <description>Valid/Invalid</description> </listheader> <item> <term>Tool Offset multi-system specification NC spec [21,6]</term> <description>Valid</description> </item> <item> <term>L Tool index specification NC spec [3,4]</term> <description>Valid</description> </item> <item> <term>Sub spindle specification NC spec [4,1]</term> <description>Valid</description> </item> </list> </para>  <para> The following specifications for cutting position PrincipalAxis2_VerticalA must be met in order to function: <list type="table"> <listheader> <term>Specification</term> <description>Valid/Invalid</description> </listheader> <item> <term>Tool Offset multi-system specification NC spec [21,6]</term> <description>Valid</description> </item> <item> <term>Sub spindle specification NC spec [4,1]</term> <description>Valid</description> </item> </list> </para>  <para> The following specifications for cutting position PrincipalAxis2_VerticalB must be met in order to function: <list type="table"> <listheader> <term>Specification</term> <description>Valid/Invalid</description> </listheader> <item> <term>Tool Offset multi-system specification NC spec [21,6]</term> <description>Valid</description> </item> <item> <term>L Tool index specification NC spec [3,4]</term> <description>Valid</description> </item> <item> <term>Sub spindle specification NC spec [4,1]</term> <description>Valid</description> </item> </list> </para> </remarks>
      <Figure> TOOL DATA - TOOL OFFSET/NOSE R COMPENSATION - BASE A <para>Tool offset/Nose R compensation table at base A cutting position.  Cutting position at different base can be changed by toggling Cutting Position menu. <img src="Lathe.Multi.ToolData.ToolOffsetNoseR.jpg" /> </para> </Figure>
      <SubSystem> Please see <see href="SubSystemNoteTable.htm">Sub System Note Table</see> for more information if applicable. <para>Valid sub systems for this function (Y = Valid, N = Not valid)</para> <para> <list type="table"> <listheader> <term>NC_RUN </term> <term>NC_RUN_1 </term> <term>NC_RUN_2 </term> <term>NC_RUN_3 </term> <term>NC_PANEL </term> <term>NC_PANEL_1 </term> <term>NC_PANEL_2 </term> <term>NC_PANEL_3 </term> <term>NC_AL </term> <term>NC_AR </term> <term>NC_BL </term> <term>NC_BR </term> <term>NC_CL </term> <term>NC_CR </term> <term>NC_2AL </term> </listheader> <item> <term>Y (*5)</term> <term>Y     </term> <term>N     </term> <term>N     </term> <term>Y (*5)</term> <term>Y     </term> <term>N     </term> <term>N     </term> <term>Y     </term> <term>Y     </term> <term>N     </term> <term>N     </term> <term>N     </term> <term>N     </term> <term>N     </term> </item> </list> </para> </SubSystem>
      <remarks>  <para> Compatible Chart of this function for different OSP controls: <list type="table"> <listheader> <term>OSP Control</term> <description>Compatible</description> </listheader> <item> <term>P100II</term> <description>Yes</description> </item> <item> <term>P200</term> <description>Yes</description> </item> <item> <term>P300L</term> <description>Yes</description> </item> <item> <term>P300S/TD Mode</term> <description>No</description> </item> <item> <term>P300S/TL Mode</term> <description>Yes</description> </item> </list> </para>  </remarks>
    </member>
    <member name="M:Okuma.CLDATAPI.DataAPI.CTools.SetNoseRCompensation(System.Int32,Okuma.CLDATAPI.Enumerations.NoseRCompensationAxisIndexEnum,Okuma.CLDATAPI.Enumerations.CuttingPositionEnum,System.Double)">
      <summary>For tool offset multi-system specification NC spec [21,6], it sets nose radius compensation value at the specified offset index, cutting position index, and offset index for current sub system. </summary>
      <example> This sample shows how to call the SetNoseRCompensation() method. <para>	objTool.SetNoseRCompensation(Convert.ToInt32(cbo_Ctools2_offindex.SelectedItem), Cmb_Compensation.SelectedItem, cbo_Ctools2_Cutpos.SelectedItem, Convert.ToDouble(Txt_dblValue.Text))	</para> </example>
      <param name="intOffsetIndex">Offset Index</param>
      <param name="enAxisIndex">Axis index</param>
      <param name="enCuttingPosition">Cutting position</param>
      <param name="dblValue">Double value</param>
      <returns>None</returns>
      <DataUnit> Default unit is in mm.  Other unit can be set by calling SetDataUnit method </DataUnit>
      <exception cref="System.ApplicationException">Thrown when function fails to perform the operation at current NC condition.</exception>
      <exception cref="System.NotSupportedException">Thrown when operation/input parameters are not supported for the current system.</exception>
      <remarks>  <para> The following specifications for cutting position PrincipalAxis1_BaseA must be met in order to function: <list type="table"> <listheader> <term>Specification</term> <description>Valid/Invalid</description> </listheader> <item> <term>Tool Offset multi-system specification NC spec [21,6]</term> <description>Valid</description> </item> </list> </para>  <para> The following specifications for cutting position PrincipalAxis1_BaseB must be met in order to function: <list type="table"> <listheader> <term>Specification</term> <description>Valid/Invalid</description> </listheader> <item> <term>Tool Offset multi-system specification NC spec [21,6]</term> <description>Valid</description> </item> <item> <term>L Tool index specification NC spec [3,4]</term> <description>Valid</description> </item> </list> </para>  <para> The following specifications for cutting position PrincipalAxis1_VerticalA must be met in order to function: <list type="table"> <listheader> <term>Specification</term> <description>Valid/Invalid</description> </listheader> <item> <term>Tool Offset multi-system specification NC spec [21,6]</term> <description>Valid</description> </item> </list> </para>  <para> The following specifications for cutting position PrincipalAxis1_VerticalB must be met in order to function: <list type="table"> <listheader> <term>Specification</term> <description>Valid/Invalid</description> </listheader> <item> <term>Tool Offset multi-system specification NC spec [21,6]</term> <description>Valid</description> </item> <item> <term>L Tool index specification NC spec [3,4]</term> <description>Valid</description> </item> </list> </para>  <para> The following specifications for cutting position PrincipalAxis2_BaseA must be met in order to function: <list type="table"> <listheader> <term>Specification</term> <description>Valid/Invalid</description> </listheader> <item> <term>Tool Offset multi-system specification NC spec [21,6]</term> <description>Valid</description> </item> <item> <term>Sub spindle specification NC spec [4,1]</term> <description>Valid</description> </item> </list> </para>  <para> The following specifications for cutting position PrincipalAxis2_BaseB must be met in order to function: <list type="table"> <listheader> <term>Specification</term> <description>Valid/Invalid</description> </listheader> <item> <term>Tool Offset multi-system specification NC spec [21,6]</term> <description>Valid</description> </item> <item> <term>L Tool index specification NC spec [3,4]</term> <description>Valid</description> </item> <item> <term>Sub spindle specification NC spec [4,1]</term> <description>Valid</description> </item> </list> </para>  <para> The following specifications for cutting position PrincipalAxis2_VerticalA must be met in order to function: <list type="table"> <listheader> <term>Specification</term> <description>Valid/Invalid</description> </listheader> <item> <term>Tool Offset multi-system specification NC spec [21,6]</term> <description>Valid</description> </item> <item> <term>Sub spindle specification NC spec [4,1]</term> <description>Valid</description> </item> </list> </para>  <para> The following specifications for cutting position PrincipalAxis2_VerticalB must be met in order to function: <list type="table"> <listheader> <term>Specification</term> <description>Valid/Invalid</description> </listheader> <item> <term>Tool Offset multi-system specification NC spec [21,6]</term> <description>Valid</description> </item> <item> <term>L Tool index specification NC spec [3,4]</term> <description>Valid</description> </item> <item> <term>Sub spindle specification NC spec [4,1]</term> <description>Valid</description> </item> </list> </para> </remarks>
      <Figure> TOOL DATA - TOOL OFFSET/NOSE R COMPENSATION - BASE A <para>Tool offset/Nose R compensation table at base A cutting position.  Cutting position at different base can be changed by toggling Cutting Position menu. <img src="Lathe.Multi.Tooldata.ToolOffsetNoseR.jpg" /> </para> </Figure>
      <SubSystem> Please see <see href="SubSystemNoteTable.htm">Sub System Note Table</see> for more information if applicable. <para>Valid sub systems for this function (Y = Valid, N = Not valid)</para> <para> <list type="table"> <listheader> <term>NC_RUN </term> <term>NC_RUN_1 </term> <term>NC_RUN_2 </term> <term>NC_RUN_3 </term> <term>NC_PANEL </term> <term>NC_PANEL_1 </term> <term>NC_PANEL_2 </term> <term>NC_PANEL_3 </term> <term>NC_AL </term> <term>NC_AR </term> <term>NC_BL </term> <term>NC_BR </term> <term>NC_CL </term> <term>NC_CR </term> <term>NC_2AL </term> </listheader> <item> <term>Y (*5)</term> <term>Y     </term> <term>N     </term> <term>N     </term> <term>Y (*5)</term> <term>Y     </term> <term>N     </term> <term>N     </term> <term>Y     </term> <term>Y     </term> <term>N     </term> <term>N     </term> <term>N     </term> <term>N     </term> <term>N     </term> </item> </list> </para> </SubSystem>
      <remarks>  <para> Compatible Chart of this function for different OSP controls: <list type="table"> <listheader> <term>OSP Control</term> <description>Compatible</description> </listheader> <item> <term>P100II</term> <description>Yes</description> </item> <item> <term>P200</term> <description>Yes</description> </item> <item> <term>P300L</term> <description>Yes</description> </item> <item> <term>P300S/TD Mode</term> <description>No</description> </item> <item> <term>P300S/TL Mode</term> <description>Yes</description> </item> </list> </para>  </remarks>
    </member>
    <member name="M:Okuma.CLDATAPI.DataAPI.CTools.AddNoseRCompensation(System.Int32,Okuma.CLDATAPI.Enumerations.NoseRCompensationAxisIndexEnum,Okuma.CLDATAPI.Enumerations.CuttingPositionEnum,System.Double)">
      <summary> For tool offset multi-system specification NC spec [21,6], It sets the nose radius compensation value by adding the input value to the existing data at the specified offset index, axis index, and cutting position for current sub system. </summary>
      <example> This sample shows how to call the AddNoseRCompensation() method. <para>	objTool.AddNoseRCompensation(Convert.ToInt32(cbo_Ctools2_offindex.SelectedItem), Cmb_Compensation.SelectedItem, cbo_Ctools2_Cutpos.SelectedItem, Convert.ToDouble(Txt_dblValue.Text))	</para> </example>
      <returns>None</returns>
      <DataUnit> Default unit is in mm.  Other unit can be set by calling SetDataUnit method </DataUnit>
      <param name="intOffsetIndex">Offset Index value</param>
      <param name="enAxisIndex">Axis index</param>
      <param name="enCuttingPosition">Cutting position</param>
      <param name="dblValue">Offset value to be added to the existing data</param>
      <exception cref="System.ApplicationException">Thrown when function fails to perform the operation at current NC condition.</exception>
      <exception cref="System.NotSupportedException">Thrown when operation/input parameters are not supported for the current system.</exception>
      <remarks>  <para> The following specifications for cutting position PrincipalAxis1_BaseA must be met in order to function: <list type="table"> <listheader> <term>Specification</term> <description>Valid/Invalid</description> </listheader> <item> <term>Tool Offset multi-system specification NC spec [21,6]</term> <description>Valid</description> </item> </list> </para>  <para> The following specifications for cutting position PrincipalAxis1_BaseB must be met in order to function: <list type="table"> <listheader> <term>Specification</term> <description>Valid/Invalid</description> </listheader> <item> <term>Tool Offset multi-system specification NC spec [21,6]</term> <description>Valid</description> </item> <item> <term>L Tool index specification NC spec [3,4]</term> <description>Valid</description> </item> </list> </para>  <para> The following specifications for cutting position PrincipalAxis1_VerticalA must be met in order to function: <list type="table"> <listheader> <term>Specification</term> <description>Valid/Invalid</description> </listheader> <item> <term>Tool Offset multi-system specification NC spec [21,6]</term> <description>Valid</description> </item> </list> </para>  <para> The following specifications for cutting position PrincipalAxis1_VerticalB must be met in order to function: <list type="table"> <listheader> <term>Specification</term> <description>Valid/Invalid</description> </listheader> <item> <term>Tool Offset multi-system specification NC spec [21,6]</term> <description>Valid</description> </item> <item> <term>L Tool index specification NC spec [3,4]</term> <description>Valid</description> </item> </list> </para>  <para> The following specifications for cutting position PrincipalAxis2_BaseA must be met in order to function: <list type="table"> <listheader> <term>Specification</term> <description>Valid/Invalid</description> </listheader> <item> <term>Tool Offset multi-system specification NC spec [21,6]</term> <description>Valid</description> </item> <item> <term>Sub spindle specification NC spec [4,1]</term> <description>Valid</description> </item> </list> </para>  <para> The following specifications for cutting position PrincipalAxis2_BaseB must be met in order to function: <list type="table"> <listheader> <term>Specification</term> <description>Valid/Invalid</description> </listheader> <item> <term>Tool Offset multi-system specification NC spec [21,6]</term> <description>Valid</description> </item> <item> <term>L Tool index specification NC spec [3,4]</term> <description>Valid</description> </item> <item> <term>Sub spindle specification NC spec [4,1]</term> <description>Valid</description> </item> </list> </para>  <para> The following specifications for cutting position PrincipalAxis2_VerticalA must be met in order to function: <list type="table"> <listheader> <term>Specification</term> <description>Valid/Invalid</description> </listheader> <item> <term>Tool Offset multi-system specification NC spec [21,6]</term> <description>Valid</description> </item> <item> <term>Sub spindle specification NC spec [4,1]</term> <description>Valid</description> </item> </list> </para>  <para> The following specifications for cutting position PrincipalAxis2_VerticalB must be met in order to function: <list type="table"> <listheader> <term>Specification</term> <description>Valid/Invalid</description> </listheader> <item> <term>Tool Offset multi-system specification NC spec [21,6]</term> <description>Valid</description> </item> <item> <term>L Tool index specification NC spec [3,4]</term> <description>Valid</description> </item> <item> <term>Sub spindle specification NC spec [4,1]</term> <description>Valid</description> </item> </list> </para> </remarks>
      <Figure> TOOL DATA - TOOL OFFSET/NOSE R COMPENSATION - BASE A <para>Tool offset/Nose R compensation table at base A cutting position.  Cutting position at different base can be changed by toggling Cutting Position menu. <img src="Lathe.Multi.ToolData.ToolOffsetNoseR.jpg" /> </para> </Figure>
      <SubSystem> Please see <see href="SubSystemNoteTable.htm">Sub System Note Table</see> for more information if applicable. <para>Valid sub systems for this function (Y = Valid, N = Not valid)</para> <para> <list type="table"> <listheader> <term>NC_RUN </term> <term>NC_RUN_1 </term> <term>NC_RUN_2 </term> <term>NC_RUN_3 </term> <term>NC_PANEL </term> <term>NC_PANEL_1 </term> <term>NC_PANEL_2 </term> <term>NC_PANEL_3 </term> <term>NC_AL </term> <term>NC_AR </term> <term>NC_BL </term> <term>NC_BR </term> <term>NC_CL </term> <term>NC_CR </term> <term>NC_2AL </term> </listheader> <item> <term>Y (*5)</term> <term>Y     </term> <term>N     </term> <term>N     </term> <term>Y (*5)</term> <term>Y     </term> <term>N     </term> <term>N     </term> <term>Y     </term> <term>Y     </term> <term>N     </term> <term>N     </term> <term>N     </term> <term>N     </term> <term>N     </term> </item> </list> </para> </SubSystem>
      <remarks>  <para> Compatible Chart of this function for different OSP controls: <list type="table"> <listheader> <term>OSP Control</term> <description>Compatible</description> </listheader> <item> <term>P100II</term> <description>Yes</description> </item> <item> <term>P200</term> <description>Yes</description> </item> <item> <term>P300L</term> <description>No</description> </item> <item> <term>P300S/TD Mode</term> <description>No</description> </item> <item> <term>P300S/TL Mode</term> <description>No</description> </item> </list> </para>  </remarks>
    </member>
    <member name="M:Okuma.CLDATAPI.DataAPI.CTools.GetNoseRCompensationPattern(System.Int32,System.Int32,Okuma.CLDATAPI.Enumerations.CuttingPositionEnum)">
      <summary>For tool offset multi-system specification NC spec [21,6], it gets nose radius compensation pattern at the specified offset indexes, and cutting position index for current sub system. </summary>
      <example> This sample shows how to call the GetNoseRCompensationPattern() method. <para>	Dim intindx As Integer()	</para> <para>	intindx = objTool.GetNoseRCompensationPattern(Convert.ToInt32(txt_CTools2_fromindx.Text), Convert.ToInt32(txt_CTools2_toindx.Text), cbo_Ctools2_Cutpos.SelectedItem)	</para> </example>
      <param name="intFromOffsetIndex">Starting offset index</param>
      <param name="intToOffsetIndex">Ending offset index</param>
      <param name="enCuttingPosition">Cutting position</param>
      <returns />
      <returns>An array of System.Int32 value</returns>
      <exception cref="System.ApplicationException">Thrown when function fails to perform the operation at current NC condition.</exception>
      <exception cref="System.NotSupportedException">Thrown when operation/input parameters are not supported for the current system.</exception>
      <remarks>  <para> The following specifications for cutting position PrincipalAxis1_BaseA must be met in order to function: <list type="table"> <listheader> <term>Specification</term> <description>Valid/Invalid</description> </listheader> <item> <term>Tool Offset multi-system specification NC spec [21,6]</term> <description>Valid</description> </item> </list> </para>  <para> The following specifications for cutting position PrincipalAxis1_BaseB must be met in order to function: <list type="table"> <listheader> <term>Specification</term> <description>Valid/Invalid</description> </listheader> <item> <term>Tool Offset multi-system specification NC spec [21,6]</term> <description>Valid</description> </item> <item> <term>L Tool index specification NC spec [3,4]</term> <description>Valid</description> </item> </list> </para>  <para> The following specifications for cutting position PrincipalAxis1_VerticalA must be met in order to function: <list type="table"> <listheader> <term>Specification</term> <description>Valid/Invalid</description> </listheader> <item> <term>Tool Offset multi-system specification NC spec [21,6]</term> <description>Valid</description> </item> </list> </para>  <para> The following specifications for cutting position PrincipalAxis1_VerticalB must be met in order to function: <list type="table"> <listheader> <term>Specification</term> <description>Valid/Invalid</description> </listheader> <item> <term>Tool Offset multi-system specification NC spec [21,6]</term> <description>Valid</description> </item> <item> <term>L Tool index specification NC spec [3,4]</term> <description>Valid</description> </item> </list> </para>  <para> The following specifications for cutting position PrincipalAxis2_BaseA must be met in order to function: <list type="table"> <listheader> <term>Specification</term> <description>Valid/Invalid</description> </listheader> <item> <term>Tool Offset multi-system specification NC spec [21,6]</term> <description>Valid</description> </item> <item> <term>Sub spindle specification NC spec [4,1]</term> <description>Valid</description> </item> </list> </para>  <para> The following specifications for cutting position PrincipalAxis2_BaseB must be met in order to function: <list type="table"> <listheader> <term>Specification</term> <description>Valid/Invalid</description> </listheader> <item> <term>Tool Offset multi-system specification NC spec [21,6]</term> <description>Valid</description> </item> <item> <term>L Tool index specification NC spec [3,4]</term> <description>Valid</description> </item> <item> <term>Sub spindle specification NC spec [4,1]</term> <description>Valid</description> </item> </list> </para>  <para> The following specifications for cutting position PrincipalAxis2_VerticalA must be met in order to function: <list type="table"> <listheader> <term>Specification</term> <description>Valid/Invalid</description> </listheader> <item> <term>Tool Offset multi-system specification NC spec [21,6]</term> <description>Valid</description> </item> <item> <term>Sub spindle specification NC spec [4,1]</term> <description>Valid</description> </item> </list> </para>  <para> The following specifications for cutting position PrincipalAxis2_VerticalB must be met in order to function: <list type="table"> <listheader> <term>Specification</term> <description>Valid/Invalid</description> </listheader> <item> <term>Tool Offset multi-system specification NC spec [21,6]</term> <description>Valid</description> </item> <item> <term>L Tool index specification NC spec [3,4]</term> <description>Valid</description> </item> <item> <term>Sub spindle specification NC spec [4,1]</term> <description>Valid</description> </item> </list> </para> </remarks>
      <Figure> TOOL DATA - NOSE R COMPENSATION - P - BASE A <para>Nose R compensation pattern (P) table at base A cutting position.  Cutting position at different base can be changed by toggling Cutting Position menu. <img src="Lathe.Multi.ToolData.ToolOffsetNoseR.jpg" /> </para> </Figure>
      <SubSystem> Please see <see href="SubSystemNoteTable.htm">Sub System Note Table</see> for more information if applicable. <para>Valid sub systems for this function (Y = Valid, N = Not valid)</para> <para> <list type="table"> <listheader> <term>NC_RUN </term> <term>NC_RUN_1 </term> <term>NC_RUN_2 </term> <term>NC_RUN_3 </term> <term>NC_PANEL </term> <term>NC_PANEL_1 </term> <term>NC_PANEL_2 </term> <term>NC_PANEL_3 </term> <term>NC_AL </term> <term>NC_AR </term> <term>NC_BL </term> <term>NC_BR </term> <term>NC_CL </term> <term>NC_CR </term> <term>NC_2AL </term> </listheader> <item> <term>Y (*5)</term> <term>Y     </term> <term>N     </term> <term>N     </term> <term>Y (*5)</term> <term>Y     </term> <term>N     </term> <term>N     </term> <term>Y     </term> <term>Y     </term> <term>N     </term> <term>N     </term> <term>N     </term> <term>N     </term> <term>N     </term> </item> </list> </para> </SubSystem>
      <remarks>  <para> Compatible Chart of this function for different OSP controls: <list type="table"> <listheader> <term>OSP Control</term> <description>Compatible</description> </listheader> <item> <term>P100II</term> <description>Yes</description> </item> <item> <term>P200</term> <description>Yes</description> </item> <item> <term>P300L</term> <description>No</description> </item> <item> <term>P300S/TD Mode</term> <description>No</description> </item> <item> <term>P300S/TL Mode</term> <description>No</description> </item> </list> </para>  </remarks>
    </member>
    <member name="M:Okuma.CLDATAPI.DataAPI.CTools.GetNoseRCompensationPattern(System.Int32,Okuma.CLDATAPI.Enumerations.CuttingPositionEnum)">
      <summary>For tool offset multi-system specification NC spec [21,6], it gets nose radius compensation pattern at the specified offset index, and cutting position index for current sub system. </summary>
      <example> This sample shows how to call the GetNoseRCompensationPattern() method. <para>	nose_db = objTool.GetNoseRCompensation(Convert.ToInt32(cbo_Ctools2_offindex.SelectedItem), cbo_Ctools2_Cutpos.SelectedItem)	</para> </example>
      <param name="intOffsetIndex">Offset index value</param>
      <param name="enCuttingPosition">Cutting position value</param>
      <returns>A System.Int32 value</returns>
      <exception cref="System.ApplicationException">Thrown when function fails to perform the operation at current NC condition.</exception>
      <exception cref="System.NotSupportedException">Thrown when operation/input parameters are not supported for the current system.</exception>
      <remarks>  <para> The following specifications for cutting position PrincipalAxis1_BaseA must be met in order to function: <list type="table"> <listheader> <term>Specification</term> <description>Valid/Invalid</description> </listheader> <item> <term>Tool Offset multi-system specification NC spec [21,6]</term> <description>Valid</description> </item> </list> </para>  <para> The following specifications for cutting position PrincipalAxis1_BaseB must be met in order to function: <list type="table"> <listheader> <term>Specification</term> <description>Valid/Invalid</description> </listheader> <item> <term>Tool Offset multi-system specification NC spec [21,6]</term> <description>Valid</description> </item> <item> <term>L Tool index specification NC spec [3,4]</term> <description>Valid</description> </item> </list> </para>  <para> The following specifications for cutting position PrincipalAxis1_VerticalA must be met in order to function: <list type="table"> <listheader> <term>Specification</term> <description>Valid/Invalid</description> </listheader> <item> <term>Tool Offset multi-system specification NC spec [21,6]</term> <description>Valid</description> </item> </list> </para>  <para> The following specifications for cutting position PrincipalAxis1_VerticalB must be met in order to function: <list type="table"> <listheader> <term>Specification</term> <description>Valid/Invalid</description> </listheader> <item> <term>Tool Offset multi-system specification NC spec [21,6]</term> <description>Valid</description> </item> <item> <term>L Tool index specification NC spec [3,4]</term> <description>Valid</description> </item> </list> </para>  <para> The following specifications for cutting position PrincipalAxis2_BaseA must be met in order to function: <list type="table"> <listheader> <term>Specification</term> <description>Valid/Invalid</description> </listheader> <item> <term>Tool Offset multi-system specification NC spec [21,6]</term> <description>Valid</description> </item> <item> <term>Sub spindle specification NC spec [4,1]</term> <description>Valid</description> </item> </list> </para>  <para> The following specifications for cutting position PrincipalAxis2_BaseB must be met in order to function: <list type="table"> <listheader> <term>Specification</term> <description>Valid/Invalid</description> </listheader> <item> <term>Tool Offset multi-system specification NC spec [21,6]</term> <description>Valid</description> </item> <item> <term>L Tool index specification NC spec [3,4]</term> <description>Valid</description> </item> <item> <term>Sub spindle specification NC spec [4,1]</term> <description>Valid</description> </item> </list> </para>  <para> The following specifications for cutting position PrincipalAxis2_VerticalA must be met in order to function: <list type="table"> <listheader> <term>Specification</term> <description>Valid/Invalid</description> </listheader> <item> <term>Tool Offset multi-system specification NC spec [21,6]</term> <description>Valid</description> </item> <item> <term>Sub spindle specification NC spec [4,1]</term> <description>Valid</description> </item> </list> </para>  <para> The following specifications for cutting position PrincipalAxis2_VerticalB must be met in order to function: <list type="table"> <listheader> <term>Specification</term> <description>Valid/Invalid</description> </listheader> <item> <term>Tool Offset multi-system specification NC spec [21,6]</term> <description>Valid</description> </item> <item> <term>L Tool index specification NC spec [3,4]</term> <description>Valid</description> </item> <item> <term>Sub spindle specification NC spec [4,1]</term> <description>Valid</description> </item> </list> </para> </remarks>
      <Figure> TOOL DATA - NOSE R COMPENSATION - P - BASE A <para>Nose R compensation pattern (P) table at base A cutting position.  Cutting position at different base can be changed by toggling Cutting Position menu. <img src="Lathe.Multi.ToolData.ToolOffsetNoseR.jpg" /> </para> </Figure>
      <SubSystem> Please see <see href="SubSystemNoteTable.htm">Sub System Note Table</see> for more information if applicable. <para>Valid sub systems for this function (Y = Valid, N = Not valid)</para> <para> <list type="table"> <listheader> <term>NC_RUN </term> <term>NC_RUN_1 </term> <term>NC_RUN_2 </term> <term>NC_RUN_3 </term> <term>NC_PANEL </term> <term>NC_PANEL_1 </term> <term>NC_PANEL_2 </term> <term>NC_PANEL_3 </term> <term>NC_AL </term> <term>NC_AR </term> <term>NC_BL </term> <term>NC_BR </term> <term>NC_CL </term> <term>NC_CR </term> <term>NC_2AL </term> </listheader> <item> <term>Y (*5)</term> <term>Y     </term> <term>N     </term> <term>N     </term> <term>Y (*5)</term> <term>Y     </term> <term>N     </term> <term>N     </term> <term>Y     </term> <term>Y     </term> <term>N     </term> <term>N     </term> <term>N     </term> <term>N     </term> <term>N     </term> </item> </list> </para> </SubSystem>
      <remarks>  <para> Compatible Chart of this function for different OSP controls: <list type="table"> <listheader> <term>OSP Control</term> <description>Compatible</description> </listheader> <item> <term>P100II</term> <description>Yes</description> </item> <item> <term>P200</term> <description>Yes</description> </item> <item> <term>P300L</term> <description>No</description> </item> <item> <term>P300S/TD Mode</term> <description>No</description> </item> <item> <term>P300S/TL Mode</term> <description>No</description> </item> </list> </para>  </remarks>
    </member>
    <member name="M:Okuma.CLDATAPI.DataAPI.CTools.SetNoseRCompensationPattern(System.Int32,Okuma.CLDATAPI.Enumerations.CuttingPositionEnum,System.Int32)">
      <summary> For tool offset multi-system specification NC spec [21,6], It sets the nose radius compensation pattern value by adding the input value to the existing data at the specified offset index, axis index, and cutting position for current sub system. </summary>
      <example> This sample shows how to call the SetNoseRCompensationPattern() method. <para>	objTool.SetNoseRCompensationPattern(txt_ctools2_intindex.Text, cbo_Ctools2_Cutpos.SelectedItem, Convert.ToInt32(txt_ctools2_intValue.Text))	</para> </example>
      <returns>None</returns>
      <DataUnit> N/A </DataUnit>
      <param name="intOffsetIndex">Offset Index</param>
      <param name="enCuttingPosition">Cutting position value</param>
      <param name="intValue">Nose radius compensation pattern value</param>
      <exception cref="System.ApplicationException">Thrown when function fails to perform the operation at current NC condition.</exception>
      <exception cref="System.NotSupportedException">Thrown when operation/input parameters are not supported for the current system.</exception>
      <remarks>  <para> The following specifications for cutting position PrincipalAxis1_BaseA must be met in order to function: <list type="table"> <listheader> <term>Specification</term> <description>Valid/Invalid</description> </listheader> <item> <term>Tool Offset multi-system specification NC spec [21,6]</term> <description>Valid</description> </item> </list> </para>  <para> The following specifications for cutting position PrincipalAxis1_BaseB must be met in order to function: <list type="table"> <listheader> <term>Specification</term> <description>Valid/Invalid</description> </listheader> <item> <term>Tool Offset multi-system specification NC spec [21,6]</term> <description>Valid</description> </item> <item> <term>L Tool index specification NC spec [3,4]</term> <description>Valid</description> </item> </list> </para>  <para> The following specifications for cutting position PrincipalAxis1_VerticalA must be met in order to function: <list type="table"> <listheader> <term>Specification</term> <description>Valid/Invalid</description> </listheader> <item> <term>Tool Offset multi-system specification NC spec [21,6]</term> <description>Valid</description> </item> </list> </para>  <para> The following specifications for cutting position PrincipalAxis1_VerticalB must be met in order to function: <list type="table"> <listheader> <term>Specification</term> <description>Valid/Invalid</description> </listheader> <item> <term>Tool Offset multi-system specification NC spec [21,6]</term> <description>Valid</description> </item> <item> <term>L Tool index specification NC spec [3,4]</term> <description>Valid</description> </item> </list> </para>  <para> The following specifications for cutting position PrincipalAxis2_BaseA must be met in order to function: <list type="table"> <listheader> <term>Specification</term> <description>Valid/Invalid</description> </listheader> <item> <term>Tool Offset multi-system specification NC spec [21,6]</term> <description>Valid</description> </item> <item> <term>Sub spindle specification NC spec [4,1]</term> <description>Valid</description> </item> </list> </para>  <para> The following specifications for cutting position PrincipalAxis2_BaseB must be met in order to function: <list type="table"> <listheader> <term>Specification</term> <description>Valid/Invalid</description> </listheader> <item> <term>Tool Offset multi-system specification NC spec [21,6]</term> <description>Valid</description> </item> <item> <term>L Tool index specification NC spec [3,4]</term> <description>Valid</description> </item> <item> <term>Sub spindle specification NC spec [4,1]</term> <description>Valid</description> </item> </list> </para>  <para> The following specifications for cutting position PrincipalAxis2_VerticalA must be met in order to function: <list type="table"> <listheader> <term>Specification</term> <description>Valid/Invalid</description> </listheader> <item> <term>Tool Offset multi-system specification NC spec [21,6]</term> <description>Valid</description> </item> <item> <term>Sub spindle specification NC spec [4,1]</term> <description>Valid</description> </item> </list> </para>  <para> The following specifications for cutting position PrincipalAxis2_VerticalB must be met in order to function: <list type="table"> <listheader> <term>Specification</term> <description>Valid/Invalid</description> </listheader> <item> <term>Tool Offset multi-system specification NC spec [21,6]</term> <description>Valid</description> </item> <item> <term>L Tool index specification NC spec [3,4]</term> <description>Valid</description> </item> <item> <term>Sub spindle specification NC spec [4,1]</term> <description>Valid</description> </item> </list> </para> </remarks>
      <Figure> TOOL DATA - NOSE R COMPENSATION - P - BASE A <para>Nose R compensation Pattern (P) table at base A cutting position.  Cutting position at different base can be changed by toggling Cutting Position menu. <img src="Lathe.Multi.Tooldata.ToolOffsetNoseR.jpg" /> </para> </Figure>
      <SubSystem> Please see <see href="SubSystemNoteTable.htm">Sub System Note Table</see> for more information if applicable. <para>Valid sub systems for this function (Y = Valid, N = Not valid)</para> <para> <list type="table"> <listheader> <term>NC_RUN </term> <term>NC_RUN_1 </term> <term>NC_RUN_2 </term> <term>NC_RUN_3 </term> <term>NC_PANEL </term> <term>NC_PANEL_1 </term> <term>NC_PANEL_2 </term> <term>NC_PANEL_3 </term> <term>NC_AL </term> <term>NC_AR </term> <term>NC_BL </term> <term>NC_BR </term> <term>NC_CL </term> <term>NC_CR </term> <term>NC_2AL </term> </listheader> <item> <term>Y (*5)</term> <term>Y     </term> <term>N     </term> <term>N     </term> <term>Y (*5)</term> <term>Y     </term> <term>N     </term> <term>N     </term> <term>Y     </term> <term>Y     </term> <term>N     </term> <term>N     </term> <term>N     </term> <term>N     </term> <term>N     </term> </item> </list> </para>  </SubSystem>
    </member>
    <member name="M:Okuma.CLDATAPI.DataAPI.CTools.GetToolWearOffset(System.Int32,System.Int32,Okuma.CLDATAPI.Enumerations.ToolWearOffsetAxisIndexEnum,Okuma.CLDATAPI.Enumerations.CuttingPositionEnum)">
      <summary>For tool offset multi-system specification NC spec [21,6], it gets tool wear offset at the specified offset indexes, axis index, and cutting position index for current sub system. </summary>
      <example> This sample shows how to call the GetToolWearOffset() method. <para>	toolwear = objTool.GetToolWearOffset(CInt(Me.tulToolNumber.Text), Me.tul1ComboToolWearOffset.SelectedItem, Me.ToolCuttingPostion.SelectedItem)	</para> </example>
      <param name="intFromOffsetIndex">Starting offset index value</param>
      <param name="intToOffsetIndex">Ending offset index value</param>
      <param name="enAxisIndex">Axis value</param>
      <param name="enCuttingPosition">Cutting position</param>
      <returns>An array of System.Double value</returns>
      <DataUnit> Default unit is in mm.  Other unit can be set by calling SetDataUnit method </DataUnit>
      <exception cref="System.ApplicationException">Thrown when function fails to perform the operation at current NC condition.</exception>
      <exception cref="System.NotSupportedException">Thrown when operation/input parameters are not supported for the current system.</exception>
      <remarks>  <para> The following specifications for cutting position PrincipalAxis1_BaseA must be met in order to function: <list type="table"> <listheader> <term>Specification</term> <description>Valid/Invalid</description> </listheader> <item> <term>Tool wear compensation specification NC spec [21,5]</term> <description>Valid</description> </item> <item> <term>Tool Offset multi-system specification NC spec [21,6]</term> <description>Valid</description> </item> </list> </para>  <para> The following specifications for cutting position PrincipalAxis1_BaseB must be met in order to function: <list type="table"> <listheader> <term>Specification</term> <description>Valid/Invalid</description> </listheader> <item> <term>Tool wear compensation specification NC spec [21,5]</term> <description>Valid</description> </item> <item> <term>Tool Offset multi-system specification NC spec [21,6]</term> <description>Valid</description> </item> <item> <term>L Tool index specification NC spec [3,4]</term> <description>Valid</description> </item> </list> </para>  <para> The following specifications for cutting position PrincipalAxis1_VerticalA must be met in order to function: <list type="table"> <listheader> <term>Specification</term> <description>Valid/Invalid</description> </listheader> <item> <term>Tool wear compensation specification NC spec [21,5]</term> <description>Valid</description> </item> <item> <term>Tool Offset multi-system specification NC spec [21,6]</term> <description>Valid</description> </item> </list> </para>  <para> The following specifications for cutting position PrincipalAxis1_VerticalB must be met in order to function: <list type="table"> <listheader> <term>Specification</term> <description>Valid/Invalid</description> </listheader> <item> <term>Tool wear compensation specification NC spec [21,5]</term> <description>Valid</description> </item> <item> <term>Tool Offset multi-system specification NC spec [21,6]</term> <description>Valid</description> </item> <item> <term>L Tool index specification NC spec [3,4]</term> <description>Valid</description> </item> </list> </para>  <para> The following specifications for cutting position PrincipalAxis2_BaseA must be met in order to function: <list type="table"> <listheader> <term>Specification</term> <description>Valid/Invalid</description> </listheader> <item> <term>Tool wear compensation specification NC spec [21,5]</term> <description>Valid</description> </item> <item> <term>Tool Offset multi-system specification NC spec [21,6]</term> <description>Valid</description> </item> <item> <term>Sub spindle specification NC spec [4,1]</term> <description>Valid</description> </item> </list> </para>  <para> The following specifications for cutting position PrincipalAxis2_BaseB must be met in order to function: <list type="table"> <listheader> <term>Specification</term> <description>Valid/Invalid</description> </listheader> <item> <term>Tool wear compensation specification NC spec [21,5]</term> <description>Valid</description> </item> <item> <term>Tool Offset multi-system specification NC spec [21,6]</term> <description>Valid</description> </item> <item> <term>L Tool index specification NC spec [3,4]</term> <description>Valid</description> </item> <item> <term>Sub spindle specification NC spec [4,1]</term> <description>Valid</description> </item> </list> </para>  <para> The following specifications for cutting position PrincipalAxis2_VerticalA must be met in order to function: <list type="table"> <listheader> <term>Specification</term> <description>Valid/Invalid</description> </listheader> <item> <term>Tool wear compensation specification NC spec [21,5]</term> <description>Valid</description> </item> <item> <term>Tool Offset multi-system specification NC spec [21,6]</term> <description>Valid</description> </item> <item> <term>Sub spindle specification NC spec [4,1]</term> <description>Valid</description> </item> </list> </para>  <para> The following specifications for cutting position PrincipalAxis2_VerticalB must be met in order to function: <list type="table"> <listheader> <term>Specification</term> <description>Valid/Invalid</description> </listheader> <item> <term>Tool wear compensation specification NC spec [21,5]</term> <description>Valid</description> </item> <item> <term>Tool Offset multi-system specification NC spec [21,6]</term> <description>Valid</description> </item> <item> <term>L Tool index specification NC spec [3,4]</term> <description>Valid</description> </item> <item> <term>Sub spindle specification NC spec [4,1]</term> <description>Valid</description> </item> </list> </para>  <para> Compatible Chart of this function for different OSP controls: <list type="table"> <listheader> <term>OSP Control</term> <description>Compatible</description> </listheader> <item> <term>P100II</term> <description>Yes</description> </item> <item> <term>P200</term> <description>Yes</description> </item> <item> <term>P300L</term> <description>No</description> </item> <item> <term>P300S/TD Mode</term> <description>No</description> </item> <item> <term>P300S/TL Mode</term> <description>Yes</description> </item> </list> </para> </remarks>
      <Figure> TOOL DATA - TOOL WEAR OFFSET - BASE A <para>Tool wear offset table at base A cutting position.  Cutting position at different base can be changed by toggling Cutting Position menu. <img src="Lathe.Multi.ToolData.ToolWearOffset.jpg" /> </para> </Figure>
      <SubSystem> Please see <see href="SubSystemNoteTable.htm">Sub System Note Table</see> for more information if applicable. <para>Valid sub systems for this function (Y = Valid, N = Not valid)</para> <para> <list type="table"> <listheader> <term>NC_RUN </term> <term>NC_RUN_1 </term> <term>NC_RUN_2 </term> <term>NC_RUN_3 </term> <term>NC_PANEL </term> <term>NC_PANEL_1 </term> <term>NC_PANEL_2 </term> <term>NC_PANEL_3 </term> <term>NC_AL </term> <term>NC_AR </term> <term>NC_BL </term> <term>NC_BR </term> <term>NC_CL </term> <term>NC_CR </term> <term>NC_2AL </term> </listheader> <item> <term>Y (*5)</term> <term>Y     </term> <term>N     </term> <term>N     </term> <term>Y (*5)</term> <term>Y     </term> <term>N     </term> <term>N     </term> <term>Y     </term> <term>Y     </term> <term>N     </term> <term>N     </term> <term>N     </term> <term>N     </term> <term>N     </term> </item> </list> </para>  </SubSystem>
    </member>
    <member name="M:Okuma.CLDATAPI.DataAPI.CTools.GetToolWearOffset(System.Int32,Okuma.CLDATAPI.Enumerations.ToolWearOffsetAxisIndexEnum,Okuma.CLDATAPI.Enumerations.CuttingPositionEnum)">
      <summary>For tool offset multi-system specification NC spec [21,6], it gets tool wear offset at the specified offset index, axis index, and cutting position index for current sub system. </summary>
      <example> This sample shows how to call the GetToolWearOffset() method. <para>	vNosePattern = objTool.GetToolWearOffset(CInt(Me.TulNoseRCompensationPatternFrom.Text), CInt(Me.TulNoseRCompensationPatternTo.Text), Me.tulComboToolWearOffset.SelectedValue)	</para> </example>
      <param name="intOffsetIndex">Offset index value</param>
      <param name="enAxisIndex">Axis value</param>
      <param name="enCuttingPosition">Cutting position</param>
      <returns>A System.Double value</returns>
      <DataUnit> Default unit is in mm.  Other unit can be set by calling SetDataUnit method </DataUnit>
      <exception cref="System.ApplicationException">Thrown when function fails to perform the operation at current NC condition.</exception>
      <exception cref="System.NotSupportedException">Thrown when operation/input parameters are not supported for the current system.</exception>
      <remarks>  <para> The following specifications for cutting position PrincipalAxis1_BaseA must be met in order to function: <list type="table"> <listheader> <term>Specification</term> <description>Valid/Invalid</description> </listheader> <item> <term>Tool wear compensation specification NC spec [21,5]</term> <description>Valid</description> </item> <item> <term>Tool Offset multi-system specification NC spec [21,6]</term> <description>Valid</description> </item> </list> </para>  <para> The following specifications for cutting position PrincipalAxis1_BaseB must be met in order to function: <list type="table"> <listheader> <term>Specification</term> <description>Valid/Invalid</description> </listheader> <item> <term>Tool wear compensation specification NC spec [21,5]</term> <description>Valid</description> </item> <item> <term>Tool Offset multi-system specification NC spec [21,6]</term> <description>Valid</description> </item> <item> <term>L Tool index specification NC spec [3,4]</term> <description>Valid</description> </item> </list> </para>  <para> The following specifications for cutting position PrincipalAxis1_VerticalA must be met in order to function: <list type="table"> <listheader> <term>Specification</term> <description>Valid/Invalid</description> </listheader> <item> <term>Tool wear compensation specification NC spec [21,5]</term> <description>Valid</description> </item> <item> <term>Tool Offset multi-system specification NC spec [21,6]</term> <description>Valid</description> </item> </list> </para>  <para> The following specifications for cutting position PrincipalAxis1_VerticalB must be met in order to function: <list type="table"> <listheader> <term>Specification</term> <description>Valid/Invalid</description> </listheader> <item> <term>Tool wear compensation specification NC spec [21,5]</term> <description>Valid</description> </item> <item> <term>Tool Offset multi-system specification NC spec [21,6]</term> <description>Valid</description> </item> <item> <term>L Tool index specification NC spec [3,4]</term> <description>Valid</description> </item> </list> </para>  <para> The following specifications for cutting position PrincipalAxis2_BaseA must be met in order to function: <list type="table"> <listheader> <term>Specification</term> <description>Valid/Invalid</description> </listheader> <item> <term>Tool wear compensation specification NC spec [21,5]</term> <description>Valid</description> </item> <item> <term>Tool Offset multi-system specification NC spec [21,6]</term> <description>Valid</description> </item> <item> <term>Sub spindle specification NC spec [4,1]</term> <description>Valid</description> </item> </list> </para>  <para> The following specifications for cutting position PrincipalAxis2_BaseB must be met in order to function: <list type="table"> <listheader> <term>Specification</term> <description>Valid/Invalid</description> </listheader> <item> <term>Tool wear compensation specification NC spec [21,5]</term> <description>Valid</description> </item> <item> <term>Tool Offset multi-system specification NC spec [21,6]</term> <description>Valid</description> </item> <item> <term>L Tool index specification NC spec [3,4]</term> <description>Valid</description> </item> <item> <term>Sub spindle specification NC spec [4,1]</term> <description>Valid</description> </item> </list> </para>  <para> The following specifications for cutting position PrincipalAxis2_VerticalA must be met in order to function: <list type="table"> <listheader> <term>Specification</term> <description>Valid/Invalid</description> </listheader> <item> <term>Tool wear compensation specification NC spec [21,5]</term> <description>Valid</description> </item> <item> <term>Tool Offset multi-system specification NC spec [21,6]</term> <description>Valid</description> </item> <item> <term>Sub spindle specification NC spec [4,1]</term> <description>Valid</description> </item> </list> </para>  <para> The following specifications for cutting position PrincipalAxis2_VerticalB must be met in order to function: <list type="table"> <listheader> <term>Specification</term> <description>Valid/Invalid</description> </listheader> <item> <term>Tool wear compensation specification NC spec [21,5]</term> <description>Valid</description> </item> <item> <term>Tool Offset multi-system specification NC spec [21,6]</term> <description>Valid</description> </item> <item> <term>L Tool index specification NC spec [3,4]</term> <description>Valid</description> </item> <item> <term>Sub spindle specification NC spec [4,1]</term> <description>Valid</description> </item> </list> </para>  <para> Compatible Chart of this function for different OSP controls: <list type="table"> <listheader> <term>OSP Control</term> <description>Compatible</description> </listheader> <item> <term>P100II</term> <description>Yes</description> </item> <item> <term>P200</term> <description>Yes</description> </item> <item> <term>P300L</term> <description>No</description> </item> <item> <term>P300S/TD Mode</term> <description>No</description> </item> <item> <term>P300S/TL Mode</term> <description>Yes</description> </item> </list> </para> </remarks>
      <Figure> TOOL DATA - TOOL WEAR OFFSET - BASE A <para>Tool wear offset table at base A cutting position.  Cutting position at different base can be changed by toggling Cutting Position menu. <img src="Lathe.Multi.ToolData.ToolWearOffset.jpg" /> </para> </Figure>
      <SubSystem> Please see <see href="SubSystemNoteTable.htm">Sub System Note Table</see> for more information if applicable. <para>Valid sub systems for this function (Y = Valid, N = Not valid)</para> <para> <list type="table"> <listheader> <term>NC_RUN </term> <term>NC_RUN_1 </term> <term>NC_RUN_2 </term> <term>NC_RUN_3 </term> <term>NC_PANEL </term> <term>NC_PANEL_1 </term> <term>NC_PANEL_2 </term> <term>NC_PANEL_3 </term> <term>NC_AL </term> <term>NC_AR </term> <term>NC_BL </term> <term>NC_BR </term> <term>NC_CL </term> <term>NC_CR </term> <term>NC_2AL </term> </listheader> <item> <term>Y (*5)</term> <term>Y     </term> <term>N     </term> <term>N     </term> <term>Y (*5)</term> <term>Y     </term> <term>N     </term> <term>N     </term> <term>Y     </term> <term>Y     </term> <term>N     </term> <term>N     </term> <term>N     </term> <term>N     </term> <term>N     </term> </item> </list> </para>  </SubSystem>
    </member>
    <member name="M:Okuma.CLDATAPI.DataAPI.CTools.SetToolWearOffset(System.Int32,Okuma.CLDATAPI.Enumerations.ToolWearOffsetAxisIndexEnum,Okuma.CLDATAPI.Enumerations.CuttingPositionEnum,System.Double)">
      <summary> For tool offset multi-system specification NC spec [21,6], It sets the tool wear offset value by adding the input value to the existing data at the specified offset index, axis index, and cutting position for current sub system. </summary>
      <example> This sample shows how to call the SetToolWearOffset() method. <para>	objTool.SetToolWearOffset(CInt(txt_index1.Text), Me.cmb_ToolWearOffsetAxisIndex2.SelectedValue, Me.cmb_ToolWearOffsetAxisIndex2.SelectedValue, Convert.ToDouble(txt_double1.Text))	</para> </example>
      <param name="intOffsetIndex">Offset index</param>
      <param name="enAxisIndex">Axis index</param>
      <param name="enCuttingPosition">Cutting position</param>
      <param name="dblValue">Offset value to be set</param>
      <returns>None</returns>
      <DataUnit> Default unit is in mm.  Other unit can be set by calling SetDataUnit method </DataUnit>
      <exception cref="System.ApplicationException">Thrown when function fails to perform the operation at current NC condition.</exception>
      <exception cref="System.NotSupportedException">Thrown when operation/input parameters are not supported for the current system.</exception>
      <remarks>  <para> The following specifications for cutting position PrincipalAxis1_BaseA must be met in order to function: <list type="table"> <listheader> <term>Specification</term> <description>Valid/Invalid</description> </listheader> <item> <term>Tool wear compensation specification NC spec [21,5]</term> <description>Valid</description> </item> <item> <term>Tool Offset multi-system specification NC spec [21,6]</term> <description>Valid</description> </item> </list> </para>  <para> The following specifications for cutting position PrincipalAxis1_BaseB must be met in order to function: <list type="table"> <listheader> <term>Specification</term> <description>Valid/Invalid</description> </listheader> <item> <term>Tool wear compensation specification NC spec [21,5]</term> <description>Valid</description> </item> <item> <term>Tool Offset multi-system specification NC spec [21,6]</term> <description>Valid</description> </item> <item> <term>L Tool index specification NC spec [3,4]</term> <description>Valid</description> </item> </list> </para>  <para> The following specifications for cutting position PrincipalAxis1_VerticalA must be met in order to function: <list type="table"> <listheader> <term>Specification</term> <description>Valid/Invalid</description> </listheader> <item> <term>Tool wear compensation specification NC spec [21,5]</term> <description>Valid</description> </item> <item> <term>Tool Offset multi-system specification NC spec [21,6]</term> <description>Valid</description> </item> </list> </para>  <para> The following specifications for cutting position PrincipalAxis1_VerticalB must be met in order to function: <list type="table"> <listheader> <term>Specification</term> <description>Valid/Invalid</description> </listheader> <item> <term>Tool wear compensation specification NC spec [21,5]</term> <description>Valid</description> </item> <item> <term>Tool Offset multi-system specification NC spec [21,6]</term> <description>Valid</description> </item> <item> <term>L Tool index specification NC spec [3,4]</term> <description>Valid</description> </item> </list> </para>  <para> The following specifications for cutting position PrincipalAxis2_BaseA must be met in order to function: <list type="table"> <listheader> <term>Specification</term> <description>Valid/Invalid</description> </listheader> <item> <term>Tool wear compensation specification NC spec [21,5]</term> <description>Valid</description> </item> <item> <term>Tool Offset multi-system specification NC spec [21,6]</term> <description>Valid</description> </item> <item> <term>Sub spindle specification NC spec [4,1]</term> <description>Valid</description> </item> </list> </para>  <para> The following specifications for cutting position PrincipalAxis2_BaseB must be met in order to function: <list type="table"> <listheader> <term>Specification</term> <description>Valid/Invalid</description> </listheader> <item> <term>Tool wear compensation specification NC spec [21,5]</term> <description>Valid</description> </item> <item> <term>Tool Offset multi-system specification NC spec [21,6]</term> <description>Valid</description> </item> <item> <term>L Tool index specification NC spec [3,4]</term> <description>Valid</description> </item> <item> <term>Sub spindle specification NC spec [4,1]</term> <description>Valid</description> </item> </list> </para>  <para> The following specifications for cutting position PrincipalAxis2_VerticalA must be met in order to function: <list type="table"> <listheader> <term>Specification</term> <description>Valid/Invalid</description> </listheader> <item> <term>Tool wear compensation specification NC spec [21,5]</term> <description>Valid</description> </item> <item> <term>Tool Offset multi-system specification NC spec [21,6]</term> <description>Valid</description> </item> <item> <term>Sub spindle specification NC spec [4,1]</term> <description>Valid</description> </item> </list> </para>  <para> The following specifications for cutting position PrincipalAxis2_VerticalB must be met in order to function: <list type="table"> <listheader> <term>Specification</term> <description>Valid/Invalid</description> </listheader> <item> <term>Tool wear compensation specification NC spec [21,5]</term> <description>Valid</description> </item> <item> <term>Tool Offset multi-system specification NC spec [21,6]</term> <description>Valid</description> </item> <item> <term>L Tool index specification NC spec [3,4]</term> <description>Valid</description> </item> <item> <term>Sub spindle specification NC spec [4,1]</term> <description>Valid</description> </item> </list> </para>  <para> Compatible Chart of this function for different OSP controls: <list type="table"> <listheader> <term>OSP Control</term> <description>Compatible</description> </listheader> <item> <term>P100II</term> <description>Yes</description> </item> <item> <term>P200</term> <description>Yes</description> </item> <item> <term>P300L</term> <description>No</description> </item> <item> <term>P300S/TD Mode</term> <description>No</description> </item> <item> <term>P300S/TL Mode</term> <description>Yes</description> </item> </list> </para> </remarks>
      <Figure> TOOL DATA - TOOL WEAR OFFSET - BASE A <para>Tool wear offset table at base A cutting position.  Cutting position at different base can be changed by toggling Cutting Position menu. <img src="Lathe.Multi.ToolData.ToolWearOffset.jpg" /> </para> </Figure>
      <SubSystem> Please see <see href="SubSystemNoteTable.htm">Sub System Note Table</see> for more information if applicable. <para>Valid sub systems for this function (Y = Valid, N = Not valid)</para> <para> <list type="table"> <listheader> <term>NC_RUN </term> <term>NC_RUN_1 </term> <term>NC_RUN_2 </term> <term>NC_RUN_3 </term> <term>NC_PANEL </term> <term>NC_PANEL_1 </term> <term>NC_PANEL_2 </term> <term>NC_PANEL_3 </term> <term>NC_AL </term> <term>NC_AR </term> <term>NC_BL </term> <term>NC_BR </term> <term>NC_CL </term> <term>NC_CR </term> <term>NC_2AL </term> </listheader> <item> <term>Y (*5)</term> <term>Y     </term> <term>N     </term> <term>N     </term> <term>Y (*5)</term> <term>Y     </term> <term>N     </term> <term>N     </term> <term>Y     </term> <term>Y     </term> <term>N     </term> <term>N     </term> <term>N     </term> <term>N     </term> <term>N     </term> </item> </list> </para>  </SubSystem>
    </member>
    <member name="M:Okuma.CLDATAPI.DataAPI.CTools.AddToolWearOffset(System.Int32,Okuma.CLDATAPI.Enumerations.ToolWearOffsetAxisIndexEnum,Okuma.CLDATAPI.Enumerations.CuttingPositionEnum,System.Double)">
      <summary> For tool offset multi-system specification NC spec [21,6], It sets the tool wear offset value by adding the input value to the existing data at the specified offset index, axis index, and cutting position for current sub system. </summary>
      <example> This sample shows how to call the AddToolWearOffset() method. <para>	objTool.AddToolWearOffset(CInt(txt_index1.Text), Me.cmb_ToolWearOffsetAxisIndex2.SelectedValue, Me.cmb_ToolWearOffsetAxisIndex2.SelectedValue, Convert.ToDouble(txt_double1.Text))	</para> </example>
      <returns>None</returns>
      <DataUnit> Default unit is in mm.  Other unit can be set by calling SetDataUnit method </DataUnit>
      <param name="intOffsetIndex">Offset Index</param>
      <param name="enAxisIndex">Axis index</param>
      <param name="enCuttingPosition">Cutting position</param>
      <param name="dblValue">Offset value to be added to the existing data</param>
      <exception cref="System.ApplicationException">Thrown when function fails to perform the operation at current NC condition.</exception>
      <exception cref="System.NotSupportedException">Thrown when operation/input parameters are not supported for the current system.</exception>
      <remarks>  <para> The following specifications for cutting position PrincipalAxis1_BaseA must be met in order to function: <list type="table"> <listheader> <term>Specification</term> <description>Valid/Invalid</description> </listheader> <item> <term>Tool wear compensation specification NC spec [21,5]</term> <description>Valid</description> </item> <item> <term>Tool Offset multi-system specification NC spec [21,6]</term> <description>Valid</description> </item> </list> </para>  <para> The following specifications for cutting position PrincipalAxis1_BaseB must be met in order to function: <list type="table"> <listheader> <term>Specification</term> <description>Valid/Invalid</description> </listheader> <item> <term>Tool wear compensation specification NC spec [21,5]</term> <description>Valid</description> </item> <item> <term>Tool Offset multi-system specification NC spec [21,6]</term> <description>Valid</description> </item> <item> <term>L Tool index specification NC spec [3,4]</term> <description>Valid</description> </item> </list> </para>  <para> The following specifications for cutting position PrincipalAxis1_VerticalA must be met in order to function: <list type="table"> <listheader> <term>Specification</term> <description>Valid/Invalid</description> </listheader> <item> <term>Tool wear compensation specification NC spec [21,5]</term> <description>Valid</description> </item> <item> <term>Tool Offset multi-system specification NC spec [21,6]</term> <description>Valid</description> </item> </list> </para>  <para> The following specifications for cutting position PrincipalAxis1_VerticalB must be met in order to function: <list type="table"> <listheader> <term>Specification</term> <description>Valid/Invalid</description> </listheader> <item> <term>Tool wear compensation specification NC spec [21,5]</term> <description>Valid</description> </item> <item> <term>Tool Offset multi-system specification NC spec [21,6]</term> <description>Valid</description> </item> <item> <term>L Tool index specification NC spec [3,4]</term> <description>Valid</description> </item> </list> </para>  <para> The following specifications for cutting position PrincipalAxis2_BaseA must be met in order to function: <list type="table"> <listheader> <term>Specification</term> <description>Valid/Invalid</description> </listheader> <item> <term>Tool wear compensation specification NC spec [21,5]</term> <description>Valid</description> </item> <item> <term>Tool Offset multi-system specification NC spec [21,6]</term> <description>Valid</description> </item> <item> <term>Sub spindle specification NC spec [4,1]</term> <description>Valid</description> </item> </list> </para>  <para> The following specifications for cutting position PrincipalAxis2_BaseB must be met in order to function: <list type="table"> <listheader> <term>Specification</term> <description>Valid/Invalid</description> </listheader> <item> <term>Tool wear compensation specification NC spec [21,5]</term> <description>Valid</description> </item> <item> <term>Tool Offset multi-system specification NC spec [21,6]</term> <description>Valid</description> </item> <item> <term>L Tool index specification NC spec [3,4]</term> <description>Valid</description> </item> <item> <term>Sub spindle specification NC spec [4,1]</term> <description>Valid</description> </item> </list> </para>  <para> The following specifications for cutting position PrincipalAxis2_VerticalA must be met in order to function: <list type="table"> <listheader> <term>Specification</term> <description>Valid/Invalid</description> </listheader> <item> <term>Tool wear compensation specification NC spec [21,5]</term> <description>Valid</description> </item> <item> <term>Tool Offset multi-system specification NC spec [21,6]</term> <description>Valid</description> </item> <item> <term>Sub spindle specification NC spec [4,1]</term> <description>Valid</description> </item> </list> </para>  <para> The following specifications for cutting position PrincipalAxis2_VerticalB must be met in order to function: <list type="table"> <listheader> <term>Specification</term> <description>Valid/Invalid</description> </listheader> <item> <term>Tool wear compensation specification NC spec [21,5]</term> <description>Valid</description> </item> <item> <term>Tool Offset multi-system specification NC spec [21,6]</term> <description>Valid</description> </item> <item> <term>L Tool index specification NC spec [3,4]</term> <description>Valid</description> </item> <item> <term>Sub spindle specification NC spec [4,1]</term> <description>Valid</description> </item> </list> </para>  <para> Compatible Chart of this function for different OSP controls: <list type="table"> <listheader> <term>OSP Control</term> <description>Compatible</description> </listheader> <item> <term>P100II</term> <description>Yes</description> </item> <item> <term>P200</term> <description>Yes</description> </item> <item> <term>P300L</term> <description>No</description> </item> <item> <term>P300S/TD Mode</term> <description>No</description> </item> <item> <term>P300S/TL Mode</term> <description>Yes</description> </item> </list> </para> </remarks>
      <Figure> TOOL DATA - TOOL WEAR OFFSET - BASE A <para>Tool wear offset table at base A cutting position.  Cutting position at different base can be changed by toggling Cutting Position menu. <img src="Lathe.Multi.ToolData.ToolWearOffset.jpg" /> </para> </Figure>
      <SubSystem> Please see <see href="SubSystemNoteTable.htm">Sub System Note Table</see> for more information if applicable. <para>Valid sub systems for this function (Y = Valid, N = Not valid)</para> <para> <list type="table"> <listheader> <term>NC_RUN </term> <term>NC_RUN_1 </term> <term>NC_RUN_2 </term> <term>NC_RUN_3 </term> <term>NC_PANEL </term> <term>NC_PANEL_1 </term> <term>NC_PANEL_2 </term> <term>NC_PANEL_3 </term> <term>NC_AL </term> <term>NC_AR </term> <term>NC_BL </term> <term>NC_BR </term> <term>NC_CL </term> <term>NC_CR </term> <term>NC_2AL </term> </listheader> <item> <term>Y (*5)</term> <term>Y     </term> <term>N     </term> <term>N     </term> <term>Y (*5)</term> <term>Y     </term> <term>N     </term> <term>N     </term> <term>Y     </term> <term>Y     </term> <term>N     </term> <term>N     </term> <term>N     </term> <term>N     </term> <term>N     </term> </item> </list> </para>  </SubSystem>
    </member>
    <member name="M:Okuma.CLDATAPI.DataAPI.CTools.GetToolCuttingPosition">
      <summary> For multi-insert tool specification NC spec [5,3] , it gets current tool position on tool offset page for current sub system. </summary>
      <example> This sample shows how to call the GetToolCuttingPosition() method. <para> Dim enValue As ToolPositionEnum	</para> <para> enValue = objTool.GetToolCuttingPosition()	</para> </example>
      <returns>A ToolPositionEnum value</returns>
      <exception cref="System.ApplicationException">Thrown when function fails to perform the operation at current NC condition.</exception>
      <exception cref="System.NotSupportedException">Thrown when operation/input parameters are not supported for the current system.</exception>
      <Figure> TOOL DATA - TOOL OFFSET/NOSE R COMPENSATION - BASE A/BASE B/VERT. A/VERT. B <para> <img src="Lathe.Multi.Tooldata.ToolOffsetNoseR.jpg" /> </para> </Figure>
      <SubSystem> Please see <see href="SubSystemNoteTable.htm">Sub System Note Table</see> for more information if applicable. <para>Valid sub systems for this function (Y = Valid, N = Not valid)</para> <para> <list type="table"> <listheader> <term>NC_RUN </term> <term>NC_RUN_1 </term> <term>NC_RUN_2 </term> <term>NC_RUN_3 </term> <term>NC_PANEL </term> <term>NC_PANEL_1 </term> <term>NC_PANEL_2 </term> <term>NC_PANEL_3 </term> <term>NC_AL </term> <term>NC_AR </term> <term>NC_BL </term> <term>NC_BR </term> <term>NC_CL </term> <term>NC_CR </term> <term>NC_2AL </term> </listheader> <item> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> </item> </list> </para> </SubSystem>
      <remarks>  <para> Compatible Chart of this function for different OSP controls: <list type="table"> <listheader> <term>OSP Control</term> <description>Compatible</description> </listheader> <item> <term>P100II</term> <description>Yes</description> </item> <item> <term>P200</term> <description>Yes</description> </item> <item> <term>P300L</term> <description>No</description> </item> <item> <term>P300S/TD Mode</term> <description>No</description> </item> <item> <term>P300S/TL Mode</term> <description>No</description> </item> </list> </para>  </remarks>
    </member>
    <member name="M:Okuma.CLDATAPI.DataAPI.CTools.GetReferenceToolOffset1(System.Int32,Okuma.CLDATAPI.Enumerations.ToolEdgeEnum,Okuma.CLDATAPI.Enumerations.SpindleAxisModeEnum)">
      <summary>For OSP-P300L: Gets reference tool offset 1 value at the specified registered/attached tool number, edge number, and spindle for current sub system. </summary>
      <example> This sample shows how to obtain all reference tool offset 1 by using GetReferenceToolOffset1() method. <para>		Dim intToolNo As Integer	</para> <para>	    Dim enSpindleAxisMode as SpindleAxisModeEnum</para> <para>		Dim enToolEdge As ToolEdgeEnum	</para> <para>	    Dim intValue As Integer	</para> <para>	    Dim intCuttingPosition As Integer	</para> <para>	    Dim intCuttingPositionIndex As Integer	</para> <para>	    Dim intCuttingPositionList() As Integer	</para> <para>	    Dim intToolEdgeIndex As Integer	</para> <para>	    Dim intToolEdgeList() As Integer	</para> <para>	    Dim intToolNoIndex As Integer	</para> <para>	    Dim intToolList() As Integer	</para> <para>	    ' get list of all registered/attached tools</para> <para>		intToolList = m_CTools.GetToolList(ToolListTypeEnum.AllTools)	</para> <para>		For intToolNoIndex = 0 To UBound(intToolList)	</para> <para>		intToolNo = intToolList(intToolNoIndex)	</para> <para>	    ' get list of all registered tool edges of a tool</para> <para>		intToolEdgeList = m_CTools.GetRegisteredToolEdges(intToolNo)	</para> <para>		For intToolEdgeIndex = 0 To UBound(intToolEdgeList)	</para> <para>		enToolEdge = intToolEdgeList(intToolEdgeIndex)	</para> <para>	    ' get list of all registered cutting positions of a tool/edge</para> <para>		intCuttingPositionList = m_CTools.GetRegisteredCuttingPositions(intToolNo, enToolEdge)	</para> <para>		For intCuttingPositionIndex = 0 To UBound(intCuttingPositionList)	</para> <para>		intCuttingPosition = intCuttingPositionList(intCuttingPositionIndex)	</para> <para>		enSpindleAxisMode = m_CTools.GetSpindleAxisMode(intToolNo, enToolEdge, intCuttingPosition)	</para> <para>	    ' get reference tool offset 1 that is associated with a tool number, edge number, and spindle axis mode.</para> <para>		intValue = m_CTools.GetReferenceToolOffset1(intToolNo, enToolEdge, enSpindleAxisMode)	</para> <para>	    Next	</para> <para>	    Next	</para> <para>		Next	</para> </example>
      <param name="intToolNo">Registered/attached tool number</param>
      <param name="enEdgeNo">Edge Number. Using Edge No. 1 if tool is a non-multi edges tool.</param>
      <param name="enSpindleAxisMode">Spindle Axis mode index</param>
      <returns>A System.Integer value represents the reference tool offset number 1. It returns 0 if no reference offset assigned to a tool</returns>
      <exception cref="System.ApplicationException">Thrown when function fails to perform the operation at current NC condition.</exception>
      <exception cref="System.NotSupportedException">Thrown when operation/input parameters are not supported for the current system.</exception>
      <Figure> <para> TOOL DATA SETTING - TURRET INFO - MANAGE INFOMRATION PROCESSING TOOLS - OFFSET NO.1 <img src="Lathe.P300L.TurretInfo.jpg" /> </para> </Figure>
      <SubSystem> Please see <see href="SubSystemNoteTable.htm">Sub System Note Table</see> for more information if applicable. <para>Valid sub systems for this function (Y = Valid, N = Not valid)</para> <para> <list type="table"> <listheader> <term>NC_RUN </term> <term>NC_RUN_1 </term> <term>NC_RUN_2 </term> <term>NC_RUN_3 </term> <term>NC_PANEL </term> <term>NC_PANEL_1 </term> <term>NC_PANEL_2 </term> <term>NC_PANEL_3 </term> <term>NC_AL </term> <term>NC_AR </term> <term>NC_BL </term> <term>NC_BR </term> <term>NC_CL </term> <term>NC_CR </term> <term>NC_2AL </term> </listheader> <item> <term>Y (*45)</term> <term>Y (*45)</term> <term>Y (*45)</term> <term>Y (*45)</term> <term>Y (*45)</term> <term>Y (*45)</term> <term>Y (*45)</term> <term>Y (*45)</term> <term>Y (*45)</term> <term>Y (*45)</term> <term>Y (*45)</term> <term>Y (*45)</term> <term>Y (*45)</term> <term>Y (*45)</term> <term>Y (*45)</term> </item> </list> </para> </SubSystem>
      <remarks>  <para> Compatible Chart of this function for different OSP controls: <list type="table"> <listheader> <term>OSP Control</term> <description>Compatible</description> </listheader> <item> <term>P100II</term> <description>No</description> </item> <item> <term>P200</term> <description>No</description> </item> <item> <term>P300L</term> <description>Yes</description> </item> <item> <term>P300S/TD Mode</term> <description>No</description> </item> <item> <term>P300S/TL Mode</term> <description>No</description> </item> </list> </para>  </remarks>
    </member>
    <member name="M:Okuma.CLDATAPI.DataAPI.CTools.GetReferenceToolOffset2(System.Int32,Okuma.CLDATAPI.Enumerations.ToolEdgeEnum,Okuma.CLDATAPI.Enumerations.SpindleAxisModeEnum)">
      <summary>For OSP-P300L: Gets reference tool offset 2 value at the specified registered/attached tool number, edge number, and spindle for current sub system. </summary>
      <example> This sample shows how to obtain all reference tool offset 2 by using GetReferenceToolOffset2() method. <para>		Dim intToolNo As Integer	</para> <para>	    Dim enSpindleAxisMode as SpindleAxisModeEnum</para> <para>		Dim enToolEdge As ToolEdgeEnum	</para> <para>	    Dim intValue As Integer	</para> <para>	    Dim intCuttingPosition As Integer	</para> <para>	    Dim intCuttingPositionIndex As Integer	</para> <para>	    Dim intCuttingPositionList() As Integer	</para> <para>	    Dim intToolEdgeIndex As Integer	</para> <para>	    Dim intToolEdgeList() As Integer	</para> <para>	    Dim intToolNoIndex As Integer	</para> <para>	    Dim intToolList() As Integer	</para> <para>	    ' get list of all registered/attached tools</para> <para>		intToolList = m_CTools.GetToolList(ToolListTypeEnum.AllTools)	</para> <para>		For intToolNoIndex = 0 To UBound(intToolList)	</para> <para>		intToolNo = intToolList(intToolNoIndex)	</para> <para>	    ' get list of all registered tool edges of a tool</para> <para>		intToolEdgeList = m_CTools.GetRegisteredToolEdges(intToolNo)	</para> <para>		For intToolEdgeIndex = 0 To UBound(intToolEdgeList)	</para> <para>		enToolEdge = intToolEdgeList(intToolEdgeIndex)	</para> <para>	    ' get list of all registered cutting positions of a tool/edge</para> <para>		intCuttingPositionList = m_CTools.GetRegisteredCuttingPositions(intToolNo, enToolEdge)	</para> <para>		For intCuttingPositionIndex = 0 To UBound(intCuttingPositionList)	</para> <para>		intCuttingPosition = intCuttingPositionList(intCuttingPositionIndex)	</para> <para>		enSpindleAxisMode = m_CTools.GetSpindleAxisMode(intToolNo, enToolEdge, intCuttingPosition)	</para> <para>	    ' get reference tool offset 1 that is associated with a tool number, edge number, and spindle axis mode.</para> <para>		intValue = m_CTools.GetReferenceToolOffset2(intToolNo, enToolEdge, enSpindleAxisMode)	</para> <para>	    Next	</para> <para>	    Next	</para> <para>		Next	</para> </example>
      <param name="intToolNo">Registered/attached tool number</param>
      <param name="enEdgeNo">Edge Number. Using Edge No. 1 if tool is a non-multi edges tool.</param>
      <param name="enSpindleAxisMode">Spindle Axis mode index</param>
      <returns>A System.Integer value represents the reference tool offset number 2. It returns 0 if no reference offset assigned to a tool</returns>
      <exception cref="System.ApplicationException">Thrown when function fails to perform the operation at current NC condition.</exception>
      <exception cref="System.NotSupportedException">Thrown when operation/input parameters are not supported for the current system.</exception>
      <Figure> <para> TOOL DATA SETTING - TURRET INFO - MANAGE INFOMRATION PROCESSING TOOLS - OFFSET NO.2 <img src="Lathe.P300L.TurretInfo.jpg" /> </para> </Figure>
      <SubSystem> Please see <see href="SubSystemNoteTable.htm">Sub System Note Table</see> for more information if applicable. <para>Valid sub systems for this function (Y = Valid, N = Not valid)</para> <para> <list type="table"> <listheader> <term>NC_RUN </term> <term>NC_RUN_1 </term> <term>NC_RUN_2 </term> <term>NC_RUN_3 </term> <term>NC_PANEL </term> <term>NC_PANEL_1 </term> <term>NC_PANEL_2 </term> <term>NC_PANEL_3 </term> <term>NC_AL </term> <term>NC_AR </term> <term>NC_BL </term> <term>NC_BR </term> <term>NC_CL </term> <term>NC_CR </term> <term>NC_2AL </term> </listheader> <item> <term>Y (*45)</term> <term>Y (*45)</term> <term>Y (*45)</term> <term>Y (*45)</term> <term>Y (*45)</term> <term>Y (*45)</term> <term>Y (*45)</term> <term>Y (*45)</term> <term>Y (*45)</term> <term>Y (*45)</term> <term>Y (*45)</term> <term>Y (*45)</term> <term>Y (*45)</term> <term>Y (*45)</term> <term>Y (*45)</term> </item> </list> </para> </SubSystem>
      <remarks>  <para> Compatible Chart of this function for different OSP controls: <list type="table"> <listheader> <term>OSP Control</term> <description>Compatible</description> </listheader> <item> <term>P100II</term> <description>No</description> </item> <item> <term>P200</term> <description>No</description> </item> <item> <term>P300L</term> <description>Yes</description> </item> <item> <term>P300S/TD Mode</term> <description>No</description> </item> <item> <term>P300S/TL Mode</term> <description>No</description> </item> </list> </para>  </remarks>
    </member>
    <member name="M:Okuma.CLDATAPI.DataAPI.CTools.SetReferenceToolOffset1(System.Int32,Okuma.CLDATAPI.Enumerations.ToolEdgeEnum,Okuma.CLDATAPI.Enumerations.SpindleAxisModeEnum,System.Int32)">
      <summary>For OSP-P300L: Sets reference tool offset 1 index at the specified registered/attached tool number, edge number, and spindle for current sub system. </summary>
      <example> This sample shows how to set reference tool offset 1 by using SetReferenceToolOffset1() method. <para>		Dim intToolNo As Integer	</para> <para>	    Dim enSpindleAxisMode as SpindleAxisModeEnum</para> <para>		Dim enToolEdge As ToolEdgeEnum	</para> <para>	    Dim intReferenceOffset1 As Integer	</para> <para>	    Dim intCuttingPosition As Integer	</para> <para>	    Dim intCuttingPositionIndex As Integer	</para> <para>	    Dim intCuttingPositionList() As Integer	</para> <para>	    Dim intToolEdgeIndex As Integer	</para> <para>	    Dim intToolEdgeList() As Integer	</para> <para>	    Dim intToolNoIndex As Integer	</para> <para>	    Dim intToolList() As Integer	</para> <para>	    ' get list of all registered/attached tools</para> <para>		intToolList = m_CTools.GetToolList(ToolListTypeEnum.AllTools)	</para> <para>		For intToolNoIndex = 0 To UBound(intToolList)	</para> <para>		intToolNo = intToolList(intToolNoIndex)	</para> <para>	    ' get list of all registered tool edges of a tool</para> <para>		intToolEdgeList = m_CTools.GetRegisteredToolEdges(intToolNo)	</para> <para>		For intToolEdgeIndex = 0 To UBound(intToolEdgeList)	</para> <para>		enToolEdge = intToolEdgeList(intToolEdgeIndex)	</para> <para>	    ' get list of all registered cutting positions of a tool/edge</para> <para>		intCuttingPositionList = m_CTools.GetRegisteredCuttingPositions(intToolNo, enToolEdge)	</para> <para>		For intCuttingPositionIndex = 0 To UBound(intCuttingPositionList)	</para> <para>		intCuttingPosition = intCuttingPositionList(intCuttingPositionIndex)	</para> <para>		enSpindleAxisMode = m_CTools.GetSpindleAxisMode(intToolNo, enToolEdge, intCuttingPosition)	</para> <para>	    ' Set reference tool offset 1 that is associated with a tool number, edge number, and spindle axis mode.</para> <para>	    Next	</para> <para>	    Next	</para> <para>		Next	</para> </example>
      <param name="intToolNo">Registered/attached tool Number</param>
      <param name="enEdgeNo">Edge Number. Using Edge No. 1 if tool is a non-multi edges tool.</param>
      <param name="enSpindleAxisMode">Spindle Axis mode index</param>
      <param name="intOffsetIndex">Offset index to be set</param>
      <exception cref="System.ApplicationException">Thrown when function fails to perform the operation at current NC condition.</exception>
      <exception cref="System.NotSupportedException">Thrown when operation/input parameters are not supported for the current system.</exception>
      <Figure> <para> TOOL DATA SETTING - TURRET INFO - MANAGE INFOMRATION PROCESSING TOOLS - OFFSET NO.1 <img src="Lathe.P300L.TurretInfo.jpg" /> </para> </Figure>
      <SubSystem> Please see <see href="SubSystemNoteTable.htm">Sub System Note Table</see> for more information if applicable. <para>Valid sub systems for this function (Y = Valid, N = Not valid)</para> <para> <list type="table"> <listheader> <term>NC_RUN </term> <term>NC_RUN_1 </term> <term>NC_RUN_2 </term> <term>NC_RUN_3 </term> <term>NC_PANEL </term> <term>NC_PANEL_1 </term> <term>NC_PANEL_2 </term> <term>NC_PANEL_3 </term> <term>NC_AL </term> <term>NC_AR </term> <term>NC_BL </term> <term>NC_BR </term> <term>NC_CL </term> <term>NC_CR </term> <term>NC_2AL </term> </listheader> <item> <term>Y (*45)</term> <term>Y (*45)</term> <term>Y (*45)</term> <term>Y (*45)</term> <term>Y (*45)</term> <term>Y (*45)</term> <term>Y (*45)</term> <term>Y (*45)</term> <term>Y (*45)</term> <term>Y (*45)</term> <term>Y (*45)</term> <term>Y (*45)</term> <term>Y (*45)</term> <term>Y (*45)</term> <term>Y (*45)</term> </item> </list> </para> </SubSystem>
      <remarks>  <para> Compatible Chart of this function for different OSP controls: <list type="table"> <listheader> <term>OSP Control</term> <description>Compatible</description> </listheader> <item> <term>P100II</term> <description>No</description> </item> <item> <term>P200</term> <description>No</description> </item> <item> <term>P300L</term> <description>Yes</description> </item> <item> <term>P300S/TD Mode</term> <description>No</description> </item> <item> <term>P300S/TL Mode</term> <description>No</description> </item> </list> </para>  </remarks>
    </member>
    <member name="M:Okuma.CLDATAPI.DataAPI.CTools.SetReferenceToolOffset2(System.Int32,Okuma.CLDATAPI.Enumerations.ToolEdgeEnum,Okuma.CLDATAPI.Enumerations.SpindleAxisModeEnum,System.Int32)">
      <summary>For OSP-P300L: Sets reference tool offset 2 index at the specified registered/attached tool number, edge number, and spindle for current sub system. </summary>
      <example> This sample shows how to set reference tool offset 2 by using SetReferenceToolOffset2() method. <para>		Dim intToolNo As Integer	</para> <para>	    Dim enSpindleAxisMode as SpindleAxisModeEnum</para> <para>		Dim enToolEdge As ToolEdgeEnum	</para> <para>	    Dim intReferenceOffset2 As Integer	</para> <para>	    Dim intCuttingPosition As Integer	</para> <para>	    Dim intCuttingPositionIndex As Integer	</para> <para>	    Dim intCuttingPositionList() As Integer	</para> <para>	    Dim intToolEdgeIndex As Integer	</para> <para>	    Dim intToolEdgeList() As Integer	</para> <para>	    Dim intToolNoIndex As Integer	</para> <para>	    Dim intToolList() As Integer	</para> <para>	    ' get list of all registered/attached tools</para> <para>		intToolList = m_CTools.GetToolList(ToolListTypeEnum.AllTools)	</para> <para>		For intToolNoIndex = 0 To UBound(intToolList)	</para> <para>		intToolNo = intToolList(intToolNoIndex)	</para> <para>	    ' get list of all registered tool edges of a tool</para> <para>		intToolEdgeList = m_CTools.GetRegisteredToolEdges(intToolNo)	</para> <para>		For intToolEdgeIndex = 0 To UBound(intToolEdgeList)	</para> <para>		enToolEdge = intToolEdgeList(intToolEdgeIndex)	</para> <para>	    ' get list of all registered cutting positions of a tool/edge</para> <para>		intCuttingPositionList = m_CTools.GetRegisteredCuttingPositions(intToolNo, enToolEdge)	</para> <para>		For intCuttingPositionIndex = 0 To UBound(intCuttingPositionList)	</para> <para>		intCuttingPosition = intCuttingPositionList(intCuttingPositionIndex)	</para> <para>		enSpindleAxisMode = m_CTools.GetSpindleAxisMode(intToolNo, enToolEdge, intCuttingPosition)	</para> <para>	    ' Set reference tool offset 1 that is associated with a tool number, edge number, and spindle axis mode.</para> <para>		m_CTools.SetReferenceToolOffset2(intToolNo, enToolEdge, enSpindleAxisMode, intReferenceOffset2)	</para> <para>	    Next	</para> <para>	    Next	</para> <para>		Next	</para> </example>
      <param name="intToolNo">Registered/attached tool Number</param>
      <param name="enEdgeNo">Edge Number. Using Edge No. 1 if tool is a non-multi edges tool.</param>
      <param name="enSpindleAxisMode">Spindle Axis mode index</param>
      <param name="intOffsetIndex">Offset index to be set</param>
      <exception cref="System.ApplicationException">Thrown when function fails to perform the operation at current NC condition.</exception>
      <exception cref="System.NotSupportedException">Thrown when operation/input parameters are not supported for the current system.</exception>
      <Figure> <para> TOOL DATA SETTING - TURRET INFO - MANAGE INFOMRATION PROCESSING TOOLS - OFFSET NO.2 <img src="Lathe.P300L.TurretInfo.jpg" /> </para> </Figure>
      <SubSystem> Please see <see href="SubSystemNoteTable.htm">Sub System Note Table</see> for more information if applicable. <para>Valid sub systems for this function (Y = Valid, N = Not valid)</para> <para> <list type="table"> <listheader> <term>NC_RUN </term> <term>NC_RUN_1 </term> <term>NC_RUN_2 </term> <term>NC_RUN_3 </term> <term>NC_PANEL </term> <term>NC_PANEL_1 </term> <term>NC_PANEL_2 </term> <term>NC_PANEL_3 </term> <term>NC_AL </term> <term>NC_AR </term> <term>NC_BL </term> <term>NC_BR </term> <term>NC_CL </term> <term>NC_CR </term> <term>NC_2AL </term> </listheader> <item> <term>Y (*45)</term> <term>Y (*45)</term> <term>Y (*45)</term> <term>Y (*45)</term> <term>Y (*45)</term> <term>Y (*45)</term> <term>Y (*45)</term> <term>Y (*45)</term> <term>Y (*45)</term> <term>Y (*45)</term> <term>Y (*45)</term> <term>Y (*45)</term> <term>Y (*45)</term> <term>Y (*45)</term> <term>Y (*45)</term> </item> </list> </para> </SubSystem>
      <remarks>  <para> Compatible Chart of this function for different OSP controls: <list type="table"> <listheader> <term>OSP Control</term> <description>Compatible</description> </listheader> <item> <term>P100II</term> <description>No</description> </item> <item> <term>P200</term> <description>No</description> </item> <item> <term>P300L</term> <description>Yes</description> </item> <item> <term>P300S/TD Mode</term> <description>No</description> </item> <item> <term>P300S/TL Mode</term> <description>No</description> </item> </list> </para>  </remarks>
    </member>
    <member name="T:Okuma.CLDATAPI.DataAPI.CTurret">
      <summary> Class provides information about turrets in the system.  </summary>
    </member>
    <member name="M:Okuma.CLDATAPI.DataAPI.CTurret.#ctor(Okuma.CLDATAPI.Enumerations.SubSystemEnum)">
      <summary> Create an instance of this class given sub System.  By default, class is created with sub System = NC_AL. </summary>
      <param name="enSubSystemEnum">Sub System</param>
    </member>
    <member name="M:Okuma.CLDATAPI.DataAPI.CTurret.SetSubSystem(Okuma.CLDATAPI.Enumerations.SubSystemEnum)">
      <summary> Set current sub System for this class instance </summary>
      <example> This example shows how to call SetSubSystemEnum method <para> objTurret.SetSubSystem(cmb_Turret_SubSys.SelectedItem)	</para> </example>
      <param name="enSubSystemEnum">Sub System Enum value. Value of parameter comes from Okuma.CLDATAPI.Enumerations.SubSystemEnum.</param>
      <exception cref="System.ApplicationException">Thrown when function fails to perform the operation at current NC condition.</exception>
      <exception cref="System.NotSupportedException">Thrown when operation/input parameters are not supported for the current System.</exception>
    </member>
    <member name="M:Okuma.CLDATAPI.DataAPI.CTurret.SetDataUnit(Okuma.CLDATAPI.Enumerations.DataUnitEnum)">
      <summary> Sets current data unit for this class instance. </summary>
      <example> This example shows how to call SetDataUnit method <para> objTurret.SetDataUnit(cmb_Turret_DataUnit.SelectedItem)	</para> </example>
      <param name="enDataUnit">Data Unit to be set. Value of parameter comes from Okuma.CLDATAPI.Enumerations.DataUnitEnum</param>
      <exception cref="System.NotSupportedException">Thrown when operation/input parameters are not supported for the current System.</exception>
      <remarks> If applicable, this setting is applied to data in this class instance only, not for NC Data Unit. For example: If NC Data unit is set to mm, and the data unit for this class instance is in inch, then NC data will be converted to inch and vice versa. </remarks>
      <Figure> OPTIONAL PARAMETER - UNIT - LENGTH UNIT System mm / inch.  This is for NC Data only. <para> <img src="ParametersScreen.DataUnit.jpg" /> </para>  </Figure>
    </member>
    <member name="M:Okuma.CLDATAPI.DataAPI.CTurret.GetToolNo(System.Int32)">
      <summary>For OSP-P300 Gets tool number assigned to a turret station number for current sub System <para>Note 1: Use appropriate sub System for a turret on OSP-P300S(LP) and OSP-P300L machine if applicable</para> <para>Note 2: This function does not support tool on ATC magazine. Please refer to CATC.GetToolNo instead</para> </summary>
      <example> This example shows how to call GetToolNo method to get tool number on B turret if applicable on P300S or P300L <para>  Dim intToolNo As Integer	</para> <para>  Dim intTurretStationNo As Integer	</para> <para>  objTurret.SetSubSystem (SubSystemEnum.NC_BL) </para> <para>  intToolNo = objTurret.GetToolNo(intTurretStationNo)	</para> <para>This example shows how to call GetToolNo method to get tool number on A turret if applicable on P300L</para> <para>  Dim intToolNo As Integer	</para> <para>  Dim intTurretStationNo As Integer	</para> <para>  objTurret.SetSubSystem (SubSystemEnum.NC_AL) </para> <para>  intToolNo = objTurret.GetToolNo(intTurretStationNo)	</para>///	</example>
      <param name="intTurretStationNo">Turret station number</param>
      <returns>A System.Int32 value.  It returns zero if no tool assigned to the specified turret station number.</returns>
      <exception cref="System.ApplicationException">Thrown when function fails to perform the operation at current NC condition.</exception>
      <exception cref="System.NotSupportedException">Thrown when operation/input parameters are not supported for the current System.</exception>
      <Figure> <para> OSP-P300L - MANAGE INFORMATION PROCESSING TOOLS - TURRET INFO - CURT. T NO. <img src="Lathe.P300L.TurretInfo.jpg" /> </para> <para> OSP-P300S - TOOL DATA SETTING - TURRET INFO -  MOUNTED SPOT <img src="Lathe.P300S.TurretInfo.jpg" /> </para> </Figure>
      <SubSystemEnum> Please see <see href="SubSystemEnumNoteTable.htm">Sub System Note Table for OSP-P300</see> for more information if applicable. <para>Valid sub Systems for this function (Y = Valid, N = Not valid)</para> <para> <list type="table"> <listheader> <term>NC_RUN </term> <term>NC_RUN_1 </term> <term>NC_RUN_2 </term> <term>NC_RUN_3 </term> <term>NC_PANEL </term> <term>NC_PANEL_1 </term> <term>NC_PANEL_2 </term> <term>NC_PANEL_3 </term> <term>NC_AL </term> <term>NC_AR </term> <term>NC_BL </term> <term>NC_BR </term> <term>NC_CL </term> <term>NC_CR </term> <term>NC_2AL </term> </listheader> <item> <term>Y (*43)</term> <term>Y (*43)</term> <term>Y (*43)</term> <term>Y (*43)</term> <term>Y (*43)</term> <term>Y (*43)</term> <term>Y (*43)</term> <term>Y (*43)</term> <term>Y (*43)</term> <term>Y (*43)</term> <term>Y (*43)</term> <term>Y (*43)</term> <term>Y (*43)</term> <term>Y (*43)</term> <term>Y (*43)</term> </item> </list> </para> </SubSystemEnum>
      <remarks>  <para> Compatible Chart of this function for different OSP controls: <list type="table"> <listheader> <term>OSP Control</term> <description>Compatible</description> </listheader> <item> <term>P100II</term> <description>No</description> </item> <item> <term>P200</term> <description>No</description> </item> <item> <term>P300L</term> <description>Yes</description> </item> <item> <term>P300S/TD Mode</term> <description>Yes</description> </item> <item> <term>P300S/TL Mode</term> <description>Yes</description> </item> </list> </para>  </remarks>
    </member>
    <member name="M:Okuma.CLDATAPI.DataAPI.CTurret.GetCurrentTurret">
      <summary>For OSP-P300L Gets current turret for current sub System </summary>
      <example> This example shows how to call GetCurrentTurret method <para>  Dim intCurrentTurretIndex As Integer	</para> <para>  intCurrentTurretIndex = objTurret.GetCurrentTurret()	</para> </example>
      <returns>A System.Int32 value</returns>
      <exception cref="System.ApplicationException">Thrown when function fails to perform the operation at current NC condition.</exception>
      <exception cref="System.NotSupportedException">Thrown when operation/input parameters are not supported for the current System.</exception>
      <Figure> <para> OSP-P300L - MANAGE INFORMATION PROCESSING TOOLS - TURRET INFO - CURT. T NO. <img src="Lathe.P300L.TurretInfo.jpg" /> </para> </Figure>
      <SubSystemEnum> Please see <see href="SubSystemEnumNoteTable.htm">Sub System Note Table for OSP-P300</see> for more information if applicable. <para>Valid sub Systems for this function (Y = Valid, N = Not valid)</para> <para> <list type="table"> <listheader> <term>NC_RUN </term> <term>NC_RUN_1 </term> <term>NC_RUN_2 </term> <term>NC_RUN_3 </term> <term>NC_PANEL </term> <term>NC_PANEL_1 </term> <term>NC_PANEL_2 </term> <term>NC_PANEL_3 </term> <term>NC_AL </term> <term>NC_AR </term> <term>NC_BL </term> <term>NC_BR </term> <term>NC_CL </term> <term>NC_CR </term> <term>NC_2AL </term> </listheader> <item> <term>Y (*45)</term> <term>Y (*45)</term> <term>Y (*45)</term> <term>Y (*45)</term> <term>Y (*45)</term> <term>Y (*45)</term> <term>Y (*45)</term> <term>Y (*45)</term> <term>Y (*45)</term> <term>Y (*45)</term> <term>Y (*45)</term> <term>Y (*45)</term> <term>Y (*45)</term> <term>Y (*45)</term> <term>Y (*45)</term> </item> </list> </para> </SubSystemEnum>
      <remarks>  <para> Compatible Chart of this function for different OSP controls: <list type="table"> <listheader> <term>OSP Control</term> <description>Compatible</description> </listheader> <item> <term>P100II</term> <description>No</description> </item> <item> <term>P200</term> <description>No</description> </item> <item> <term>P300L</term> <description>Yes</description> </item> <item> <term>P300S/TD Mode</term> <description>No</description> </item> <item> <term>P300S/TL Mode</term> <description>No</description> </item> </list> </para>  </remarks>
    </member>
    <member name="M:Okuma.CLDATAPI.DataAPI.CTurret.GetMaxToolPots(Okuma.CLDATAPI.Enumerations.TurretEnum)">
      <summary>Gets max tool pot per turret. </summary>
      <example> This example shows how to call GetMaxToolPots method <para>  Me.txtMaxToolPotPerTurret.Text = objTurret.GetMaxToolPots( Me.cboTurretSides.SelectedValue)	</para> </example>
      <param name="enTurret">Turret number</param>
      <returns>A System.Int32 value</returns>
      <exception cref="System.ApplicationException">Thrown when function fails to perform the operation at current NC condition.</exception>
      <exception cref="System.NotSupportedException">Thrown when operation/input parameters are not supported for the current System.</exception>
      <remarks> <para> When upper Turret (A Turret) is equipped with B-Axis control, the function returns 4 to represent 4 different turret index positions. <para> For example:</para> <para> 	T050109 - Turret position 1 (horizontal position and tool pointing to the left) with tool nose radius compensation number 5 and tool offset 9</para> <para> 	T060210 - Turret position 2 (vertical position and tool pointing downward) with with tool nose radius compensation number 6 and tool offset 10</para> <para> 	T070311 - Turret position 3 (horizontal position and tool pointing to the right) with with tool nose radius compensation number 7 and tool offset 11</para> <para> 	T080412 - Turret position 4 (vertical position and tool pointing upward) with tool nose radius compensation number 8 and tool offset 12. Turret index position 4 is not applicable since turret cannot be indexed into this position (vertical position and tool pointing upward) </para> </para> <para> The following specifications for A/B Turret must be met in order to function: <list type="table"> <listheader> <term>Specification</term> <description>Valid/Invalid</description> </listheader> <item> <term>Parallel 2 Spindles specification</term> <description>Invalid</description> </item> </list> </para> <para> <para> The following specifications for turret on R/L side of machine must be met in order to function: <list type="table"> <listheader> <term>Specification</term> <description>Valid/Invalid</description> </listheader> <item> <term>Parallel 2 Spindles specification</term> <description>Valid</description> </item> </list> </para> </para> </remarks>
      <Figure>PARAMETER - TURRET/DOOR - Number of tools on turret A-side/B-side <para> <img src="Lathe.Parameter.Turret.jpg" /> </para>  </Figure>
    </member>
    <member name="M:Okuma.CLDATAPI.DataAPI.CTurret.GetTurretMode">
      <summary>Get current selected turret A/B/C on NC panel.  In case of machine equipped with H1 Turret, the function returns No Turret mode. </summary>
      <example> This example shows how to call GetTurretMode method <para>  Me.turTurretMode.Text = System.Enum.GetNames(GetType(TurretModeEnum)).GetValue(objTurret.GetTurretMode)	</para> </example>
      <returns>An Okuma.CLDATAPI.Enumerations.TurretModeEnum value</returns>
      <exception cref="System.ApplicationException">Thrown when function fails to perform the operation at current NC condition.</exception>
      <exception cref="System.NotSupportedException">Thrown when operation/input parameters are not supported for the current System.</exception>
      <SubSystemEnum> Please see <see href="SubSystemEnumNoteTable.htm">Sub System Note Table</see> for more information if applicable. <para>Valid sub Systems for this function (Y = Valid, N = Not valid)</para> <para> <list type="table"> <listheader> <term>NC_RUN </term> <term>NC_RUN_1 </term> <term>NC_RUN_2 </term> <term>NC_RUN_3 </term> <term>NC_PANEL </term> <term>NC_PANEL_1 </term> <term>NC_PANEL_2 </term> <term>NC_PANEL_3 </term> <term>NC_AL </term> <term>NC_AR </term> <term>NC_BL </term> <term>NC_BR </term> <term>NC_CL </term> <term>NC_CR </term> <term>NC_2AL </term> </listheader> <item> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> </item> </list> </para>  </SubSystemEnum>
    </member>
    <member name="M:Okuma.CLDATAPI.DataAPI.CTurret.GetTurretOffset(System.Int32,Okuma.CLDATAPI.Enumerations.ToolOffsetAxisIndexEnum)">
      <summary>Gets the turret offset value at the specified axis index, and tool number for current sub System. </summary>
      <example> This example shows how to call GetTurretOffset method <para>  Me.turTurretOffset.Text = objTurret.GetTurretOffset(CInt(Me.turToolNo.Text), Me.turToolOffsetAxisCombo.SelectedValue, Me.turTurretOffsetCombo.SelectedValue)	</para> </example>
      <param name="intToolNo"> <para>Tool Number.</para> <para>If B Axis control and H1 Turret specification is valid then valid tool number is ranging from 1 to 1.</para> <para>If B Axis control and H1 Turret specification is invalid then valid tool number is ranging from 1 to 4.</para> <para>If B Axis control specification is invalid then valid tool number is ranging from 1 to 12.</para> </param>
      <param name="enAxisIndex">Axis index</param>
      <returns>A System.Double value</returns>
      <DataUnit> Default unit is in mm.  Other unit can be set by calling SetDataUnit method. </DataUnit>
      <exception cref="System.ApplicationException">Thrown when function fails to perform the operation at current NC condition.</exception>
      <exception cref="System.NotSupportedException">Thrown when operation/input parameters are not supported for the current System.</exception>
      <remarks> <para> ***** Note:  If B-Axis control specification is valid, the GetTurretOffset also functions as GetBAxisTurretOffset in BasePosition. </para> <para> The following specifications must be met in order to function: <list type="table"> <listheader> <term>Specification</term> <description>Valid/Invalid</description> </listheader> <item> <term>Turret position compensation NC spec [21,0]</term> <description>Valid</description> </item> </list> </para> </remarks>
      <Figure>PARAMETER - TURRET OFFSET NO - Turret offset table <para> <img src="Lathe.Parameter.TurretOffset.jpg" /> </para> </Figure>
      <SubSystemEnum> Please see <see href="SubSystemEnumNoteTable.htm">Sub System Note Table</see> for more information if applicable. <para>Valid sub Systems for Base Position (Y = Valid, N = Not valid)</para> <para> <list type="table"> <listheader> <term>NC_RUN </term> <term>NC_RUN_1 </term> <term>NC_RUN_2 </term> <term>NC_RUN_3 </term> <term>NC_PANEL </term> <term>NC_PANEL_1 </term> <term>NC_PANEL_2 </term> <term>NC_PANEL_3 </term> <term>NC_AL </term> <term>NC_AR </term> <term>NC_BL </term> <term>NC_BR </term> <term>NC_CL </term> <term>NC_CR </term> <term>NC_2AL </term> </listheader> <item> <term>Y (*3)</term> <term>Y</term> <term>Y (*4)</term> <term>Y (*4)</term> <term>Y (*3)</term> <term>Y</term> <term>Y (*4)</term> <term>Y (*4)</term> <term>Y</term> <term>Y</term> <term>Y (*4)</term> <term>Y (*4)</term> <term>Y (*4)</term> <term>Y (*4)</term> <term>Y</term> </item> </list> </para>  </SubSystemEnum>
    </member>
    <member name="M:Okuma.CLDATAPI.DataAPI.CTurret.SetTurretOffset(System.Int32,Okuma.CLDATAPI.Enumerations.ToolOffsetAxisIndexEnum,System.Double)">
      <summary>Sets the turret offset value at the specified axis index, and tool number for current sub System. </summary>
      <example> This example shows how to call SetTurretOffset method <para> objTurret.SetTurretOffset(CInt(Me.turToolNo.Text), Me.turToolOffsetAxisCombo.SelectedValue, Me.turTurretOffsetCombo.SelectedValue, CDbl(Me.turTurretOffsetUpd.Text))	</para> </example>
      <param name="intToolNo"> <para>Tool Number.</para> <para>If B Axis control and H1 Turret specification is valid then valid tool number is ranging from 1 to 1.</para> <para>If B Axis control and H1 Turret specification is invalid then valid tool number is ranging from 1 to 4.</para> <para>If B Axis control specification is invalid then valid tool number is ranging from 1 to 12.</para> </param>
      <param name="enAxisIndex">Axis Index</param>
      <param name="dblValue">Offset value to be set</param>
      <returns>None</returns>
      <DataUnit> Default unit is in mm.  Other unit can be set by calling SetDataUnit method. </DataUnit>
      <exception cref="System.ApplicationException">Thrown when function fails to perform the operation at current NC condition.</exception>
      <exception cref="System.NotSupportedException">Thrown when operation/input parameters are not supported for the current System.</exception>
      <remarks> <para> ***** Note:  If B-Axis control specification is valid, the SetTurretOffset also functions as SetBAxisTurretOffset in BasePosition. </para> <para> The following specifications must be met in order to function: <list type="table"> <listheader> <term>Specification</term> <description>Valid/Invalid</description> </listheader> <item> <term>Turret position compensation NC spec [21,0]</term> <description>Valid</description> </item> </list> </para> </remarks>
      <Figure>PARAMETER - TURRET OFFSET NO - Turret offset table <para> <img src="Lathe.Parameter.TurretOffset.jpg" /> </para> </Figure>
      <SubSystemEnum> Please see <see href="SubSystemEnumNoteTable.htm">Sub System Note Table</see> for more information if applicable. <para>Valid sub Systems for Base Position (Y = Valid, N = Not valid)</para> <para> <list type="table"> <listheader> <term>NC_RUN </term> <term>NC_RUN_1 </term> <term>NC_RUN_2 </term> <term>NC_RUN_3 </term> <term>NC_PANEL </term> <term>NC_PANEL_1 </term> <term>NC_PANEL_2 </term> <term>NC_PANEL_3 </term> <term>NC_AL </term> <term>NC_AR </term> <term>NC_BL </term> <term>NC_BR </term> <term>NC_CL </term> <term>NC_CR </term> <term>NC_2AL </term> </listheader> <item> <term>Y (*3)</term> <term>Y</term> <term>Y (*4)</term> <term>Y (*4)</term> <term>Y (*3)</term> <term>Y</term> <term>Y (*4)</term> <term>Y (*4)</term> <term>Y</term> <term>Y</term> <term>Y (*4)</term> <term>Y (*4)</term> <term>Y (*4)</term> <term>Y (*4)</term> <term>Y</term> </item> </list> </para>  </SubSystemEnum>
    </member>
    <member name="M:Okuma.CLDATAPI.DataAPI.CTurret.AddTurretOffset(System.Int32,Okuma.CLDATAPI.Enumerations.ToolOffsetAxisIndexEnum,System.Double)">
      <summary>Sets the turret offset value by adding the input value to the existing data at the specified tool number, axis index for current sub System. </summary>
      <example> This example shows how to call AddTurretOffset method <para> objTurret.AddTurretOffset(CInt(Me.turToolNo.Text), Me.turToolOffsetAxisCombo.SelectedValue, Me.turTurretOffsetCombo.SelectedValue, CDbl(Me.turTurretOffsetUpd.Text))	</para> </example>
      <param name="intToolNo"> <para>Tool Number.</para> <para>If B Axis control and H1 Turret specification is valid then valid tool number is ranging from 1 to 1.</para> <para>If B Axis control and H1 Turret specification is invalid then valid tool number is ranging from 1 to 4.</para> <para>If B Axis control specification is invalid then valid tool number is ranging from 1 to 12.</para> </param>
      <param name="enAxisIndex">Axis index</param>
      <param name="dblValue">Offset value to be added to</param>
      <returns>None</returns>
      <DataUnit> Default unit is in mm.  Other unit can be set by calling SetDataUnit method. </DataUnit>
      <exception cref="System.ApplicationException">Thrown when function fails to perform the operation at current NC condition.</exception>
      <exception cref="System.NotSupportedException">Thrown when operation/input parameters are not supported for the current System.</exception>
      <remarks> <para> ***** Note:  If B-Axis control specification is valid, the AddTurretOffset also functions as AddBAxisTurretOffset in BasePosition. </para> <para> The following specifications must be met in order to function: <list type="table"> <listheader> <term>Specification</term> <description>Valid/Invalid</description> </listheader> <item> <term>Turret position compensation NC spec [21,0]</term> <description>Valid</description> </item> </list> </para> </remarks>
      <Figure>PARAMETER - TURRET OFFSET NO - Turret offset table <para> <img src="Lathe.Parameter.TurretOffset.jpg" /> </para> </Figure>
      <SubSystemEnum> Please see <see href="SubSystemEnumNoteTable.htm">Sub System Note Table</see> for more information if applicable. <para>Valid sub Systems for Base Position (Y = Valid, N = Not valid)</para> <para> <list type="table"> <listheader> <term>NC_RUN </term> <term>NC_RUN_1 </term> <term>NC_RUN_2 </term> <term>NC_RUN_3 </term> <term>NC_PANEL </term> <term>NC_PANEL_1 </term> <term>NC_PANEL_2 </term> <term>NC_PANEL_3 </term> <term>NC_AL </term> <term>NC_AR </term> <term>NC_BL </term> <term>NC_BR </term> <term>NC_CL </term> <term>NC_CR </term> <term>NC_2AL </term> </listheader> <item> <term>Y (*3)</term> <term>Y</term> <term>Y (*4)</term> <term>Y (*4)</term> <term>Y (*3)</term> <term>Y</term> <term>Y (*4)</term> <term>Y (*4)</term> <term>Y</term> <term>Y</term> <term>Y (*4)</term> <term>Y (*4)</term> <term>Y (*4)</term> <term>Y (*4)</term> <term>Y</term> </item> </list> </para>  </SubSystemEnum>
    </member>
    <member name="M:Okuma.CLDATAPI.DataAPI.CTurret.GetBAxisTurretOffset(System.Int32,Okuma.CLDATAPI.Enumerations.ToolOffsetAxisIndexEnum,Okuma.CLDATAPI.Enumerations.BAxisTurretOffsetPositionEnum)">
      <summary>For B-Axis control specification, it gets the turret offset value at the specified tool number, axis index, and turret offset position compensation index </summary>
      <example> This example shows how to call GetBAxisTurretOffset method <para> Me.turBAxisTurretOffset.Text = objTurret.GetBAxisTurretOffset(CInt(Me.turToolNo.Text), Me.turToolOffsetAxisCombo.SelectedValue, Me.turBAxisTurretCombo.SelectedValue)	</para> </example>
      <param name="intToolNo"> <para>Tool Number.</para> <para>If B Axis control and H1 Turret specification is valid then valid tool number is ranging from 1 to 1.</para> <para>If B Axis control and H1 Turret specification is invalid then valid tool number is ranging from 1 to 4.</para> <para>If B Axis control specification is invalid then valid tool number is ranging from 1 to 12.</para> </param>
      <param name="enAxisIndex">Axis index</param>
      <param name="enPosition">Turret offset position index</param>
      <DataUnit> Default unit is in mm.  Other unit can be set by calling SetDataUnit method. </DataUnit>
      <exception cref="System.ApplicationException">Thrown when function fails to perform the operation at current NC condition.</exception>
      <exception cref="System.NotSupportedException">Thrown when operation/input parameters are not supported for the current system.</exception>
      <returns>A System.Double value</returns>
      <remarks> <para> ***** Note: If B-Axis control specification is invalid, the GetBAxisTurretOffset for BasePosition also functions as GetTurretOffset. </para> <para> The following specifications for Base Position must be met in order to function: <list type="table"> <listheader> <term>Specification</term> <description>Valid/Invalid</description> </listheader> <item> <term>Turret position compensation NC spec [21,0]</term> <description>Valid</description> </item> </list> </para> <para> The following specifications for Vertical Position must be met in order to function: <list type="table"> <listheader> <term>Specification</term> <description>Valid/Invalid</description> </listheader> <item> <term>Turret position compensation NC spec [21,0]</term> <description>Valid</description> </item> <item> <term>B-Axis control specification NC spec [8,7]</term> <description>Valid</description> </item> <item> <term>B Axial control 1 Degree pitch specification NC spec [8,6]</term> <description>Invalid</description> </item> <item> <term>B Axial control 1/1000 Degree pitch specification NC spec [8,5]</term> <description>Invalid</description> </item> </list> </para> <para> The following specifications for Base Position second spindle (R spindle) must be met in order to function: <list type="table"> <listheader> <term>Specification</term> <description>Valid/Invalid</description> </listheader> <item> <term>Turret position compensation NC spec [21,0]</term> <description>Valid</description> </item> <item> <term>B-Axis control specification NC spec [8,7]</term> <description>Valid</description> </item> <item> <term>Sub spindle specification NC spec [4,1]</term> <description>Valid</description> </item> </list> </para> </remarks>
      <Figure>PARAMETER - TURRET OFFSET NO - Turret offset table for different turret offset position compensation <para> <img src="Lathe.Parameter.TurretOffset.BAxisControl.jpg" /> </para> </Figure>
      <SubSystem> Please see <see href="SubSystemNoteTable.htm">Sub System Note Table</see> for more information if applicable. <para>Valid sub systems for Base Position (Y = Valid, N = Not valid)</para> <para> <list type="table"> <listheader> <term>NC_RUN </term> <term>NC_RUN_1 </term> <term>NC_RUN_2 </term> <term>NC_RUN_3 </term> <term>NC_PANEL </term> <term>NC_PANEL_1 </term> <term>NC_PANEL_2 </term> <term>NC_PANEL_3 </term> <term>NC_AL </term> <term>NC_AR </term> <term>NC_BL </term> <term>NC_BR </term> <term>NC_CL </term> <term>NC_CR </term> <term>NC_2AL </term> </listheader> <item> <term>Y (*3)</term> <term>Y</term> <term>Y (*4)</term> <term>Y (*4)</term> <term>Y (*3)</term> <term>Y</term> <term>Y (*4)</term> <term>Y (*4)</term> <term>Y</term> <term>Y</term> <term>Y (*4)</term> <term>Y (*4)</term> <term>Y (*4)</term> <term>Y (*4)</term> <term>Y</term> </item> </list> </para> <para>Valid sub systems for Vertical Position and Base Position Second Spindle (Y = Valid, N = Not valid)</para> <para> <list type="table"> <listheader> <term>NC_RUN </term> <term>NC_RUN_1 </term> <term>NC_RUN_2 </term> <term>NC_RUN_3 </term> <term>NC_PANEL </term> <term>NC_PANEL_1 </term> <term>NC_PANEL_2 </term> <term>NC_PANEL_3 </term> <term>NC_AL </term> <term>NC_AR </term> <term>NC_BL </term> <term>NC_BR </term> <term>NC_CL </term> <term>NC_CR </term> <term>NC_2AL </term> </listheader> <item> <term>Y (*5)</term> <term>Y</term> <term>N</term> <term>N</term> <term>Y (*5)</term> <term>Y</term> <term>N</term> <term>N</term> <term>Y</term> <term>Y</term> <term>N</term> <term>N</term> <term>N</term> <term>N</term> <term>N</term> </item> </list> </para>  </SubSystem>
    </member>
    <member name="M:Okuma.CLDATAPI.DataAPI.CTurret.SetBAxisTurretOffset(System.Int32,Okuma.CLDATAPI.Enumerations.ToolOffsetAxisIndexEnum,Okuma.CLDATAPI.Enumerations.BAxisTurretOffsetPositionEnum,System.Double)">
      <summary>For B-axis control specification, it sets the turret offset value at the specified tool number, axis index, and turret offset compensation position index </summary>
      <example> This example shows how to call SetBAxisTurretOffset method <para>  objTurret.SetBAxisTurretOffset(CInt(Me.turToolNo.Text), Me.turToolOffsetAxisCombo.SelectedValue, Me.turBAxisTurretCombo.SelectedValue, CDbl(Me.turBAxisTurretOffsetUpd.Text))	</para> </example>
      <param name="intToolNo"> <para>Tool Number.</para> <para>If B Axis control and H1 Turret specification is valid then valid tool number is ranging from 1 to 1.</para> <para>If B Axis control and H1 Turret specification is invalid then valid tool number is ranging from 1 to 4.</para> <para>If B Axis control specification is invalid then valid tool number is ranging from 1 to 12.</para> </param>
      <param name="enAxisIndex">Axis index. Value of parameter comes from Okuma.CLDATAPI.Enumerations.ToolOffsetAxisIndexEnum</param>
      <param name="enPosition">Turret offset compensation position index. Value of parameter comes from Okuma.CLDATAPI.Enumerations.BAxisTurretOffsetPositionEnum.</param>
      <param name="dblValue">Offset value</param>
      <DataUnit> Default unit is in mm.  Other unit can be set by calling SetDataUnit method. </DataUnit>
      <exception cref="System.ApplicationException">Thrown when function fails to perform the operation at current NC condition.</exception>
      <exception cref="System.NotSupportedException">Thrown when operation/input parameters are not supported for the current system.</exception>
      <remarks> <para> ***** Note: If B-Axis control specification is invalid, the SetBAxisTurretOffset for BasePosition also functions as SetTurretOffset. </para> <para> The following specifications for Base Position must be met in order to function: <list type="table"> <listheader> <term>Specification</term> <description>Valid/Invalid</description> </listheader> <item> <term>Turret position compensation NC spec [21,0]</term> <description>Valid</description> </item> </list> </para> <para> The following specifications for Vertical Position must be met in order to function: <list type="table"> <listheader> <term>Specification</term> <description>Valid/Invalid</description> </listheader> <item> <term>Turret position compensation NC spec [21,0]</term> <description>Valid</description> </item> <item> <term>B-Axis control specification NC spec [8,7]</term> <description>Valid</description> </item> <item> <term>B Axial control 1 Degree pitch specification NC spec [8,6]</term> <description>Invalid</description> </item> <item> <term>B Axial control 1/1000 Degree pitch specification NC spec [8,5]</term> <description>Invalid</description> </item> </list> </para> <para> The following specifications for Base Position second spindle (R spindle) must be met in order to function: <list type="table"> <listheader> <term>Specification</term> <description>Valid/Invalid</description> </listheader> <item> <term>Turret position compensation NC spec [21,0]</term> <description>Valid</description> </item> <item> <term>B-Axis control specification NC spec [8,7]</term> <description>Valid</description> </item> <item> <term>Sub spindle specification NC spec [4,1]</term> <description>Valid</description> </item> </list> </para> </remarks>
      <Figure>PARAMETER - TURRET OFFSET NO - Turret offset table for different turret offset position compensation <para> <img src="Lathe.Parameter.TurretOffset.BAxisControl.jpg" /> </para> </Figure>
      <SubSystem> Please see <see href="SubSystemNoteTable.htm">Sub System Note Table</see> for more information if applicable. <para>Valid sub systems for Base Position (Y = Valid, N = Not valid)</para> <para> <list type="table"> <listheader> <term>NC_RUN </term> <term>NC_RUN_1 </term> <term>NC_RUN_2 </term> <term>NC_RUN_3 </term> <term>NC_PANEL </term> <term>NC_PANEL_1 </term> <term>NC_PANEL_2 </term> <term>NC_PANEL_3 </term> <term>NC_AL </term> <term>NC_AR </term> <term>NC_BL </term> <term>NC_BR </term> <term>NC_CL </term> <term>NC_CR </term> <term>NC_2AL </term> </listheader> <item> <term>Y (*3)</term> <term>Y</term> <term>Y (*4)</term> <term>Y (*4)</term> <term>Y (*3)</term> <term>Y</term> <term>Y (*4)</term> <term>Y (*4)</term> <term>Y</term> <term>Y</term> <term>Y (*4)</term> <term>Y (*4)</term> <term>Y (*4)</term> <term>Y (*4)</term> <term>Y</term> </item> </list> </para> <para>Valid sub systems for Vertical Position and Base Position Second Spindle (Y = Valid, N = Not valid)</para> <para> <list type="table"> <listheader> <term>NC_RUN </term> <term>NC_RUN_1 </term> <term>NC_RUN_2 </term> <term>NC_PANEL </term> <term>NC_PANEL_1 </term> <term>NC_PANEL_2 </term> <term>NC_AL </term> <term>NC_AR </term> <term>NC_BL </term> <term>NC_BR </term> <term>NC_2AL </term> </listheader> <item> <term>Y (*5)</term> <term>Y</term> <term>N</term> <term>Y (*5)</term> <term>Y</term> <term>N</term> <term>Y</term> <term>Y</term> <term>N</term> <term>N</term> <term>N</term> </item> </list> </para>  </SubSystem>
    </member>
    <member name="M:Okuma.CLDATAPI.DataAPI.CTurret.AddBAxisTurretOffset(System.Int32,Okuma.CLDATAPI.Enumerations.ToolOffsetAxisIndexEnum,Okuma.CLDATAPI.Enumerations.BAxisTurretOffsetPositionEnum,System.Double)">
      <summary>For B-axis control specification, it sets the turret offset value by adding the input value to the existing data at the specified tool number, axis index, and turret offset compensation position index </summary>
      <example> This example shows how to call AddBAxisTurretOffset method <para> objTurret.AddBAxisTurretOffset(CInt(Me.turToolNo.Text), Me.turToolOffsetAxisCombo.SelectedValue, Me.turBAxisTurretCombo.SelectedValue, CDbl(Me.turBAxisTurretOffsetUpd.Text))	</para> </example>
      <param name="intToolNo"> <para>Tool Number.</para> <para>If B Axis control and H1 Turret specification is valid then valid tool number is ranging from 1 to 1.</para> <para>If B Axis control and H1 Turret specification is invalid then valid tool number is ranging from 1 to 4.</para> <para>If B Axis control specification is invalid then valid tool number is ranging from 1 to 12.</para> </param>
      <param name="enAxisIndex">Axis index. Value of parameter comes from Okuma.CLDATAPI.Enumerations.ToolOffsetAxisIndexEnum</param>
      <param name="enPosition">Turret offset compensation position index. Value of parameter comes from Okuma.CLDATAPI.Enumerations.BAxisTurretOffsetPositionEnum.</param>
      <param name="dblValue">Offset value to be added to</param>
      <DataUnit> Default unit is in mm.  Other unit can be set by calling SetDataUnit method. </DataUnit>
      <exception cref="System.ApplicationException">Thrown when function fails to perform the operation at current NC condition.</exception>
      <exception cref="System.NotSupportedException">Thrown when operation/input parameters are not supported for the current system.</exception>
      <remarks> <para> ***** Note: If B-Axis control specification is invalid, the AddBAxisTurretOffset for BasePosition also functions as AddTurretOffset. </para> <para> The following specifications for Base Position must be met in order to function: <list type="table"> <listheader> <term>Specification</term> <description>Valid/Invalid</description> </listheader> <item> <term>Turret position compensation NC spec [21,0]</term> <description>Valid</description> </item> </list> </para> <para> The following specifications for Vertical Position must be met in order to function: <list type="table"> <listheader> <term>Specification</term> <description>Valid/Invalid</description> </listheader> <item> <term>Turret position compensation NC spec [21,0]</term> <description>Valid</description> </item> <item> <term>B-Axis control specification NC spec [8,7]</term> <description>Valid</description> </item> <item> <term>B Axial control 1 Degree pitch specification NC spec [8,6]</term> <description>Invalid</description> </item> <item> <term>B Axial control 1/1000 Degree pitch specification NC spec [8,5]</term> <description>Invalid</description> </item> </list> </para> <para> The following specifications for Base Position second spindle (R spindle) must be met in order to function: <list type="table"> <listheader> <term>Specification</term> <description>Valid/Invalid</description> </listheader> <item> <term>Turret position compensation NC spec [21,0]</term> <description>Valid</description> </item> <item> <term>B-Axis control specification NC spec [8,7]</term> <description>Valid</description> </item> <item> <term>Sub spindle specification NC spec [4,1]</term> <description>Valid</description> </item> </list> </para> </remarks>
      <Figure>PARAMETER - TURRET OFFSET NO - Turret offset table for different turret offset position compensation <para> <img src="Lathe.Parameter.TurretOffset.BAxisControl.jpg" /> </para> </Figure>
      <SubSystem> Please see <see href="SubSystemNoteTable.htm">Sub System Note Table</see> for more information if applicable. <para>Valid sub systems for Base Position (Y = Valid, N = Not valid)</para> <para> <list type="table"> <listheader> <term>NC_RUN </term> <term>NC_RUN_1 </term> <term>NC_RUN_2 </term> <term>NC_RUN_3 </term> <term>NC_PANEL </term> <term>NC_PANEL_1 </term> <term>NC_PANEL_2 </term> <term>NC_PANEL_3 </term> <term>NC_AL </term> <term>NC_AR </term> <term>NC_BL </term> <term>NC_BR </term> <term>NC_CL </term> <term>NC_CR </term> <term>NC_2AL </term> </listheader> <item> <term>Y (*3)</term> <term>Y</term> <term>Y (*4)</term> <term>Y (*4)</term> <term>Y (*3)</term> <term>Y</term> <term>Y (*4)</term> <term>Y (*4)</term> <term>Y</term> <term>Y</term> <term>Y (*4)</term> <term>Y (*4)</term> <term>Y (*4)</term> <term>Y (*4)</term> <term>Y</term> </item> </list> </para> <para>Valid sub systems for Vertical Position and Base Position Second Spindle (Y = Valid, N = Not valid)</para> <para> <list type="table"> <listheader> <term>NC_RUN </term> <term>NC_RUN_1 </term> <term>NC_RUN_2 </term> <term>NC_PANEL </term> <term>NC_PANEL_1 </term> <term>NC_PANEL_2 </term> <term>NC_AL </term> <term>NC_AR </term> <term>NC_BL </term> <term>NC_BR </term> <term>NC_2AL </term> </listheader> <item> <term>Y (*5)</term> <term>Y</term> <term>N</term> <term>Y (*5)</term> <term>Y</term> <term>N</term> <term>Y</term> <term>Y</term> <term>N</term> <term>N</term> <term>N</term> </item> </list> </para>  </SubSystem>
    </member>
    <member name="T:Okuma.CLDATAPI.DataAPI.CVariables">
      <summary> Class provides variables information.  </summary>
    </member>
    <member name="M:Okuma.CLDATAPI.DataAPI.CVariables.#ctor(Okuma.CLDATAPI.Enumerations.SubSystemEnum)">
      <summary> Create an instance of this class given sub system.  By default, class is created with sub system = NC_AL. </summary>
      <param name="enSubSystem">Sub system</param>
    </member>
    <member name="M:Okuma.CLDATAPI.DataAPI.CVariables.SetSubSystem(Okuma.CLDATAPI.Enumerations.SubSystemEnum)">
      <summary> Set current sub system for this class instance </summary>
      <example> This example shows how to call SetSubSystem method <para> objVariables.SetSubSystem(cmb_Variable_SubSys.SelectedItem)	</para> </example>
      <param name="enSubSystem">SubSystemEnum value</param>
      <exception cref="System.ApplicationException">Thrown when function fails to perform the operation at current NC condition.</exception>
      <exception cref="System.NotSupportedException">Thrown when operation/input parameters are not supported for the current system.</exception>
    </member>
    <member name="M:Okuma.CLDATAPI.DataAPI.CVariables.GetCommonVariableValue(System.Int32)">
      <summary>Gets common variable at the specified index for current sub system. </summary>
      <example> This example shows how to call GetCommonVariableValue method <para>  Me.varValue.Text = objVariables.GetCommonVariableValue(CInt(Me.varCommonVarNumber.Text))	</para> </example>
      <param name="intIndex">Common variable index</param>
      <returns>A System.Double value</returns>
      <exception cref="System.ApplicationException">Thrown when function fails to perform the operation at current NC condition.</exception>
      <exception cref="System.NotSupportedException">Thrown when operation/input parameters are not supported for the current system.</exception>
      <Figure> PARAMETER - COMMON VARIABLE <para> <img src="Lathe.Parameter.Commonvariables.jpg" /> </para> </Figure>
      <SubSystem> Please see <see href="SubSystemNoteTable.htm">Sub System Note Table</see> for more information if applicable. <para>Valid sub systems for this function (Y = Valid, N = Not valid)</para> <para> <list type="table"> <listheader> <term>NC_RUN </term> <term>NC_RUN_1 </term> <term>NC_RUN_2 </term> <term>NC_RUN_3 </term> <term>NC_PANEL </term> <term>NC_PANEL_1 </term> <term>NC_PANEL_2 </term> <term>NC_PANEL_3 </term> <term>NC_AL </term> <term>NC_AR </term> <term>NC_BL </term> <term>NC_BR </term> <term>NC_CL </term> <term>NC_CR </term> <term>NC_2AL </term> </listheader> <item> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> </item> </list> </para>  </SubSystem>
    </member>
    <member name="M:Okuma.CLDATAPI.DataAPI.CVariables.GetCommonVariableValues(System.Int32,System.Int32)">
      <summary>Gets common variables at the specified indexes for current sub system. </summary>
      <example> This example shows how to call GetCommonVariableValues method <para>Try	</para> <para>	Me.varGetAllResults.Text = ""	</para> <para>	varRes = objVariables.GetCommonVariableValues(CInt(Me.varBegin.Text), CInt(Me.varEnd.Text))	</para> <para>	For Each curRes In varRes	</para> <para>		Me.varGetAllResults.Text += curRes + vbCrLf	</para> <para>	Next	</para> <para>Catch ae As ApplicationException	</para> <para>	doError("CVariable", ae.Message)	</para> <para>Catch ex As Exception	</para> <para>	doError("CVariable", ex.Message)	</para> <para>End Try	</para> </example>
      <param name="intFromIndex">Starting common variable index</param>
      <param name="intToIndex">Ending common variable index</param>
      <returns>An array of System.Double value</returns>
      <exception cref="System.ApplicationException">Thrown when function fails to perform the operation at current NC condition.</exception>
      <exception cref="System.NotSupportedException">Thrown when operation/input parameters are not supported for the current system.</exception>
      <Figure> PARAMETER - COMMON VARIABLE <para> <img src="Lathe.Parameter.Commonvariables.jpg" /> </para> </Figure>
      <SubSystem> Please see <see href="SubSystemNoteTable.htm">Sub System Note Table</see> for more information if applicable. <para>Valid sub systems for this function (Y = Valid, N = Not valid)</para> <para> <list type="table"> <listheader> <term>NC_RUN </term> <term>NC_RUN_1 </term> <term>NC_RUN_2 </term> <term>NC_RUN_3 </term> <term>NC_PANEL </term> <term>NC_PANEL_1 </term> <term>NC_PANEL_2 </term> <term>NC_PANEL_3 </term> <term>NC_AL </term> <term>NC_AR </term> <term>NC_BL </term> <term>NC_BR </term> <term>NC_CL </term> <term>NC_CR </term> <term>NC_2AL </term> </listheader> <item> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> </item> </list> </para>  </SubSystem>
    </member>
    <member name="M:Okuma.CLDATAPI.DataAPI.CVariables.SetCommonVariableValue(System.Int32,System.Double)">
      <summary>Sets common variable at the specified index for current sub system. </summary>
      <example> This example shows how to call SetSubSystem method <para> objVariables.SetCommonVariableValue(CInt(Me.varCommonVarNumber.Text), CDbl(Me.varValueUpdate.Text))	</para> </example>
      <param name="intIndex">Common variable index</param>
      <param name="dblValue">Common variable value to be set</param>
      <exception cref="System.ApplicationException">Thrown when function fails to perform the operation at current NC condition.</exception>
      <exception cref="System.NotSupportedException">Thrown when operation/input parameters are not supported for the current system.</exception>
      <Figure> PARAMETER - COMMON VARIABLE <para> <img src="Lathe.Parameter.Commonvariables.jpg" /> </para> </Figure>
      <SubSystem> Please see <see href="SubSystemNoteTable.htm">Sub System Note Table</see> for more information if applicable. <para>Valid sub systems for this function (Y = Valid, N = Not valid)</para> <para> <list type="table"> <listheader> <term>NC_RUN </term> <term>NC_RUN_1 </term> <term>NC_RUN_2 </term> <term>NC_RUN_3 </term> <term>NC_PANEL </term> <term>NC_PANEL_1 </term> <term>NC_PANEL_2 </term> <term>NC_PANEL_3 </term> <term>NC_AL </term> <term>NC_AR </term> <term>NC_BL </term> <term>NC_BR </term> <term>NC_CL </term> <term>NC_CR </term> <term>NC_2AL </term> </listheader> <item> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> </item> </list> </para>  </SubSystem>
    </member>
    <member name="M:Okuma.CLDATAPI.DataAPI.CVariables.AddCommonVariableValue(System.Int32,System.Double)">
      <summary> Sets common variable by adding the input value to the existing data at the specified index for current sub system. </summary>
      <example> This example shows how to call AddCommonVariableValue method <para> objVariables.AddCommonVariableValue(CInt(Me.varCommonVarNumber.Text), CDbl(Me.varValueUpdate.Text))	</para> </example>
      <param name="intIndex">Common variable index</param>
      <param name="dblValue">Common variable value to be added to</param>
      <exception cref="System.ApplicationException">Thrown when function fails to perform the operation at current NC condition.</exception>
      <exception cref="System.NotSupportedException">Thrown when operation/input parameters are not supported for the current system.</exception>
      <Figure> PARAMETER - COMMON VARIABLE <para> <img src="Lathe.Parameter.Commonvariables.jpg" /> </para> </Figure>
      <SubSystem> Please see <see href="SubSystemNoteTable.htm">Sub System Note Table</see> for more information if applicable. <para>Valid sub systems for this function (Y = Valid, N = Not valid)</para> <para> <list type="table"> <listheader> <term>NC_RUN </term> <term>NC_RUN_1 </term> <term>NC_RUN_2 </term> <term>NC_RUN_3 </term> <term>NC_PANEL </term> <term>NC_PANEL_1 </term> <term>NC_PANEL_2 </term> <term>NC_PANEL_3 </term> <term>NC_AL </term> <term>NC_AR </term> <term>NC_BL </term> <term>NC_BR </term> <term>NC_CL </term> <term>NC_CR </term> <term>NC_2AL </term> </listheader> <item> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> </item> </list> </para>  </SubSystem>
    </member>
    <member name="M:Okuma.CLDATAPI.DataAPI.CVariables.GetCommonVariableCount">
      <summary>Gets total common variables in the system. </summary>
      <example> This example shows how to call GetCommonVariableCount method <para> Me.varNumberOfVars.Text = objVariables.GetCommonVariableCount	</para> </example>
      <returns>A System.Int32 value</returns>
      <exception cref="System.ApplicationException">Thrown when function fails to perform the operation at current NC condition.</exception>
      <exception cref="System.NotSupportedException">Thrown when operation/input parameters are not supported for the current system.</exception>
    </member>
    <member name="T:Okuma.CLDATAPI.DataAPI.CWorkpiece">
      <summary> Class provides work piece information.  </summary>
    </member>
    <member name="M:Okuma.CLDATAPI.DataAPI.CWorkpiece.#ctor(Okuma.CLDATAPI.Enumerations.SubSystemEnum)">
      <summary> Create an instance of this class given sub system.  By default, class is created with sub system = NC_AL. </summary>
      <param name="enSubSystem">Sub system</param>
    </member>
    <member name="M:Okuma.CLDATAPI.DataAPI.CWorkpiece.SetSubSystem(Okuma.CLDATAPI.Enumerations.SubSystemEnum)">
      <summary> Set current sub system for this class instance </summary>
      <example> This example shows how to call SetSubSystem method <para>	Dim objWorkpiece As DataAPI.CWorkpiece	</para> <para>	objWorkpiece.SetSubSystem(wkCounterCombo.SelectedItem)	</para> </example>
      <param name="enSubSystem">SubSystemEnum value</param>
      <exception cref="System.ApplicationException">Thrown when function fails to perform the operation at current NC condition.</exception>
      <exception cref="System.NotSupportedException">Thrown when operation/input parameters are not supported for the current system.</exception>
    </member>
    <member name="M:Okuma.CLDATAPI.DataAPI.CWorkpiece.SetDataUnit(Okuma.CLDATAPI.Enumerations.DataUnitEnum)">
      <summary> Sets current data unit for this class instance. </summary>
      <example> This example shows how to call SetDataUnit method <para>	Me.cmb_WorkpieceDataunit.DataSource = System.Enum.GetValues(GetType(Okuma.CLDATAPI.Enumerations.DataUnitEnum))	</para> <para>	Dim objWorkpiece As DataAPI.CWorkpiece	</para> <para>	objWorkpiece.SetDataUnit(cmb_WorkpieceDataunit.SelectedItem)	</para> </example>
      <param name="enDataUnit">Data Unit to be set</param>
      <exception cref="System.NotSupportedException">Thrown when operation/input parameters are not supported for the current system.</exception>
      <remarks> If applicable, this setting is applied to data in this class instance only, not for NC Data Unit. For example: If NC Data unit is set to mm, and the data unit for this class instance is in inch, then NC data will be converted to inch and vice versa. </remarks>
      <Figure> OPTIONAL PARAMETER - UNIT - LENGTH UNIT SYSTEM mm / inch.  This is for NC Data only. <para> <img src="ParametersScreen.DataUnit.jpg" /> </para>  </Figure>
    </member>
    <member name="M:Okuma.CLDATAPI.DataAPI.CWorkpiece.GetZeroOffset(Okuma.CLDATAPI.Enumerations.AxisIndex4Enum)">
      <summary>Gets workpiece zero offset at the specified axis index for current sub system. <para>Refer to Get Axis Name function in CAxis class for availability of axes.</para> <para>For OSP-P300: The workpiece offset value is based on BASE ZERO COORDINATE (Reference Zero Coordinate System)</para> </summary>
      <example> This example shows how to call GetZeroOffset method <para>	Dim enAxisIndex As AxisIndex4Enum</para> <para>	Dim dblValue As Double</para> <para>	dblValue = objWorkpiece.GetZeroOffset(enAxisIndex)	</para> </example>
      <param name="enAxisIndex">Axis Index. Value of parameter comes from Okuma.CLDATAPI.Enumerations.AxisIndex4Enum.</param>
      <exception cref="System.ApplicationException">Thrown when function fails to perform the operation at current NC condition.</exception>
      <exception cref="System.NotSupportedException">Thrown when operation/input parameters are not supported for the current system.</exception>
      <returns>A System.Double value</returns>
      <DataUnit> Default unit is in mm.  Other unit can be set by calling SetDataUnit method.  Circular axis unit is in degree. </DataUnit>
      <remarks> The following specifications for axes listed below must be met in order to function: <list type="table"> <listheader> <term>Axis</term> <description>Specification</description> </listheader> <item> <term>W-Axis</term> <description> <para> One of the following specifications must be met in order to be valid axis:</para> <para>Sub spindle specification (NC spec [4,1])</para> <para>LT specification (NC spec [4,0])</para> <para>Auto tow-along tailstock specification (NC spec [27,3])</para> <para>NC Tailstock specification NC spec [27,5]</para> <para>Programmable Tailstock specification NC spec [27,0]</para> </description> </item> <item> <term>YI-Axis</term> <description> <para> The following specifications must be met in order to be valid axis:</para> <para>In case of A Turret, Multitasking machine specification NC spec [3,0]</para> <para>In case of A Turret, Slant Y-Axis specification NC spec [8,0] is effective</para> <para>In case of B Turret, NC spec code 2 [21,0] is effective</para> <para>In case of C Turret, NC spec code 2  [21,7] is effective</para> </description> </item> <item> <term>BA-Axis</term> <description> <para> The following specifications must be met in order to be valid axis:</para> <para>In case of A Turret, NC spec [13,3] is active</para> <para>Valid for upper A turret only with sub systems: NC-RUN, NC-RUN-1, NC-AL, NC-AR</para> </description> </item> </list> </remarks>
      <Figure> <para> OSP-P200 - ZERO SET - ZERO POINT - ZERO OFFSET <img src="Lathe.ZeroSet.jpg" /> </para> <para> OSP-P300 - ZERO SET - ZERO POINT - ZERO OFFSET <img src="Lathe.P300.ZeroOffset.jpg" /> </para> </Figure>
      <SubSystem> Please see <see href="SubSystemNoteTable.htm">Sub System Note Table</see> for more information if applicable. <para>Valid sub systems for this function (Y = Valid, N = Not valid)</para> <para> <list type="table"> <listheader> <term>NC_RUN </term> <term>NC_RUN_1 </term> <term>NC_RUN_2 </term> <term>NC_RUN_3 </term> <term>NC_PANEL </term> <term>NC_PANEL_1 </term> <term>NC_PANEL_2 </term> <term>NC_PANEL_3 </term> <term>NC_AL </term> <term>NC_AR </term> <term>NC_BL </term> <term>NC_BR </term> <term>NC_CL </term> <term>NC_CR </term> <term>NC_2AL </term> </listheader> <item> <term>Y (*10) (*5 for BA axis)</term> <term>Y (*11)</term> <term>Y (*12)</term> <term>Y (*12)</term> <term>Y (*10) (*5 for BA axis)</term> <term>Y (*11)</term> <term>Y (*12)</term> <term>Y (*12)</term> <term>Y</term> <term>Y (*13)</term> <term>Y (*14)</term> <term>Y (*9,*46)</term> <term>Y (*14)</term> <term>Y (*9,*46)</term> <term>Y</term> </item> </list> </para>  </SubSystem>
    </member>
    <member name="M:Okuma.CLDATAPI.DataAPI.CWorkpiece.SetZeroOffset(Okuma.CLDATAPI.Enumerations.AxisIndex4Enum,System.Double)">
      <summary>sets workpiece zero offset at the specified axis index for current sub system. <para>Refer to Get Axis Name function in CAxis class for availability of axes.</para> <para>For OSP-P300: The workpiece offset value is based on BASE ZERO COORDINATE (Reference Zero Coordinate System)</para> </summary>
      <example> This example shows how to call SetZeroOffset method <para>	Dim enAxisIndex As AxisIndex4Enum</para> <para>	Dim dblValue As Double</para> <para>	objWorkpiece.SetZeroOffset(enAxisIndex, dblValue)	</para> </example>
      <param name="enAxisIndex">Axis index</param>
      <param name="dblValue">Workpiece offset value to be set</param>
      <exception cref="System.ApplicationException">Thrown when function fails to perform the operation at current NC condition.</exception>
      <exception cref="System.NotSupportedException">Thrown when operation/input parameters are not supported for the current system.</exception>
      <returns>None</returns>
      <DataUnit> Default unit is in mm.  Other unit can be set by calling SetDataUnit method.  Circular axis unit is in degree. <para>Note:</para> <para>Setting a value of 400 to a rotary axis will be the same as setting of 40 to that of.</para> <para>Setting a value of -400 to a rotary axis will be the same as setting of 320 to that of.</para> </DataUnit>
      <remarks> The following specifications for axes listed below must be met in order to function: <list type="table"> <listheader> <term>Axis</term> <description>Specification</description> </listheader> <item> <term>W-Axis</term> <description> <para> One of the following specifications must be met in order to be valid axis:</para> <para>Sub spindle specification (NC spec [4,1])</para> <para>LT specification (NC spec [4,0])</para> <para>Auto tow-along tailstock specification (NC spec [27,3])</para> <para>NC Tailstock specification NC spec [27,5]</para> <para>Programmable Tailstock specification NC spec [27,0]</para> </description> </item> <item> <term>YI-Axis</term> <description> <para> The following specifications must be met in order to be valid axis:</para> <para>In case of A Turret, Multitasking machine specification NC spec [3,0]</para> <para>In case of A Turret, Slant Y-Axis specification NC spec [8,0] is effective</para> <para>In case of B Turret, NC spec code 2 [21,0] is effective</para> <para>In case of C Turret, NC spec code 2  [21,7] is effective</para> </description> </item> <item> <term>BA-Axis</term> <description> <para> The following specifications must be met in order to be valid axis:</para> <para>In case of A Turret, NC spec [13,3] is active</para> <para>Valid for upper A turret only with sub systems: NC-RUN, NC-RUN-1, NC-AL, NC-AR</para> </description> </item> </list> </remarks>
      <Figure> <para> OSP-P200 - ZERO SET - ZERO POINT - ZERO OFFSET <img src="Lathe.ZeroSet.jpg" /> </para> <para> OSP-P300 - ZERO SET - ZERO POINT - ZERO OFFSET <img src="Lathe.P300.ZeroOffset.jpg" /> </para> </Figure>
      <SubSystem> Please see <see href="SubSystemNoteTable.htm">Sub System Note Table</see> for more information if applicable. <para>Valid sub systems for this function (Y = Valid, N = Not valid)</para> <para> <list type="table"> <listheader> <term>NC_RUN </term> <term>NC_RUN_1 </term> <term>NC_RUN_2 </term> <term>NC_RUN_3 </term> <term>NC_PANEL </term> <term>NC_PANEL_1 </term> <term>NC_PANEL_2 </term> <term>NC_PANEL_3 </term> <term>NC_AL </term> <term>NC_AR </term> <term>NC_BL </term> <term>NC_BR </term> <term>NC_CL </term> <term>NC_CR </term> <term>NC_2AL </term> </listheader> <item> <term>Y (*10) (*5 for BA axis)</term> <term>Y (*11)</term> <term>Y (*12)</term> <term>Y (*12)</term> <term>Y (*10) (*5 for BA axis)</term> <term>Y (*11)</term> <term>Y (*12)</term> <term>Y (*12)</term> <term>Y</term> <term>Y (*13)</term> <term>Y (*14)</term> <term>Y (*9,*46)</term> <term>Y (*14)</term> <term>Y (*9,*46)</term> <term>Y</term> </item> </list> </para>  </SubSystem>
    </member>
    <member name="M:Okuma.CLDATAPI.DataAPI.CWorkpiece.AddZeroOffset(Okuma.CLDATAPI.Enumerations.AxisIndex4Enum,System.Double)">
      <summary>Sets workpiece zero offset by adding the input value to the existing data at the specified axis index for current sub system. <para>Refer to Get Axis Name function in CAxis class for availability of axes.</para> <para>For OSP-P300: The workpiece offset value is based on BASE ZERO COORDINATE (Reference Zero Coordinate System)</para> </summary>
      <example> This example shows how to call AddZeroOffset method <para>	Dim enAxisIndex As AxisIndex4Enum</para> <para>	Dim dblValue As Double</para> <para>	objWorkpiece.AddZeroOffset(enAxisIndex, dblValue)	</para> </example>
      <param name="enAxisIndex">Axis index</param>
      <param name="dblValue">Workpiece offset value to be added</param>
      <exception cref="System.ApplicationException">Thrown when function fails to perform the operation at current NC condition.</exception>
      <exception cref="System.NotSupportedException">Thrown when operation/input parameters are not supported for the current system.</exception>
      <returns>None</returns>
      <DataUnit> Default unit is in mm.  Other unit can be set by calling SetDataUnit method.  Circular axis unit is in degree. <para>Note:</para> <para>Setting a value of 400 to a rotary axis will be the same as setting of 40 to that of.</para> <para>Setting a value of -400 to a rotary axis will be the same as setting of 320 to that of.</para> </DataUnit>
      <remarks> The following specifications for axes listed below must be met in order to function: <list type="table"> <listheader> <term>Axis</term> <description>Specification</description> </listheader> <item> <term>W-Axis</term> <description> <para> One of the following specifications must be met in order to be valid axis:</para> <para>Sub spindle specification (NC spec [4,1])</para> <para>LT specification (NC spec [4,0])</para> <para>Auto tow-along tailstock specification (NC spec [27,3])</para> <para>NC Tailstock specification NC spec [27,5]</para> <para>Programmable Tailstock specification NC spec [27,0]</para> </description> </item> <item> <term>YI-Axis</term> <description> <para> The following specifications must be met in order to be valid axis:</para> <para>In case of A Turret, Multitasking machine specification NC spec [3,0]</para> <para>In case of A Turret, Slant Y-Axis specification NC spec [8,0] is effective</para> <para>In case of B Turret, NC spec code 2 [21,0] is effective</para> <para>In case of C Turret, NC spec code 2  [21,7] is effective</para> </description> </item> <item> <term>BA-Axis</term> <description> <para> The following specifications must be met in order to be valid axis:</para> <para>In case of A Turret, NC spec [13,3] is active</para> <para>Valid for upper A turret only with sub systems: NC-RUN, NC-RUN-1, NC-AL, NC-AR</para> </description> </item> </list> </remarks>
      <Figure> <para> OSP-P200 - ZERO SET - ZERO POINT - ZERO OFFSET <img src="Lathe.ZeroSet.jpg" /> </para> <para> OSP-P300 - ZERO SET - ZERO POINT - ZERO OFFSET <img src="Lathe.P300.ZeroOffset.jpg" /> </para> </Figure>
      <SubSystem> Please see <see href="SubSystemNoteTable.htm">Sub System Note Table</see> for more information if applicable. <para>Valid sub systems for this function (Y = Valid, N = Not valid)</para> <para> <list type="table"> <listheader> <term>NC_RUN </term> <term>NC_RUN_1 </term> <term>NC_RUN_2 </term> <term>NC_RUN_3 </term> <term>NC_PANEL </term> <term>NC_PANEL_1 </term> <term>NC_PANEL_2 </term> <term>NC_PANEL_3 </term> <term>NC_AL </term> <term>NC_AR </term> <term>NC_BL </term> <term>NC_BR </term> <term>NC_CL </term> <term>NC_CR </term> <term>NC_2AL </term> </listheader> <item> <term>Y (*10) (*5 for BA axis)</term> <term>Y (*11)</term> <term>Y (*12)</term> <term>Y (*12)</term> <term>Y (*10) (*5 for BA axis)</term> <term>Y (*11)</term> <term>Y (*12)</term> <term>Y (*12)</term> <term>Y</term> <term>Y (*13)</term> <term>Y (*14)</term> <term>Y (*9,*46)</term> <term>Y (*14)</term> <term>Y (*9,*46)</term> <term>Y</term> </item> </list> </para>  </SubSystem>
    </member>
    <member name="M:Okuma.CLDATAPI.DataAPI.CWorkpiece.CalZeroOffset(Okuma.CLDATAPI.Enumerations.AxisIndex4Enum,System.Double)">
      <summary>Determine the workpiece zero offset based on the calculation made on the input value and actual position at the specified axis index for current sub system. The offset value is calculated so that the input value becomes the actual position. <para>Refer to Get Axis Name function in CAxis class for availability of axes.</para> <para>For OSP-P300: The workpiece offset value is based on BASE ZERO COORDINATE (Reference Zero Coordinate System)</para> </summary>
      <example> This example shows how to call CalZeroOffset method <para> Try	</para> <para>		objWorkpiece.CalZeroOffset(Me.wkZeroOffsetCombo.SelectedValue, CDbl(Me.wkUpdateZeroOffset.Text))	</para> <para>		Me.wkZeroOffset.Text = objWorkpiece.GetZeroOffset(wkZeroOffsetCombo.SelectedValue)	</para> <para> Catch ae As ApplicationException	</para> <para>		doError("CWorkpiece", ae.Message)	</para> <para> Catch ex As Exception	</para> <para>		doError("CWorkpiece", ex.Message)	</para> <para> End Try	</para> </example>
      <param name="enAxisIndex">Axis index</param>
      <param name="dblValue">Input value to be calculated from</param>
      <exception cref="System.ApplicationException">Thrown when function fails to perform the operation at current NC condition.</exception>
      <exception cref="System.NotSupportedException">Thrown when operation/input parameters are not supported for the current system.</exception>
      <returns>None</returns>
      <DataUnit> Default unit is in mm.  Other unit can be set by calling SetDataUnit method.  Circular axis unit is in degree. </DataUnit>
      <remarks> The following specifications for axes listed below must be met in order to function: <list type="table"> <listheader> <term>Axis</term> <description>Specification</description> </listheader> <item> <term>W-Axis</term> <description> <para> One of the following specifications must be met in order to be valid axis:</para> <para>Sub spindle specification (NC spec [4,1])</para> <para>LT specification (NC spec [4,0])</para> <para>Auto tow-along tailstock specification (NC spec [27,3])</para> <para>NC Tailstock specification NC spec [27,5]</para> <para>Programmable Tailstock specification NC spec [27,0]</para> </description> </item> <item> <term>YI-Axis</term> <description> <para> The following specifications must be met in order to be valid axis:</para> <para>In case of A Turret, Multitasking machine specification NC spec [3,0]</para> <para>In case of A Turret, Slant Y-Axis specification NC spec [8,0] is effective</para> <para>In case of B Turret, NC spec code 2 [21,0] is effective</para> <para>In case of C Turret, NC spec code 2  [21,7] is effective</para> </description> </item> <item> <term>BA-Axis</term> <description> <para> The following specifications must be met in order to be valid axis:</para> <para>In case of A Turret, NC spec [13,3] is active</para> <para>Valid for upper A turret only with sub systems: NC-RUN, NC-RUN-1, NC-AL, NC-AR</para> </description> </item> </list> </remarks>
      <Figure> <para> OSP-P200 - ZERO SET - ZERO POINT - ZERO OFFSET <img src="Lathe.ZeroSet.jpg" /> </para> <para> OSP-P300 - ZERO SET - ZERO POINT - ZERO OFFSET <img src="Lathe.P300.ZeroOffset.jpg" /> </para> </Figure>
      <SubSystem> Please see <see href="SubSystemNoteTable.htm">Sub System Note Table</see> for more information if applicable. <para>Valid sub systems for this function (Y = Valid, N = Not valid)</para> <para> <list type="table"> <listheader> <term>NC_RUN </term> <term>NC_RUN_1 </term> <term>NC_RUN_2 </term> <term>NC_RUN_3 </term> <term>NC_PANEL </term> <term>NC_PANEL_1 </term> <term>NC_PANEL_2 </term> <term>NC_PANEL_3 </term> <term>NC_AL </term> <term>NC_AR </term> <term>NC_BL </term> <term>NC_BR </term> <term>NC_CL </term> <term>NC_CR </term> <term>NC_2AL </term> </listheader> <item> <term>Y (*10) (*5 for BA axis)</term> <term>Y (*11)</term> <term>Y (*12)</term> <term>Y (*12)</term> <term>Y (*10) (*5 for BA axis)</term> <term>Y (*11)</term> <term>Y (*12)</term> <term>Y (*12)</term> <term>Y</term> <term>Y (*13)</term> <term>Y (*14)</term> <term>Y (*9,*46)</term> <term>Y (*14)</term> <term>Y (*9,*46)</term> <term>Y</term> </item> </list> </para>  </SubSystem>
    </member>
    <member name="M:Okuma.CLDATAPI.DataAPI.CWorkpiece.GetZeroOffset(System.Int32,Okuma.CLDATAPI.Enumerations.AxisIndex7Enum)">
      <summary>Gets workpiece zero offset at the specified offset index, and axis index for current sub system. <para>Refer to Get Axis Name function in CAxis class for availability of axes.</para> <para>For OSP-P300: The workpiece offset value is based on BASE ZERO COORDINATE (Reference Zero Coordinate System)</para> </summary>
      <example> This example shows how to call GetZeroOffset method <para>	Dim intOffsetIndex As Integer</para> <para>	Dim enAxisIndex As AxisIndex7Enum</para> <para>	Dim dblValue As Double</para> <para>	dblValue = objWorkpiece.GetZeroOffset(intOffsetIndex, enAxisIndex)	</para> </example>
      <param name="intOffsetIndex">workpiece zero offset index</param>
      <param name="enAxisIndex">Axis Index. Value of parameter comes from Okuma.CLDATAPI.Enumerations.AxisIndex7Enum.</param>
      <exception cref="System.ApplicationException">Thrown when function fails to perform the operation at current NC condition.</exception>
      <exception cref="System.NotSupportedException">Thrown when operation/input parameters are not supported for the current system.</exception>
      <returns>A System.Double value represents the zero offset value</returns>
      <DataUnit> Default unit is in mm.  Other unit can be set by calling SetDataUnit method.  Circular axis unit is in degree. </DataUnit>
      <remarks> <para> <para> One of the following specifications must be met to be valid: </para> <list type="table"> <listheader> <term>Multi-Zero Offset</term> <description>Specification</description> </listheader> <item> <term>Work coordinate 10 sets. NC spec [6,4]</term> <description>ON</description> </item> <item> <term>Work coordinate 50 sets. NC spec [6,5]</term> <description>ON</description> </item> <item> <term>Work coordinate 100 sets. NC-B spec [8, 1]</term> <description>ON</description> </item> </list> </para> </remarks>
      <remarks> <para> The following specifications for axes listed below must be met in order to function:</para> <list type="table"> <listheader> <term>Axis</term> <description>Specification</description> </listheader> <item> <term>W-Axis</term> <description> <para> One of the following specifications must be met in order to be valid axis:</para> <para>Sub spindle specification (NC spec [4,1])</para> <para>LT specification (NC spec [4,0])</para> <para>Auto tow-along tailstock specification (NC spec [27,3])</para> <para>NC Tailstock specification NC spec [27,5]</para> <para>Programmable Tailstock specification NC spec [27,0]</para> </description> </item> <item> <term>YI-Axis</term> <description> <para> The following specifications must be met in order to be valid axis:</para> <para>In case of A Turret, Mutlitasking specification NC spec [3,0] is effective</para> <para>and Slant Y-Axis specification NC spec [8,0] is effective</para> <para>In case of B Turret, NC spec code 2 [21,0] is effective</para> <para>In case of C Turret, NC spec code 2  [21,7] is effective</para> </description> </item> </list> </remarks>
      <SubSystem> Please see <see href="SubSystemNoteTable.htm">Sub System Note Table</see> for more information if applicable. <para>Valid sub systems for this function (Y = Valid, N = Not valid)</para> <para> <list type="table"> <listheader> <term>NC_RUN </term> <term>NC_RUN_1 </term> <term>NC_RUN_2 </term> <term>NC_RUN_3 </term> <term>NC_PANEL </term> <term>NC_PANEL_1 </term> <term>NC_PANEL_2 </term> <term>NC_PANEL_3 </term> <term>NC_AL </term> <term>NC_AR </term> <term>NC_BL </term> <term>NC_BR </term> <term>NC_CL </term> <term>NC_CR </term> <term>NC_2AL </term> </listheader> <item> <term>Y (*10)</term> <term>Y (*11)</term> <term>Y (*12)</term> <term>Y (*12)</term> <term>Y (*10)</term> <term>Y (*11)</term> <term>Y (*12)</term> <term>Y (*12)</term> <term>Y</term> <term>Y (*13)</term> <term>Y (*14)</term> <term>Y (*9,*46)</term> <term>Y (*14)</term> <term>Y (*9,*46)</term> <term>Y</term> </item> </list> </para>  </SubSystem>
    </member>
    <member name="M:Okuma.CLDATAPI.DataAPI.CWorkpiece.SetZeroOffset(System.Int32,Okuma.CLDATAPI.Enumerations.AxisIndex7Enum,System.Double)">
      <summary>sets workpiece zero offset at the specified offset index, and axis index for current sub system. <para>Refer to Get Axis Name function in CAxis class for availability of axes.</para> <para>For OSP-P300: The workpiece offset value is based on BASE ZERO COORDINATE (Reference Zero Coordinate System)</para> </summary>
      <example> This example shows how to call SetZeroOffset method <para>	Dim enAxisIndex As AxisIndex7Enum</para> <para>	Dim dblValue As Double</para> <para>	Dim intOffsetIndex As Integer</para> <para>	objWorkpiece.SetZeroOffset(intOffsetIndex, enAxisIndex, dblValue)	</para> </example>
      <param name="intOffsetIndex">workpiece offset index</param>
      <param name="enAxisIndex">Axis index</param>
      <param name="dblValue">Workpiece offset value to be set</param>
      <exception cref="System.ApplicationException">Thrown when function fails to perform the operation at current NC condition.</exception>
      <exception cref="System.NotSupportedException">Thrown when operation/input parameters are not supported for the current system.</exception>
      <returns>None</returns>
      <DataUnit> Default unit is in mm.  Other unit can be set by calling SetDataUnit method.  Circular axis unit is in degree. <para>Note:</para> <para>Setting a value of 400 to a rotary axis will be the same as setting of 40 to that of.</para> <para>Setting a value of -400 to a rotary axis will be the same as setting of 320 to that of.</para> </DataUnit>
      <remarks> <para> <para> One of the following specifications must be met to be valid: </para> <list type="table"> <listheader> <term>Multi-Zero Offset</term> <description>Specification</description> </listheader> <item> <term>Work coordinate 10 sets. NC spec [6,4]</term> <description>ON</description> </item> <item> <term>Work coordinate 50 sets. NC spec [6,5]</term> <description>ON</description> </item> <item> <term>Work coordinate 100 sets. NC-B spec [8, 1]</term> <description>ON</description> </item> </list> </para> </remarks>
      <remarks> <para> The following specifications for axes listed below must be met in order to function:</para> <list type="table"> <listheader> <term>Axis</term> <description>Specification</description> </listheader> <item> <term>W-Axis</term> <description> <para> One of the following specifications must be met in order to be valid axis:</para> <para>Sub spindle specification (NC spec [4,1])</para> <para>LT specification (NC spec [4,0])</para> <para>Auto tow-along tailstock specification (NC spec [27,3])</para> <para>NC Tailstock specification NC spec [27,5]</para> <para>Programmable Tailstock specification NC spec [27,0]</para> </description> </item> <item> <term>YI-Axis</term> <description> <para> The following specifications must be met in order to be valid axis:</para> <para>In case of A Turret, Multitasking machine specification NC spec [3,0]</para> <para>and Slant Y-Axis specification NC spec [8,0] is effective</para> <para>In case of B Turret, NC spec code 2 [21,0] is effective</para> <para>In case of C Turret, NC spec code 2  [21,7] is effective</para> </description> </item> </list> </remarks>
      <SubSystem> Please see <see href="SubSystemNoteTable.htm">Sub System Note Table</see> for more information if applicable. <para>Valid sub systems for this function (Y = Valid, N = Not valid)</para> <para> <list type="table"> <listheader> <term>NC_RUN </term> <term>NC_RUN_1 </term> <term>NC_RUN_2 </term> <term>NC_RUN_3 </term> <term>NC_PANEL </term> <term>NC_PANEL_1 </term> <term>NC_PANEL_2 </term> <term>NC_PANEL_3 </term> <term>NC_AL </term> <term>NC_AR </term> <term>NC_BL </term> <term>NC_BR </term> <term>NC_CL </term> <term>NC_CR </term> <term>NC_2AL </term> </listheader> <item> <term>Y (*10)</term> <term>Y (*11)</term> <term>Y (*12)</term> <term>Y (*12)</term> <term>Y (*10)</term> <term>Y (*11)</term> <term>Y (*12)</term> <term>Y (*12)</term> <term>Y</term> <term>Y (*13)</term> <term>Y (*14)</term> <term>Y (*9,*46)</term> <term>Y (*14)</term> <term>Y (*9,*46)</term> <term>Y</term> </item> </list> </para>  </SubSystem>
    </member>
    <member name="M:Okuma.CLDATAPI.DataAPI.CWorkpiece.AddZeroOffset(System.Int32,Okuma.CLDATAPI.Enumerations.AxisIndex7Enum,System.Double)">
      <summary>Sets workpiece zero offset by adding the input value to the existing data at the specified offset index, and axis index for current sub system. <para>Refer to Get Axis Name function in CAxis class for availability of axes.</para> <para>For OSP-P300: The workpiece offset value is based on BASE ZERO COORDINATE (Reference Zero Coordinate System)</para> </summary>
      <example> This example shows how to call AddZeroOffset method <para>	Dim enAxisIndex As AxisIndex7Enum </para> <para>	Dim dblValue As Double </para> <para>	Dim intOffsetIndex As Integer </para> <para>	objWorkpiece.AddZeroOffset(intOffsetIndex, enAxisIndex, dblValue)	</para> </example>
      <param name="intOffsetIndex">workpiece offset index</param>
      <param name="enAxisIndex">Axis index</param>
      <param name="dblValue">Workpiece offset value to be added</param>
      <exception cref="System.ApplicationException">Thrown when function fails to perform the operation at current NC condition.</exception>
      <exception cref="System.NotSupportedException">Thrown when operation/input parameters are not supported for the current system.</exception>
      <returns>None</returns>
      <DataUnit> Default unit is in mm.  Other unit can be set by calling SetDataUnit method.  Circular axis unit is in degree. <para>Note:</para> <para>Setting a value of 400 to a rotary axis will be the same as setting of 40 to that of.</para> <para>Setting a value of -400 to a rotary axis will be the same as setting of 320 to that of.</para> </DataUnit>
      <remarks> <para> <para> One of the following specifications must be met to be valid: </para> <list type="table"> <listheader> <term>Multi-Zero Offset</term> <description>Specification</description> </listheader> <item> <term>Work coordinate 10 sets. NC spec [6,4]</term> <description>ON</description> </item> <item> <term>Work coordinate 50 sets. NC spec [6,5]</term> <description>ON</description> </item> <item> <term>Work coordinate 100 sets. NC-B spec [8, 1]</term> <description>ON</description> </item> </list> </para> </remarks>
      <remarks> <para> The following specifications for axes listed below must be met in order to function:</para> <list type="table"> <listheader> <term>Axis</term> <description>Specification</description> </listheader> <item> <term>W-Axis</term> <description> <para> One of the following specifications must be met in order to be valid axis:</para> <para>Sub spindle specification (NC spec [4,1])</para> <para>LT specification (NC spec [4,0])</para> <para>Auto tow-along tailstock specification (NC spec [27,3])</para> <para>NC Tailstock specification NC spec [27,5]</para> <para>Programmable Tailstock specification NC spec [27,0]</para> </description> </item> <item> <term>YI-Axis</term> <description> <para> The following specifications must be met in order to be valid axis:</para> <para>In case of A Turret, Multitasking machine specification NC spec [3,0]</para> <para>and Slant Y-Axis specification NC spec [8,0] is effective</para> <para>In case of B Turret, NC spec code 2 [21,0] is effective</para> <para>In case of C Turret, NC spec code 2  [21,7] is effective</para> </description> </item> </list> </remarks>
      <SubSystem> Please see <see href="SubSystemNoteTable.htm">Sub System Note Table</see> for more information if applicable. <para>Valid sub systems for this function (Y = Valid, N = Not valid)</para> <para> <list type="table"> <listheader> <term>NC_RUN </term> <term>NC_RUN_1 </term> <term>NC_RUN_2 </term> <term>NC_RUN_3 </term> <term>NC_PANEL </term> <term>NC_PANEL_1 </term> <term>NC_PANEL_2 </term> <term>NC_PANEL_3 </term> <term>NC_AL </term> <term>NC_AR </term> <term>NC_BL </term> <term>NC_BR </term> <term>NC_CL </term> <term>NC_CR </term> <term>NC_2AL </term> </listheader> <item> <term>Y (*10)</term> <term>Y (*11)</term> <term>Y (*12)</term> <term>Y (*12)</term> <term>Y (*10)</term> <term>Y (*11)</term> <term>Y (*12)</term> <term>Y (*12)</term> <term>Y</term> <term>Y (*13)</term> <term>Y (*14)</term> <term>Y (*9,*46)</term> <term>Y (*14)</term> <term>Y (*9,*46)</term> <term>Y</term> </item> </list> </para>  </SubSystem>
    </member>
    <member name="M:Okuma.CLDATAPI.DataAPI.CWorkpiece.CalZeroOffset(System.Int32,Okuma.CLDATAPI.Enumerations.AxisIndex7Enum,System.Double)">
      <summary>Determine the workpiece zero offset based on the calculation made on the input value and actual position at the specified offset index, and axis index for current sub system. The offset value is calculated so that the input value becomes the actual position. <para>Refer to Get Axis Name function in CAxis class for availability of axes.</para> <para>For OSP-P300: The workpiece offset value is based on BASE ZERO COORDINATE (Reference Zero Coordinate System)</para> </summary>
      <example> This example shows how to call CalZeroOffset method <para>	Dim enAxisIndex As AxisIndex7Enum</para> <para>	Dim dblValue As Double</para> <para>	Dim intOffsetIndex As Integer</para> <para>	objWorkpiece.CalZeroOffset(intOffsetIndex, enAxisIndex, dblValue)	</para> </example>
      <param name="intOffsetIndex">workpiece offset index</param>
      <param name="enAxisIndex">Axis index</param>
      <param name="dblValue">Input value to be calculated from</param>
      <exception cref="System.ApplicationException">Thrown when function fails to perform the operation at current NC condition.</exception>
      <exception cref="System.NotSupportedException">Thrown when operation/input parameters are not supported for the current system.</exception>
      <returns>None</returns>
      <DataUnit> Default unit is in mm.  Other unit can be set by calling SetDataUnit method.  Circular axis unit is in degree. </DataUnit>
      <remarks> <para> <para> One of the following specifications must be met to be valid: </para> <list type="table"> <listheader> <term>Multi-Zero Offset</term> <description>Specification</description> </listheader> <item> <term>Work coordinate 10 sets. NC spec [6,4]</term> <description>ON</description> </item> <item> <term>Work coordinate 50 sets. NC spec [6,5]</term> <description>ON</description> </item> <item> <term>Work coordinate 100 sets. NC-B spec [8, 1]</term> <description>ON</description> </item> </list> </para> </remarks>
      <remarks> <para> The following specifications for axes listed below must be met in order to function:</para> <list type="table"> <listheader> <term>Axis</term> <description>Specification</description> </listheader> <item> <term>W-Axis</term> <description> <para> One of the following specifications must be met in order to be valid axis:</para> <para>Sub spindle specification (NC spec [4,1])</para> <para>LT specification (NC spec [4,0])</para> <para>Auto tow-along tailstock specification (NC spec [27,3])</para> <para>NC Tailstock specification NC spec [27,5]</para> <para>Programmable Tailstock specification NC spec [27,0]</para> </description> </item> <item> <term>YI-Axis</term> <description> <para> The following specifications must be met in order to be valid axis:</para> <para>In case of A Turret, Multitasking machine specification NC spec [3,0]</para> <para>and Slant Y-Axis specification NC spec [8,0] is effective</para> <para>In case of B Turret, NC spec code 2 [21,0] is effective</para> <para>In case of C Turret, NC spec code 2  [21,7] is effective</para> </description> </item> </list> </remarks>
      <SubSystem> Please see <see href="SubSystemNoteTable.htm">Sub System Note Table</see> for more information if applicable. <para>Valid sub systems for this function (Y = Valid, N = Not valid)</para> <para> <list type="table"> <listheader> <term>NC_RUN </term> <term>NC_RUN_1 </term> <term>NC_RUN_2 </term> <term>NC_RUN_3 </term> <term>NC_PANEL </term> <term>NC_PANEL_1 </term> <term>NC_PANEL_2 </term> <term>NC_PANEL_3 </term> <term>NC_AL </term> <term>NC_AR </term> <term>NC_BL </term> <term>NC_BR </term> <term>NC_CL </term> <term>NC_CR </term> <term>NC_2AL </term> </listheader> <item> <term>Y (*10)</term> <term>Y (*11)</term> <term>Y (*12)</term> <term>Y (*12)</term> <term>Y (*10)</term> <term>Y (*11)</term> <term>Y (*12)</term> <term>Y (*12)</term> <term>Y</term> <term>Y (*13)</term> <term>Y (*14)</term> <term>Y (*9,*46)</term> <term>Y (*14)</term> <term>Y (*9,*46)</term> <term>Y</term> </item> </list> </para>  </SubSystem>
    </member>
    <member name="M:Okuma.CLDATAPI.DataAPI.CWorkpiece.GetWorkpieceCounter(Okuma.CLDATAPI.Enumerations.WorkpieceCounterEnum)">
      <summary>Gets number of machined workpiece at the specified workpiece counter index for current sub system. </summary>
      <example> This example shows how to call GetWorkpieceCounter method <para>	Try	</para> <para>		Me.wkCounterValue.Text = objWorkpiece.GetWorkpieceCounter(wkCounterCombo.SelectedValue)	</para> <para>	Catch ae As ApplicationException	</para> <para>	    doError("CWorkpiece", ae.Message)	</para> <para>	Catch ex As Exception	</para> <para>	    doError("CWorkpiece", ex.Message)	</para> <para>	End Try	</para> </example>
      <param name="enValue">Workpiece counter index</param>
      <returns>A System.Int32 value</returns>
      <exception cref="System.ApplicationException">Thrown when function fails to perform the operation at current NC condition.</exception>
      <exception cref="System.NotSupportedException">Thrown when operation/input parameters are not supported for the current system.</exception>
      <remarks> <para> The following specifications must be met in order to function: <list type="table"> <listheader> <term>Specification</term> <description>Valid/Invalid</description> </listheader> <item> <term>NC Work shop counter spec code [19,0] </term> <description>Valid</description> </item> </list> </para> </remarks>
      <Figure>AUTO OPERATION - ACTUAL POSITION - WORK COUNTER - COUNT <para> <img src="Lathe.AutoOperation.ActualPosition.WorkpieceCounter.jpg" /> </para> </Figure>
      <SubSystem> Please see <see href="SubSystemNoteTable.htm">Sub System Note Table</see> for more information if applicable. <para>Valid sub systems for this function (Y = Valid, N = Not valid)</para> <para> <list type="table"> <listheader> <term>NC_RUN </term> <term>NC_RUN_1 </term> <term>NC_RUN_2 </term> <term>NC_RUN_3 </term> <term>NC_PANEL </term> <term>NC_PANEL_1 </term> <term>NC_PANEL_2 </term> <term>NC_PANEL_3 </term> <term>NC_AL </term> <term>NC_AR </term> <term>NC_BL </term> <term>NC_BR </term> <term>NC_CL </term> <term>NC_CR </term> <term>NC_2AL </term> </listheader> <item> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> </item> </list> </para>  </SubSystem>
    </member>
    <member name="M:Okuma.CLDATAPI.DataAPI.CWorkpiece.SetWorkpieceCounter(Okuma.CLDATAPI.Enumerations.WorkpieceCounterEnum,System.Int32)">
      <summary>sets number of machined workpiece at the specified workpiece counter index for current sub system. </summary>
      <example> This example shows how to call SetWorkpieceCounter method <para> Try	</para> <para>		objWorkpiece.SetWorkpieceCounter(Me.wkCounterCombo.SelectedValue, CInt(Me.wkUpdateCounter.Text))	</para> <para> Catch ae As ApplicationException	</para> <para>		doError("CWorkpiece", ae.Message)	</para> <para> Catch ex As Exception	</para> <para>		doError("CWorkpiece", ex.Message)	</para> <para> End Try	</para> </example>
      <param name="enValue">Workpiece counter index</param>
      <param name="intValue">Number of workpiece to be set</param>
      <exception cref="System.ApplicationException">Thrown when function fails to perform the operation at current NC condition.</exception>
      <exception cref="System.NotSupportedException">Thrown when operation/input parameters are not supported for the current system.</exception>
      <remarks> <para> The following specifications must be met in order to function: <list type="table"> <listheader> <term>Specification</term> <description>Valid/Invalid</description> </listheader> <item> <term>NC Work shop counter spec code [19,0] </term> <description>Valid</description> </item> </list> </para> </remarks>
      <Figure>AUTO OPERATION - ACTUAL POSITION - WORK COUNTER - COUNT <para> <img src="Lathe.AutoOperation.ActualPosition.WorkpieceCounter.jpg" /> </para> </Figure>
      <SubSystem> Please see <see href="SubSystemNoteTable.htm">Sub System Note Table</see> for more information if applicable. <para>Valid sub systems for this function (Y = Valid, N = Not valid)</para> <para> <list type="table"> <listheader> <term>NC_RUN </term> <term>NC_RUN_1 </term> <term>NC_RUN_2 </term> <term>NC_RUN_3 </term> <term>NC_PANEL </term> <term>NC_PANEL_1 </term> <term>NC_PANEL_2 </term> <term>NC_PANEL_3 </term> <term>NC_AL </term> <term>NC_AR </term> <term>NC_BL </term> <term>NC_BR </term> <term>NC_CL </term> <term>NC_CR </term> <term>NC_2AL </term> </listheader> <item> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> </item> </list> </para>  </SubSystem>
    </member>
    <member name="M:Okuma.CLDATAPI.DataAPI.CWorkpiece.AddWorkpieceCounter(Okuma.CLDATAPI.Enumerations.WorkpieceCounterEnum,System.Int32)">
      <summary>sets number of machined workpiece by adding the input value to the existing data at the specified workpiece counter index for current sub system. </summary>
      <example> This example shows how to call AddWorkpieceCounter method <para> Try	</para> <para>		objWorkpiece.AddWorkpieceCounter(Me.wkCounterCombo.SelectedValue, CInt(Me.wkUpdateCounter.Text)))	</para> <para> Catch ae As ApplicationException	</para> <para>		doError("CWorkpiece", ae.Message)	</para> <para> Catch ex As Exception	</para> <para>		doError("CWorkpiece", ex.Message)	</para> <para> End Try	</para> </example>
      <param name="enValue">Workpiece counter index</param>
      <param name="intValue">Number of workpiece to be added to</param>
      <exception cref="System.ApplicationException">Thrown when function fails to perform the operation at current NC condition.</exception>
      <exception cref="System.NotSupportedException">Thrown when operation/input parameters are not supported for the current system.</exception>
      <remarks> <para> The following specifications must be met in order to function: <list type="table"> <listheader> <term>Specification</term> <description>Valid/Invalid</description> </listheader> <item> <term>NC Work shop counter spec code [19,0] </term> <description>Valid</description> </item> </list> </para> </remarks>
      <Figure>AUTO OPERATION - ACTUAL POSITION - WORK COUNTER - COUNT <para> <img src="Lathe.AutoOperation.ActualPosition.WorkpieceCounter.jpg" /> </para> </Figure>
      <SubSystem> Please see <see href="SubSystemNoteTable.htm">Sub System Note Table</see> for more information if applicable. <para>Valid sub systems for this function (Y = Valid, N = Not valid)</para> <para> <list type="table"> <listheader> <term>NC_RUN </term> <term>NC_RUN_1 </term> <term>NC_RUN_2 </term> <term>NC_RUN_3 </term> <term>NC_PANEL </term> <term>NC_PANEL_1 </term> <term>NC_PANEL_2 </term> <term>NC_PANEL_3 </term> <term>NC_AL </term> <term>NC_AR </term> <term>NC_BL </term> <term>NC_BR </term> <term>NC_CL </term> <term>NC_CR </term> <term>NC_2AL </term> </listheader> <item> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> </item> </list> </para>  </SubSystem>
    </member>
    <member name="M:Okuma.CLDATAPI.DataAPI.CWorkpiece.GetZeroShift(Okuma.CLDATAPI.Enumerations.AxisIndex4Enum)">
      <summary>Gets workpiece zero shift at the specified axis index for current sub system. <para>Refer to Get Axis Name function in CAxis class for availability of axes.</para> </summary>
      <example> This example shows how to call GetZeroShift method <code> Dim dblValue as Double </code> <code> Dim enAxisIndex as AxisIndex4Enum </code> <code> Dim intSubSystem as Integer </code> <code> objWorkpiece.SetSubSystem(intSubSystem) </code> <code> dblValue = objWorkpiece.GetZeroShift(enAxisIndex) </code> </example>
      <param name="enAxisIndex">Axis Index. Value of parameter comes from Okuma.CLDATAPI.Enumerations.AxisIndex4Enum.</param>
      <exception cref="System.ApplicationException">Thrown when function fails to perform the operation at current NC condition.</exception>
      <exception cref="System.NotSupportedException">Thrown when operation/input parameters are not supported for the current system.</exception>
      <returns>A System.Double value</returns>
      <DataUnit> Default unit is in mm.  Other unit can be set by calling SetDataUnit method.  Circular axis unit is in degree. </DataUnit>
      <remarks> The following specifications for axes listed below must be met in order to function: <list type="table"> <listheader> <term>Axis</term> <description>Specification</description> </listheader> <item> <term>W-Axis</term> <description> <para> One of the following specifications must be met in order to be valid axis:</para> <para>Sub spindle specification (NC spec [4,1])</para> <para>LT specification (NC spec [4,0])</para> <para>Auto tow-along tailstock specification (NC spec [27,3])</para> <para>NC Tailstock specification NC spec [27,5]</para> </description> </item> <item> <term>YI-Axis</term> <description> <para> The following specifications must be met in order to be valid axis:</para> <para>In case of A Turret, Multitasking machine specification NC spec [3,0]</para> <para>In case of A Turret, Slant Y-Axis specification NC spec [8,0] is effective</para> <para>In case of B Turret, NC spec code 2 [21,0] is effective</para> <para>In case of C Turret, NC spec code 2  [21,7] is effective</para> </description> </item> <item> <term>BA-Axis</term> <description> <para> The following specifications must be met in order to be valid axis:</para> <para>In case of A Turret, NC spec [13,3] is active</para> <para>Valid for upper A turret only with sub systems: NC-RUN, NC-RUN-1, NC-AL, NC-AR</para> </description> </item> </list> </remarks>
      <Figure> <para> OSP-P200 - ZERO SET - ZERO POINT - ZERO SHIFT <img src="Lathe.ZeroSet.jpg" /> </para> <para> OSP-P300 - ZERO SET - ZERO POINT - ZERO SHIFT <img src="Lathe.P300.ZeroOffset.jpg" /> </para> </Figure>
      <SubSystem> Please see <see href="SubSystemNoteTable.htm">Sub System Note Table</see> for more information if applicable. <para>Valid sub systems for this function (Y = Valid, N = Not valid)</para> <para> <list type="table"> <listheader> <term>NC_RUN </term> <term>NC_RUN_1 </term> <term>NC_RUN_2 </term> <term>NC_RUN_3 </term> <term>NC_PANEL </term> <term>NC_PANEL_1 </term> <term>NC_PANEL_2 </term> <term>NC_PANEL_3 </term> <term>NC_AL </term> <term>NC_AR </term> <term>NC_BL </term> <term>NC_BR </term> <term>NC_CL </term> <term>NC_CR </term> <term>NC_2AL </term> </listheader> <item> <term>Y (*10) (*5 for BA axis)</term> <term>Y (*11)</term> <term>Y (*12)</term> <term>Y (*12)</term> <term>Y (*10) (*5 for BA axis)</term> <term>Y (*11)</term> <term>Y (*12)</term> <term>Y (*12)</term> <term>Y</term> <term>Y (*13)</term> <term>Y (*14)</term> <term>Y (*9,*46)</term> <term>Y (*14)</term> <term>Y (*9,*46)</term> <term>Y</term> </item> </list> </para>  </SubSystem>
    </member>
    <member name="M:Okuma.CLDATAPI.DataAPI.CWorkpiece.SetZeroShift(Okuma.CLDATAPI.Enumerations.AxisIndex4Enum,System.Double)">
      <summary>sets workpiece zero shift at the specified axis index for current sub system. <para>Refer to Get Axis Name function in CAxis class for availability of axes.</para> </summary>
      <example> This example shows how to call SetZeroShift method <para>	Try	</para> <para>	objWorkpiece.SetZeroShift(Me.wkZeroShiftCombo.SelectedValue, CDbl(Me.wkUpdateZeroShift.Text))	</para> <para>	Catch ae As ApplicationException	</para> <para>	doError("CWorkpiece", ae.Message)	</para> <para>	 Catch ex As Exception	</para> <para>	 doError("CWorkpiece", ex.Message)	</para> <para> End Try	</para> </example>
      <param name="enAxisIndex">Axis index</param>
      <param name="dblValue">Workpiece zero shift value to be set</param>
      <exception cref="System.ApplicationException">Thrown when function fails to perform the operation at current NC condition.</exception>
      <exception cref="System.NotSupportedException">Thrown when operation/input parameters are not supported for the current system.</exception>
      <returns>None</returns>
      <DataUnit> Default unit is in mm.  Other unit can be set by calling SetDataUnit method.  Circular axis unit is in degree. <para>Note:</para> <para>Setting a value of 400 to a rotary axis will be the same as setting of 40 to that of.</para> <para>Setting a value of -400 to a rotary axis will be the same as setting of 320 to that of.</para> </DataUnit>
      <remarks> The following specifications for axes listed below must be met in order to function: <list type="table"> <listheader> <term>Axis</term> <description>Specification</description> </listheader> <item> <term>W-Axis</term> <description> <para> One of the following specifications must be met in order to be valid axis:</para> <para>Sub spindle specification (NC spec [4,1])</para> <para>LT specification (NC spec [4,0])</para> <para>Auto tow-along tailstock specification (NC spec [27,3])</para> <para>NC Tailstock specification NC spec [27,5]</para> </description> </item> <item> <term>YI-Axis</term> <description> <para> The following specifications must be met in order to be valid axis:</para> <para>In case of A Turret, Multitasking machine specification NC spec [3,0]</para> <para>In case of A Turret, Slant Y-Axis specification NC spec [8,0] is effective</para> <para>In case of B Turret, NC spec code 2 [21,0] is effective</para> <para>In case of C Turret, NC spec code 2  [21,7] is effective</para> </description> </item> <item> <term>BA-Axis</term> <description> <para> The following specifications must be met in order to be valid axis:</para> <para>In case of A Turret, NC spec [13,3] is active</para> <para>Valid for upper A turret only with sub systems: NC-RUN, NC-RUN-1, NC-AL, NC-AR</para> </description> </item> </list> </remarks>
      <Figure> <para> OSP-P200 - ZERO SET - ZERO POINT - ZERO SHIFT <img src="Lathe.ZeroSet.jpg" /> </para> <para> OSP-P300 - ZERO SET - ZERO POINT - ZERO SHIFT <img src="Lathe.P300.ZeroOffset.jpg" /> </para> </Figure>
      <SubSystem> Please see <see href="SubSystemNoteTable.htm">Sub System Note Table</see> for more information if applicable. <para>Valid sub systems for this function (Y = Valid, N = Not valid)</para> <para> <list type="table"> <listheader> <term>NC_RUN </term> <term>NC_RUN_1 </term> <term>NC_RUN_2 </term> <term>NC_RUN_3 </term> <term>NC_PANEL </term> <term>NC_PANEL_1 </term> <term>NC_PANEL_2 </term> <term>NC_PANEL_3 </term> <term>NC_AL </term> <term>NC_AR </term> <term>NC_BL </term> <term>NC_BR </term> <term>NC_CL </term> <term>NC_CR </term> <term>NC_2AL </term> </listheader> <item> <term>Y (*10) (*5 for BA axis)</term> <term>Y (*11)</term> <term>Y (*12)</term> <term>Y (*12)</term> <term>Y (*10) (*5 for BA axis)</term> <term>Y (*11)</term> <term>Y (*12)</term> <term>Y (*12)</term> <term>Y</term> <term>Y (*13)</term> <term>Y (*14)</term> <term>Y (*9,*46)</term> <term>Y (*14)</term> <term>Y (*9,*46)</term> <term>Y</term> </item> </list> </para>  </SubSystem>
    </member>
    <member name="M:Okuma.CLDATAPI.DataAPI.CWorkpiece.AddZeroShift(Okuma.CLDATAPI.Enumerations.AxisIndex4Enum,System.Double)">
      <summary>sets workpiece zero shift by adding the input value to the existing data at the specified axis index for current sub system. <para>Refer to Get Axis Name function in CAxis class for availability of axes.</para> </summary>
      <example> This example shows how to call AddZeroShift method <para>	Try	</para> <para>		objWorkpiece.AddZeroShift(Me.wkZeroShiftCombo.SelectedValue, CDbl(Me.wkUpdateZeroShift.Text))	</para> <para>		Me.wkZeroShift.Text = objWorkpiece.GetZeroOffset(wkZeroShiftCombo.SelectedValue)	</para> <para>	Catch ae As ApplicationException	</para> <para>		doError("CWorkpiece", ae.Message)	</para> <para>	Catch ex As Exception	</para> <para>		doError("CWorkpiece", ex.Message)	</para> <para>	End Try	</para> </example>
      <param name="enAxisIndex">Axis index</param>
      <param name="dblValue">Workpiece zero shift value to be added</param>
      <exception cref="System.ApplicationException">Thrown when function fails to perform the operation at current NC condition.</exception>
      <exception cref="System.NotSupportedException">Thrown when operation/input parameters are not supported for the current system.</exception>
      <returns>None</returns>
      <DataUnit> Default unit is in mm.  Other unit can be set by calling SetDataUnit method.  Circular axis unit is in degree. <para>Note:</para> <para>Setting a value of 400 to a rotary axis will be the same as setting of 40 to that of.</para> <para>Setting a value of -400 to a rotary axis will be the same as setting of 320 to that of.</para> </DataUnit>
      <remarks> The following specifications for axes listed below must be met in order to function: <list type="table"> <listheader> <term>Axis</term> <description>Specification</description> </listheader> <item> <term>W-Axis</term> <description> <para> One of the following specifications must be met in order to be valid axis:</para> <para>Sub spindle specification (NC spec [4,1])</para> <para>LT specification (NC spec [4,0])</para> <para>Auto tow-along tailstock specification (NC spec [27,3])</para> <para>NC Tailstock specification NC spec [27,5]</para> </description> </item> <item> <term>YI-Axis</term> <description> <para> The following specifications must be met in order to be valid axis:</para> <para>In case of A Turret, Multitasking machine specification NC spec [3,0]</para> <para>In case of A Turret, Slant Y-Axis specification NC spec [8,0] is effective</para> <para>In case of B Turret, NC spec code 2 [21,0] is effective</para> <para>In case of C Turret, NC spec code 2  [21,7] is effective</para> </description> </item> <item> <term>BA-Axis</term> <description> <para> The following specifications must be met in order to be valid axis:</para> <para>In case of A Turret, NC spec [13,3] is active</para> <para>Valid for upper A turret only with sub systems: NC-RUN, NC-RUN-1, NC-AL, NC-AR</para> </description> </item> </list> </remarks>
      <Figure> <para> OSP-P200 - ZERO SET - ZERO POINT - ZERO SHIFT <img src="Lathe.ZeroSet.jpg" /> </para> <para> OSP-P300 - ZERO SET - ZERO POINT - ZERO SHIFT <img src="Lathe.P300.ZeroOffset.jpg" /> </para> </Figure>
      <SubSystem> Please see <see href="SubSystemNoteTable.htm">Sub System Note Table</see> for more information if applicable. <para>Valid sub systems for this function (Y = Valid, N = Not valid)</para> <para> <list type="table"> <listheader> <term>NC_RUN </term> <term>NC_RUN_1 </term> <term>NC_RUN_2 </term> <term>NC_RUN_3 </term> <term>NC_PANEL </term> <term>NC_PANEL_1 </term> <term>NC_PANEL_2 </term> <term>NC_PANEL_3 </term> <term>NC_AL </term> <term>NC_AR </term> <term>NC_BL </term> <term>NC_BR </term> <term>NC_CL </term> <term>NC_CR </term> <term>NC_2AL </term> </listheader> <item> <term>Y (*10) (*5 for BA axis)</term> <term>Y (*11)</term> <term>Y (*12)</term> <term>Y (*12)</term> <term>Y (*10) (*5 for BA axis)</term> <term>Y (*11)</term> <term>Y (*12)</term> <term>Y (*12)</term> <term>Y</term> <term>Y (*13)</term> <term>Y (*14)</term> <term>Y (*9,*46)</term> <term>Y (*14)</term> <term>Y (*9,*46)</term> <term>Y</term> </item> </list> </para>  </SubSystem>
    </member>
    <member name="M:Okuma.CLDATAPI.DataAPI.CWorkpiece.CalZeroShift(Okuma.CLDATAPI.Enumerations.AxisIndex4Enum,System.Double)">
      <summary>Determine the workpiece zero shift based on the calculation made on the input value and actual position at the specified axis index for current sub system. The offset value is calculated so that the input value becomes the actual position. <para>Refer to Get Axis Name function in CAxis class for availability of axes.</para> </summary>
      <example> This example shows how to call CalZeroShift method <para> Try	</para> <para>		objWorkpiece.CalZeroShift(Me.wkZeroShiftCombo.SelectedValue, CDbl(Me.wkUpdateZeroShift.Text))	</para> <para>		Me.wkZeroShift.Text = objWorkpiece.GetZeroOffset(wkZeroShiftCombo.SelectedValue)	</para> <para> Catch ae As ApplicationException	</para> <para>		doError("CWorkpiece", ae.Message)	</para> <para> Catch ex As Exception	</para> <para>		doError("CWorkpiece", ex.Message)	</para> <para> End Try	</para> </example>
      <param name="enAxisIndex">Axis index</param>
      <param name="dblValue">Input value to be calculated from</param>
      <exception cref="System.ApplicationException">Thrown when function fails to perform the operation at current NC condition.</exception>
      <exception cref="System.NotSupportedException">Thrown when operation/input parameters are not supported for the current system.</exception>
      <returns>None</returns>
      <DataUnit> Default unit is in mm.  Other unit can be set by calling SetDataUnit method.  Circular axis unit is in degree. </DataUnit>
      <remarks> The following specifications for axes listed below must be met in order to function: <list type="table"> <listheader> <term>Axis</term> <description>Specification</description> </listheader> <item> <term>W-Axis</term> <description> <para> One of the following specifications must be met in order to be valid axis:</para> <para>Sub spindle specification (NC spec [4,1])</para> <para>LT specification (NC spec [4,0])</para> <para>Auto tow-along tailstock specification (NC spec [27,3])</para> <para>NC Tailstock specification NC spec [27,5]</para> </description> </item> <item> <term>YI-Axis</term> <description> <para> The following specifications must be met in order to be valid axis:</para> <para>In case of A Turret, Multitasking machine specification NC spec [3,0]</para> <para>In case of A Turret, Slant Y-Axis specification NC spec [8,0] is effective</para> <para>In case of B Turret, NC spec code 2 [21,0] is effective</para> <para>In case of C Turret, NC spec code 2  [21,7] is effective</para> </description> </item> <item> <term>BA-Axis</term> <description> <para> The following specifications must be met in order to be valid axis:</para> <para>In case of A Turret, NC spec [13,3] is active</para> <para>Valid for upper A turret only with sub systems: NC-RUN, NC-RUN-1, NC-AL, NC-AR</para> </description> </item> </list> </remarks>
      <Figure> <para> OSP-P200 - ZERO SET - ZERO POINT - ZERO SHIFT <img src="Lathe.ZeroSet.jpg" /> </para> <para> OSP-P300 - ZERO SET - ZERO POINT - ZERO SHIFT <img src="Lathe.P300.ZeroOffset.jpg" /> </para> </Figure>
      <SubSystem> Please see <see href="SubSystemNoteTable.htm">Sub System Note Table</see> for more information if applicable. <para>Valid sub systems for this function (Y = Valid, N = Not valid)</para> <para> <list type="table"> <listheader> <term>NC_RUN </term> <term>NC_RUN_1 </term> <term>NC_RUN_2 </term> <term>NC_RUN_3 </term> <term>NC_PANEL </term> <term>NC_PANEL_1 </term> <term>NC_PANEL_2 </term> <term>NC_PANEL_3 </term> <term>NC_AL </term> <term>NC_AR </term> <term>NC_BL </term> <term>NC_BR </term> <term>NC_CL </term> <term>NC_CR </term> <term>NC_2AL </term> </listheader> <item> <term>Y (*10) (*5 for BA axis)</term> <term>Y (*11)</term> <term>Y (*12)</term> <term>Y (*12)</term> <term>Y (*10) (*5 for BA axis)</term> <term>Y (*11)</term> <term>Y (*12)</term> <term>Y (*12)</term> <term>Y</term> <term>Y (*13)</term> <term>Y (*14)</term> <term>Y (*9,*46)</term> <term>Y (*14)</term> <term>Y (*9,*46)</term> <term>Y</term> </item> </list> </para>  </SubSystem>
    </member>
    <member name="M:Okuma.CLDATAPI.DataAPI.CWorkpiece.GetWorkpieceCounterSet(Okuma.CLDATAPI.Enumerations.WorkpieceCounterEnum)">
      <summary>Gets number of machined workpiece counter set at the specified workpiece counter index for current sub system. </summary>
      <example> This example shows how to call GetWorkpieceCounterSet method <para>	Try	</para> <para>		Me.wkCounterValue.Text = objWorkpiece.GetWorkpieceCounterSet(wkCounterCombo.SelectedValue)	</para> <para>	Catch ae As ApplicationException	</para> <para>	    doError("CWorkpiece", ae.Message)	</para> <para>	Catch ex As Exception	</para> <para>	    doError("CWorkpiece", ex.Message)	</para> <para>	End Try	</para> </example>
      <param name="enValue">Workpiece counter index</param>
      <returns>A System.Int32 value</returns>
      <exception cref="System.ApplicationException">Thrown when function fails to perform the operation at current NC condition.</exception>
      <exception cref="System.NotSupportedException">Thrown when operation/input parameters are not supported for the current system.</exception>
      <remarks> <para> The following specifications must be met in order to function: <list type="table"> <listheader> <term>Specification</term> <description>Valid/Invalid</description> </listheader> <item> <term>NC Work shop counter</term> <description>Valid</description> </item> </list> </para> </remarks>
      <Figure>AUTO OPERATION - ACTUAL POSITION - WORK COUNTER - SET <para> <img src="Lathe.AutoOperation.ActualPosition.WorkpieceCounter.jpg" /> </para> </Figure>
      <SubSystem> Please see <see href="SubSystemNoteTable.htm">Sub System Note Table</see> for more information if applicable. <para>Valid sub systems for this function (Y = Valid, N = Not valid)</para> <para> <list type="table"> <listheader> <term>NC_RUN </term> <term>NC_RUN_1 </term> <term>NC_RUN_2 </term> <term>NC_RUN_3 </term> <term>NC_PANEL </term> <term>NC_PANEL_1 </term> <term>NC_PANEL_2 </term> <term>NC_PANEL_3 </term> <term>NC_AL </term> <term>NC_AR </term> <term>NC_BL </term> <term>NC_BR </term> <term>NC_CL </term> <term>NC_CR </term> <term>NC_2AL </term> </listheader> <item> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> </item> </list> </para>  </SubSystem>
    </member>
    <member name="M:Okuma.CLDATAPI.DataAPI.CWorkpiece.SetWorkpieceCounterSet(Okuma.CLDATAPI.Enumerations.WorkpieceCounterEnum,System.Int32)">
      <summary>sets number of machined workpiece at the specified workpiece counter index for current sub system. </summary>
      <example> This example shows how to call SetWorkpieceCounter method <para> Try	</para> <para>		objWorkpiece.SetWorkpieceCounterSet(Me.wkCounterCombo.SelectedValue, CInt(Me.wkUpdateCounter.Text))	</para> <para> Catch ae As ApplicationException	</para> <para>		doError("CWorkpiece", ae.Message)	</para> <para> Catch ex As Exception	</para> <para>		doError("CWorkpiece", ex.Message)	</para> <para> End Try	</para> </example>
      <param name="enValue">Workpiece counter index</param>
      <param name="intValue">Value to be set</param>
      <exception cref="System.ApplicationException">Thrown when function fails to perform the operation at current NC condition.</exception>
      <exception cref="System.NotSupportedException">Thrown when operation/input parameters are not supported for the current system.</exception>
      <remarks> <para> The following specifications must be met in order to function: <list type="table"> <listheader> <term>Specification</term> <description>Valid/Invalid</description> </listheader> <item> <term>NC Work shop counter</term> <description>Valid</description> </item> </list> </para> </remarks>
      <Figure>AUTO OPERATION - ACTUAL POSITION - WORK COUNTER - SET <para> <img src="Lathe.AutoOperation.ActualPosition.WorkpieceCounter.jpg" /> </para> </Figure>
      <SubSystem> Please see <see href="SubSystemNoteTable.htm">Sub System Note Table</see> for more information if applicable. <para>Valid sub systems for this function (Y = Valid, N = Not valid)</para> <para> <list type="table"> <listheader> <term>NC_RUN </term> <term>NC_RUN_1 </term> <term>NC_RUN_2 </term> <term>NC_RUN_3 </term> <term>NC_PANEL </term> <term>NC_PANEL_1 </term> <term>NC_PANEL_2 </term> <term>NC_PANEL_3 </term> <term>NC_AL </term> <term>NC_AR </term> <term>NC_BL </term> <term>NC_BR </term> <term>NC_CL </term> <term>NC_CR </term> <term>NC_2AL </term> </listheader> <item> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> </item> </list> </para>  </SubSystem>
    </member>
    <member name="M:Okuma.CLDATAPI.DataAPI.CWorkpiece.AddWorkpieceCounterSet(Okuma.CLDATAPI.Enumerations.WorkpieceCounterEnum,System.Int32)">
      <summary>sets number of machined workpiece counter set by adding the input value to the existing data at the specified workpiece counter index for current sub system. </summary>
      <example> This example shows how to call AddWorkpieceCounterSet method <para> Try	</para> <para>		objWorkpiece.AddWorkpieceCounterSet(Me.wkCounterCombo.SelectedValue, CInt(Me.wkUpdateCounter.Text)))	</para> <para> Catch ae As ApplicationException	</para> <para>		doError("CWorkpiece", ae.Message)	</para> <para> Catch ex As Exception	</para> <para>		doError("CWorkpiece", ex.Message)	</para> <para> End Try	</para> </example>
      <param name="enValue">Workpiece counter index</param>
      <param name="intValue">Value to be added to</param>
      <exception cref="System.ApplicationException">Thrown when function fails to perform the operation at current NC condition.</exception>
      <exception cref="System.NotSupportedException">Thrown when operation/input parameters are not supported for the current system.</exception>
      <remarks> <para> The following specifications must be met in order to function: <list type="table"> <listheader> <term>Specification</term> <description>Valid/Invalid</description> </listheader> <item> <term>NC Work shop counter</term> <description>Valid</description> </item> </list> </para> </remarks>
      <Figure>AUTO OPERATION - ACTUAL POSITION - WORK COUNTER - SET <para> <img src="Lathe.AutoOperation.ActualPosition.WorkpieceCounter.jpg" /> </para> </Figure>
      <SubSystem> Please see <see href="SubSystemNoteTable.htm">Sub System Note Table</see> for more information if applicable. <para>Valid sub systems for this function (Y = Valid, N = Not valid)</para> <para> <list type="table"> <listheader> <term>NC_RUN </term> <term>NC_RUN_1 </term> <term>NC_RUN_2 </term> <term>NC_PANEL </term> <term>NC_PANEL_1 </term> <term>NC_PANEL_2 </term> <term>NC_AL </term> <term>NC_AR </term> <term>NC_BL </term> <term>NC_BR </term> <term>NC_2AL </term> </listheader> <item> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> <term>Y</term> </item> </list> </para>  </SubSystem>
    </member>
    <member name="M:Okuma.CLDATAPI.DataAPI.CWorkpiece.GetBaseZeroOffset(Okuma.CLDATAPI.Enumerations.AxisIndex4Enum)">
      <summary>Gets workpiece base zero offset at the specified axis index for current sub system. <para>Refer to Get Axis Name function in CAxis class for availability of axes.</para> </summary>
      <example> This example shows how to call GetBaseZeroOffset method <para>	Dim enAxisIndex As AxisIndex4Enum</para> <para>	Dim dblValue As Double</para> <para>	dblValue = objWorkpiece.GetBaseZeroOffset(enAxisIndex)	</para> </example>
      <param name="enAxisIndex">Axis Index. Value of parameter comes from Okuma.CLDATAPI.Enumerations.AxisIndex4Enum.</param>
      <returns>A System.Double value represents base zero offset of the specified axis.</returns>
      <exception cref="System.ApplicationException">Thrown when function fails to perform the operation at current NC condition.</exception>
      <exception cref="System.NotSupportedException">Thrown when operation/input parameters are not supported for the current system.</exception>
      <DataUnit> Default unit is in mm.  Other unit can be set by calling SetDataUnit method.  Circular axis unit is in degree. </DataUnit>
      <remarks> The following specifications for axes listed below must be met in order to function: <list type="table"> <listheader> <term>Axis</term> <description>Specification</description> </listheader> <item> <term>W-Axis</term> <description> <para> One of the following specifications must be met in order to be valid axis:</para> <para>Sub spindle specification (NC spec [4,1])</para> <para>LT specification (NC spec [4,0])</para> <para>Auto tow-along tailstock specification (NC spec [27,3])</para> <para>NC Tailstock specification NC spec [27,5]</para> </description> </item> <item> <term>YI-Axis</term> <description> <para> The following specifications must be met in order to be valid axis:</para> <para>In case of A Turret, Multitasking machine specification NC spec [3,0]</para> <para>In case of A Turret, Slant Y-Axis specification NC spec [8,0] is effective</para> <para>In case of B Turret, NC spec code 2 [21,0] is effective</para> <para>In case of C Turret, NC spec code 2  [21,7] is effective</para> </description> </item> <item> <term>BA-Axis</term> <description> <para> The following specifications must be met in order to be valid axis:</para> <para>In case of A Turret, NC spec [13,3] is active and NC spec 2 [3,7] is active</para> </description> </item> </list>  <para> Compatible Chart of this function for different OSP controls: <list type="table"> <listheader> <term>OSP Control</term> <description>Compatible</description> </listheader> <item> <term>P100II</term> <description>No</description> </item> <item> <term>P200</term> <description>No</description> </item> <item> <term>P300L</term> <description>Yes</description> </item> <item> <term>P300S/TD Mode</term> <description>Yes</description> </item> <item> <term>P300S/TL Mode</term> <description>Yes</description> </item> </list> </para> </remarks>
      <Figure> <para> OSP-P300 - PARAMETER - SYSTEM PARAMETER 2 - BASE ZERO OFFSET <img src="Lathe.P300L.BaseZeroOffset.jpg" /> </para> </Figure>
      <SubSystem> Please see <see href="SubSystemNoteTable.htm">Sub System Note Table</see> for more information if applicable. <para>Valid sub systems for this function (Y = Valid, N = Not valid)</para> <para> <list type="table"> <listheader> <term>NC_RUN </term> <term>NC_RUN_1 </term> <term>NC_RUN_2 </term> <term>NC_RUN_3 </term> <term>NC_PANEL </term> <term>NC_PANEL_1 </term> <term>NC_PANEL_2 </term> <term>NC_PANEL_3 </term> <term>NC_AL </term> <term>NC_AR </term> <term>NC_BL </term> <term>NC_BR </term> <term>NC_CL </term> <term>NC_CR </term> <term>NC_2AL </term> </listheader> <item> <term>Y (*47) or (*37 for BA Axis)</term> <term>Y (*47) or (*37 for BA Axis)</term> <term>Y (*47) or (*37 for BA Axis)</term> <term>Y (*47) or (*37 for BA Axis)</term> <term>Y (*47) or (*37 for BA Axis)</term> <term>Y (*47) or (*37 for BA Axis)</term> <term>Y (*47) or (*37 for BA Axis)</term> <term>Y (*47) or (*37 for BA Axis)</term> <term>Y (*47) or (*37 for BA Axis)</term> <term>Y (*47) or (*37 for BA Axis)</term> <term>Y (*47) or (*37 for BA Axis)</term> <term>Y (*47) or (*37 for BA Axis)</term> <term>Y (*47) or (*37 for BA Axis)</term> <term>Y (*47) or (*37 for BA Axis)</term> <term>Y (*47) or N for BA Axis</term> </item> </list> </para>  </SubSystem>
    </member>
    <member name="M:Okuma.CLDATAPI.DataAPI.CWorkpiece.SetBaseZeroOffset(Okuma.CLDATAPI.Enumerations.AxisIndex4Enum,System.Double)">
      <summary>Sets workpiece base zero offset at the specified axis index for current sub system. <para>ZA, ZB, and ZC are not editable for second spindle</para> <para>WB, and WC are not editable</para> </summary>
      <example> This example shows how to call SetBaseZeroOffset method <para>	Dim enAxisIndex As AxisIndex4Enum</para> <para>	Dim dblValue As Double</para> <para>	objWorkpiece.SetBaseZeroOffset(enAxisIndex, dblValue)	</para> </example>
      <param name="enAxisIndex">Axis index</param>
      <param name="dblValue">Workpiece offset value to be set</param>
      <exception cref="System.ApplicationException">Thrown when function fails to perform the operation at current NC condition.</exception>
      <exception cref="System.NotSupportedException">Thrown when operation/input parameters are not supported for the current system.</exception>
      <returns>None</returns>
      <DataUnit> Default unit is in mm.  Other unit can be set by calling SetDataUnit method.  Circular axis unit is in degree. <para>Note:</para> <para>Setting a value of 400 to a rotary axis will be the same as setting of 40 to that of.</para> <para>Setting a value of -400 to a rotary axis will be the same as setting of 320 to that of.</para> </DataUnit>
      <remarks> The following specifications for axes listed below must be met in order to function: <list type="table"> <listheader> <term>Axis</term> <description>Specification</description> </listheader> <item> <term>W-Axis</term> <description> <para> One of the following specifications must be met in order to be valid axis:</para> <para>Sub spindle specification (NC spec [4,1])</para> <para>LT specification (NC spec [4,0])</para> <para>Auto tow-along tailstock specification (NC spec [27,3])</para> <para>NC Tailstock specification NC spec [27,5]</para> </description> </item> <item> <term>YI-Axis</term> <description> <para> The following specifications must be met in order to be valid axis:</para> <para>In case of A Turret, Multitasking machine specification NC spec [3,0]</para> <para>In case of A Turret, Slant Y-Axis specification NC spec [8,0] is effective</para> <para>In case of B Turret, NC spec code 2 [21,0] is effective</para> <para>In case of C Turret, NC spec code 2  [21,7] is effective</para> </description> </item> <item> <term>BA-Axis</term> <description> <para> The following specifications must be met in order to be valid axis:</para> <para>In case of A Turret, NC spec [13,3] is active and NC spec 2 [3,7] is active</para> </description> </item> </list>  <para> Compatible Chart of this function for different OSP controls: <list type="table"> <listheader> <term>OSP Control</term> <description>Compatible</description> </listheader> <item> <term>P100II</term> <description>No</description> </item> <item> <term>P200</term> <description>No</description> </item> <item> <term>P300L</term> <description>Yes</description> </item> <item> <term>P300S/TD Mode</term> <description>Yes</description> </item> <item> <term>P300S/TL Mode</term> <description>Yes</description> </item> </list> </para> </remarks>
      <Figure> <para> OSP-P300 - PARAMETER - SYSTEM PARAMETER 2 - BASE ZERO OFFSET <img src="Lathe.P300L.BaseZeroOffset.jpg" /> </para> </Figure>
      <SubSystem> Please see <see href="SubSystemNoteTable.htm">Sub System Note Table</see> for more information if applicable. <para>Valid sub systems for this function (Y = Valid, N = Not valid)</para> <para> <list type="table"> <listheader> <term>NC_RUN </term> <term>NC_RUN_1 </term> <term>NC_RUN_2 </term> <term>NC_RUN_3 </term> <term>NC_PANEL </term> <term>NC_PANEL_1 </term> <term>NC_PANEL_2 </term> <term>NC_PANEL_3 </term> <term>NC_AL </term> <term>NC_AR </term> <term>NC_BL </term> <term>NC_BR </term> <term>NC_CL </term> <term>NC_CR </term> <term>NC_2AL </term> </listheader> <item> <term>Y (*47) or (*37 for BA Axis)</term> <term>Y (*47) or (*37 for BA Axis)</term> <term>Y (*47) or (*37 for BA Axis)</term> <term>Y (*47) or (*37 for BA Axis)</term> <term>Y (*47) or (*37 for BA Axis)</term> <term>Y (*47) or (*37 for BA Axis)</term> <term>Y (*47) or (*37 for BA Axis)</term> <term>Y (*47) or (*37 for BA Axis)</term> <term>Y (*47) or (*37 for BA Axis)</term> <term>Y (*47) or (*37 for BA Axis)</term> <term>Y (*47) or (*37 for BA Axis)</term> <term>Y (*47) or (*37 for BA Axis)</term> <term>Y (*47) or (*37 for BA Axis)</term> <term>Y (*47) or (*37 for BA Axis)</term> <term>Y (*47) or N for BA Axis</term> </item> </list> </para>  </SubSystem>
    </member>
    <member name="M:Okuma.CLDATAPI.DataAPI.CWorkpiece.AddBaseZeroOffset(Okuma.CLDATAPI.Enumerations.AxisIndex4Enum,System.Double)">
      <summary>Sets workpiece base zero offset by adding the input value to the existing data at the specified axis index for current sub system. <para>Refer to Get Axis Name function in CAxis class for availability of axes.</para> <para>ZA, ZB, and ZC are not editable for second spindle</para> <para>WB, and WC are not editable</para> </summary>
      <example> This example shows how to call AddBaseZeroOffset method <para>	Dim enAxisIndex As AxisIndex4Enum</para> <para>	Dim dblValue As Double</para> <para>	objWorkpiece.AddBaseZeroOffset(enAxisIndex, dblValue)	</para> </example>
      <param name="enAxisIndex">Axis index</param>
      <param name="dblValue">Workpiece offset value to be added to</param>
      <exception cref="System.ApplicationException">Thrown when function fails to perform the operation at current NC condition.</exception>
      <exception cref="System.NotSupportedException">Thrown when operation/input parameters are not supported for the current system.</exception>
      <returns>None</returns>
      <DataUnit> Default unit is in mm.  Other unit can be set by calling SetDataUnit method.  Circular axis unit is in degree. <para>Note:</para> <para>Setting a value of 400 to a rotary axis will be the same as setting of 40 to that of.</para> <para>Setting a value of -400 to a rotary axis will be the same as setting of 320 to that of.</para> </DataUnit>
      <remarks> The following specifications for axes listed below must be met in order to function: <list type="table"> <listheader> <term>Axis</term> <description>Specification</description> </listheader> <item> <term>W-Axis</term> <description> <para> One of the following specifications must be met in order to be valid axis:</para> <para>Sub spindle specification (NC spec [4,1])</para> <para>LT specification (NC spec [4,0])</para> <para>Auto tow-along tailstock specification (NC spec [27,3])</para> <para>NC Tailstock specification NC spec [27,5]</para> </description> </item> <item> <term>YI-Axis</term> <description> <para> The following specifications must be met in order to be valid axis:</para> <para>In case of A Turret, Multitasking machine specification NC spec [3,0]</para> <para>In case of A Turret, Slant Y-Axis specification NC spec [8,0] is effective</para> <para>In case of B Turret, NC spec code 2 [21,0] is effective</para> <para>In case of C Turret, NC spec code 2  [21,7] is effective</para> </description> </item> <item> <term>BA-Axis</term> <description> <para> The following specifications must be met in order to be valid axis:</para> <para>In case of A Turret, NC spec [13,3] is active and NC spec 2 [3,7] is active</para> </description> </item> </list>  <para> Compatible Chart of this function for different OSP controls: <list type="table"> <listheader> <term>OSP Control</term> <description>Compatible</description> </listheader> <item> <term>P100II</term> <description>No</description> </item> <item> <term>P200</term> <description>No</description> </item> <item> <term>P300L</term> <description>Yes</description> </item> <item> <term>P300S/TD Mode</term> <description>Yes</description> </item> <item> <term>P300S/TL Mode</term> <description>Yes</description> </item> </list> </para> </remarks>
      <Figure> <para> OSP-P300 - PARAMETER - SYSTEM PARAMETER 2 - BASE ZERO OFFSET <img src="Lathe.P300L.BaseZeroOffset.jpg" /> </para> </Figure>
      <SubSystem> Please see <see href="SubSystemNoteTable.htm">Sub System Note Table</see> for more information if applicable. <para>Valid sub systems for this function (Y = Valid, N = Not valid)</para> <para> <list type="table"> <listheader> <term>NC_RUN </term> <term>NC_RUN_1 </term> <term>NC_RUN_2 </term> <term>NC_RUN_3 </term> <term>NC_PANEL </term> <term>NC_PANEL_1 </term> <term>NC_PANEL_2 </term> <term>NC_PANEL_3 </term> <term>NC_AL </term> <term>NC_AR </term> <term>NC_BL </term> <term>NC_BR </term> <term>NC_CL </term> <term>NC_CR </term> <term>NC_2AL </term> </listheader> <item> <term>Y (*47) or (*37 for BA Axis)</term> <term>Y (*47) or (*37 for BA Axis)</term> <term>Y (*47) or (*37 for BA Axis)</term> <term>Y (*47) or (*37 for BA Axis)</term> <term>Y (*47) or (*37 for BA Axis)</term> <term>Y (*47) or (*37 for BA Axis)</term> <term>Y (*47) or (*37 for BA Axis)</term> <term>Y (*47) or (*37 for BA Axis)</term> <term>Y (*47) or (*37 for BA Axis)</term> <term>Y (*47) or (*37 for BA Axis)</term> <term>Y (*47) or (*37 for BA Axis)</term> <term>Y (*47) or (*37 for BA Axis)</term> <term>Y (*47) or (*37 for BA Axis)</term> <term>Y (*47) or (*37 for BA Axis)</term> <term>Y (*47) or N for BA Axis</term> </item> </list> </para>  </SubSystem>
    </member>
    <member name="M:Okuma.CLDATAPI.DataAPI.CWorkpiece.CalBaseZeroOffset(Okuma.CLDATAPI.Enumerations.AxisIndex4Enum,System.Double)">
      <summary>Determine the workpiece zero base offset based on the calculation made on the input value at the specified axis index for current sub system. <para>Refer to Get Axis Name function in CAxis class for availability of axes.</para> </summary>
      <example> This example shows how to call CalBaseZeroOffset method <para>	Dim enAxisIndex As AxisIndex4Enum</para> <para>	Dim dblValue As Double</para> <para>	objWorkpiece.CalBaseZeroOffset(enAxisIndex, dblValue)	</para> </example>
      <param name="enAxisIndex">Axis index</param>
      <param name="dblValue">Input value to be calculated from</param>
      <exception cref="System.ApplicationException">Thrown when function fails to perform the operation at current NC condition.</exception>
      <exception cref="System.NotSupportedException">Thrown when operation/input parameters are not supported for the current system.</exception>
      <returns>None</returns>
      <DataUnit> Default unit is in mm.  Other unit can be set by calling SetDataUnit method.  Circular axis unit is in degree. </DataUnit>
      <remarks> The following specifications for axes listed below must be met in order to function: <list type="table"> <listheader> <term>Axis</term> <description>Specification</description> </listheader> <item> <term>W-Axis</term> <description> <para> One of the following specifications must be met in order to be valid axis:</para> <para>Sub spindle specification (NC spec [4,1])</para> <para>LT specification (NC spec [4,0])</para> <para>Auto tow-along tailstock specification (NC spec [27,3])</para> <para>NC Tailstock specification NC spec [27,5]</para> </description> </item> <item> <term>YI-Axis</term> <description> <para> The following specifications must be met in order to be valid axis:</para> <para>In case of A Turret, Multitasking machine specification NC spec [3,0]</para> <para>In case of A Turret, Slant Y-Axis specification NC spec [8,0] is effective</para> <para>In case of B Turret, NC spec code 2 [21,0] is effective</para> <para>In case of C Turret, NC spec code 2  [21,7] is effective</para> </description> </item> <item> <term>BA-Axis</term> <description> <para> The following specifications must be met in order to be valid axis:</para> <para>In case of A Turret, NC spec [13,3] is active and NC spec 2 [3,7] is active</para> </description> </item> </list>  <para> Compatible Chart of this function for different OSP controls: <list type="table"> <listheader> <term>OSP Control</term> <description>Compatible</description> </listheader> <item> <term>P100II</term> <description>No</description> </item> <item> <term>P200</term> <description>No</description> </item> <item> <term>P300L</term> <description>Yes</description> </item> <item> <term>P300S/TD Mode</term> <description>Yes</description> </item> <item> <term>P300S/TL Mode</term> <description>Yes</description> </item> </list> </para> </remarks>
      <Figure> <para> OSP-P300 - PARAMETER - SYSTEM PARAMETER 2 - BASE ZERO OFFSET <img src="Lathe.P300L.BaseZeroOffset.jpg" /> </para> </Figure>
      <SubSystem> Please see <see href="SubSystemNoteTable.htm">Sub System Note Table</see> for more information if applicable. <para>Valid sub systems for this function (Y = Valid, N = Not valid)</para> <para> <list type="table"> <listheader> <term>NC_RUN </term> <term>NC_RUN_1 </term> <term>NC_RUN_2 </term> <term>NC_RUN_3 </term> <term>NC_PANEL </term> <term>NC_PANEL_1 </term> <term>NC_PANEL_2 </term> <term>NC_PANEL_3 </term> <term>NC_AL </term> <term>NC_AR </term> <term>NC_BL </term> <term>NC_BR </term> <term>NC_CL </term> <term>NC_CR </term> <term>NC_2AL </term> </listheader> <item> <term>Y (*47) or (*37 for BA Axis)</term> <term>Y (*47) or (*37 for BA Axis)</term> <term>Y (*47) or (*37 for BA Axis)</term> <term>Y (*47) or (*37 for BA Axis)</term> <term>Y (*47) or (*37 for BA Axis)</term> <term>Y (*47) or (*37 for BA Axis)</term> <term>Y (*47) or (*37 for BA Axis)</term> <term>Y (*47) or (*37 for BA Axis)</term> <term>Y (*47) or (*37 for BA Axis)</term> <term>Y (*47) or (*37 for BA Axis)</term> <term>Y (*47) or (*37 for BA Axis)</term> <term>Y (*47) or (*37 for BA Axis)</term> <term>Y (*47) or (*37 for BA Axis)</term> <term>Y (*47) or (*37 for BA Axis)</term> <term>Y (*47) or N for BA Axis</term> </item> </list> </para>  </SubSystem>
    </member>
    <member name="M:Okuma.CLDATAPI.DataAPI.CWorkpiece.GetMaxZeroOffset">
      <summary>Gets total workpiece offset index available in the system for Multi-Zero Offset (Work Coordinate) spec only. </summary>
      <example> This example shows how to call GetMaxZeroOffset method <para> Dim intValue As Integer	</para> <para> intValue = objVariables.GetMaxZeroOffset()	</para> </example>
      <returns>A System.Int32 value that represents the number of workpiece offset available in the system. It returns 0 if multi-zero offset (work coordinate) spec. is not enabled.</returns>
      <exception cref="System.ApplicationException">Thrown when function fails to perform the operation at current NC condition.</exception>
      <exception cref="System.NotSupportedException">Thrown when operation/input parameters are not supported for the current system.</exception>
    </member>
    <member name="T:Okuma.CLDATAPI.Structures.ToolProperty">
      <summary> Represents tool attribute of a registered tool in ATC table  </summary>
    </member>
    <member name="F:Okuma.CLDATAPI.Structures.ToolProperty.intToolNo">
      <summary> Tool number.  </summary>
    </member>
    <member name="F:Okuma.CLDATAPI.Structures.ToolProperty.enToolKind">
      <summary> Tool Kind  </summary>
    </member>
    <member name="F:Okuma.CLDATAPI.Structures.ToolProperty.enToolSize">
      <summary> Tool Size  </summary>
    </member>
    <member name="T:Okuma.CLDATAPI.Structures.ToolPotProperty">
      <summary> <para>Represents tool pot information </para> <para>Tool location shows the registgered location of tool or current location in the machine.</para> <para>Un-registered tool will have 0 and None for pot and tool location, respectively</para>  </summary>
    </member>
    <member name="F:Okuma.CLDATAPI.Structures.ToolPotProperty.intPotNo">
      <summary> <para>It can be a pot number or turret station number</para> <para>It is zero if tool reside in any other location other than magazine, or turrets.</para>  </summary>
    </member>
    <member name="F:Okuma.CLDATAPI.Structures.ToolPotProperty.enToolLocation">
      <summary> <para>Tool pot location</para>  </summary>
    </member>
    <member name="T:Okuma.CLDATAPI.Enumerations.XAxisCoordinateEnum">
      <summary> Represent X-axis command mode currently used by system  </summary>
    </member>
    <member name="F:Okuma.CLDATAPI.Enumerations.XAxisCoordinateEnum.Diameter">
      <summary> X-axis diameter command mode  </summary>
    </member>
    <member name="F:Okuma.CLDATAPI.Enumerations.XAxisCoordinateEnum.None">
      <summary> X Axis Coordinate system is off or not compatible. <para>By default, system will use Diameter when X-Coordinate spec is off. </para>  </summary>
    </member>
    <member name="F:Okuma.CLDATAPI.Enumerations.XAxisCoordinateEnum.Radius">
      <summary> X-axis radius command mode  </summary>
    </member>
    <member name="T:Okuma.CLDATAPI.Enumerations.ToolListTypeEnum">
      <summary> Represent tool list type  </summary>
    </member>
    <member name="F:Okuma.CLDATAPI.Enumerations.ToolListTypeEnum.AttachedTool">
      <summary> Attached Tool  </summary>
    </member>
    <member name="F:Okuma.CLDATAPI.Enumerations.ToolListTypeEnum.AllTools">
      <summary> Registered and Attached Tools  </summary>
    </member>
    <member name="F:Okuma.CLDATAPI.Enumerations.ToolListTypeEnum.RegisteredTool">
      <summary> Registered Tool  </summary>
    </member>
    <member name="T:Okuma.CLDATAPI.Enumerations.IOAddressSizeEnum">
      <summary> Represent IO Address size  </summary>
    </member>
    <member name="T:Okuma.CLDATAPI.Enumerations.ToolKind2Enum">
      <summary> Represents kinds of tool inserted in ATC table  </summary>
    </member>
    <member name="F:Okuma.CLDATAPI.Enumerations.ToolKind2Enum.None">
      <summary> None.  </summary>
    </member>
    <member name="F:Okuma.CLDATAPI.Enumerations.ToolKind2Enum.L_Tool">
      <summary> An L tool.  </summary>
    </member>
    <member name="F:Okuma.CLDATAPI.Enumerations.ToolKind2Enum.M_Tool">
      <summary> An M tool  </summary>
    </member>
    <member name="F:Okuma.CLDATAPI.Enumerations.ToolKind2Enum.SensorTool">
      <summary> Sensor tool  </summary>
    </member>
    <member name="F:Okuma.CLDATAPI.Enumerations.ToolKind2Enum.DummyTool">
      <summary> A dummy tool  </summary>
    </member>
    <member name="T:Okuma.CLDATAPI.Enumerations.ValidateLevelEnum">
      <summary> Validate level enumeration. For internal data structure only </summary>
      <remarks> </remarks>
      <history> [Lhuynh] 07/02/2013	Created </history>
    </member>
    <member name="F:Okuma.CLDATAPI.Enumerations.ValidateLevelEnum.Higher">
      <summary> Same or higher level  </summary>
    </member>
    <member name="F:Okuma.CLDATAPI.Enumerations.ValidateLevelEnum.All">
      <summary> All  </summary>
    </member>
    <member name="F:Okuma.CLDATAPI.Enumerations.ValidateLevelEnum.SameOrLower">
      <summary> Same or lower level  </summary>
    </member>
    <member name="F:Okuma.CLDATAPI.Enumerations.ValidateLevelEnum.SameOrHigher">
      <summary> Same or higher level  </summary>
    </member>
    <member name="F:Okuma.CLDATAPI.Enumerations.ValidateLevelEnum.Lower">
      <summary> Same or lower level  </summary>
    </member>
    <member name="F:Okuma.CLDATAPI.Enumerations.ValidateLevelEnum.Exact">
      <summary> Exact same level  </summary>
    </member>
    <member name="T:Okuma.CLDATAPI.Enumerations.ToolSubSystemEnum">
      <summary> Tool Sub System </summary>
      <remarks> </remarks>
      <history> [lhuynh]	6/24/2013	Created </history>
    </member>
    <member name="F:Okuma.CLDATAPI.Enumerations.ToolSubSystemEnum.NC_AR">
      <summary> <para>If applicable, the machine data will be for:</para> <para> - A Turret of first machine/left side of 2 sides machine</para> <para> - Sub/second spindle of first machine/left side of 2 sides machine</para> <para> - Required Sub spindle specification NC spec [4,1] </para>  </summary>
    </member>
    <member name="F:Okuma.CLDATAPI.Enumerations.ToolSubSystemEnum.NC_CL">
      <summary> <para> If applicable, the machine data will be for:</para> <para> - C Turret of first machine</para> <para> - Main spindle of first machine</para> <para> - Required 3 Turrets specification </para>  </summary>
    </member>
    <member name="F:Okuma.CLDATAPI.Enumerations.ToolSubSystemEnum.NC_BL">
      <summary> <para>If applicable, the machine data will be for:</para> <para> - B Turret of first machine/left side of 2 sides machine</para> <para> - Main spindle of first machine/left side of 2 sides machine</para> <para> - Required 4-axis and 2 Turrets specification </para>  </summary>
    </member>
    <member name="F:Okuma.CLDATAPI.Enumerations.ToolSubSystemEnum.NC_AL">
      <summary> <para>If applicable, the machine data will be for:</para> <para> - A Turret of first machine/R side of 2 sides machine</para> <para> - Main spindle of first machine/R side of 2 sides machine</para>  </summary>
    </member>
    <member name="F:Okuma.CLDATAPI.Enumerations.ToolSubSystemEnum.NC_2AL">
      <summary> <para>If applicable, the machine data will be for:</para> <para> - A Turret of second machine/L side of 2 sides machine</para> <para> - Main spindle of second machine/L side of 2 sides machine</para> <para> - Required parallel 2 spindles specification </para>  </summary>
    </member>
    <member name="F:Okuma.CLDATAPI.Enumerations.ToolSubSystemEnum.NC_CR">
      <summary> <para> If applicable, the machine data will be for:</para> <para> - C Turret of first machine</para> <para> - Sub/second spindle of first machine</para> <para> - Required Sub spindle and 3 Turrets specification </para>  </summary>
    </member>
    <member name="F:Okuma.CLDATAPI.Enumerations.ToolSubSystemEnum.NC_BR">
      <summary> <para>If applicable, the machine data will be for:</para> <para> - B Turret of first machine/left side of 2 sides machine</para> <para> - Sub/second spindle of first machine/left side of 2 sides machine</para> <para> - Required Sub spindle and 4-axis and 2 Turrets specification </para>  </summary>
    </member>
    <member name="T:Okuma.CLDATAPI.Enumerations.ToolTypeEnum">
      <summary> Represents type of tool inserted in ATC table  </summary>
    </member>
    <member name="F:Okuma.CLDATAPI.Enumerations.ToolTypeEnum.DUMMY">
      <summary> DUMMY Tool  </summary>
    </member>
    <member name="F:Okuma.CLDATAPI.Enumerations.ToolTypeEnum.SENSOR">
      <summary> SENSOR Tool  </summary>
    </member>
    <member name="F:Okuma.CLDATAPI.Enumerations.ToolTypeEnum.FLAT_E_MILL">
      <summary> FLAT_E_MILL Tool  </summary>
    </member>
    <member name="F:Okuma.CLDATAPI.Enumerations.ToolTypeEnum.CENT_DRILL">
      <summary> CENT DRILL Tool  </summary>
    </member>
    <member name="F:Okuma.CLDATAPI.Enumerations.ToolTypeEnum.IN_FACE_GROOVE">
      <summary> IN FACE GROOVE Tool  </summary>
    </member>
    <member name="F:Okuma.CLDATAPI.Enumerations.ToolTypeEnum.FACE_GROOVE_I">
      <summary> FACE GROOVE I Tool  </summary>
    </member>
    <member name="F:Okuma.CLDATAPI.Enumerations.ToolTypeEnum.THREAD">
      <summary> THREAD Tool  </summary>
    </member>
    <member name="F:Okuma.CLDATAPI.Enumerations.ToolTypeEnum.IN_ROUND">
      <summary> IN ROUND Tool  </summary>
    </member>
    <member name="F:Okuma.CLDATAPI.Enumerations.ToolTypeEnum.ROUND">
      <summary> ROUND Tool  </summary>
    </member>
    <member name="F:Okuma.CLDATAPI.Enumerations.ToolTypeEnum.IN_DOUBLE">
      <summary> IN DOUBLE Tool  </summary>
    </member>
    <member name="F:Okuma.CLDATAPI.Enumerations.ToolTypeEnum.None">
      <summary> None  </summary>
    </member>
    <member name="F:Okuma.CLDATAPI.Enumerations.ToolTypeEnum.OTHER">
      <summary> OTHER OUT Tool  </summary>
    </member>
    <member name="F:Okuma.CLDATAPI.Enumerations.ToolTypeEnum.CHAMFER">
      <summary> CHAMFER Tool  </summary>
    </member>
    <member name="F:Okuma.CLDATAPI.Enumerations.ToolTypeEnum.FACE_MILL">
      <summary> FACE MILL Tool  </summary>
    </member>
    <member name="F:Okuma.CLDATAPI.Enumerations.ToolTypeEnum.BALL_E_MILL">
      <summary> BALL E-MILL Tool  </summary>
    </member>
    <member name="F:Okuma.CLDATAPI.Enumerations.ToolTypeEnum.PT_TAP">
      <summary> PT TAP Tool  </summary>
    </member>
    <member name="F:Okuma.CLDATAPI.Enumerations.ToolTypeEnum.B_TAP">
      <summary> B TAP Tool  </summary>
    </member>
    <member name="F:Okuma.CLDATAPI.Enumerations.ToolTypeEnum.SPOT_DRILL">
      <summary> SPOT DRILL Tool  </summary>
    </member>
    <member name="F:Okuma.CLDATAPI.Enumerations.ToolTypeEnum.OTHER_IN">
      <summary> OTHER IN Tool  </summary>
    </member>
    <member name="F:Okuma.CLDATAPI.Enumerations.ToolTypeEnum.FACE_GROOVE_L">
      <summary> FACE GROOVE L Tool  </summary>
    </member>
    <member name="F:Okuma.CLDATAPI.Enumerations.ToolTypeEnum.GROOVE">
      <summary> GROOVE Tool  </summary>
    </member>
    <member name="F:Okuma.CLDATAPI.Enumerations.ToolTypeEnum.IN_SINGLE_B">
      <summary> IN SINGLE B Tool  </summary>
    </member>
    <member name="F:Okuma.CLDATAPI.Enumerations.ToolTypeEnum.IN_SINGLE_F">
      <summary> IN SINGLE F Tool  </summary>
    </member>
    <member name="F:Okuma.CLDATAPI.Enumerations.ToolTypeEnum.R_E_MILL">
      <summary> R E MILL Tool  </summary>
    </member>
    <member name="F:Okuma.CLDATAPI.Enumerations.ToolTypeEnum.REAMER">
      <summary> REAMER Tool  </summary>
    </member>
    <member name="F:Okuma.CLDATAPI.Enumerations.ToolTypeEnum.BACK_BOR">
      <summary> BACK BOR Tool  </summary>
    </member>
    <member name="F:Okuma.CLDATAPI.Enumerations.ToolTypeEnum.OTHER_OUT">
      <summary> OTHER OUT Tool  </summary>
    </member>
    <member name="F:Okuma.CLDATAPI.Enumerations.ToolTypeEnum.IN_THREAD">
      <summary> IN THREAD Tool  </summary>
    </member>
    <member name="F:Okuma.CLDATAPI.Enumerations.ToolTypeEnum.INSIDE_MULTIPLE_TOOL">
      <summary> INSIDE MULTIPLE TOOL Tool  </summary>
    </member>
    <member name="F:Okuma.CLDATAPI.Enumerations.ToolTypeEnum.MULTIPLE_TOOL">
      <summary> MULTIPLE TOOL Tool  </summary>
    </member>
    <member name="F:Okuma.CLDATAPI.Enumerations.ToolTypeEnum.DOUBLE">
      <summary> DOUBLE Tool  </summary>
    </member>
    <member name="F:Okuma.CLDATAPI.Enumerations.ToolTypeEnum.SIDE_CUTTER">
      <summary> SIDE CUTTER Tool  </summary>
    </member>
    <member name="F:Okuma.CLDATAPI.Enumerations.ToolTypeEnum.HELICAL_TAP">
      <summary> HELICAL TAP Tool  </summary>
    </member>
    <member name="F:Okuma.CLDATAPI.Enumerations.ToolTypeEnum.P_TAP">
      <summary> P TAP Tool  </summary>
    </member>
    <member name="F:Okuma.CLDATAPI.Enumerations.ToolTypeEnum.TAP">
      <summary> TAP Tool  </summary>
    </member>
    <member name="F:Okuma.CLDATAPI.Enumerations.ToolTypeEnum.BORING">
      <summary> BORING Tool  </summary>
    </member>
    <member name="F:Okuma.CLDATAPI.Enumerations.ToolTypeEnum.DRILL">
      <summary> CENT DRILL Tool  </summary>
    </member>
    <member name="F:Okuma.CLDATAPI.Enumerations.ToolTypeEnum.IN_GROOVE">
      <summary> IN GROOVE Tool  </summary>
    </member>
    <member name="F:Okuma.CLDATAPI.Enumerations.ToolTypeEnum.SINGLE">
      <summary> SINGLE Tool  </summary>
    </member>
    <member name="T:Okuma.CLDATAPI.Enumerations.ToolPotLocationEnum">
      <summary> Represent different tool pot locations  </summary>
    </member>
    <member name="F:Okuma.CLDATAPI.Enumerations.ToolPotLocationEnum.None">
      <summary> None.  Tool is not registered with the system or not registered with tool pot location yet.  </summary>
    </member>
    <member name="F:Okuma.CLDATAPI.Enumerations.ToolPotLocationEnum.Ready">
      <summary> Ready Station  </summary>
    </member>
    <member name="F:Okuma.CLDATAPI.Enumerations.ToolPotLocationEnum.Return">
      <summary> Return Station  </summary>
    </member>
    <member name="F:Okuma.CLDATAPI.Enumerations.ToolPotLocationEnum.A_Turret">
      <summary> A Turret  </summary>
    </member>
    <member name="F:Okuma.CLDATAPI.Enumerations.ToolPotLocationEnum.Magazine">
      <summary> Magazine  </summary>
    </member>
    <member name="F:Okuma.CLDATAPI.Enumerations.ToolPotLocationEnum.C_Turret">
      <summary> C Turret  </summary>
    </member>
    <member name="F:Okuma.CLDATAPI.Enumerations.ToolPotLocationEnum.H1_Turret">
      <summary> H 1 Turret  </summary>
    </member>
    <member name="F:Okuma.CLDATAPI.Enumerations.ToolPotLocationEnum.B_Turret">
      <summary> B Turret  </summary>
    </member>
    <member name="T:Okuma.CLDATAPI.Enumerations.ToolProccesKindEnum">
      <summary> Represent tool processing kind  </summary>
    </member>
    <member name="F:Okuma.CLDATAPI.Enumerations.ToolProccesKindEnum.Helical_Tap_L">
      <summary> HELICAL TAP (LEFT)  </summary>
    </member>
    <member name="F:Okuma.CLDATAPI.Enumerations.ToolProccesKindEnum.Helical_Tap_D">
      <summary> HELICAL TAP (DOWN)  </summary>
    </member>
    <member name="F:Okuma.CLDATAPI.Enumerations.ToolProccesKindEnum.Recess_OD_Rev">
      <summary> RECESS OD REV  </summary>
    </member>
    <member name="F:Okuma.CLDATAPI.Enumerations.ToolProccesKindEnum.Rough_Face_Rev_D">
      <summary> ROUGH FACE REV (DOWN)  </summary>
    </member>
    <member name="F:Okuma.CLDATAPI.Enumerations.ToolProccesKindEnum.M_Mill_Center_L">
      <summary> M-DRILL CENTER (LEFT)  </summary>
    </member>
    <member name="F:Okuma.CLDATAPI.Enumerations.ToolProccesKindEnum.M_Mill_Center_D">
      <summary> M-DRILL CENTER (DOWN)  </summary>
    </member>
    <member name="F:Okuma.CLDATAPI.Enumerations.ToolProccesKindEnum.Face_Mill_L">
      <summary> FACE MILL (LEFT)  </summary>
    </member>
    <member name="F:Okuma.CLDATAPI.Enumerations.ToolProccesKindEnum.Face_Mill_D">
      <summary> FACE MILL (DOWN)  </summary>
    </member>
    <member name="F:Okuma.CLDATAPI.Enumerations.ToolProccesKindEnum.M_Tap_L">
      <summary> M-TAP (LEFT)  </summary>
    </member>
    <member name="F:Okuma.CLDATAPI.Enumerations.ToolProccesKindEnum.M_Tap_D">
      <summary> M-TAP (DOWN)  </summary>
    </member>
    <member name="F:Okuma.CLDATAPI.Enumerations.ToolProccesKindEnum.Groove_OD_D">
      <summary> GROOVE OD (DOWN)  </summary>
    </member>
    <member name="F:Okuma.CLDATAPI.Enumerations.ToolProccesKindEnum.Thread_Face_U">
      <summary> THREAD FACE (UP)  </summary>
    </member>
    <member name="F:Okuma.CLDATAPI.Enumerations.ToolProccesKindEnum.Finish_ID_R">
      <summary> FINISH ID (RIGHT)  </summary>
    </member>
    <member name="F:Okuma.CLDATAPI.Enumerations.ToolProccesKindEnum.Rough_Face_U">
      <summary> ROUGH FACE (UP)  </summary>
    </member>
    <member name="F:Okuma.CLDATAPI.Enumerations.ToolProccesKindEnum.Rough_Face_D">
      <summary> ROUGH FACE (DOWN)  </summary>
    </member>
    <member name="F:Okuma.CLDATAPI.Enumerations.ToolProccesKindEnum.None">
      <summary> None  </summary>
    </member>
    <member name="F:Okuma.CLDATAPI.Enumerations.ToolProccesKindEnum.Invalid">
      <summary> Invalid tool data  </summary>
    </member>
    <member name="F:Okuma.CLDATAPI.Enumerations.ToolProccesKindEnum.Finish_Face_Rev_D">
      <summary> FINISH FACE REV (DOWN)  </summary>
    </member>
    <member name="F:Okuma.CLDATAPI.Enumerations.ToolProccesKindEnum.Reamer_L">
      <summary> REAMER (LEFT)  </summary>
    </member>
    <member name="F:Okuma.CLDATAPI.Enumerations.ToolProccesKindEnum.Reamer_D">
      <summary> REAMER (DOWN)  </summary>
    </member>
    <member name="F:Okuma.CLDATAPI.Enumerations.ToolProccesKindEnum.Boring_L">
      <summary> BORING (LEFT)  </summary>
    </member>
    <member name="F:Okuma.CLDATAPI.Enumerations.ToolProccesKindEnum.Boring_D">
      <summary> BORING (DOWN)  </summary>
    </member>
    <member name="F:Okuma.CLDATAPI.Enumerations.ToolProccesKindEnum.M_Drill_L">
      <summary> M-DRILL (LEFT)  </summary>
    </member>
    <member name="F:Okuma.CLDATAPI.Enumerations.ToolProccesKindEnum.M_Drill_D">
      <summary> M-DRILL (DOWN)  </summary>
    </member>
    <member name="F:Okuma.CLDATAPI.Enumerations.ToolProccesKindEnum.Recess_ID">
      <summary> RECESS ID  </summary>
    </member>
    <member name="F:Okuma.CLDATAPI.Enumerations.ToolProccesKindEnum.Recess_OD">
      <summary> RECESS OD  </summary>
    </member>
    <member name="F:Okuma.CLDATAPI.Enumerations.ToolProccesKindEnum.Thread_ID_R">
      <summary> THREAD ID (RIGHT)  </summary>
    </member>
    <member name="F:Okuma.CLDATAPI.Enumerations.ToolProccesKindEnum.Thread_Face_D">
      <summary> THREAD FACE (DOWN)  </summary>
    </member>
    <member name="F:Okuma.CLDATAPI.Enumerations.ToolProccesKindEnum.Thread_OD_L">
      <summary> THREAD OD (LEFT)  </summary>
    </member>
    <member name="F:Okuma.CLDATAPI.Enumerations.ToolProccesKindEnum.Finish_OD_L">
      <summary> FINISH OD (LEFT)  </summary>
    </member>
    <member name="F:Okuma.CLDATAPI.Enumerations.ToolProccesKindEnum.Rough_ID_R">
      <summary> ROUGH ID (RIGHT)  </summary>
    </member>
    <member name="F:Okuma.CLDATAPI.Enumerations.ToolProccesKindEnum.Rough_OD_L">
      <summary> ROUGH OD (LEFT)  </summary>
    </member>
    <member name="F:Okuma.CLDATAPI.Enumerations.ToolProccesKindEnum.L_Tap">
      <summary> L-TAP  </summary>
    </member>
    <member name="F:Okuma.CLDATAPI.Enumerations.ToolProccesKindEnum.M_End_Mill_L">
      <summary> M-END MILL (LEFT)  </summary>
    </member>
    <member name="F:Okuma.CLDATAPI.Enumerations.ToolProccesKindEnum.M_End_Mill_D">
      <summary> M-END MILL (DOWN)  </summary>
    </member>
    <member name="F:Okuma.CLDATAPI.Enumerations.ToolProccesKindEnum.L_Drill_Carbide_L">
      <summary> L-DRILL CARBIDE (LEFT)  </summary>
    </member>
    <member name="F:Okuma.CLDATAPI.Enumerations.ToolProccesKindEnum.Finish_Face_U">
      <summary> FINISH FACE (UP)  </summary>
    </member>
    <member name="F:Okuma.CLDATAPI.Enumerations.ToolProccesKindEnum.Finish_OD_R">
      <summary> FINISH OD (RIGHT)  </summary>
    </member>
    <member name="F:Okuma.CLDATAPI.Enumerations.ToolProccesKindEnum.L_End_Mill">
      <summary> L-END MILL  </summary>
    </member>
    <member name="F:Okuma.CLDATAPI.Enumerations.ToolProccesKindEnum.Chamfer_L">
      <summary> CHAMFER (LEFT)  </summary>
    </member>
    <member name="F:Okuma.CLDATAPI.Enumerations.ToolProccesKindEnum.Chamfer_D">
      <summary> CHAMFER (DOWN)  </summary>
    </member>
    <member name="F:Okuma.CLDATAPI.Enumerations.ToolProccesKindEnum.L_Center_Drill_L">
      <summary> L-CENTER DRILL (LEFT)  </summary>
    </member>
    <member name="F:Okuma.CLDATAPI.Enumerations.ToolProccesKindEnum.L_Drill_HSS_L">
      <summary> L-DRILL HSS (LEFT)  </summary>
    </member>
    <member name="F:Okuma.CLDATAPI.Enumerations.ToolProccesKindEnum.Groove_Face_L">
      <summary> GROOVE FACE (LEFT)  </summary>
    </member>
    <member name="F:Okuma.CLDATAPI.Enumerations.ToolProccesKindEnum.Groove_ID_U">
      <summary> GROOVE ID (UP)  </summary>
    </member>
    <member name="F:Okuma.CLDATAPI.Enumerations.ToolProccesKindEnum.Thread_OD_R">
      <summary> THREAD OD (RIGHT)  </summary>
    </member>
    <member name="F:Okuma.CLDATAPI.Enumerations.ToolProccesKindEnum.Thread_ID_L">
      <summary> THREAD ID (LEFT)  </summary>
    </member>
    <member name="F:Okuma.CLDATAPI.Enumerations.ToolProccesKindEnum.Finish_Face_D">
      <summary> FINISH FACE (DOWN)  </summary>
    </member>
    <member name="F:Okuma.CLDATAPI.Enumerations.ToolProccesKindEnum.Finish_ID_L">
      <summary> FINISH ID (LEFT)  </summary>
    </member>
    <member name="F:Okuma.CLDATAPI.Enumerations.ToolProccesKindEnum.Rough_OD_R">
      <summary> ROUGH OD (RIGHT)  </summary>
    </member>
    <member name="F:Okuma.CLDATAPI.Enumerations.ToolProccesKindEnum.Rough_ID_L">
      <summary> ROUGH ID (LEFT)  </summary>
    </member>
    <member name="T:Okuma.CLDATAPI.Enumerations.ToolCuttingPositionTypeEnum">
      <summary> Represent different types of tool cutting position  </summary>
    </member>
    <member name="F:Okuma.CLDATAPI.Enumerations.ToolCuttingPositionTypeEnum.Vertical">
      <summary> Vertical Position  </summary>
    </member>
    <member name="F:Okuma.CLDATAPI.Enumerations.ToolCuttingPositionTypeEnum.Base">
      <summary> Base position  </summary>
    </member>
    <member name="F:Okuma.CLDATAPI.Enumerations.ToolCuttingPositionTypeEnum.None">
      <summary> None  </summary>
    </member>
    <member name="F:Okuma.CLDATAPI.Enumerations.ToolCuttingPositionTypeEnum.Invalid">
      <summary> Invalid tool data  </summary>
    </member>
    <member name="F:Okuma.CLDATAPI.Enumerations.ToolCuttingPositionTypeEnum.Base_B">
      <summary> Base B position  </summary>
    </member>
    <member name="F:Okuma.CLDATAPI.Enumerations.ToolCuttingPositionTypeEnum.Vertical_A">
      <summary> Vertical A position  </summary>
    </member>
    <member name="F:Okuma.CLDATAPI.Enumerations.ToolCuttingPositionTypeEnum.Vertical_B">
      <summary> Vertical B position  </summary>
    </member>
    <member name="F:Okuma.CLDATAPI.Enumerations.ToolCuttingPositionTypeEnum.Base_A">
      <summary> Base A position  </summary>
    </member>
    <member name="T:Okuma.CLDATAPI.Enumerations.SpindleAxisModeEnum">
      <summary> Represent designated spindles for tool cutting positions  </summary>
    </member>
    <member name="F:Okuma.CLDATAPI.Enumerations.SpindleAxisModeEnum.FirstSpindle">
      <summary> First Spindle  </summary>
    </member>
    <member name="F:Okuma.CLDATAPI.Enumerations.SpindleAxisModeEnum.SecondSpindle">
      <summary> Second Spindle  </summary>
    </member>
    <member name="F:Okuma.CLDATAPI.Enumerations.SpindleAxisModeEnum.None">
      <summary> None  </summary>
    </member>
    <member name="T:Okuma.CLDATAPI.Enumerations.ToolEdgeEnum">
      <summary> <para>OSP-P300S: </para> <para>Represents 12 tool edge number.</para> <para>For 12 angles tool requires NC Spec Code [27,7] ON </para> <para>For 4 angles tool requires NC Spec Code [26,1] ON</para> <para>For 8 angles tool requires NC Spec Code [27,7] OFF and [26,1] OFF</para> <para>OSP-P300L: Not applicable</para> </summary>
      <Figure> <para> Edge NO. <img src="Lathe.P300.TD.ToolDataSetting.jpg" /> </para>  </Figure>
    </member>
    <member name="F:Okuma.CLDATAPI.Enumerations.ToolEdgeEnum.ToolEdge_09">
      <summary> Tool Edge number 9  </summary>
    </member>
    <member name="F:Okuma.CLDATAPI.Enumerations.ToolEdgeEnum.ToolEdge_05">
      <summary> Tool Edge number 5  </summary>
    </member>
    <member name="F:Okuma.CLDATAPI.Enumerations.ToolEdgeEnum.ToolEdge_01">
      <summary> Tool Edge number 1.  For non multi-edges tool, tool edge 1 must be specified.  </summary>
    </member>
    <member name="F:Okuma.CLDATAPI.Enumerations.ToolEdgeEnum.None">
      <summary> No Tool Edge  </summary>
    </member>
    <member name="F:Okuma.CLDATAPI.Enumerations.ToolEdgeEnum.ToolEdge_10">
      <summary> Tool Edge number 10  </summary>
    </member>
    <member name="F:Okuma.CLDATAPI.Enumerations.ToolEdgeEnum.ToolEdge_08">
      <summary> Tool Edge number 8  </summary>
    </member>
    <member name="F:Okuma.CLDATAPI.Enumerations.ToolEdgeEnum.ToolEdge_04">
      <summary> Tool Edge number 4  </summary>
    </member>
    <member name="F:Okuma.CLDATAPI.Enumerations.ToolEdgeEnum.ToolEdge_11">
      <summary> Tool Edge number 11  </summary>
    </member>
    <member name="F:Okuma.CLDATAPI.Enumerations.ToolEdgeEnum.ToolEdge_07">
      <summary> Tool Edge number 7  </summary>
    </member>
    <member name="F:Okuma.CLDATAPI.Enumerations.ToolEdgeEnum.ToolEdge_03">
      <summary> Tool Edge number 3  </summary>
    </member>
    <member name="F:Okuma.CLDATAPI.Enumerations.ToolEdgeEnum.ToolEdge_12">
      <summary> Tool Edge number 12  </summary>
    </member>
    <member name="F:Okuma.CLDATAPI.Enumerations.ToolEdgeEnum.ToolEdge_06">
      <summary> Tool Edge number 6  </summary>
    </member>
    <member name="F:Okuma.CLDATAPI.Enumerations.ToolEdgeEnum.ToolEdge_02">
      <summary> Tool Edge number 2  </summary>
    </member>
    <member name="T:Okuma.CLDATAPI.Enumerations.ToolCuttingPositionEnum">
      <summary> Represents 20 tool cutting positions. </summary>
      <Figure> <para> <img src="Lathe.P300.TD.ToolDataSetting.ToolIndexList.jpg" /> </para>  </Figure>
    </member>
    <member name="F:Okuma.CLDATAPI.Enumerations.ToolCuttingPositionEnum.CuttingPosition_20">
      <summary> Cutting Position 20  </summary>
    </member>
    <member name="F:Okuma.CLDATAPI.Enumerations.ToolCuttingPositionEnum.CuttingPosition_16">
      <summary> Cutting Position 16  </summary>
    </member>
    <member name="F:Okuma.CLDATAPI.Enumerations.ToolCuttingPositionEnum.CuttingPosition_12">
      <summary> Second Spindle (Principal axis 2) Position 12/Vertical B/ BA =0  </summary>
    </member>
    <member name="F:Okuma.CLDATAPI.Enumerations.ToolCuttingPositionEnum.CuttingPosition_7">
      <summary> First Spindle (Principal axis 1) Position 7/Base A/ BA =0  </summary>
    </member>
    <member name="F:Okuma.CLDATAPI.Enumerations.ToolCuttingPositionEnum.CuttingPosition_3">
      <summary> First Spindle (Principal axis 1) Position 3/Base A/ BA =45  </summary>
    </member>
    <member name="F:Okuma.CLDATAPI.Enumerations.ToolCuttingPositionEnum.CuttingPosition_19">
      <summary> Cutting Position 19  </summary>
    </member>
    <member name="F:Okuma.CLDATAPI.Enumerations.ToolCuttingPositionEnum.CuttingPosition_15">
      <summary> Cutting Position 15  </summary>
    </member>
    <member name="F:Okuma.CLDATAPI.Enumerations.ToolCuttingPositionEnum.CuttingPosition_11">
      <summary> Second Spindle (Principal axis 2) Position 11/Vertical A/ BA =0  </summary>
    </member>
    <member name="F:Okuma.CLDATAPI.Enumerations.ToolCuttingPositionEnum.CuttingPosition_6">
      <summary> First Spindle (Principal axis 1) Position 6/Vertical B/ BA =0  </summary>
    </member>
    <member name="F:Okuma.CLDATAPI.Enumerations.ToolCuttingPositionEnum.CuttingPosition_2">
      <summary> First Spindle (Principal axis 1) Position 2/Base B/ BA = 0  </summary>
    </member>
    <member name="F:Okuma.CLDATAPI.Enumerations.ToolCuttingPositionEnum.CuttingPosition_18">
      <summary> Cutting Position 18  </summary>
    </member>
    <member name="F:Okuma.CLDATAPI.Enumerations.ToolCuttingPositionEnum.CuttingPosition_14">
      <summary> Cutting Position 14  </summary>
    </member>
    <member name="F:Okuma.CLDATAPI.Enumerations.ToolCuttingPositionEnum.CuttingPosition_10">
      <summary> Second Spindle (Principal axis 2) Position 10/Base B/ BA =45  </summary>
    </member>
    <member name="F:Okuma.CLDATAPI.Enumerations.ToolCuttingPositionEnum.CuttingPosition_9">
      <summary> Second Spindle (Principal axis 2) Position 9/Base A/ BA =45  </summary>
    </member>
    <member name="F:Okuma.CLDATAPI.Enumerations.ToolCuttingPositionEnum.CuttingPosition_5">
      <summary> First Spindle (Principal axis 1) Position 5/Vertical A/ BA =0  </summary>
    </member>
    <member name="F:Okuma.CLDATAPI.Enumerations.ToolCuttingPositionEnum.CuttingPosition_1">
      <summary> First Spindle (Principal axis 1) Position 1/Base A/ BA = 0  </summary>
    </member>
    <member name="F:Okuma.CLDATAPI.Enumerations.ToolCuttingPositionEnum.CuttingPosition_17">
      <summary> Cutting Position 17  </summary>
    </member>
    <member name="F:Okuma.CLDATAPI.Enumerations.ToolCuttingPositionEnum.CuttingPosition_13">
      <summary> Cutting Position 13  </summary>
    </member>
    <member name="F:Okuma.CLDATAPI.Enumerations.ToolCuttingPositionEnum.CuttingPosition_8">
      <summary> Second Spindle (Principal axis 2) Position 8/Base B/ BA =0  </summary>
    </member>
    <member name="F:Okuma.CLDATAPI.Enumerations.ToolCuttingPositionEnum.CuttingPosition_4">
      <summary> First Spindle (Principal axis 1) Position 4/Base B/ BA =45  </summary>
    </member>
    <member name="T:Okuma.CLDATAPI.Enumerations.ProgramRunningStateEnum">
      <summary> Represents program running state  </summary>
    </member>
    <member name="F:Okuma.CLDATAPI.Enumerations.ProgramRunningStateEnum.Executing">
      <summary> Program is in running state.  Once the program has been executed it will remain in the this state until the program is stopped or reset.  </summary>
    </member>
    <member name="F:Okuma.CLDATAPI.Enumerations.ProgramRunningStateEnum.NotRun">
      <summary> Program is not in running state.  </summary>
    </member>
    <member name="T:Okuma.CLDATAPI.Enumerations.SpindleSelectionEnum">
      <summary> Represents spindle selection  </summary>
    </member>
    <member name="F:Okuma.CLDATAPI.Enumerations.SpindleSelectionEnum.LeftSpindle">
      <summary> Left Spindle  </summary>
    </member>
    <member name="F:Okuma.CLDATAPI.Enumerations.SpindleSelectionEnum.RightSpindle">
      <summary> Right Spindle  </summary>
    </member>
    <member name="T:Okuma.CLDATAPI.Enumerations.ToolPositionEnum">
      <summary> Represents cutting position in tool offset multi-system specification. <para> Note: Default tool cutting position is base A if specification of tool offset multi-system specification is invalid. </para> <para> The cutting tool position could be associated with left or right spindle if applicable. </para> </summary>
      <Figure> <para> Different Cutting Tool positions when Left or Right spindle is specified. <img src="Lathe.Multi.CuttingPosition.jpg" /> </para>  </Figure>
    </member>
    <member name="F:Okuma.CLDATAPI.Enumerations.ToolPositionEnum.BaseA">
      <summary> Base position, Side A  </summary>
    </member>
    <member name="F:Okuma.CLDATAPI.Enumerations.ToolPositionEnum.BaseB">
      <summary> Base position, Side B  </summary>
    </member>
    <member name="F:Okuma.CLDATAPI.Enumerations.ToolPositionEnum.VerticalA">
      <summary> Vertical position, Side A  </summary>
    </member>
    <member name="F:Okuma.CLDATAPI.Enumerations.ToolPositionEnum.VerticalB">
      <summary> Vertical position, Side B  </summary>
    </member>
    <member name="T:Okuma.CLDATAPI.Enumerations.HourMeterEnum">
      <summary> Represents different hour meter types counter  </summary>
    </member>
    <member name="F:Okuma.CLDATAPI.Enumerations.HourMeterEnum.ExternalInputTime">
      <summary> External Input  </summary>
    </member>
    <member name="F:Okuma.CLDATAPI.Enumerations.HourMeterEnum.PowerOnTime">
      <summary> Power On Time  </summary>
    </member>
    <member name="F:Okuma.CLDATAPI.Enumerations.HourMeterEnum.NCRunningTime">
      <summary> NC Running Time  </summary>
    </member>
    <member name="F:Okuma.CLDATAPI.Enumerations.HourMeterEnum.CuttingTime">
      <summary> Cutting Time  </summary>
    </member>
    <member name="F:Okuma.CLDATAPI.Enumerations.HourMeterEnum.SpindleRevolutionTime">
      <summary> Spindle Revolution Time  </summary>
    </member>
    <member name="T:Okuma.CLDATAPI.Enumerations.ToolIDChipEnum">
      <summary> Represents different state of ID Chip in a tool for Tool ID  </summary>
    </member>
    <member name="F:Okuma.CLDATAPI.Enumerations.ToolIDChipEnum.ToolIDWithChip">
      <summary> Tool ID with chip  </summary>
    </member>
    <member name="F:Okuma.CLDATAPI.Enumerations.ToolIDChipEnum.NoTool">
      <summary> No registered Tool Pot Note: This value should not be used for setting.  </summary>
    </member>
    <member name="F:Okuma.CLDATAPI.Enumerations.ToolIDChipEnum.ToolIDWithoutChip">
      <summary> Tool ID without chip  </summary>
    </member>
    <member name="T:Okuma.CLDATAPI.Enumerations.ToolIDCuttingPositionEnum">
      <summary> Represents cutting position in multi-point tool compensation system for Tool ID. </summary>
      <Figure> <para> <img src="Lathe.Multi.CuttingPosition.jpg" /> </para>  </Figure>
    </member>
    <member name="F:Okuma.CLDATAPI.Enumerations.ToolIDCuttingPositionEnum.PrincipalAxis2_VerticalB">
      <summary> Second Spindle (Principal axis 2) Vertical position, Side B  </summary>
    </member>
    <member name="F:Okuma.CLDATAPI.Enumerations.ToolIDCuttingPositionEnum.PrincipalAxis2_VerticalA">
      <summary> Second Spindle (Principal axis 2) Vertical position, Side A  </summary>
    </member>
    <member name="F:Okuma.CLDATAPI.Enumerations.ToolIDCuttingPositionEnum.PrincipalAxis1_VerticalB">
      <summary> First Spindle (Principal axis 1) Vertical position, Side B  </summary>
    </member>
    <member name="F:Okuma.CLDATAPI.Enumerations.ToolIDCuttingPositionEnum.PrincipalAxis1_VerticalA">
      <summary> First Spindle (Principal axis 1) Vertical position, Side A  </summary>
    </member>
    <member name="F:Okuma.CLDATAPI.Enumerations.ToolIDCuttingPositionEnum.NoSelect">
      <summary> When the specification of multi-point tool compensation system is invalid, the value is default to First Spindle (Principal axis 1) Base position, Side A  </summary>
    </member>
    <member name="F:Okuma.CLDATAPI.Enumerations.ToolIDCuttingPositionEnum.PrincipalAxis2_BaseB">
      <summary> Second Spindle (Principal axis 2) Base position, Side B  </summary>
    </member>
    <member name="F:Okuma.CLDATAPI.Enumerations.ToolIDCuttingPositionEnum.PrincipalAxis2_BaseA">
      <summary> Second Spindle (Principal axis 2) Base position, Side A  </summary>
    </member>
    <member name="F:Okuma.CLDATAPI.Enumerations.ToolIDCuttingPositionEnum.PrincipalAxis1_BaseB">
      <summary> First Spindle (Principal axis 1) Base position, Side B  </summary>
    </member>
    <member name="F:Okuma.CLDATAPI.Enumerations.ToolIDCuttingPositionEnum.PrincipalAxis1_BaseA">
      <summary> First Spindle (Principal axis 1) Base position, Side A  </summary>
    </member>
    <member name="T:Okuma.CLDATAPI.Enumerations.ToolIDMultiEdgesAngleToolEnum">
      <summary> Represents different sets of multi-edge tool for Tool ID  </summary>
    </member>
    <member name="F:Okuma.CLDATAPI.Enumerations.ToolIDMultiEdgesAngleToolEnum.AngleToolWith_8Edges">
      <summary> Tool with 8 edges  </summary>
    </member>
    <member name="F:Okuma.CLDATAPI.Enumerations.ToolIDMultiEdgesAngleToolEnum.AngleToolWith_12Edges">
      <summary> Tool with 12 edges  </summary>
    </member>
    <member name="T:Okuma.CLDATAPI.Enumerations.ToolTipDirectionEnum">
      <summary> Represents direction of geometry offset of a tool tip for Tool ID  </summary>
    </member>
    <member name="F:Okuma.CLDATAPI.Enumerations.ToolTipDirectionEnum.LeftPosition">
      <summary> Left Position - “L POS” (This defines the sign of tool offset value X.)  </summary>
    </member>
    <member name="F:Okuma.CLDATAPI.Enumerations.ToolTipDirectionEnum.RightPosition">
      <summary> Right Position - “R POS”  </summary>
    </member>
    <member name="T:Okuma.CLDATAPI.Enumerations.ToolIDLifeStatusEnum">
      <summary> Represents tool life status for Tool ID  </summary>
    </member>
    <member name="F:Okuma.CLDATAPI.Enumerations.ToolIDLifeStatusEnum.NG">
      <summary> Tool life is not good.  </summary>
    </member>
    <member name="F:Okuma.CLDATAPI.Enumerations.ToolIDLifeStatusEnum.Expired">
      <summary> Tool life is expired.  </summary>
    </member>
    <member name="F:Okuma.CLDATAPI.Enumerations.ToolIDLifeStatusEnum.OK">
      <summary> Tool life is OK  </summary>
    </member>
    <member name="T:Okuma.CLDATAPI.Enumerations.ToolLifeModeEnum">
      <summary> Represents management mode of tool life for Tool ID  </summary>
    </member>
    <member name="F:Okuma.CLDATAPI.Enumerations.ToolLifeModeEnum.CountMode">
      <summary> Tool life is under count management mode  </summary>
    </member>
    <member name="F:Okuma.CLDATAPI.Enumerations.ToolLifeModeEnum.TimeMode">
      <summary> Tool life is under time management mode  </summary>
    </member>
    <member name="T:Okuma.CLDATAPI.Enumerations.ReturnMagazineEnum">
      <summary> Represents return magazine number of a tool for Tool ID  </summary>
    </member>
    <member name="F:Okuma.CLDATAPI.Enumerations.ReturnMagazineEnum.Magazine2">
      <summary> Magazine 2  </summary>
    </member>
    <member name="F:Okuma.CLDATAPI.Enumerations.ReturnMagazineEnum.Magazine1">
      <summary> Magazine 1  </summary>
    </member>
    <member name="T:Okuma.CLDATAPI.Enumerations.ToolIDToolKindEnum">
      <summary> Represents kinds of tool inserted in ATC table for Tool ID  </summary>
    </member>
    <member name="F:Okuma.CLDATAPI.Enumerations.ToolIDToolKindEnum.SensorTool">
      <summary> Sensor tool  </summary>
    </member>
    <member name="F:Okuma.CLDATAPI.Enumerations.ToolIDToolKindEnum.L_Tool">
      <summary> An L tool.  </summary>
    </member>
    <member name="F:Okuma.CLDATAPI.Enumerations.ToolIDToolKindEnum.MultiPoint">
      <summary> Multi-point Tool  </summary>
    </member>
    <member name="F:Okuma.CLDATAPI.Enumerations.ToolIDToolKindEnum.M_Tool">
      <summary> An M tool  </summary>
    </member>
    <member name="F:Okuma.CLDATAPI.Enumerations.ToolIDToolKindEnum.None">
      <summary> None. No tool registers in the pot.  </summary>
    </member>
    <member name="F:Okuma.CLDATAPI.Enumerations.ToolIDToolKindEnum.DummyTool">
      <summary> A dummy tool  </summary>
    </member>
    <member name="T:Okuma.CLDATAPI.Enumerations.ToolIDToolSizeEnum">
      <summary> Represents sizes of tool inserted in ATC table for Tool ID  </summary>
    </member>
    <member name="F:Okuma.CLDATAPI.Enumerations.ToolIDToolSizeEnum.None">
      <summary> No attribute  </summary>
    </member>
    <member name="F:Okuma.CLDATAPI.Enumerations.ToolIDToolSizeEnum.B_Tool">
      <summary> B Tool size (Left Side large tool)  </summary>
    </member>
    <member name="F:Okuma.CLDATAPI.Enumerations.ToolIDToolSizeEnum.BR_Tool">
      <summary> BR tool size  (Right Side large tool)  </summary>
    </member>
    <member name="F:Okuma.CLDATAPI.Enumerations.ToolIDToolSizeEnum.E_Tool">
      <summary> Super Large diameter tool  </summary>
    </member>
    <member name="F:Okuma.CLDATAPI.Enumerations.ToolIDToolSizeEnum.Standard">
      <summary> Standard tool size  </summary>
    </member>
    <member name="F:Okuma.CLDATAPI.Enumerations.ToolIDToolSizeEnum.SL_Tool">
      <summary> Large Diameter tool and represented as 'SL'  </summary>
    </member>
    <member name="T:Okuma.CLDATAPI.Enumerations.ControlTypeEnum">
      <summary> Represents machine control type  </summary>
    </member>
    <member name="F:Okuma.CLDATAPI.Enumerations.ControlTypeEnum.P300G">
      <summary> P300 Grinder OSP-P control  </summary>
    </member>
    <member name="F:Okuma.CLDATAPI.Enumerations.ControlTypeEnum.P300SMP">
      <summary> P300 Special Machining Center OSP-P control  </summary>
    </member>
    <member name="F:Okuma.CLDATAPI.Enumerations.ControlTypeEnum.P200">
      <summary> P200 OSP-P control  </summary>
    </member>
    <member name="F:Okuma.CLDATAPI.Enumerations.ControlTypeEnum.P100">
      <summary> P100 Type II OSP-P control  </summary>
    </member>
    <member name="F:Okuma.CLDATAPI.Enumerations.ControlTypeEnum.P300M">
      <summary> P300 Machining Center OSP-P control  </summary>
    </member>
    <member name="F:Okuma.CLDATAPI.Enumerations.ControlTypeEnum.P300SLP">
      <summary> P300 Special Lathe OSP-P control  </summary>
    </member>
    <member name="F:Okuma.CLDATAPI.Enumerations.ControlTypeEnum.P300L">
      <summary> P300 Lathe OSP-P control  </summary>
    </member>
    <member name="F:Okuma.CLDATAPI.Enumerations.ControlTypeEnum.None">
      <summary> Un-determined control type  </summary>
    </member>
    <member name="T:Okuma.CLDATAPI.Enumerations.ATCTypeEnum">
      <summary> Represents different ATC types  </summary>
    </member>
    <member name="F:Okuma.CLDATAPI.Enumerations.ATCTypeEnum.FixedAddressATC">
      <summary> Fixed Address ATC Type  </summary>
    </member>
    <member name="F:Okuma.CLDATAPI.Enumerations.ATCTypeEnum.RandomATCType">
      <summary> Random ATC Type  </summary>
    </member>
    <member name="T:Okuma.CLDATAPI.Enumerations.NCStatusEnum">
      <summary> Represents status indicator lamps are displayed at the top of the screen  </summary>
    </member>
    <member name="F:Okuma.CLDATAPI.Enumerations.NCStatusEnum.ProgramStop">
      <summary> This lamp is lit during a program stop (M00) or optional stop (M01) in the automatic or MDI mode. It blinks during dwell (G04).  </summary>
    </member>
    <member name="F:Okuma.CLDATAPI.Enumerations.NCStatusEnum.Run">
      <summary> This RUN lamp is lit while the machine is actually operating in the automatic or MDI mode.  </summary>
    </member>
    <member name="F:Okuma.CLDATAPI.Enumerations.NCStatusEnum.STM">
      <summary> This lamp is lit while auxiliary function operations other than axis movements - such as spindle gear range change, tool change, and spindle rotation - are being executed. When an axis movement command and S, T, or M command are designated in the same block, the axis movement command is executed after the completion of the S, T, or M operation. If a spindle gear range command, spindle speed command, or tool number command is changed using the manual intervention function (called out by pressing the [MID AUTO MANUAL] key), the S.T.M. indicating lamp blinks.  </summary>
    </member>
    <member name="F:Okuma.CLDATAPI.Enumerations.NCStatusEnum.Limit">
      <summary> This lamp goes on when the X-axis or Z-axis reaches its variable limit position. With the two-saddle specification, it goes on if any of the XA-, ZA-, XB-, and ZBaxes reach their limit.  </summary>
    </member>
    <member name="F:Okuma.CLDATAPI.Enumerations.NCStatusEnum.SlideHold">
      <summary> This lamp goes on when the [SLIDE HOLD] button is pressed in the automatic or MDI mode. With a two-saddle specification machine, if the machine is operating in the automatic mode with the single block function turned on, the lamp also goes on when the operations in one block have been completed at one saddle and the other saddle has entered the slide hold state.  </summary>
    </member>
    <member name="F:Okuma.CLDATAPI.Enumerations.NCStatusEnum.Alarm">
      <summary> This lamp goes on when the machine malfunctions or an incorrect program is input. It also goes on in the event of a computer fault.  </summary>
    </member>
    <member name="T:Okuma.CLDATAPI.Enumerations.MagazineEnum">
      <summary> Represents magazine type available for current system  </summary>
    </member>
    <member name="F:Okuma.CLDATAPI.Enumerations.MagazineEnum.DualChainedMagazine">
      <summary> Dual Chained Magazine that can rotate independently from each other.  </summary>
    </member>
    <member name="F:Okuma.CLDATAPI.Enumerations.MagazineEnum.MatrixMagazine">
      <summary> Matrix Magazine  </summary>
    </member>
    <member name="F:Okuma.CLDATAPI.Enumerations.MagazineEnum.SingleChainedMainMagazineWithSingleChainedSubMagazine">
      <summary> Single-Chained Main Magazine with Single-Chained Sub-Magazine  </summary>
    </member>
    <member name="F:Okuma.CLDATAPI.Enumerations.MagazineEnum.SingleChainedMainMagazine">
      <summary> Single Chained Main magazine  </summary>
    </member>
    <member name="F:Okuma.CLDATAPI.Enumerations.MagazineEnum.MultiChainedMainMagazine">
      <summary> Multiple Chained Main magazine - all magazines are rotated altogether  </summary>
    </member>
    <member name="F:Okuma.CLDATAPI.Enumerations.MagazineEnum.NoMagazine">
      <summary> No magazine  </summary>
    </member>
    <member name="T:Okuma.CLDATAPI.Enumerations.TurretStationEnum">
      <summary> Represents Turret stations  </summary>
    </member>
    <member name="F:Okuma.CLDATAPI.Enumerations.TurretStationEnum.TurretStationNo2">
      <summary> Station 2  </summary>
    </member>
    <member name="F:Okuma.CLDATAPI.Enumerations.TurretStationEnum.TurretStationNo1">
      <summary> Station 1  </summary>
    </member>
    <member name="F:Okuma.CLDATAPI.Enumerations.TurretStationEnum.TurretStationNo4">
      <summary> Station 4  </summary>
    </member>
    <member name="F:Okuma.CLDATAPI.Enumerations.TurretStationEnum.TurretStationNo3">
      <summary> Station 3  </summary>
    </member>
    <member name="T:Okuma.CLDATAPI.Enumerations.MagazineTypeEnum">
      <summary> Represents types of magazine  </summary>
    </member>
    <member name="F:Okuma.CLDATAPI.Enumerations.MagazineTypeEnum.SubMagazine">
      <summary> Sub-Magazine or second Magazine in dual/multi chain magazines  </summary>
    </member>
    <member name="F:Okuma.CLDATAPI.Enumerations.MagazineTypeEnum.MainMagazine">
      <summary> Main Magazine or Matrix Magazine  </summary>
    </member>
    <member name="T:Okuma.CLDATAPI.Enumerations.OSPAlarmLevelEnum">
      <summary> Represents different alarm level of current OSP alarm  </summary>
    </member>
    <member name="F:Okuma.CLDATAPI.Enumerations.OSPAlarmLevelEnum.ALARM_P">
      <summary> Alarm  P  </summary>
    </member>
    <member name="F:Okuma.CLDATAPI.Enumerations.OSPAlarmLevelEnum.ALARM_D">
      <summary> Alarm  D  </summary>
    </member>
    <member name="F:Okuma.CLDATAPI.Enumerations.OSPAlarmLevelEnum.ALARM_A">
      <summary> Alarm  A  </summary>
    </member>
    <member name="F:Okuma.CLDATAPI.Enumerations.OSPAlarmLevelEnum.ALARM_B">
      <summary> Alarm  B  </summary>
    </member>
    <member name="F:Okuma.CLDATAPI.Enumerations.OSPAlarmLevelEnum.ALARM_C">
      <summary> Alarm  C  </summary>
    </member>
    <member name="F:Okuma.CLDATAPI.Enumerations.OSPAlarmLevelEnum.None">
      <summary> No alarm  </summary>
    </member>
    <member name="T:Okuma.CLDATAPI.Enumerations.IOTypeEnum">
      <summary> Represents types of I/O variables  </summary>
    </member>
    <member name="F:Okuma.CLDATAPI.Enumerations.IOTypeEnum.Output">
      <summary> Output I/O variable type  </summary>
    </member>
    <member name="F:Okuma.CLDATAPI.Enumerations.IOTypeEnum.None">
      <summary> Unknown I/O variable type  </summary>
    </member>
    <member name="F:Okuma.CLDATAPI.Enumerations.IOTypeEnum.Input">
      <summary> Input I/O variable type  </summary>
    </member>
    <member name="T:Okuma.CLDATAPI.Enumerations.BitsEnum">
      <summary> Represents 16 bits of a WORD.  </summary>
    </member>
    <member name="F:Okuma.CLDATAPI.Enumerations.BitsEnum.Bit_14">
      <summary> Bit 14  </summary>
    </member>
    <member name="F:Okuma.CLDATAPI.Enumerations.BitsEnum.Bit_10">
      <summary> Bit 10  </summary>
    </member>
    <member name="F:Okuma.CLDATAPI.Enumerations.BitsEnum.Bit_7">
      <summary> Bit 7  </summary>
    </member>
    <member name="F:Okuma.CLDATAPI.Enumerations.BitsEnum.Bit_3">
      <summary> Bit 3  </summary>
    </member>
    <member name="F:Okuma.CLDATAPI.Enumerations.BitsEnum.Bit_13">
      <summary> Bit 13  </summary>
    </member>
    <member name="F:Okuma.CLDATAPI.Enumerations.BitsEnum.Bit_8">
      <summary> Bit 8  </summary>
    </member>
    <member name="F:Okuma.CLDATAPI.Enumerations.BitsEnum.Bit_4">
      <summary> Bit 4  </summary>
    </member>
    <member name="F:Okuma.CLDATAPI.Enumerations.BitsEnum.Bit_0">
      <summary> Bit 0  </summary>
    </member>
    <member name="F:Okuma.CLDATAPI.Enumerations.BitsEnum.Bit_12">
      <summary> Bit 12  </summary>
    </member>
    <member name="F:Okuma.CLDATAPI.Enumerations.BitsEnum.Bit_9">
      <summary> Bit 9  </summary>
    </member>
    <member name="F:Okuma.CLDATAPI.Enumerations.BitsEnum.Bit_5">
      <summary> Bit 5  </summary>
    </member>
    <member name="F:Okuma.CLDATAPI.Enumerations.BitsEnum.Bit_1">
      <summary> Bit 1  </summary>
    </member>
    <member name="F:Okuma.CLDATAPI.Enumerations.BitsEnum.Bit_15">
      <summary> Bit 15  </summary>
    </member>
    <member name="F:Okuma.CLDATAPI.Enumerations.BitsEnum.Bit_11">
      <summary> Bit 11  </summary>
    </member>
    <member name="F:Okuma.CLDATAPI.Enumerations.BitsEnum.Bit_6">
      <summary> Bit 6  </summary>
    </member>
    <member name="F:Okuma.CLDATAPI.Enumerations.BitsEnum.Bit_2">
      <summary> Bit 2  </summary>
    </member>
    <member name="T:Okuma.CLDATAPI.Enumerations.UserParameterVariableLimitEnum">
      <summary> Represents variable soft-limit settings that can be made either in reference to the program zero (P) and the machine zero (M).  </summary>
    </member>
    <member name="F:Okuma.CLDATAPI.Enumerations.UserParameterVariableLimitEnum.PlusVariableLimitInProgramCoordinate">
      <summary> Plus (positive axis direction) variable soft-limit in reference to the program zero (P)  </summary>
    </member>
    <member name="F:Okuma.CLDATAPI.Enumerations.UserParameterVariableLimitEnum.PlusVariableLimitInMachineCoordinate">
      <summary> Plus (positive axis direction) variable soft-limit in reference to the machine zero (M)  </summary>
    </member>
    <member name="F:Okuma.CLDATAPI.Enumerations.UserParameterVariableLimitEnum.MinusVariableLimitInMachineCoordinate">
      <summary> Minus (negative axis direction) variable soft-limit in reference to the machine zero (M)  </summary>
    </member>
    <member name="F:Okuma.CLDATAPI.Enumerations.UserParameterVariableLimitEnum.MinusVariableLimitInProgramCoordinate">
      <summary> Minus (negative axis direction) variable soft-limit in reference to the program zero (P)  </summary>
    </member>
    <member name="T:Okuma.CLDATAPI.Enumerations.OnOffStateEnum">
      <summary> Represents an ON/OFF state  </summary>
    </member>
    <member name="F:Okuma.CLDATAPI.Enumerations.OnOffStateEnum.OFF">
      <summary> Off State  </summary>
    </member>
    <member name="F:Okuma.CLDATAPI.Enumerations.OnOffStateEnum.ON">
      <summary> On State  </summary>
    </member>
    <member name="T:Okuma.CLDATAPI.Enumerations.TurretEnum">
      <summary> Represents turrets on the machine.  </summary>
    </member>
    <member name="F:Okuma.CLDATAPI.Enumerations.TurretEnum.R_Side_Turret">
      <summary> For machine with parallel 2 spindles specification, it is deisginated as Turret on Right side machine  </summary>
    </member>
    <member name="F:Okuma.CLDATAPI.Enumerations.TurretEnum.A_Turret">
      <summary> A Turret.  Upper turret.  It is also called H1 turret on some machine model.  </summary>
    </member>
    <member name="F:Okuma.CLDATAPI.Enumerations.TurretEnum.C_Turret">
      <summary> C Turret.  Upper Right turret.  </summary>
    </member>
    <member name="F:Okuma.CLDATAPI.Enumerations.TurretEnum.B_Turret">
      <summary> B Turret.  Lower turret.  </summary>
    </member>
    <member name="F:Okuma.CLDATAPI.Enumerations.TurretEnum.L_Side_Turret">
      <summary> For machine with parallel 2 spindles specification, it is deisginated as Turret on Left side machine  </summary>
    </member>
    <member name="T:Okuma.CLDATAPI.Enumerations.ToolLifeConditionEnum">
      <summary> Represents different conditions for evaluating tool life.  </summary>
    </member>
    <member name="F:Okuma.CLDATAPI.Enumerations.ToolLifeConditionEnum.Wear">
      <summary> Tool life is based on the amount of wear of tool.  </summary>
    </member>
    <member name="F:Okuma.CLDATAPI.Enumerations.ToolLifeConditionEnum.CuttingTime">
      <summary> Tool life is based on numbers of cutting time.  </summary>
    </member>
    <member name="F:Okuma.CLDATAPI.Enumerations.ToolLifeConditionEnum.Workpiece">
      <summary> Tool life is based on numbers of cutting workpiece.  </summary>
    </member>
    <member name="T:Okuma.CLDATAPI.Enumerations.ToolGaugeStatusEnum">
      <summary> Represents the gauge status of a tool  </summary>
    </member>
    <member name="F:Okuma.CLDATAPI.Enumerations.ToolGaugeStatusEnum.OK">
      <summary> Good  </summary>
    </member>
    <member name="F:Okuma.CLDATAPI.Enumerations.ToolGaugeStatusEnum.NG">
      <summary> No good  </summary>
    </member>
    <member name="T:Okuma.CLDATAPI.Enumerations.ToolLifeStatusEnum">
      <summary> Represents tool life status  </summary>
    </member>
    <member name="F:Okuma.CLDATAPI.Enumerations.ToolLifeStatusEnum.OK">
      <summary> Tool life is OK  </summary>
    </member>
    <member name="F:Okuma.CLDATAPI.Enumerations.ToolLifeStatusEnum.NG">
      <summary> Tool life is not good.  </summary>
    </member>
    <member name="T:Okuma.CLDATAPI.Enumerations.GroupToolLifeStatusEnum">
      <summary> Represents group tool life status  </summary>
    </member>
    <member name="F:Okuma.CLDATAPI.Enumerations.GroupToolLifeStatusEnum.OK">
      <summary> Group Tool life is OK  </summary>
    </member>
    <member name="F:Okuma.CLDATAPI.Enumerations.GroupToolLifeStatusEnum.NG">
      <summary> Group Tool life is not good.  </summary>
    </member>
    <member name="T:Okuma.CLDATAPI.Enumerations.PanelModeEnum">
      <summary> Represents machine navigation panel mode  </summary>
    </member>
    <member name="F:Okuma.CLDATAPI.Enumerations.PanelModeEnum.ParameterSetup">
      <summary> Parameter set up mode - In this mode the parameter data necessary for numerical control can be set, changed, an displayed.  </summary>
    </member>
    <member name="F:Okuma.CLDATAPI.Enumerations.PanelModeEnum.ProgramOperation">
      <summary> Program operation mode - In this mode program and data files can be edited, input/output, displayed, and deleted  </summary>
    </member>
    <member name="F:Okuma.CLDATAPI.Enumerations.PanelModeEnum.Auto">
      <summary> Operation mode - Auto  </summary>
    </member>
    <member name="F:Okuma.CLDATAPI.Enumerations.PanelModeEnum.MacMan">
      <summary> MacMan Mode - Machining Maintenance screen  </summary>
    </member>
    <member name="F:Okuma.CLDATAPI.Enumerations.PanelModeEnum.ZeroSetup">
      <summary> Zero set up mode - In this mode the zero offset data and zero offset shift data which define a program coordinate system can be set, changed, or checked.  </summary>
    </member>
    <member name="F:Okuma.CLDATAPI.Enumerations.PanelModeEnum.MDI">
      <summary> Operation mode - MDI  </summary>
    </member>
    <member name="F:Okuma.CLDATAPI.Enumerations.PanelModeEnum.Manual">
      <summary> Operation mode - Manual  </summary>
    </member>
    <member name="F:Okuma.CLDATAPI.Enumerations.PanelModeEnum.ToolDataSetup">
      <summary> Too Data set up mode - In this mode the tool offset data, nose radius compensation data, tool shape data, and load monitor data can be set, changed, or displayed  </summary>
    </member>
    <member name="T:Okuma.CLDATAPI.Enumerations.OperationModeEnum">
      <summary> Represents 1 of the 3 operation modes  </summary>
    </member>
    <member name="F:Okuma.CLDATAPI.Enumerations.OperationModeEnum.MDI">
      <summary> MDI mode  </summary>
    </member>
    <member name="F:Okuma.CLDATAPI.Enumerations.OperationModeEnum.Manual">
      <summary> Manual mode  </summary>
    </member>
    <member name="F:Okuma.CLDATAPI.Enumerations.OperationModeEnum.Auto">
      <summary> Auto mode  </summary>
    </member>
    <member name="T:Okuma.CLDATAPI.Enumerations.ExecutionModeEnum">
      <summary> Represents current machine mode.  </summary>
    </member>
    <member name="F:Okuma.CLDATAPI.Enumerations.ExecutionModeEnum.Running">
      <summary> Running  </summary>
    </member>
    <member name="F:Okuma.CLDATAPI.Enumerations.ExecutionModeEnum.NotRun">
      <summary> Not run  </summary>
    </member>
    <member name="T:Okuma.CLDATAPI.Enumerations.SpindleStateEnum">
      <summary> Represents spindle state  </summary>
    </member>
    <member name="F:Okuma.CLDATAPI.Enumerations.SpindleStateEnum.CCW">
      <summary> Spindel rotates in counter clockwise direction  </summary>
    </member>
    <member name="F:Okuma.CLDATAPI.Enumerations.SpindleStateEnum.Stop">
      <summary> Spindle stops.  </summary>
    </member>
    <member name="F:Okuma.CLDATAPI.Enumerations.SpindleStateEnum.Indexing">
      <summary> Spindle is indexing  </summary>
    </member>
    <member name="F:Okuma.CLDATAPI.Enumerations.SpindleStateEnum.CW">
      <summary> Spindle rotates in clockwise direction.  </summary>
    </member>
    <member name="T:Okuma.CLDATAPI.Enumerations.FeedrateTypeEnum">
      <summary> Represents type of feed rate  </summary>
    </member>
    <member name="F:Okuma.CLDATAPI.Enumerations.FeedrateTypeEnum.PerRevolution">
      <summary> Per revolution (Fr)  </summary>
    </member>
    <member name="F:Okuma.CLDATAPI.Enumerations.FeedrateTypeEnum.PerMinute">
      <summary> Per minute (Fm)  </summary>
    </member>
    <member name="T:Okuma.CLDATAPI.Enumerations.AllAxisIndexEnum">
      <summary> Represents controlled axes applied to functions if applicable.  The availability of axes depend on machine configuration and selection of axis mode. <para>Note: The availability of each axis depends on sub system/machine model.</para>  </summary>
    </member>
    <member name="F:Okuma.CLDATAPI.Enumerations.AllAxisIndexEnum.XIR_Axis">
      <summary> X' axis in the converted coordinate system X’-Y-Z’  </summary>
    </member>
    <member name="F:Okuma.CLDATAPI.Enumerations.AllAxisIndexEnum.XI_Axis">
      <summary> XI Axis for single-saddle multifunction lathes.  </summary>
    </member>
    <member name="F:Okuma.CLDATAPI.Enumerations.AllAxisIndexEnum.YIR_Axis">
      <summary> Y-axis in the converted coordinate system X’-Y-Z’  </summary>
    </member>
    <member name="F:Okuma.CLDATAPI.Enumerations.AllAxisIndexEnum.YS_Axis">
      <summary> YS AXis  </summary>
    </member>
    <member name="F:Okuma.CLDATAPI.Enumerations.AllAxisIndexEnum.YI_Axis">
      <summary> YI Axis for single-saddle multifunction lathes.  </summary>
    </member>
    <member name="F:Okuma.CLDATAPI.Enumerations.AllAxisIndexEnum.W_Axis">
      <summary> W Axis  </summary>
    </member>
    <member name="F:Okuma.CLDATAPI.Enumerations.AllAxisIndexEnum.C_Axis">
      <summary> C Axis for single-saddle multifunction lathes  </summary>
    </member>
    <member name="F:Okuma.CLDATAPI.Enumerations.AllAxisIndexEnum.Z_Axis">
      <summary> Z Axis for single-saddle models  </summary>
    </member>
    <member name="F:Okuma.CLDATAPI.Enumerations.AllAxisIndexEnum.X_Axis">
      <summary> X Axis for single-saddle models  </summary>
    </member>
    <member name="F:Okuma.CLDATAPI.Enumerations.AllAxisIndexEnum.BA_Axis">
      <summary> BA Axis  </summary>
    </member>
    <member name="F:Okuma.CLDATAPI.Enumerations.AllAxisIndexEnum.ZIR_Axis">
      <summary> Z’ axis in the converted coordinate system X’-Y-Z’  </summary>
    </member>
    <member name="F:Okuma.CLDATAPI.Enumerations.AllAxisIndexEnum.ZI_Axis">
      <summary> Z-axis for single-saddle multifunction lathes.  </summary>
    </member>
    <member name="T:Okuma.CLDATAPI.Enumerations.AxisIndex1Enum">
      <summary> Represents controlled axes set 1 applied to functions if applicable <para>Note: The availability of each axis depends on sub system/machine model.</para>  </summary>
    </member>
    <member name="F:Okuma.CLDATAPI.Enumerations.AxisIndex1Enum.XIR_Axis">
      <summary> X’ axis in the converted coordinate system X’-Y-Z’.  </summary>
    </member>
    <member name="F:Okuma.CLDATAPI.Enumerations.AxisIndex1Enum.XI_Axis">
      <summary> XI Axis for single-saddle multifunction lathes.  </summary>
    </member>
    <member name="F:Okuma.CLDATAPI.Enumerations.AxisIndex1Enum.YIR_Axis">
      <summary> Y axis in the converted coordinate system X’-Y-Z’.  </summary>
    </member>
    <member name="F:Okuma.CLDATAPI.Enumerations.AxisIndex1Enum.YI_Axis">
      <summary> YI Axis for single-saddle multifunction lathes.  </summary>
    </member>
    <member name="F:Okuma.CLDATAPI.Enumerations.AxisIndex1Enum.W_Axis">
      <summary> W Axis  </summary>
    </member>
    <member name="F:Okuma.CLDATAPI.Enumerations.AxisIndex1Enum.C_Axis">
      <summary> C Axis for single-saddle multifunction lathes.  It is applicable to upper turret or A Turret only.  </summary>
    </member>
    <member name="F:Okuma.CLDATAPI.Enumerations.AxisIndex1Enum.Z_Axis">
      <summary> Z Axis for single-saddle models  </summary>
    </member>
    <member name="F:Okuma.CLDATAPI.Enumerations.AxisIndex1Enum.X_Axis">
      <summary> X Axis for single-saddle models  </summary>
    </member>
    <member name="F:Okuma.CLDATAPI.Enumerations.AxisIndex1Enum.BA_Axis">
      <summary> BA Axis.  It is applicable to upper turret or A Turret only.  </summary>
    </member>
    <member name="F:Okuma.CLDATAPI.Enumerations.AxisIndex1Enum.ZIR_Axis">
      <summary> Z’ axis in the converted coordinate system X’-Y-Z’.  </summary>
    </member>
    <member name="F:Okuma.CLDATAPI.Enumerations.AxisIndex1Enum.ZI_Axis">
      <summary> ZI Axis for single-saddle multifunction lathes.  </summary>
    </member>
    <member name="T:Okuma.CLDATAPI.Enumerations.AxisIndex2Enum">
      <summary> Represents controlled axes set 2 applied to functions if applicable. <para>Note: The availability of each axis depends on sub system/machine model.</para>  </summary>
    </member>
    <member name="F:Okuma.CLDATAPI.Enumerations.AxisIndex2Enum.C_Axis">
      <summary> C Axis for single-saddle multifunction lathes.  It is applicable to upper turret or A Turret only.  </summary>
    </member>
    <member name="F:Okuma.CLDATAPI.Enumerations.AxisIndex2Enum.Z_Axis">
      <summary> Z Axis for single-saddle models  </summary>
    </member>
    <member name="F:Okuma.CLDATAPI.Enumerations.AxisIndex2Enum.X_Axis">
      <summary> X Axis for single-saddle models  </summary>
    </member>
    <member name="F:Okuma.CLDATAPI.Enumerations.AxisIndex2Enum.YS_Axis">
      <summary> YS Axis.  This axis is only valid with sub system for A Turret.  </summary>
    </member>
    <member name="F:Okuma.CLDATAPI.Enumerations.AxisIndex2Enum.W_Axis">
      <summary> W Axis  </summary>
    </member>
    <member name="T:Okuma.CLDATAPI.Enumerations.AxisIndex3Enum">
      <summary> Represents controlled axes set 3 applied to functions if applicable <para>Note: The availability of each axis depends on sub system/machine model.</para>  </summary>
    </member>
    <member name="F:Okuma.CLDATAPI.Enumerations.AxisIndex3Enum.Z_Axis">
      <summary> Z Axis for single-saddle models  </summary>
    </member>
    <member name="F:Okuma.CLDATAPI.Enumerations.AxisIndex3Enum.X_Axis">
      <summary> X Axis for single-saddle models  </summary>
    </member>
    <member name="F:Okuma.CLDATAPI.Enumerations.AxisIndex3Enum.YS_Axis">
      <summary> YS Axis.  This axis is only valid with sub system for A Turret.  </summary>
    </member>
    <member name="F:Okuma.CLDATAPI.Enumerations.AxisIndex3Enum.W_Axis">
      <summary> W Axis  </summary>
    </member>
    <member name="T:Okuma.CLDATAPI.Enumerations.AxisIndex4Enum">
      <summary> Represents controlled axes set 4 applied to functions if applicable <para>Note: The availability of each axis depends on sub system/machine model.</para>  </summary>
    </member>
    <member name="F:Okuma.CLDATAPI.Enumerations.AxisIndex4Enum.W_Axis">
      <summary> W Axis  </summary>
    </member>
    <member name="F:Okuma.CLDATAPI.Enumerations.AxisIndex4Enum.C_Axis">
      <summary> C Axis for single-saddle multifunction lathes.  It is applicable to upper turret or A Turret only.  </summary>
    </member>
    <member name="F:Okuma.CLDATAPI.Enumerations.AxisIndex4Enum.Z_Axis">
      <summary> Z Axis for single-saddle models  </summary>
    </member>
    <member name="F:Okuma.CLDATAPI.Enumerations.AxisIndex4Enum.X_Axis">
      <summary> X Axis for single-saddle models  </summary>
    </member>
    <member name="F:Okuma.CLDATAPI.Enumerations.AxisIndex4Enum.BA_Axis">
      <summary> BA Axis  </summary>
    </member>
    <member name="F:Okuma.CLDATAPI.Enumerations.AxisIndex4Enum.YS_Axis">
      <summary> YS Axis  </summary>
    </member>
    <member name="F:Okuma.CLDATAPI.Enumerations.AxisIndex4Enum.YI_Axis">
      <summary> YI Axis  </summary>
    </member>
    <member name="T:Okuma.CLDATAPI.Enumerations.AxisIndex5Enum">
      <summary> Represents controlled axes set 5 applied to functions if applicable <para>Note: The availability of each axis depends on sub system/machine model.</para>  </summary>
    </member>
    <member name="F:Okuma.CLDATAPI.Enumerations.AxisIndex5Enum.W_Axis">
      <summary> W Axis  </summary>
    </member>
    <member name="F:Okuma.CLDATAPI.Enumerations.AxisIndex5Enum.Z_Axis">
      <summary> Z Axis  </summary>
    </member>
    <member name="F:Okuma.CLDATAPI.Enumerations.AxisIndex5Enum.X_Axis">
      <summary> X Axis  </summary>
    </member>
    <member name="F:Okuma.CLDATAPI.Enumerations.AxisIndex5Enum.YS_Axis">
      <summary> YS Axis  </summary>
    </member>
    <member name="F:Okuma.CLDATAPI.Enumerations.AxisIndex5Enum.YI_Axis">
      <summary> YI Axis  </summary>
    </member>
    <member name="T:Okuma.CLDATAPI.Enumerations.AxisIndex6Enum">
      <summary> Represents controlled axes set 6 applied to functions if applicable <para>Note: The availability of each axis depends on sub system/machine model.</para>  </summary>
    </member>
    <member name="F:Okuma.CLDATAPI.Enumerations.AxisIndex6Enum.W_Axis">
      <summary> W Axis  </summary>
    </member>
    <member name="F:Okuma.CLDATAPI.Enumerations.AxisIndex6Enum.C_Axis">
      <summary> C Axis for single-saddle multifunction lathes.  It is applicable to upper turret or A Turret only.  </summary>
    </member>
    <member name="F:Okuma.CLDATAPI.Enumerations.AxisIndex6Enum.Z_Axis">
      <summary> Z Axis for single-saddle models  </summary>
    </member>
    <member name="F:Okuma.CLDATAPI.Enumerations.AxisIndex6Enum.X_Axis">
      <summary> X Axis for single-saddle models  </summary>
    </member>
    <member name="F:Okuma.CLDATAPI.Enumerations.AxisIndex6Enum.BA_Axis">
      <summary> BA Axis.    It is applicable to upper turret or A Turret only.  </summary>
    </member>
    <member name="F:Okuma.CLDATAPI.Enumerations.AxisIndex6Enum.ZI_Axis">
      <summary> ZI Axis for single-saddle multifunction lathes.  </summary>
    </member>
    <member name="F:Okuma.CLDATAPI.Enumerations.AxisIndex6Enum.XI_Axis">
      <summary> XI Axis for single-saddle multifunction lathes.  </summary>
    </member>
    <member name="F:Okuma.CLDATAPI.Enumerations.AxisIndex6Enum.YI_Axis">
      <summary> YI Axis for single-saddle multifunction lathes.  </summary>
    </member>
    <member name="T:Okuma.CLDATAPI.Enumerations.AxisIndex7Enum">
      <summary> Represents controlled axes set 7 applied to functions if applicable <para>Note: The availability of each axis depends on sub system/machine model.</para>  </summary>
    </member>
    <member name="F:Okuma.CLDATAPI.Enumerations.AxisIndex7Enum.W_Axis">
      <summary> W Axis  </summary>
    </member>
    <member name="F:Okuma.CLDATAPI.Enumerations.AxisIndex7Enum.C_Axis">
      <summary> C Axis  </summary>
    </member>
    <member name="F:Okuma.CLDATAPI.Enumerations.AxisIndex7Enum.Z_Axis">
      <summary> Z Axis  </summary>
    </member>
    <member name="F:Okuma.CLDATAPI.Enumerations.AxisIndex7Enum.X_Axis">
      <summary> X Axis  </summary>
    </member>
    <member name="F:Okuma.CLDATAPI.Enumerations.AxisIndex7Enum.YS_Axis">
      <summary> YS Axis  </summary>
    </member>
    <member name="F:Okuma.CLDATAPI.Enumerations.AxisIndex7Enum.YI_Axis">
      <summary> YI Axis  </summary>
    </member>
    <member name="T:Okuma.CLDATAPI.Enumerations.AxisTypeEnum">
      <summary> Represents movement type of axis  </summary>
    </member>
    <member name="F:Okuma.CLDATAPI.Enumerations.AxisTypeEnum.Rotary">
      <summary> Rotary axis  </summary>
    </member>
    <member name="F:Okuma.CLDATAPI.Enumerations.AxisTypeEnum.Linear">
      <summary> Linear axis  </summary>
    </member>
    <member name="T:Okuma.CLDATAPI.Enumerations.PrincipalAxisEnum">
      <summary> Represents spindle axes  </summary>
    </member>
    <member name="F:Okuma.CLDATAPI.Enumerations.PrincipalAxisEnum.SpindleAxis_2">
      <summary> Second spindle in 2 spindles system  </summary>
    </member>
    <member name="F:Okuma.CLDATAPI.Enumerations.PrincipalAxisEnum.SpindleAxis_1">
      <summary> First spindle in 2 spindles system  </summary>
    </member>
    <member name="T:Okuma.CLDATAPI.Enumerations.BAxisCuttingPositionEnum">
      <summary> Represents cutting position for B Axis control in H1(A) turret. </summary>
      <Figure> <para> <img src="Lathe.H1.Turret.jpg" /> </para>  </Figure>
    </member>
    <member name="F:Okuma.CLDATAPI.Enumerations.BAxisCuttingPositionEnum.BasePosition">
      <summary> Base position  </summary>
    </member>
    <member name="F:Okuma.CLDATAPI.Enumerations.BAxisCuttingPositionEnum.VerticalPosition">
      <summary> Vertical position  </summary>
    </member>
    <member name="T:Okuma.CLDATAPI.Enumerations.NoseRCompensationAxisIndexEnum">
      <summary> Represents controlled axes for Nose Radius Compensation.  </summary>
    </member>
    <member name="F:Okuma.CLDATAPI.Enumerations.NoseRCompensationAxisIndexEnum.Z_Axis">
      <summary> Z Axis  </summary>
    </member>
    <member name="F:Okuma.CLDATAPI.Enumerations.NoseRCompensationAxisIndexEnum.X_Axis">
      <summary> X Axis  </summary>
    </member>
    <member name="T:Okuma.CLDATAPI.Enumerations.ToolWearOffsetAxisIndexEnum">
      <summary> Represents controlled axes for Tool Wear Offset.  </summary>
    </member>
    <member name="F:Okuma.CLDATAPI.Enumerations.ToolWearOffsetAxisIndexEnum.Z_Axis">
      <summary> Z Axis  </summary>
    </member>
    <member name="F:Okuma.CLDATAPI.Enumerations.ToolWearOffsetAxisIndexEnum.X_Axis">
      <summary> X Axis  </summary>
    </member>
    <member name="T:Okuma.CLDATAPI.Enumerations.ToolOffsetAxisIndexEnum">
      <summary> Represents controlled axes for Tool Offset.  </summary>
    </member>
    <member name="F:Okuma.CLDATAPI.Enumerations.ToolOffsetAxisIndexEnum.X_Axis">
      <summary> X Axis  </summary>
    </member>
    <member name="F:Okuma.CLDATAPI.Enumerations.ToolOffsetAxisIndexEnum.YI_Axis">
      <summary> YI Axis  </summary>
    </member>
    <member name="F:Okuma.CLDATAPI.Enumerations.ToolOffsetAxisIndexEnum.Z_Axis">
      <summary> Z Axis  </summary>
    </member>
    <member name="T:Okuma.CLDATAPI.Enumerations.OptionSpecEnum">
      <summary> Represents available machine options  </summary>
    </member>
    <member name="F:Okuma.CLDATAPI.Enumerations.OptionSpecEnum.OneTenthMicron">
      <summary> 0.1 Micron option  </summary>
    </member>
    <member name="F:Okuma.CLDATAPI.Enumerations.OptionSpecEnum.ToolWearOffset">
      <summary> Tool Wear Offset option  </summary>
    </member>
    <member name="F:Okuma.CLDATAPI.Enumerations.OptionSpecEnum.Loader2Carrier">
      <summary> Loader with 2 carriers specification  </summary>
    </member>
    <member name="T:Okuma.CLDATAPI.Enumerations.CommandFeedrateOrderEnum">
      <summary> Represents command feed rate order  </summary>
    </member>
    <member name="F:Okuma.CLDATAPI.Enumerations.CommandFeedrateOrderEnum.ThirdCommand">
      <summary> Third command feed rate  </summary>
    </member>
    <member name="F:Okuma.CLDATAPI.Enumerations.CommandFeedrateOrderEnum.CurrentCommand">
      <summary> Current command feed rate  </summary>
    </member>
    <member name="F:Okuma.CLDATAPI.Enumerations.CommandFeedrateOrderEnum.FourthCommand">
      <summary> Fourth command feed rate  </summary>
    </member>
    <member name="F:Okuma.CLDATAPI.Enumerations.CommandFeedrateOrderEnum.SecondCommand">
      <summary> Second command feed rate  </summary>
    </member>
    <member name="T:Okuma.CLDATAPI.Enumerations.WorkpieceCounterEnum">
      <summary> Represents workpiece counter  </summary>
    </member>
    <member name="F:Okuma.CLDATAPI.Enumerations.WorkpieceCounterEnum.CounterB">
      <summary> Workpiece counter B  </summary>
    </member>
    <member name="F:Okuma.CLDATAPI.Enumerations.WorkpieceCounterEnum.CounterA">
      <summary> Workpiece counter A  </summary>
    </member>
    <member name="F:Okuma.CLDATAPI.Enumerations.WorkpieceCounterEnum.CounterD">
      <summary> Workpiece counter D  </summary>
    </member>
    <member name="F:Okuma.CLDATAPI.Enumerations.WorkpieceCounterEnum.CounterC">
      <summary> Workpiece counter C  </summary>
    </member>
    <member name="T:Okuma.CLDATAPI.Enumerations.ExecuteBlockTypeEnum">
      <summary> Represents executed block  </summary>
    </member>
    <member name="F:Okuma.CLDATAPI.Enumerations.ExecuteBlockTypeEnum.NextExecuteBlock">
      <summary> Block to be executed next in the part program  </summary>
    </member>
    <member name="F:Okuma.CLDATAPI.Enumerations.ExecuteBlockTypeEnum.CurrentExecuteBlock">
      <summary> Current block being executed in the part program  </summary>
    </member>
    <member name="T:Okuma.CLDATAPI.Enumerations.OperatingStatusEnum">
      <summary> Represents an operating status for MacMan Operating Report  </summary>
    </member>
    <member name="F:Okuma.CLDATAPI.Enumerations.OperatingStatusEnum.MachineOperating">
      <summary> Machine is operating  </summary>
    </member>
    <member name="F:Okuma.CLDATAPI.Enumerations.OperatingStatusEnum.NonOperating">
      <summary> Machine is not operating  </summary>
    </member>
    <member name="T:Okuma.CLDATAPI.Enumerations.NonOperatingConditionEnum">
      <summary> Represents a non-operating condition of machine for MacMan Operating Report  </summary>
    </member>
    <member name="F:Okuma.CLDATAPI.Enumerations.NonOperatingConditionEnum.Maintenance">
      <summary> Machine is not operating due to maintenance  </summary>
    </member>
    <member name="F:Okuma.CLDATAPI.Enumerations.NonOperatingConditionEnum.InProcessSetup">
      <summary> Machine is not operating due to in process set-up  </summary>
    </member>
    <member name="F:Okuma.CLDATAPI.Enumerations.NonOperatingConditionEnum.Other">
      <summary> Machine is not operating due to other condition  </summary>
    </member>
    <member name="F:Okuma.CLDATAPI.Enumerations.NonOperatingConditionEnum.PartWaiting">
      <summary> Machine is not operating due to waiting for part  </summary>
    </member>
    <member name="F:Okuma.CLDATAPI.Enumerations.NonOperatingConditionEnum.NoOperator">
      <summary> Machine is not operating due to no opeartor  </summary>
    </member>
    <member name="T:Okuma.CLDATAPI.Enumerations.ChuckGrippingEnum">
      <summary> Represents gripping type of chuck  </summary>
    </member>
    <member name="F:Okuma.CLDATAPI.Enumerations.ChuckGrippingEnum.OutsideDiameterGripping">
      <summary> Outside Diameter gripping  </summary>
    </member>
    <member name="F:Okuma.CLDATAPI.Enumerations.ChuckGrippingEnum.InsideDiameterGripping">
      <summary> Inside Diameter gripping  </summary>
    </member>
    <member name="T:Okuma.CLDATAPI.Enumerations.ChuckIndexEnum">
      <summary> Represents Chucks in the system.  </summary>
    </member>
    <member name="F:Okuma.CLDATAPI.Enumerations.ChuckIndexEnum.Chuck_1">
      <summary> First Chuck  </summary>
    </member>
    <member name="F:Okuma.CLDATAPI.Enumerations.ChuckIndexEnum.Chuck_2">
      <summary> Second Chuck  </summary>
    </member>
    <member name="T:Okuma.CLDATAPI.Enumerations.TailStockLengthEnum">
      <summary> Represents different settings for Tailstock's length  </summary>
    </member>
    <member name="F:Okuma.CLDATAPI.Enumerations.TailStockLengthEnum.Length_L">
      <summary> Length L  </summary>
    </member>
    <member name="F:Okuma.CLDATAPI.Enumerations.TailStockLengthEnum.Length_L2">
      <summary> Length L2  </summary>
    </member>
    <member name="F:Okuma.CLDATAPI.Enumerations.TailStockLengthEnum.Length_L1">
      <summary> Length L1  </summary>
    </member>
    <member name="T:Okuma.CLDATAPI.Enumerations.TailStockDiameterEnum">
      <summary> Represents different settings of Tailstock' s diameter  </summary>
    </member>
    <member name="F:Okuma.CLDATAPI.Enumerations.TailStockDiameterEnum.Diameter_D2">
      <summary> Diameter D2  </summary>
    </member>
    <member name="F:Okuma.CLDATAPI.Enumerations.TailStockDiameterEnum.Diameter_D1">
      <summary> Diameter D1  </summary>
    </member>
    <member name="F:Okuma.CLDATAPI.Enumerations.TailStockDiameterEnum.Diameter_D">
      <summary> Diameter D  </summary>
    </member>
    <member name="F:Okuma.CLDATAPI.Enumerations.TailStockDiameterEnum.Diameter_D3">
      <summary> Hole diameter D3  </summary>
    </member>
    <member name="T:Okuma.CLDATAPI.Enumerations.MCodesEnum">
      <summary> Represents displayed line of M Codes  </summary>
    </member>
    <member name="F:Okuma.CLDATAPI.Enumerations.MCodesEnum.MCodes_Line1">
      <summary> Line 1  </summary>
    </member>
    <member name="F:Okuma.CLDATAPI.Enumerations.MCodesEnum.MCodes_Line3">
      <summary> Line 3  </summary>
    </member>
    <member name="F:Okuma.CLDATAPI.Enumerations.MCodesEnum.MCodes_Line2">
      <summary> Line 2  </summary>
    </member>
    <member name="T:Okuma.CLDATAPI.Enumerations.TurretModeEnum">
      <summary> Represents turret selection mode  </summary>
    </member>
    <member name="F:Okuma.CLDATAPI.Enumerations.TurretModeEnum.A_Turret">
      <summary> A turret is selected  </summary>
    </member>
    <member name="F:Okuma.CLDATAPI.Enumerations.TurretModeEnum.C_Turret">
      <summary> C turret is selected  </summary>
    </member>
    <member name="F:Okuma.CLDATAPI.Enumerations.TurretModeEnum.B_Turret">
      <summary> B turret is selected  </summary>
    </member>
    <member name="F:Okuma.CLDATAPI.Enumerations.TurretModeEnum.NoTurret">
      <summary> No turret is selected  </summary>
    </member>
    <member name="T:Okuma.CLDATAPI.Enumerations.BAxisTurretOffsetPositionEnum">
      <summary> Represents turret offset position compensation for B Axis control </summary>
      <Figure> <para> <img src="Lathe.H1.Turret.jpg" /> </para>  </Figure>
    </member>
    <member name="F:Okuma.CLDATAPI.Enumerations.BAxisTurretOffsetPositionEnum.VerticalPosition">
      <summary> Vertical position  </summary>
    </member>
    <member name="F:Okuma.CLDATAPI.Enumerations.BAxisTurretOffsetPositionEnum.BasePosition">
      <summary> Base position in relate to first spindle  </summary>
    </member>
    <member name="F:Okuma.CLDATAPI.Enumerations.BAxisTurretOffsetPositionEnum.BasePositionSecondSpindle">
      <summary> Base position in relate to second spindle  </summary>
    </member>
    <member name="T:Okuma.CLDATAPI.Enumerations.SpindleAxisIndexEnum">
      <summary> Represents spindle axes in the system  </summary>
    </member>
    <member name="F:Okuma.CLDATAPI.Enumerations.SpindleAxisIndexEnum.SpindleAxis_Left">
      <summary> Left main spindle on parallel 2 spindles machine  </summary>
    </member>
    <member name="F:Okuma.CLDATAPI.Enumerations.SpindleAxisIndexEnum.SpindleAxis_1">
      <summary> First main spindle  </summary>
    </member>
    <member name="F:Okuma.CLDATAPI.Enumerations.SpindleAxisIndexEnum.SpindleAxis_2">
      <summary> Second main spindle  </summary>
    </member>
    <member name="F:Okuma.CLDATAPI.Enumerations.SpindleAxisIndexEnum.SpindleAxis_Right">
      <summary> Right main spindle on parallel 2 spindles machine  </summary>
    </member>
    <member name="T:Okuma.CLDATAPI.Enumerations.MSpindleEnum">
      <summary> Represents an M-Spindle in the system  </summary>
    </member>
    <member name="F:Okuma.CLDATAPI.Enumerations.MSpindleEnum.M_Spindle_B_Turret">
      <summary> (MB) M-Spindle in lower Turret (B Turret)  </summary>
    </member>
    <member name="F:Okuma.CLDATAPI.Enumerations.MSpindleEnum.M_Spindle_A_Turret">
      <summary> (MA) M-Spindle in upper Turret (A Turret)  </summary>
    </member>
    <member name="F:Okuma.CLDATAPI.Enumerations.MSpindleEnum.M_Spindle_LeftMachine">
      <summary> (ML) M-Spindle on left side of parallel 2 spindles machine  </summary>
    </member>
    <member name="F:Okuma.CLDATAPI.Enumerations.MSpindleEnum.M_Spindle_C_Turret">
      <summary> (MC) M-Spindle for C Turret  </summary>
    </member>
    <member name="F:Okuma.CLDATAPI.Enumerations.MSpindleEnum.M_Spindle_RightMachine">
      <summary> (MR) M-Spindle on right side of parallel 2 spindles machine  </summary>
    </member>
    <member name="T:Okuma.CLDATAPI.Enumerations.SpindleModeEnum">
      <summary> Represents main spindle/C-axis mode  </summary>
    </member>
    <member name="F:Okuma.CLDATAPI.Enumerations.SpindleModeEnum.CAxisMode">
      <summary> C-Axis mode  </summary>
    </member>
    <member name="F:Okuma.CLDATAPI.Enumerations.SpindleModeEnum.MainSpindleMode">
      <summary> Main Spindle mode  </summary>
    </member>
    <member name="T:Okuma.CLDATAPI.Enumerations.WorkTypeEnum">
      <summary> Represents a work type  </summary>
    </member>
    <member name="F:Okuma.CLDATAPI.Enumerations.WorkTypeEnum.CenterWork">
      <summary> Center work type  </summary>
    </member>
    <member name="F:Okuma.CLDATAPI.Enumerations.WorkTypeEnum.ChuckWork">
      <summary> Chuck work type  </summary>
    </member>
    <member name="T:Okuma.CLDATAPI.Enumerations.ToolKindEnum">
      <summary> Represents kinds of tool inserted in ATC table  </summary>
    </member>
    <member name="F:Okuma.CLDATAPI.Enumerations.ToolKindEnum.None">
      <summary> None. No tool registers in the pot.  </summary>
    </member>
    <member name="F:Okuma.CLDATAPI.Enumerations.ToolKindEnum.L_Tool">
      <summary> An L tool.  </summary>
    </member>
    <member name="F:Okuma.CLDATAPI.Enumerations.ToolKindEnum.MagazineDummyPot">
      <summary> Dummy pot  </summary>
    </member>
    <member name="F:Okuma.CLDATAPI.Enumerations.ToolKindEnum.M_Tool">
      <summary> An M tool  </summary>
    </member>
    <member name="F:Okuma.CLDATAPI.Enumerations.ToolKindEnum.SensorTool">
      <summary> Sensor tool  </summary>
    </member>
    <member name="F:Okuma.CLDATAPI.Enumerations.ToolKindEnum.DummyTool">
      <summary> A dummy tool  </summary>
    </member>
    <member name="T:Okuma.CLDATAPI.Enumerations.ToolSizeEnum">
      <summary> Represents sizes of tool inserted in ATC table  </summary>
    </member>
    <member name="F:Okuma.CLDATAPI.Enumerations.ToolSizeEnum.None">
      <summary> No attribute  </summary>
    </member>
    <member name="F:Okuma.CLDATAPI.Enumerations.ToolSizeEnum.BR_Tool">
      <summary> BR tool size  (Right Side large tool)  </summary>
    </member>
    <member name="F:Okuma.CLDATAPI.Enumerations.ToolSizeEnum.B_Tool">
      <summary> B Tool size (Left Side large tool)  </summary>
    </member>
    <member name="F:Okuma.CLDATAPI.Enumerations.ToolSizeEnum.H_Tool">
      <summary> Heavy Tool. ATC arm acceleration/deceleration is reduced.  </summary>
    </member>
    <member name="F:Okuma.CLDATAPI.Enumerations.ToolSizeEnum.E_Tool">
      <summary> Super Large diameter tool  </summary>
    </member>
    <member name="F:Okuma.CLDATAPI.Enumerations.ToolSizeEnum.Standard">
      <summary> Standard tool size  </summary>
    </member>
    <member name="F:Okuma.CLDATAPI.Enumerations.ToolSizeEnum.SL_Tool">
      <summary> Large Diameter tool  </summary>
    </member>
    <member name="T:Okuma.CLDATAPI.Enumerations.OperatingReportDataEnum">
      <summary> Represents different sets of data for MacMan operating report  </summary>
    </member>
    <member name="F:Okuma.CLDATAPI.Enumerations.OperatingReportDataEnum.OtherTime">
      <summary> Other Time  </summary>
    </member>
    <member name="F:Okuma.CLDATAPI.Enumerations.OperatingReportDataEnum.MaintenanceTime">
      <summary> Maintenance Time  </summary>
    </member>
    <member name="F:Okuma.CLDATAPI.Enumerations.OperatingReportDataEnum.PartWaitingTime">
      <summary> Part Waiting Time  </summary>
    </member>
    <member name="F:Okuma.CLDATAPI.Enumerations.OperatingReportDataEnum.CuttingTime">
      <summary> Cutting Time  </summary>
    </member>
    <member name="F:Okuma.CLDATAPI.Enumerations.OperatingReportDataEnum.ExternalInputTime">
      <summary> External Input Time  </summary>
    </member>
    <member name="F:Okuma.CLDATAPI.Enumerations.OperatingReportDataEnum.NoOperatorTime">
      <summary> No Operator Time  </summary>
    </member>
    <member name="F:Okuma.CLDATAPI.Enumerations.OperatingReportDataEnum.InProcessSetupTime">
      <summary> In Process Set-Up Time  </summary>
    </member>
    <member name="F:Okuma.CLDATAPI.Enumerations.OperatingReportDataEnum.NonOperatingTime">
      <summary> Non Operating Time  </summary>
    </member>
    <member name="F:Okuma.CLDATAPI.Enumerations.OperatingReportDataEnum.AlarmOnTime">
      <summary> Alarm On Time  </summary>
    </member>
    <member name="F:Okuma.CLDATAPI.Enumerations.OperatingReportDataEnum.SpindleRunTime">
      <summary> Spindle Run Time  </summary>
    </member>
    <member name="F:Okuma.CLDATAPI.Enumerations.OperatingReportDataEnum.RunningTime">
      <summary> Running Time  </summary>
    </member>
    <member name="F:Okuma.CLDATAPI.Enumerations.OperatingReportDataEnum.OperatingTime">
      <summary> Operating Time  </summary>
    </member>
    <member name="T:Okuma.CLDATAPI.Enumerations.ReportPeriodEnum">
      <summary> Represents report period for MacMan machining reports  </summary>
    </member>
    <member name="F:Okuma.CLDATAPI.Enumerations.ReportPeriodEnum.PreviousDayReport">
      <summary> Previous day report  </summary>
    </member>
    <member name="F:Okuma.CLDATAPI.Enumerations.ReportPeriodEnum.TodayReport">
      <summary> Today report  </summary>
    </member>
    <member name="F:Okuma.CLDATAPI.Enumerations.ReportPeriodEnum.PeriodReport">
      <summary> Whole (all) period report  </summary>
    </member>
    <member name="T:Okuma.CLDATAPI.Enumerations.CuttingPositionEnum">
      <summary> Represents cutting position in tool offset multi-system specification . </summary>
      <Figure> <para> <img src="Lathe.Multi.CuttingPosition.jpg" /> </para>  </Figure>
    </member>
    <member name="F:Okuma.CLDATAPI.Enumerations.CuttingPositionEnum.PrincipalAxis1_VerticalB">
      <summary> First Spindle (Principal axis 1) Vertical position, Side B  </summary>
    </member>
    <member name="F:Okuma.CLDATAPI.Enumerations.CuttingPositionEnum.PrincipalAxis1_VerticalA">
      <summary> First Spindle (Principal axis 1) Vertical position, Side A  </summary>
    </member>
    <member name="F:Okuma.CLDATAPI.Enumerations.CuttingPositionEnum.PrincipalAxis2_BaseB">
      <summary> Second Spindle (Principal axis 2) Base position, Side B  </summary>
    </member>
    <member name="F:Okuma.CLDATAPI.Enumerations.CuttingPositionEnum.PrincipalAxis2_BaseA">
      <summary> Second Spindle (Principal axis 2) Base position, Side A  </summary>
    </member>
    <member name="F:Okuma.CLDATAPI.Enumerations.CuttingPositionEnum.PrincipalAxis1_BaseB">
      <summary> First Spindle (Principal axis 1) Base position, Side B  </summary>
    </member>
    <member name="F:Okuma.CLDATAPI.Enumerations.CuttingPositionEnum.PrincipalAxis1_BaseA">
      <summary> First Spindle (Principal axis 1) Base position, Side A  </summary>
    </member>
    <member name="F:Okuma.CLDATAPI.Enumerations.CuttingPositionEnum.PrincipalAxis2_VerticalB">
      <summary> Second Spindle (Principal axis 2) Vertical position, Side B  </summary>
    </member>
    <member name="F:Okuma.CLDATAPI.Enumerations.CuttingPositionEnum.PrincipalAxis2_VerticalA">
      <summary> Second Spindle (Principal axis 2) Vertical position, Side A  </summary>
    </member>
    <member name="T:Okuma.CLDATAPI.Enumerations.MultiEdgesAngleToolEnum">
      <summary> Represents different sets of multi-edge tool  </summary>
    </member>
    <member name="F:Okuma.CLDATAPI.Enumerations.MultiEdgesAngleToolEnum.AngleToolWith_12Edges">
      <summary> Tool with 12 edges  </summary>
    </member>
    <member name="F:Okuma.CLDATAPI.Enumerations.MultiEdgesAngleToolEnum.AngleToolWith_4Edges">
      <summary> Tool with 4 edges  </summary>
    </member>
    <member name="F:Okuma.CLDATAPI.Enumerations.MultiEdgesAngleToolEnum.AngleToolWith_8Edges">
      <summary> Tool with 8 edges  </summary>
    </member>
    <member name="T:Okuma.CLDATAPI.Enumerations.MultiEdgesAngleToolHolderEnum">
      <summary> Represents multi-edge tool holder position  </summary>
    </member>
    <member name="F:Okuma.CLDATAPI.Enumerations.MultiEdgesAngleToolHolderEnum.Holder209">
      <summary> Tool holder 209  </summary>
    </member>
    <member name="F:Okuma.CLDATAPI.Enumerations.MultiEdgesAngleToolHolderEnum.Holder205">
      <summary> Tool holder 205  </summary>
    </member>
    <member name="F:Okuma.CLDATAPI.Enumerations.MultiEdgesAngleToolHolderEnum.Holder201">
      <summary> Tool holder 201  </summary>
    </member>
    <member name="F:Okuma.CLDATAPI.Enumerations.MultiEdgesAngleToolHolderEnum.Holder210">
      <summary> Tool holder 210  </summary>
    </member>
    <member name="F:Okuma.CLDATAPI.Enumerations.MultiEdgesAngleToolHolderEnum.Holder208">
      <summary> Tool holder 208  </summary>
    </member>
    <member name="F:Okuma.CLDATAPI.Enumerations.MultiEdgesAngleToolHolderEnum.Holder204">
      <summary> Tool holder 204  </summary>
    </member>
    <member name="F:Okuma.CLDATAPI.Enumerations.MultiEdgesAngleToolHolderEnum.Holder207">
      <summary> Tool holder 207  </summary>
    </member>
    <member name="F:Okuma.CLDATAPI.Enumerations.MultiEdgesAngleToolHolderEnum.Holder203">
      <summary> Tool holder 203  </summary>
    </member>
    <member name="F:Okuma.CLDATAPI.Enumerations.MultiEdgesAngleToolHolderEnum.Holder206">
      <summary> Tool holder 206  </summary>
    </member>
    <member name="F:Okuma.CLDATAPI.Enumerations.MultiEdgesAngleToolHolderEnum.Holder202">
      <summary> Tool holder 202  </summary>
    </member>
    <member name="T:Okuma.CLDATAPI.Enumerations.MacManSubSystemEnum">
      <summary> Represents sub system for Mac Man data area.  </summary>
    </member>
    <member name="F:Okuma.CLDATAPI.Enumerations.MacManSubSystemEnum.SubSystem_1">
      <summary> MacMan data for right side of machine having 2 sides  </summary>
    </member>
    <member name="F:Okuma.CLDATAPI.Enumerations.MacManSubSystemEnum.CurrentSubSystem">
      <summary> Current MacMan selection.  </summary>
    </member>
    <member name="F:Okuma.CLDATAPI.Enumerations.MacManSubSystemEnum.SubSystem_2">
      <summary> MacMan data for left side of machine having 2 sides  </summary>
    </member>
    <member name="T:Okuma.CLDATAPI.Enumerations.SubSystemEnum">
      <summary> <para>List of available sub systems to functions, if applicable.</para> <para>By default, the sub system is NC-AL for every instance of classes in the Okuma.CLDATAPI.DataAPI namespace if applicable.</para> <para>By default, the sub system is SubSystem_1 (Right side of dual sides machine spec.) for every instance of classes in the Okuma.CLDATAPI.DataAPI.MacMan namespace if applicable.</para> </summary>
      <remarks> <para></para> For Lathe/Multus/Macturn, the machine data area is logically divided into 4 main logical data areas as shown in the figure below. <Figure> <para> The following four coordinate systems are available by the combination of 2 turrets and 2 spindles <img src="Lathe.SubSystem.2SP2Turrets.jpg" /> </para> <para> The following multi-coordinate systems are available by the combination of 3 turrets and 2 spindles <img src="Lathe.SubSystem.2SP3Turrets.jpg" /> </para> <para> The chart below shows the validity of each sub system based on machine specification if applicable. <img src="Lathe.SubSystemIndexChart.jpg" /> </para> </Figure> <para>*****************************************************</para> <para> Application Notes 1:</para> The following subsystem should be never used for getting/setting distinctive logical data. It can be used for displaying purpose since these subsystems will return values based on current Panel selection or Program Command Selection on NC. <para>NC-RUN,NC-RUN-1/2/3, NC-PANEL, NC-PANEL-1/2/3</para> <para>*****************************************************</para> <para> Application Notes 2:</para> To assure that you are always get/set the same logical data areas mentioned above you can always set the subsystem accordingly. <para>For example:</para> <para> 1/ Machine equipped with main spindle and single turret:</para> <para> NC-AL =&gt; Data area in the upper left corner as shown in figure</para> <para></para> <para> 2/ Machine equipped with multiple spindles and turrets:</para> <para> NC-AL =&gt; Data area in the upper left corner as shown in figure</para> <para> NC-AR =&gt; Data area in the upper right corner as shown in figure</para> <para> NC-BL =&gt; Data area in the lower left corner as shown in figure</para> <para> NC-BR =&gt; Data area in the lower right corner as shown in figure</para> <para> NC-CL =&gt; Data area in the upper left corner as shown in figure</para> <para> NC-CR =&gt; Data area in the upper right corner as shown in figure</para> <para></para> <para> 3/ Machine equipped with main spindle, sub spindle, and single turret</para> <para> NC-AL =&gt; Data area in the upper left corner as shown in figure</para> <para> NC-AR =&gt; Data area in the upper right corner as shown in figure</para> <para></para> <para>4/ NC-RUN-1/2/3 should not be used on certain machine data in this machine configuration since it depends on Program Command G140 or G141 (spindle selection) which gets/sets data differently.</para> <para></para> <para> 5/ For machine that has left and right side or parallel 2 spindles specification, the sub system NC-2-AL is used to designate the upper left data area on second side of machine which is the L side. The R side machine can be addressed by other subsystem as normal single side machine. </para> <para>*****************************************************</para> <para>Application Notes 3:</para> <para> Not all machines support all subsystems.</para> <para> It is necessary to specify the sub system to obtain different machine data if applicable.</para> <para>For example:</para> <para>In order to get tool offset values for machine that has 3 turrets - A, B, and C turret, the sub system must be set for A, B, and C turret as shown below:  </para> <para> objToolsAL.SetSubSystem(SubSystemEnum::NC_AL) 'set current subsystem to A Turret</para> <para> objToolsAL.GetToolOffset(intOffsetIndex, enAxisIndex) 'obtain tool offset value in A turret for the specified offset index and axis index</para> <para> objToolsBL.SetSubSystem(SubSystemEnum::NC_BL) 'set current subsystem to B Turret</para> <para> objToolsBL.GetToolOffset(intOffsetIndex, enAxisIndex) 'obtain tool offset value in B turret for the specified offset index and axis index</para> <para> objToolsCL.SetSubSystem(SubSystemEnum::NC_CL) 'set current subsystem to C Turret</para> <para> objToolsCL.GetToolOffset(intOffsetIndex, enAxisIndex) 'obtain tool offset value in C turret for the specified offset index and axis index</para> <para> objToolsAR.SetSubSystem(SubSystemEnum::NC_AR) 'set current subsystem to A Turret for right spindle</para> <para> objToolsAR.GetToolOffset(intOffsetIndex, enAxisIndex) 'obtain tool offset value in A turret for the specified offset index and axis index</para> <para> objToolsBR.SetSubSystem(SubSystemEnum::NC_BR) 'set current subsystem to B Turret for right spindle</para> <para> objToolsBR.GetToolOffset(intOffsetIndex, enAxisIndex) 'obtain tool offset value in B turret for the specified offset index and axis index</para> <para> objToolsCR.SetSubSystem(SubSystemEnum::NC_CR) 'set current subsystem to C Turret for right spindle</para> <para> objToolsCR.GetToolOffset(intOffsetIndex, enAxisIndex) 'obtain tool offset value in C turret for the specified offset index and axis index</para> <para></para> <para> For machine that has only A turret, tool offset value can be obtained by setting sub system to NC-AL.</para> <para> A NotSupportedException will be thrown if trying to access tool offset values in B Turret</para> <para> By default, the sub system is NC_AL.  The data will be the upper left data area of the machine.</para> <para> For 2 sides machines, Left and Right side, the data on second machine or L side of machine can be obtained by specifying NC_2AL.  </para> <para> The data on first machine or R side of machine can be obtained by specifying other sub systems.  </para> <para>For example:</para> <para> objTools1.SetSubSystem(SubSystemEnum::NC_2AL) 'set current subsystem to A turret on second machine (second machine or L side of 2 sides machine)</para> <para> objTools1.GetToolOffset(intOffsetIndex, enAxisIndex) 'obtain tool offset value in A turret for the specified offset index and axis index on second machine (L side of 2 sides machine)</para> <para>*****************************************************</para> <para>Application Notes 4:</para> <para>All exceptions generated by API and all set/add/cal functions will be logged.  Therefore, the application must be designed to minimize</para> <para>unnecessary log by utilizing Object-Oriented Programming practices or preventing perform set/add/cal functions in a loop.</para>  </remarks>
    </member>
    <member name="F:Okuma.CLDATAPI.Enumerations.SubSystemEnum.NC_CR">
      <summary> <para> If applicable, the machine data will be for:</para> <para> - C Turret of first machine</para> <para> - Sub/second spindle of first machine</para> <para> - Required Sub spindle and 3 Turrets specification </para>  </summary>
    </member>
    <member name="F:Okuma.CLDATAPI.Enumerations.SubSystemEnum.NC_BR">
      <summary> <para>If applicable, the machine data will be for:</para> <para> - B Turret of first machine/left side of 2 sides machine</para> <para> - Sub/second spindle of first machine/left side of 2 sides machine</para> <para> - Required Sub spindle and 4-axis and 2 Turrets specification </para>  </summary>
    </member>
    <member name="F:Okuma.CLDATAPI.Enumerations.SubSystemEnum.NC_AR">
      <summary> <para>If applicable, the machine data will be for:</para> <para> - A Turret of first machine/R side of 2 sides machine</para> <para> - Sub/second spindle of first machine/R side of 2 sides machine</para> <para> - Required Sub spindle specification NC spec [4,1] </para>  </summary>
    </member>
    <member name="F:Okuma.CLDATAPI.Enumerations.SubSystemEnum.NC_PANEL_2">
      <summary> <para>If applicable, the machine data will be for:</para> <para> - B Turret</para> <para> - Current selection of machine side on NC panel</para> <para> - Current selection of spindle on NC panel</para> <para> - Required 4-axis and 2 Turrets specification </para>  </summary>
    </member>
    <member name="F:Okuma.CLDATAPI.Enumerations.SubSystemEnum.NC_RUN_3">
      <summary> <para> If applicable, the machine data will be for:</para> <para> - C Turret</para> <para> - Current selection of machine side on NC panel</para> <para> - Command selection spindle</para> <para> - Required 3 Turrets specification </para>  </summary>
    </member>
    <member name="F:Okuma.CLDATAPI.Enumerations.SubSystemEnum.NC_PANEL_1">
      <summary> <para>If applicable, the machine data will be for:</para> <para> - A Turret</para> <para> - Current selection of machine side on NC panel</para> <para> - Current selection of spindle on NC panel</para>  </summary>
    </member>
    <member name="F:Okuma.CLDATAPI.Enumerations.SubSystemEnum.NC_PANEL">
      <summary> <para>If applicable, the machine data will be for:</para> <para> - Current selection of turret on NC panel</para> <para> - Current selection of machine side on NC panel</para> <para> - Current selection of spindle on NC panel</para>  </summary>
    </member>
    <member name="F:Okuma.CLDATAPI.Enumerations.SubSystemEnum.NC_RUN_2">
      <summary> <para>If applicable, the machine data will be for:</para> <para> - A Turret</para> <para> - Current selection of machine side on NC panel</para> <para> - Command selection spindle</para> <para> - Required 4-axis and 2 Turrets specification </para>  </summary>
    </member>
    <member name="F:Okuma.CLDATAPI.Enumerations.SubSystemEnum.NC_RUN_1">
      <summary> <para>If applicable, the machine data will be for:</para> <para> - A Turret</para> <para> - Current selection of machine side on NC panel</para> <para> - Command selection spindle</para>  </summary>
    </member>
    <member name="F:Okuma.CLDATAPI.Enumerations.SubSystemEnum.NC_CL">
      <summary> <para> If applicable, the machine data will be for:</para> <para> - C Turret of first machine</para> <para> - Main spindle of first machine</para> <para> - Required 3 Turrets specification </para>  </summary>
    </member>
    <member name="F:Okuma.CLDATAPI.Enumerations.SubSystemEnum.NC_BL">
      <summary> <para>If applicable, the machine data will be for:</para> <para> - B Turret of first machine/left side of 2 sides machine</para> <para> - Main spindle of first machine/left side of 2 sides machine</para> <para> - Required 4-axis and 2 Turrets specification </para>  </summary>
    </member>
    <member name="F:Okuma.CLDATAPI.Enumerations.SubSystemEnum.NC_AL">
      <summary> <para>If applicable, the machine data will be for:</para> <para> - A Turret of first machine/R side of 2 sides machine</para> <para> - Main spindle of first machine/R side of 2 sides machine</para>  </summary>
    </member>
    <member name="F:Okuma.CLDATAPI.Enumerations.SubSystemEnum.NC_PANEL_3">
      <summary> <para> If applicable, the machine data will be for:</para> <para> - C Turret</para> <para> - Current selection of machine side on NC panel</para> <para> - Current selection of spindle on NC panel</para> <para> - Required 3 Turrets specification </para>  </summary>
    </member>
    <member name="F:Okuma.CLDATAPI.Enumerations.SubSystemEnum.NC_2AL">
      <summary> <para>If applicable, the machine data will be for:</para> <para> - A Turret of second machine/L side of 2 sides machine</para> <para> - Main spindle of second machine/L side of 2 sides machine</para> <para> - Required parallel 2 spindles specification </para>  </summary>
    </member>
    <member name="F:Okuma.CLDATAPI.Enumerations.SubSystemEnum.NC_RUN">
      <summary> <para>If applicable, the machine data will be for:</para> <para> - Current selection of machine side on NC panel</para> <para> - Current selection of turret on NC panel</para> <para> - Command selection spindle</para>  </summary>
    </member>
    <member name="T:Okuma.CLDATAPI.Enumerations.MachineSideEnum">
      <summary> <para>Represents current machine selection on NC panel</para> <para>On dual sides machine, first system is R side of machine and second system is L side of machine</para> <para>On single side machine, first system is always designated</para>  </summary>
    </member>
    <member name="F:Okuma.CLDATAPI.Enumerations.MachineSideEnum.RightSide">
      <summary> First system/Right side of single or dual sides machine  </summary>
    </member>
    <member name="F:Okuma.CLDATAPI.Enumerations.MachineSideEnum.LeftSide">
      <summary> Second system/Left side on dual sides machine spec only  </summary>
    </member>
    <member name="T:Okuma.CLDATAPI.Enumerations.DataUnitEnum">
      <summary> Specified the data unit to be used in function for conversion, if applicable  </summary>
    </member>
    <member name="F:Okuma.CLDATAPI.Enumerations.DataUnitEnum.Unit_Inch">
      <summary> Inch unit  </summary>
    </member>
    <member name="F:Okuma.CLDATAPI.Enumerations.DataUnitEnum.Unit_mm">
      <summary> Millimeter unit  </summary>
    </member>
  </members>
</doc>